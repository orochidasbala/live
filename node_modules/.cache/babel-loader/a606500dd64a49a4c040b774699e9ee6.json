{"ast":null,"code":"import\"core-js/modules/es.error.cause.js\";import firebase from'@firebase/app';import{__spread,__values,__extends,__assign,__read,__awaiter,__generator}from'tslib';import{stringify,jsonEval,contains,assert,base64,stringToByteArray,Sha1,isNodeSdk,stringLength,errorPrefix,validateArgCount,validateCallback,Deferred,assertionError,safeGet,map,validateContextObject,deepCopy,isMobileCordova,base64Encode,isAdmin,isValidFormat,isEmpty,isReactNative,querystring}from'@firebase/util';import{Logger,LogLevel}from'@firebase/logger';import{Provider,ComponentContainer,Component}from'@firebase/component';/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */var DOMStorageWrapper=/** @class */function(){/**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */function DOMStorageWrapper(domStorage_){this.domStorage_=domStorage_;// Use a prefix to avoid collisions with other stuff saved by the app.\nthis.prefix_='firebase:';}/**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */DOMStorageWrapper.prototype.set=function(key,value){if(value==null){this.domStorage_.removeItem(this.prefixedName_(key));}else{this.domStorage_.setItem(this.prefixedName_(key),stringify(value));}};/**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */DOMStorageWrapper.prototype.get=function(key){var storedVal=this.domStorage_.getItem(this.prefixedName_(key));if(storedVal==null){return null;}else{return jsonEval(storedVal);}};/**\r\n     * @param {string} key\r\n     */DOMStorageWrapper.prototype.remove=function(key){this.domStorage_.removeItem(this.prefixedName_(key));};/**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */DOMStorageWrapper.prototype.prefixedName_=function(name){return this.prefix_+name;};DOMStorageWrapper.prototype.toString=function(){return this.domStorage_.toString();};return DOMStorageWrapper;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */var MemoryStorage=/** @class */function(){function MemoryStorage(){this.cache_={};this.isInMemoryStorage=true;}MemoryStorage.prototype.set=function(key,value){if(value==null){delete this.cache_[key];}else{this.cache_[key]=value;}};MemoryStorage.prototype.get=function(key){if(contains(this.cache_,key)){return this.cache_[key];}return null;};MemoryStorage.prototype.remove=function(key){delete this.cache_[key];};return MemoryStorage;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */var createStoragefor=function(domStorageName){try{// NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n// so it must be inside the try/catch.\nif(typeof window!=='undefined'&&typeof window[domStorageName]!=='undefined'){// Need to test cache. Just because it's here doesn't mean it works\nvar domStorage=window[domStorageName];domStorage.setItem('firebase:sentinel','cache');domStorage.removeItem('firebase:sentinel');return new DOMStorageWrapper(domStorage);}}catch(e){}// Failed to create wrapper.  Just return in-memory storage.\n// TODO: log?\nreturn new MemoryStorage();};/** A storage object that lasts across sessions */var PersistentStorage=createStoragefor('localStorage');/** A storage object that only lasts one session */var SessionStorage=createStoragefor('sessionStorage');/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var logClient=new Logger('@firebase/database');/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */var LUIDGenerator=function(){var id=1;return function(){return id++;};}();/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */var sha1=function(str){var utf8Bytes=stringToByteArray(str);var sha1=new Sha1();sha1.update(utf8Bytes);var sha1Bytes=sha1.digest();return base64.encodeByteArray(sha1Bytes);};/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */var buildLogMessage_=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}var message='';for(var i=0;i<varArgs.length;i++){var arg=varArgs[i];if(Array.isArray(arg)||arg&&typeof arg==='object'&&// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntypeof arg.length==='number'){message+=buildLogMessage_.apply(null,arg);}else if(typeof arg==='object'){message+=stringify(arg);}else{message+=arg;}message+=' ';}return message;};/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */var logger=null;/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */var firstLog_=true;/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */var enableLogging=function(logger_,persistent){assert(!persistent||logger_===true||logger_===false,\"Can't turn on custom loggers persistently.\");if(logger_===true){logClient.logLevel=LogLevel.VERBOSE;logger=logClient.log.bind(logClient);if(persistent){SessionStorage.set('logging_enabled',true);}}else if(typeof logger_==='function'){logger=logger_;}else{logger=null;SessionStorage.remove('logging_enabled');}};/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */var log=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}if(firstLog_===true){firstLog_=false;if(logger===null&&SessionStorage.get('logging_enabled')===true){enableLogging(true);}}if(logger){var message=buildLogMessage_.apply(null,varArgs);logger(message);}};/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */var logWrapper=function(prefix){return function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}log.apply(void 0,__spread([prefix],varArgs));};};/**\r\n * @param {...string} varArgs\r\n */var error=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}var message='FIREBASE INTERNAL ERROR: '+buildLogMessage_.apply(void 0,__spread(varArgs));logClient.error(message);};/**\r\n * @param {...string} varArgs\r\n */var fatal=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}var message=\"FIREBASE FATAL ERROR: \"+buildLogMessage_.apply(void 0,__spread(varArgs));logClient.error(message);throw new Error(message);};/**\r\n * @param {...*} varArgs\r\n */var warn=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}var message='FIREBASE WARNING: '+buildLogMessage_.apply(void 0,__spread(varArgs));logClient.warn(message);};/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */var warnIfPageIsSecure=function(){// Be very careful accessing browser globals. Who knows what may or may not exist.\nif(typeof window!=='undefined'&&window.location&&window.location.protocol&&window.location.protocol.indexOf('https:')!==-1){warn('Insecure Firebase access from a secure page. '+'Please use https in calls to new Firebase().');}};/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */var isInvalidJSONNumber=function(data){return typeof data==='number'&&(data!==data||// NaN\ndata===Number.POSITIVE_INFINITY||data===Number.NEGATIVE_INFINITY);};/**\r\n * @param {function()} fn\r\n */var executeWhenDOMReady=function(fn){if(isNodeSdk()||document.readyState==='complete'){fn();}else{// Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n// fire before onload), but fall back to onload.\nvar called_1=false;var wrappedFn_1=function(){if(!document.body){setTimeout(wrappedFn_1,Math.floor(10));return;}if(!called_1){called_1=true;fn();}};if(document.addEventListener){document.addEventListener('DOMContentLoaded',wrappedFn_1,false);// fallback to onload.\nwindow.addEventListener('load',wrappedFn_1,false);// eslint-disable-next-line @typescript-eslint/no-explicit-any\n}else if(document.attachEvent){// IE.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndocument.attachEvent('onreadystatechange',function(){if(document.readyState==='complete'){wrappedFn_1();}});// fallback to onload.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nwindow.attachEvent('onload',wrappedFn_1);// jQuery has an extra hack for IE that we could employ (based on\n// http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n// I'm hoping we don't need it.\n}}};/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */var MIN_NAME='[MIN_NAME]';/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */var MAX_NAME='[MAX_NAME]';/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */var nameCompare=function(a,b){if(a===b){return 0;}else if(a===MIN_NAME||b===MAX_NAME){return-1;}else if(b===MIN_NAME||a===MAX_NAME){return 1;}else{var aAsInt=tryParseInt(a),bAsInt=tryParseInt(b);if(aAsInt!==null){if(bAsInt!==null){return aAsInt-bAsInt===0?a.length-b.length:aAsInt-bAsInt;}else{return-1;}}else if(bAsInt!==null){return 1;}else{return a<b?-1:1;}}};/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */var stringCompare=function(a,b){if(a===b){return 0;}else if(a<b){return-1;}else{return 1;}};/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */var requireKey=function(key,obj){if(obj&&key in obj){return obj[key];}else{throw new Error('Missing required key ('+key+') in object: '+stringify(obj));}};/**\r\n * @param {*} obj\r\n * @return {string}\r\n */var ObjectToUniqueKey=function(obj){if(typeof obj!=='object'||obj===null){return stringify(obj);}var keys=[];// eslint-disable-next-line guard-for-in\nfor(var k in obj){keys.push(k);}// Export as json, but with the keys sorted.\nkeys.sort();var key='{';for(var i=0;i<keys.length;i++){if(i!==0){key+=',';}key+=stringify(keys[i]);key+=':';key+=ObjectToUniqueKey(obj[keys[i]]);}key+='}';return key;};/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */var splitStringBySize=function(str,segsize){var len=str.length;if(len<=segsize){return[str];}var dataSegs=[];for(var c=0;c<len;c+=segsize){if(c+segsize>len){dataSegs.push(str.substring(c,len));}else{dataSegs.push(str.substring(c,c+segsize));}}return dataSegs;};/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */function each(obj,fn){for(var key in obj){if(obj.hasOwnProperty(key)){fn(key,obj[key]);}}}/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */var doubleToIEEE754String=function(v){assert(!isInvalidJSONNumber(v),'Invalid JSON number');// MJL\nvar ebits=11,fbits=52;var bias=(1<<ebits-1)-1;var s,e,f,ln,i;// Compute sign, exponent, fraction\n// Skip NaN / Infinity handling --MJL.\nif(v===0){e=0;f=0;s=1/v===-Infinity?1:0;}else{s=v<0;v=Math.abs(v);if(v>=Math.pow(2,1-bias)){// Normalized\nln=Math.min(Math.floor(Math.log(v)/Math.LN2),bias);e=ln+bias;f=Math.round(v*Math.pow(2,fbits-ln)-Math.pow(2,fbits));}else{// Denormalized\ne=0;f=Math.round(v/Math.pow(2,1-bias-fbits));}}// Pack sign, exponent, fraction\nvar bits=[];for(i=fbits;i;i-=1){bits.push(f%2?1:0);f=Math.floor(f/2);}for(i=ebits;i;i-=1){bits.push(e%2?1:0);e=Math.floor(e/2);}bits.push(s?1:0);bits.reverse();var str=bits.join('');// Return the data as a hex string. --MJL\nvar hexByteString='';for(i=0;i<64;i+=8){var hexByte=parseInt(str.substr(i,8),2).toString(16);if(hexByte.length===1){hexByte='0'+hexByte;}hexByteString=hexByteString+hexByte;}return hexByteString.toLowerCase();};/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */var isChromeExtensionContentScript=function(){return!!(typeof window==='object'&&window['chrome']&&window['chrome']['extension']&&!/^chrome/.test(window.location.href));};/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */var isWindowsStoreApp=function(){// Check for the presence of a couple WinRT globals\nreturn typeof Windows==='object'&&typeof Windows.UI==='object';};/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */var errorForServerCode=function(code,query){var reason='Unknown Error';if(code==='too_big'){reason='The data requested exceeds the maximum size '+'that can be accessed with a single request.';}else if(code==='permission_denied'){reason=\"Client doesn't have permission to access the desired data.\";}else if(code==='unavailable'){reason='The service is unavailable';}var error=new Error(code+' at '+query.path.toString()+': '+reason);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nerror.code=code.toUpperCase();return error;};/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */var INTEGER_REGEXP_=new RegExp('^-?(0*)\\\\d{1,10}$');/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */var tryParseInt=function(str){if(INTEGER_REGEXP_.test(str)){var intVal=Number(str);if(intVal>=-2147483648&&intVal<=2147483647){return intVal;}}return null;};/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */var exceptionGuard=function(fn){try{fn();}catch(e){// Re-throw exception when it's safe.\nsetTimeout(function(){// It used to be that \"throw e\" would result in a good console error with\n// relevant context, but as of Chrome 39, you just get the firebase.js\n// file/line number where we re-throw it, which is useless. So we log\n// e.stack explicitly.\nvar stack=e.stack||'';warn('Exception was thrown by user callback.',stack);throw e;},Math.floor(0));}};/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */var beingCrawled=function(){var userAgent=typeof window==='object'&&window['navigator']&&window['navigator']['userAgent']||'';// For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n// believe to support JavaScript/AJAX rendering.\n// NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n// would have seen the page\" is flaky if we don't treat it as a crawler.\nreturn userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i)>=0;};/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */var setTimeoutNonBlocking=function(fn,time){var timeout=setTimeout(fn,time);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif(typeof timeout==='object'&&timeout['unref']){// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntimeout['unref']();}return timeout;};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */var Path=/** @class */function(){/**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */function Path(pathOrString,pieceNum){if(pieceNum===void 0){this.pieces_=pathOrString.split('/');// Remove empty pieces.\nvar copyTo=0;for(var i=0;i<this.pieces_.length;i++){if(this.pieces_[i].length>0){this.pieces_[copyTo]=this.pieces_[i];copyTo++;}}this.pieces_.length=copyTo;this.pieceNum_=0;}else{this.pieces_=pathOrString;this.pieceNum_=pieceNum;}}Object.defineProperty(Path,\"Empty\",{/**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */get:function(){return new Path('');},enumerable:false,configurable:true});Path.prototype.getFront=function(){if(this.pieceNum_>=this.pieces_.length){return null;}return this.pieces_[this.pieceNum_];};/**\r\n     * @return {number} The number of segments in this path\r\n     */Path.prototype.getLength=function(){return this.pieces_.length-this.pieceNum_;};/**\r\n     * @return {!Path}\r\n     */Path.prototype.popFront=function(){var pieceNum=this.pieceNum_;if(pieceNum<this.pieces_.length){pieceNum++;}return new Path(this.pieces_,pieceNum);};/**\r\n     * @return {?string}\r\n     */Path.prototype.getBack=function(){if(this.pieceNum_<this.pieces_.length){return this.pieces_[this.pieces_.length-1];}return null;};Path.prototype.toString=function(){var pathString='';for(var i=this.pieceNum_;i<this.pieces_.length;i++){if(this.pieces_[i]!==''){pathString+='/'+this.pieces_[i];}}return pathString||'/';};Path.prototype.toUrlEncodedString=function(){var pathString='';for(var i=this.pieceNum_;i<this.pieces_.length;i++){if(this.pieces_[i]!==''){pathString+='/'+encodeURIComponent(String(this.pieces_[i]));}}return pathString||'/';};/**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */Path.prototype.slice=function(begin){if(begin===void 0){begin=0;}return this.pieces_.slice(this.pieceNum_+begin);};/**\r\n     * @return {?Path}\r\n     */Path.prototype.parent=function(){if(this.pieceNum_>=this.pieces_.length){return null;}var pieces=[];for(var i=this.pieceNum_;i<this.pieces_.length-1;i++){pieces.push(this.pieces_[i]);}return new Path(pieces,0);};/**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */Path.prototype.child=function(childPathObj){var pieces=[];for(var i=this.pieceNum_;i<this.pieces_.length;i++){pieces.push(this.pieces_[i]);}if(childPathObj instanceof Path){for(var i=childPathObj.pieceNum_;i<childPathObj.pieces_.length;i++){pieces.push(childPathObj.pieces_[i]);}}else{var childPieces=childPathObj.split('/');for(var i=0;i<childPieces.length;i++){if(childPieces[i].length>0){pieces.push(childPieces[i]);}}}return new Path(pieces,0);};/**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */Path.prototype.isEmpty=function(){return this.pieceNum_>=this.pieces_.length;};/**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */Path.relativePath=function(outerPath,innerPath){var outer=outerPath.getFront(),inner=innerPath.getFront();if(outer===null){return innerPath;}else if(outer===inner){return Path.relativePath(outerPath.popFront(),innerPath.popFront());}else{throw new Error('INTERNAL ERROR: innerPath ('+innerPath+') is not within '+'outerPath ('+outerPath+')');}};/**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */Path.comparePaths=function(left,right){var leftKeys=left.slice();var rightKeys=right.slice();for(var i=0;i<leftKeys.length&&i<rightKeys.length;i++){var cmp=nameCompare(leftKeys[i],rightKeys[i]);if(cmp!==0){return cmp;}}if(leftKeys.length===rightKeys.length){return 0;}return leftKeys.length<rightKeys.length?-1:1;};/**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */Path.prototype.equals=function(other){if(this.getLength()!==other.getLength()){return false;}for(var i=this.pieceNum_,j=other.pieceNum_;i<=this.pieces_.length;i++,j++){if(this.pieces_[i]!==other.pieces_[j]){return false;}}return true;};/**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */Path.prototype.contains=function(other){var i=this.pieceNum_;var j=other.pieceNum_;if(this.getLength()>other.getLength()){return false;}while(i<this.pieces_.length){if(this.pieces_[i]!==other.pieces_[j]){return false;}++i;++j;}return true;};return Path;}();// end Path\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */var ValidationPath=/** @class */function(){/**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */function ValidationPath(path,errorPrefix_){this.errorPrefix_=errorPrefix_;/** @type {!Array<string>} */this.parts_=path.slice();/** @type {number} Initialize to number of '/' chars needed in path. */this.byteLength_=Math.max(1,this.parts_.length);for(var i=0;i<this.parts_.length;i++){this.byteLength_+=stringLength(this.parts_[i]);}this.checkValid_();}Object.defineProperty(ValidationPath,\"MAX_PATH_DEPTH\",{/** @const {number} Maximum key depth. */get:function(){return 32;},enumerable:false,configurable:true});Object.defineProperty(ValidationPath,\"MAX_PATH_LENGTH_BYTES\",{/** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */get:function(){return 768;},enumerable:false,configurable:true});/** @param {string} child */ValidationPath.prototype.push=function(child){// Count the needed '/'\nif(this.parts_.length>0){this.byteLength_+=1;}this.parts_.push(child);this.byteLength_+=stringLength(child);this.checkValid_();};ValidationPath.prototype.pop=function(){var last=this.parts_.pop();this.byteLength_-=stringLength(last);// Un-count the previous '/'\nif(this.parts_.length>0){this.byteLength_-=1;}};ValidationPath.prototype.checkValid_=function(){if(this.byteLength_>ValidationPath.MAX_PATH_LENGTH_BYTES){throw new Error(this.errorPrefix_+'has a key path longer than '+ValidationPath.MAX_PATH_LENGTH_BYTES+' bytes ('+this.byteLength_+').');}if(this.parts_.length>ValidationPath.MAX_PATH_DEPTH){throw new Error(this.errorPrefix_+'path specified exceeds the maximum depth that can be written ('+ValidationPath.MAX_PATH_DEPTH+') or object contains a cycle '+this.toErrorString());}};/**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */ValidationPath.prototype.toErrorString=function(){if(this.parts_.length===0){return'';}return\"in property '\"+this.parts_.join('.')+\"'\";};return ValidationPath;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var PROTOCOL_VERSION='5';var VERSION_PARAM='v';var TRANSPORT_SESSION_PARAM='s';var REFERER_PARAM='r';var FORGE_REF='f';var FORGE_DOMAIN='firebaseio.com';var LAST_SESSION_PARAM='ls';var APPLICATION_ID_PARAM='p';var WEBSOCKET='websocket';var LONG_POLLING='long_polling';/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */var RepoInfo=/** @class */function(){/**\r\n     * @param host Hostname portion of the url for the repo\r\n     * @param secure Whether or not this repo is accessed over ssl\r\n     * @param namespace The namespace represented by the repo\r\n     * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey Override the default session persistence storage key\r\n     */function RepoInfo(host,secure,namespace,webSocketOnly,nodeAdmin,persistenceKey,includeNamespaceInQueryParams){if(nodeAdmin===void 0){nodeAdmin=false;}if(persistenceKey===void 0){persistenceKey='';}if(includeNamespaceInQueryParams===void 0){includeNamespaceInQueryParams=false;}this.secure=secure;this.namespace=namespace;this.webSocketOnly=webSocketOnly;this.nodeAdmin=nodeAdmin;this.persistenceKey=persistenceKey;this.includeNamespaceInQueryParams=includeNamespaceInQueryParams;this.host=host.toLowerCase();this.domain=this.host.substr(this.host.indexOf('.')+1);this.internalHost=PersistentStorage.get('host:'+host)||this.host;}RepoInfo.prototype.needsQueryParam=function(){return this.host!==this.internalHost||this.isCustomHost()||this.includeNamespaceInQueryParams;};RepoInfo.prototype.isCacheableHost=function(){return this.internalHost.substr(0,2)==='s-';};RepoInfo.prototype.isDemoHost=function(){return this.domain==='firebaseio-demo.com';};RepoInfo.prototype.isCustomHost=function(){return this.domain!=='firebaseio.com'&&this.domain!=='firebaseio-demo.com';};RepoInfo.prototype.updateHost=function(newHost){if(newHost!==this.internalHost){this.internalHost=newHost;if(this.isCacheableHost()){PersistentStorage.set('host:'+this.host,this.internalHost);}}};/**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */RepoInfo.prototype.connectionURL=function(type,params){assert(typeof type==='string','typeof type must == string');assert(typeof params==='object','typeof params must == object');var connURL;if(type===WEBSOCKET){connURL=(this.secure?'wss://':'ws://')+this.internalHost+'/.ws?';}else if(type===LONG_POLLING){connURL=(this.secure?'https://':'http://')+this.internalHost+'/.lp?';}else{throw new Error('Unknown connection type: '+type);}if(this.needsQueryParam()){params['ns']=this.namespace;}var pairs=[];each(params,function(key,value){pairs.push(key+'='+value);});return connURL+pairs.join('&');};/** @return {string} */RepoInfo.prototype.toString=function(){var str=this.toURLString();if(this.persistenceKey){str+='<'+this.persistenceKey+'>';}return str;};/** @return {string} */RepoInfo.prototype.toURLString=function(){return(this.secure?'https://':'http://')+this.host;};return RepoInfo;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */function decodePath(pathString){var pathStringDecoded='';var pieces=pathString.split('/');for(var i=0;i<pieces.length;i++){if(pieces[i].length>0){var piece=pieces[i];try{piece=decodeURIComponent(piece.replace(/\\+/g,' '));}catch(e){}pathStringDecoded+='/'+piece;}}return pathStringDecoded;}/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */function decodeQuery(queryString){var e_1,_a;var results={};if(queryString.charAt(0)==='?'){queryString=queryString.substring(1);}try{for(var _b=__values(queryString.split('&')),_c=_b.next();!_c.done;_c=_b.next()){var segment=_c.value;if(segment.length===0){continue;}var kv=segment.split('=');if(kv.length===2){results[decodeURIComponent(kv[0])]=decodeURIComponent(kv[1]);}else{warn(\"Invalid query segment '\"+segment+\"' in query '\"+queryString+\"'\");}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return results;}var parseRepoInfo=function(dataURL,nodeAdmin){var parsedUrl=parseDatabaseURL(dataURL),namespace=parsedUrl.namespace;if(parsedUrl.domain==='firebase.com'){fatal(parsedUrl.host+' is no longer supported. '+'Please use <YOUR FIREBASE>.firebaseio.com instead');}// Catch common error of uninitialized namespace value.\nif((!namespace||namespace==='undefined')&&parsedUrl.domain!=='localhost'){fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');}if(!parsedUrl.secure){warnIfPageIsSecure();}var webSocketOnly=parsedUrl.scheme==='ws'||parsedUrl.scheme==='wss';return{repoInfo:new RepoInfo(parsedUrl.host,parsedUrl.secure,namespace,nodeAdmin,webSocketOnly,/*persistenceKey=*/'',/*includeNamespaceInQueryParams=*/namespace!==parsedUrl.subdomain),path:new Path(parsedUrl.pathString)};};/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */var parseDatabaseURL=function(dataURL){// Default to empty strings in the event of a malformed string.\nvar host='',domain='',subdomain='',pathString='',namespace='';// Always default to SSL, unless otherwise specified.\nvar secure=true,scheme='https',port=443;// Don't do any validation here. The caller is responsible for validating the result of parsing.\nif(typeof dataURL==='string'){// Parse scheme.\nvar colonInd=dataURL.indexOf('//');if(colonInd>=0){scheme=dataURL.substring(0,colonInd-1);dataURL=dataURL.substring(colonInd+2);}// Parse host, path, and query string.\nvar slashInd=dataURL.indexOf('/');if(slashInd===-1){slashInd=dataURL.length;}var questionMarkInd=dataURL.indexOf('?');if(questionMarkInd===-1){questionMarkInd=dataURL.length;}host=dataURL.substring(0,Math.min(slashInd,questionMarkInd));if(slashInd<questionMarkInd){// For pathString, questionMarkInd will always come after slashInd\npathString=decodePath(dataURL.substring(slashInd,questionMarkInd));}var queryParams=decodeQuery(dataURL.substring(Math.min(dataURL.length,questionMarkInd)));// If we have a port, use scheme for determining if it's secure.\ncolonInd=host.indexOf(':');if(colonInd>=0){secure=scheme==='https'||scheme==='wss';port=parseInt(host.substring(colonInd+1),10);}else{colonInd=host.length;}var hostWithoutPort=host.slice(0,colonInd);if(hostWithoutPort.toLowerCase()==='localhost'){domain='localhost';}else if(hostWithoutPort.split('.').length<=2){domain=hostWithoutPort;}else{// Interpret the subdomain of a 3 or more component URL as the namespace name.\nvar dotInd=host.indexOf('.');subdomain=host.substring(0,dotInd).toLowerCase();domain=host.substring(dotInd+1);// Normalize namespaces to lowercase to share storage / connection.\nnamespace=subdomain;}// Always treat the value of the `ns` as the namespace name if it is present.\nif('ns'in queryParams){namespace=queryParams['ns'];}}return{host:host,port:port,domain:domain,subdomain:subdomain,secure:secure,scheme:scheme,pathString:pathString,namespace:namespace};};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */var INVALID_KEY_REGEX_=/[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */var INVALID_PATH_REGEX_=/[\\[\\].#$\\u0000-\\u001F\\u007F]/;/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */var MAX_LEAF_SIZE_=10*1024*1024;/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */var isValidKey=function(key){return typeof key==='string'&&key.length!==0&&!INVALID_KEY_REGEX_.test(key);};/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */var isValidPathString=function(pathString){return typeof pathString==='string'&&pathString.length!==0&&!INVALID_PATH_REGEX_.test(pathString);};/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */var isValidRootPathString=function(pathString){if(pathString){// Allow '/.info/' at the beginning.\npathString=pathString.replace(/^\\/*\\.info(\\/|$)/,'/');}return isValidPathString(pathString);};/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */var isValidPriority=function(priority){return priority===null||typeof priority==='string'||typeof priority==='number'&&!isInvalidJSONNumber(priority)||priority&&typeof priority==='object'&&// eslint-disable-next-line @typescript-eslint/no-explicit-any\ncontains(priority,'.sv');};/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */var validateFirebaseDataArg=function(fnName,argumentNumber,data,path,optional){if(optional&&data===undefined){return;}validateFirebaseData(errorPrefix(fnName,argumentNumber,optional),data,path);};/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */var validateFirebaseData=function(errorPrefix,data,path_){var path=path_ instanceof Path?new ValidationPath(path_,errorPrefix):path_;if(data===undefined){throw new Error(errorPrefix+'contains undefined '+path.toErrorString());}if(typeof data==='function'){throw new Error(errorPrefix+'contains a function '+path.toErrorString()+' with contents = '+data.toString());}if(isInvalidJSONNumber(data)){throw new Error(errorPrefix+'contains '+data.toString()+' '+path.toErrorString());}// Check max leaf size, but try to avoid the utf8 conversion if we can.\nif(typeof data==='string'&&data.length>MAX_LEAF_SIZE_/3&&stringLength(data)>MAX_LEAF_SIZE_){throw new Error(errorPrefix+'contains a string greater than '+MAX_LEAF_SIZE_+' utf8 bytes '+path.toErrorString()+\" ('\"+data.substring(0,50)+\"...')\");}// TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n// to save extra walking of large objects.\nif(data&&typeof data==='object'){var hasDotValue_1=false;var hasActualChild_1=false;each(data,function(key,value){if(key==='.value'){hasDotValue_1=true;}else if(key!=='.priority'&&key!=='.sv'){hasActualChild_1=true;if(!isValidKey(key)){throw new Error(errorPrefix+' contains an invalid key ('+key+') '+path.toErrorString()+'.  Keys must be non-empty strings '+'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');}}path.push(key);validateFirebaseData(errorPrefix,value,path);path.pop();});if(hasDotValue_1&&hasActualChild_1){throw new Error(errorPrefix+' contains \".value\" child '+path.toErrorString()+' in addition to actual children.');}}};/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */var validateFirebaseMergePaths=function(errorPrefix,mergePaths){var i,curPath;for(i=0;i<mergePaths.length;i++){curPath=mergePaths[i];var keys=curPath.slice();for(var j=0;j<keys.length;j++){if(keys[j]==='.priority'&&j===keys.length-1);else if(!isValidKey(keys[j])){throw new Error(errorPrefix+'contains an invalid key ('+keys[j]+') in path '+curPath.toString()+'. Keys must be non-empty strings '+'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');}}}// Check that update keys are not descendants of each other.\n// We rely on the property that sorting guarantees that ancestors come\n// right before descendants.\nmergePaths.sort(Path.comparePaths);var prevPath=null;for(i=0;i<mergePaths.length;i++){curPath=mergePaths[i];if(prevPath!==null&&prevPath.contains(curPath)){throw new Error(errorPrefix+'contains a path '+prevPath.toString()+' that is ancestor of another path '+curPath.toString());}prevPath=curPath;}};/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */var validateFirebaseMergeDataArg=function(fnName,argumentNumber,data,path,optional){if(optional&&data===undefined){return;}var errorPrefix$1=errorPrefix(fnName,argumentNumber,optional);if(!(data&&typeof data==='object')||Array.isArray(data)){throw new Error(errorPrefix$1+' must be an object containing the children to replace.');}var mergePaths=[];each(data,function(key,value){var curPath=new Path(key);validateFirebaseData(errorPrefix$1,value,path.child(curPath));if(curPath.getBack()==='.priority'){if(!isValidPriority(value)){throw new Error(errorPrefix$1+\"contains an invalid value for '\"+curPath.toString()+\"', which must be a valid \"+'Firebase priority (a string, finite number, server value, or null).');}}mergePaths.push(curPath);});validateFirebaseMergePaths(errorPrefix$1,mergePaths);};var validatePriority=function(fnName,argumentNumber,priority,optional){if(optional&&priority===undefined){return;}if(isInvalidJSONNumber(priority)){throw new Error(errorPrefix(fnName,argumentNumber,optional)+'is '+priority.toString()+', but must be a valid Firebase priority (a string, finite number, '+'server value, or null).');}// Special case to allow importing data with a .sv.\nif(!isValidPriority(priority)){throw new Error(errorPrefix(fnName,argumentNumber,optional)+'must be a valid Firebase priority '+'(a string, finite number, server value, or null).');}};var validateEventType=function(fnName,argumentNumber,eventType,optional){if(optional&&eventType===undefined){return;}switch(eventType){case'value':case'child_added':case'child_removed':case'child_changed':case'child_moved':break;default:throw new Error(errorPrefix(fnName,argumentNumber,optional)+'must be a valid event type = \"value\", \"child_added\", \"child_removed\", '+'\"child_changed\", or \"child_moved\".');}};var validateKey=function(fnName,argumentNumber,key,optional){if(optional&&key===undefined){return;}if(!isValidKey(key)){throw new Error(errorPrefix(fnName,argumentNumber,optional)+'was an invalid key = \"'+key+'\".  Firebase keys must be non-empty strings and '+'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');}};var validatePathString=function(fnName,argumentNumber,pathString,optional){if(optional&&pathString===undefined){return;}if(!isValidPathString(pathString)){throw new Error(errorPrefix(fnName,argumentNumber,optional)+'was an invalid path = \"'+pathString+'\". Paths must be non-empty strings and '+'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');}};var validateRootPathString=function(fnName,argumentNumber,pathString,optional){if(pathString){// Allow '/.info/' at the beginning.\npathString=pathString.replace(/^\\/*\\.info(\\/|$)/,'/');}validatePathString(fnName,argumentNumber,pathString,optional);};var validateWritablePath=function(fnName,path){if(path.getFront()==='.info'){throw new Error(fnName+\" failed = Can't modify data under /.info/\");}};var validateUrl=function(fnName,argumentNumber,parsedUrl){// TODO = Validate server better.\nvar pathString=parsedUrl.path.toString();if(!(typeof parsedUrl.repoInfo.host==='string')||parsedUrl.repoInfo.host.length===0||!isValidKey(parsedUrl.repoInfo.namespace)&&parsedUrl.repoInfo.host.split(':')[0]!=='localhost'||pathString.length!==0&&!isValidRootPathString(pathString)){throw new Error(errorPrefix(fnName,argumentNumber,false)+'must be a valid firebase URL and '+'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');}};var validateBoolean=function(fnName,argumentNumber,bool,optional){if(optional&&bool===undefined){return;}if(typeof bool!=='boolean'){throw new Error(errorPrefix(fnName,argumentNumber,optional)+'must be a boolean.');}};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @constructor\r\n */var OnDisconnect=/** @class */function(){/**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */function OnDisconnect(repo_,path_){this.repo_=repo_;this.path_=path_;}/**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */OnDisconnect.prototype.cancel=function(onComplete){validateArgCount('OnDisconnect.cancel',0,1,arguments.length);validateCallback('OnDisconnect.cancel',1,onComplete,true);var deferred=new Deferred();this.repo_.onDisconnectCancel(this.path_,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */OnDisconnect.prototype.remove=function(onComplete){validateArgCount('OnDisconnect.remove',0,1,arguments.length);validateWritablePath('OnDisconnect.remove',this.path_);validateCallback('OnDisconnect.remove',1,onComplete,true);var deferred=new Deferred();this.repo_.onDisconnectSet(this.path_,null,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */OnDisconnect.prototype.set=function(value,onComplete){validateArgCount('OnDisconnect.set',1,2,arguments.length);validateWritablePath('OnDisconnect.set',this.path_);validateFirebaseDataArg('OnDisconnect.set',1,value,this.path_,false);validateCallback('OnDisconnect.set',2,onComplete,true);var deferred=new Deferred();this.repo_.onDisconnectSet(this.path_,value,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */OnDisconnect.prototype.setWithPriority=function(value,priority,onComplete){validateArgCount('OnDisconnect.setWithPriority',2,3,arguments.length);validateWritablePath('OnDisconnect.setWithPriority',this.path_);validateFirebaseDataArg('OnDisconnect.setWithPriority',1,value,this.path_,false);validatePriority('OnDisconnect.setWithPriority',2,priority,false);validateCallback('OnDisconnect.setWithPriority',3,onComplete,true);var deferred=new Deferred();this.repo_.onDisconnectSetWithPriority(this.path_,value,priority,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */OnDisconnect.prototype.update=function(objectToMerge,onComplete){validateArgCount('OnDisconnect.update',1,2,arguments.length);validateWritablePath('OnDisconnect.update',this.path_);if(Array.isArray(objectToMerge)){var newObjectToMerge={};for(var i=0;i<objectToMerge.length;++i){newObjectToMerge[''+i]=objectToMerge[i];}objectToMerge=newObjectToMerge;warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the '+'existing data, or an Object with integer keys if you really do want to only update some of the children.');}validateFirebaseMergeDataArg('OnDisconnect.update',1,objectToMerge,this.path_,false);validateCallback('OnDisconnect.update',2,onComplete,true);var deferred=new Deferred();this.repo_.onDisconnectUpdate(this.path_,objectToMerge,deferred.wrapCallback(onComplete));return deferred.promise;};return OnDisconnect;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var TransactionResult=/** @class */function(){/**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */function TransactionResult(committed,snapshot){this.committed=committed;this.snapshot=snapshot;}// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n// for end-users\nTransactionResult.prototype.toJSON=function(){validateArgCount('TransactionResult.toJSON',0,1,arguments.length);return{committed:this.committed,snapshot:this.snapshot.toJSON()};};return TransactionResult;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */var nextPushId=function(){// Modeled after base64 web-safe chars, but ordered by ASCII.\nvar PUSH_CHARS='-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';// Timestamp of last push, used to prevent local collisions if you push twice\n// in one ms.\nvar lastPushTime=0;// We generate 72-bits of randomness which get turned into 12 characters and\n// appended to the timestamp to prevent collisions with other clients. We\n// store the last characters we generated because in the event of a collision,\n// we'll use those same characters except \"incremented\" by one.\nvar lastRandChars=[];return function(now){var duplicateTime=now===lastPushTime;lastPushTime=now;var i;var timeStampChars=new Array(8);for(i=7;i>=0;i--){timeStampChars[i]=PUSH_CHARS.charAt(now%64);// NOTE: Can't use << here because javascript will convert to int and lose\n// the upper bits.\nnow=Math.floor(now/64);}assert(now===0,'Cannot push at time == 0');var id=timeStampChars.join('');if(!duplicateTime){for(i=0;i<12;i++){lastRandChars[i]=Math.floor(Math.random()*64);}}else{// If the timestamp hasn't changed since last push, use the same random\n// number, except incremented by 1.\nfor(i=11;i>=0&&lastRandChars[i]===63;i--){lastRandChars[i]=0;}lastRandChars[i]++;}for(i=0;i<12;i++){id+=PUSH_CHARS.charAt(lastRandChars[i]);}assert(id.length===20,'nextPushId: Length should be 20.');return id;};}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */var NamedNode=/** @class */function(){function NamedNode(name,node){this.name=name;this.node=node;}/**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */NamedNode.Wrap=function(name,node){return new NamedNode(name,node);};return NamedNode;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n *\r\n * @constructor\r\n */var Index=/** @class */function(){function Index(){}/**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */Index.prototype.getCompare=function(){return this.compare.bind(this);};/**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */Index.prototype.indexedValueChanged=function(oldNode,newNode){var oldWrapped=new NamedNode(MIN_NAME,oldNode);var newWrapped=new NamedNode(MIN_NAME,newNode);return this.compare(oldWrapped,newWrapped)!==0;};/**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */Index.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;};return Index;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __EMPTY_NODE;var KeyIndex=/** @class */function(_super){__extends(KeyIndex,_super);function KeyIndex(){return _super!==null&&_super.apply(this,arguments)||this;}Object.defineProperty(KeyIndex,\"__EMPTY_NODE\",{get:function(){return __EMPTY_NODE;},set:function(val){__EMPTY_NODE=val;},enumerable:false,configurable:true});/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.compare=function(a,b){return nameCompare(a.name,b.name);};/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.isDefinedOn=function(node){// We could probably return true here (since every node has a key), but it's never called\n// so just leaving unimplemented for now.\nthrow assertionError('KeyIndex.isDefinedOn not expected to be called.');};/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.indexedValueChanged=function(oldNode,newNode){return false;// The key for a node never changes.\n};/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;};/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.maxPost=function(){// TODO: This should really be created once and cached in a static property, but\n// NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\nreturn new NamedNode(MAX_NAME,__EMPTY_NODE);};/**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */KeyIndex.prototype.makePost=function(indexValue,name){assert(typeof indexValue==='string','KeyIndex indexValue must always be a string.');// We just use empty node, but it'll never be compared, since our comparator only looks at name.\nreturn new NamedNode(indexValue,__EMPTY_NODE);};/**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */KeyIndex.prototype.toString=function(){return'.key';};return KeyIndex;}(Index);var KEY_INDEX=new KeyIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var MAX_NODE;function setMaxNode(val){MAX_NODE=val;}/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */var priorityHashText=function(priority){if(typeof priority==='number'){return'number:'+doubleToIEEE754String(priority);}else{return'string:'+priority;}};/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */var validatePriorityNode=function(priorityNode){if(priorityNode.isLeafNode()){var val=priorityNode.val();assert(typeof val==='string'||typeof val==='number'||typeof val==='object'&&contains(val,'.sv'),'Priority must be a string or number.');}else{assert(priorityNode===MAX_NODE||priorityNode.isEmpty(),'priority of unexpected type.');}// Don't call getPriority() on MAX_NODE to avoid hitting assertion.\nassert(priorityNode===MAX_NODE||priorityNode.getPriority().isEmpty(),\"Priority nodes can't have a priority of their own.\");};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __childrenNodeConstructor;/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */var LeafNode=/** @class */function(){/**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */function LeafNode(value_,priorityNode_){if(priorityNode_===void 0){priorityNode_=LeafNode.__childrenNodeConstructor.EMPTY_NODE;}this.value_=value_;this.priorityNode_=priorityNode_;this.lazyHash_=null;assert(this.value_!==undefined&&this.value_!==null,\"LeafNode shouldn't be created with null/undefined value.\");validatePriorityNode(this.priorityNode_);}Object.defineProperty(LeafNode,\"__childrenNodeConstructor\",{get:function(){return __childrenNodeConstructor;},set:function(val){__childrenNodeConstructor=val;},enumerable:false,configurable:true});/** @inheritDoc */LeafNode.prototype.isLeafNode=function(){return true;};/** @inheritDoc */LeafNode.prototype.getPriority=function(){return this.priorityNode_;};/** @inheritDoc */LeafNode.prototype.updatePriority=function(newPriorityNode){return new LeafNode(this.value_,newPriorityNode);};/** @inheritDoc */LeafNode.prototype.getImmediateChild=function(childName){// Hack to treat priority as a regular child\nif(childName==='.priority'){return this.priorityNode_;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE;}};/** @inheritDoc */LeafNode.prototype.getChild=function(path){if(path.isEmpty()){return this;}else if(path.getFront()==='.priority'){return this.priorityNode_;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE;}};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.hasChild=function(){return false;};/** @inheritDoc */LeafNode.prototype.getPredecessorChildName=function(childName,childNode){return null;};/** @inheritDoc */LeafNode.prototype.updateImmediateChild=function(childName,newChildNode){if(childName==='.priority'){return this.updatePriority(newChildNode);}else if(newChildNode.isEmpty()&&childName!=='.priority'){return this;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName,newChildNode).updatePriority(this.priorityNode_);}};/** @inheritDoc */LeafNode.prototype.updateChild=function(path,newChildNode){var front=path.getFront();if(front===null){return newChildNode;}else if(newChildNode.isEmpty()&&front!=='.priority'){return this;}else{assert(front!=='.priority'||path.getLength()===1,'.priority must be the last token in a path');return this.updateImmediateChild(front,LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(),newChildNode));}};/** @inheritDoc */LeafNode.prototype.isEmpty=function(){return false;};/** @inheritDoc */LeafNode.prototype.numChildren=function(){return 0;};/** @inheritDoc */LeafNode.prototype.forEachChild=function(index,action){return false;};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.val=function(exportFormat){if(exportFormat&&!this.getPriority().isEmpty()){return{'.value':this.getValue(),'.priority':this.getPriority().val()};}else{return this.getValue();}};/** @inheritDoc */LeafNode.prototype.hash=function(){if(this.lazyHash_===null){var toHash='';if(!this.priorityNode_.isEmpty()){toHash+='priority:'+priorityHashText(this.priorityNode_.val())+':';}var type=typeof this.value_;toHash+=type+':';if(type==='number'){toHash+=doubleToIEEE754String(this.value_);}else{toHash+=this.value_;}this.lazyHash_=sha1(toHash);}return this.lazyHash_;};/**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */LeafNode.prototype.getValue=function(){return this.value_;};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.compareTo=function(other){if(other===LeafNode.__childrenNodeConstructor.EMPTY_NODE){return 1;}else if(other instanceof LeafNode.__childrenNodeConstructor){return-1;}else{assert(other.isLeafNode(),'Unknown node type');return this.compareToLeafNode_(other);}};/**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */LeafNode.prototype.compareToLeafNode_=function(otherLeaf){var otherLeafType=typeof otherLeaf.value_;var thisLeafType=typeof this.value_;var otherIndex=LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);var thisIndex=LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);assert(otherIndex>=0,'Unknown leaf type: '+otherLeafType);assert(thisIndex>=0,'Unknown leaf type: '+thisLeafType);if(otherIndex===thisIndex){// Same type, compare values\nif(thisLeafType==='object'){// Deferred value nodes are all equal, but we should also never get to this point...\nreturn 0;}else{// Note that this works because true > false, all others are number or string comparisons\nif(this.value_<otherLeaf.value_){return-1;}else if(this.value_===otherLeaf.value_){return 0;}else{return 1;}}}else{return thisIndex-otherIndex;}};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.withIndex=function(){return this;};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.isIndexed=function(){return true;};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.equals=function(other){/**\r\n         * @inheritDoc\r\n         */if(other===this){return true;}else if(other.isLeafNode()){var otherLeaf=other;return this.value_===otherLeaf.value_&&this.priorityNode_.equals(otherLeaf.priorityNode_);}else{return false;}};/**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */LeafNode.VALUE_TYPE_ORDER=['object','boolean','number','string'];return LeafNode;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var nodeFromJSON;var MAX_NODE$1;function setNodeFromJSON(val){nodeFromJSON=val;}function setMaxNode$1(val){MAX_NODE$1=val;}/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */var PriorityIndex=/** @class */function(_super){__extends(PriorityIndex,_super);function PriorityIndex(){return _super!==null&&_super.apply(this,arguments)||this;}/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.compare=function(a,b){var aPriority=a.node.getPriority();var bPriority=b.node.getPriority();var indexCmp=aPriority.compareTo(bPriority);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.isDefinedOn=function(node){return!node.getPriority().isEmpty();};/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.indexedValueChanged=function(oldNode,newNode){return!oldNode.getPriority().equals(newNode.getPriority());};/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;};/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.maxPost=function(){return new NamedNode(MAX_NAME,new LeafNode('[PRIORITY-POST]',MAX_NODE$1));};/**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */PriorityIndex.prototype.makePost=function(indexValue,name){var priorityNode=nodeFromJSON(indexValue);return new NamedNode(name,new LeafNode('[PRIORITY-POST]',priorityNode));};/**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */PriorityIndex.prototype.toString=function(){return'.priority';};return PriorityIndex;}(Index);var PRIORITY_INDEX=new PriorityIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An iterator over an LLRBNode.\r\n */var SortedMapIterator=/** @class */function(){/**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */function SortedMapIterator(node,startKey,comparator,isReverse_,resultGenerator_){if(resultGenerator_===void 0){resultGenerator_=null;}this.isReverse_=isReverse_;this.resultGenerator_=resultGenerator_;/** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */this.nodeStack_=[];var cmp=1;while(!node.isEmpty()){node=node;cmp=startKey?comparator(node.key,startKey):1;// flip the comparison if we're going in reverse\nif(isReverse_){cmp*=-1;}if(cmp<0){// This node is less than our start key. ignore it\nif(this.isReverse_){node=node.left;}else{node=node.right;}}else if(cmp===0){// This node is exactly equal to our start key. Push it on the stack, but stop iterating;\nthis.nodeStack_.push(node);break;}else{// This node is greater than our start key, add it to the stack and move to the next one\nthis.nodeStack_.push(node);if(this.isReverse_){node=node.right;}else{node=node.left;}}}}SortedMapIterator.prototype.getNext=function(){if(this.nodeStack_.length===0){return null;}var node=this.nodeStack_.pop();var result;if(this.resultGenerator_){result=this.resultGenerator_(node.key,node.value);}else{result={key:node.key,value:node.value};}if(this.isReverse_){node=node.left;while(!node.isEmpty()){this.nodeStack_.push(node);node=node.right;}}else{node=node.right;while(!node.isEmpty()){this.nodeStack_.push(node);node=node.left;}}return result;};SortedMapIterator.prototype.hasNext=function(){return this.nodeStack_.length>0;};SortedMapIterator.prototype.peek=function(){if(this.nodeStack_.length===0){return null;}var node=this.nodeStack_[this.nodeStack_.length-1];if(this.resultGenerator_){return this.resultGenerator_(node.key,node.value);}else{return{key:node.key,value:node.value};}};return SortedMapIterator;}();/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */var LLRBNode=/** @class */function(){/**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */function LLRBNode(key,value,color,left,right){this.key=key;this.value=value;this.color=color!=null?color:LLRBNode.RED;this.left=left!=null?left:SortedMap.EMPTY_NODE;this.right=right!=null?right:SortedMap.EMPTY_NODE;}/**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */LLRBNode.prototype.copy=function(key,value,color,left,right){return new LLRBNode(key!=null?key:this.key,value!=null?value:this.value,color!=null?color:this.color,left!=null?left:this.left,right!=null?right:this.right);};/**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */LLRBNode.prototype.count=function(){return this.left.count()+1+this.right.count();};/**\r\n     * @return {boolean} True if the tree is empty.\r\n     */LLRBNode.prototype.isEmpty=function(){return false;};/**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */LLRBNode.prototype.inorderTraversal=function(action){return this.left.inorderTraversal(action)||!!action(this.key,this.value)||this.right.inorderTraversal(action);};/**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */LLRBNode.prototype.reverseTraversal=function(action){return this.right.reverseTraversal(action)||action(this.key,this.value)||this.left.reverseTraversal(action);};/**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */LLRBNode.prototype.min_=function(){if(this.left.isEmpty()){return this;}else{return this.left.min_();}};/**\r\n     * @return {!K} The maximum key in the tree.\r\n     */LLRBNode.prototype.minKey=function(){return this.min_().key;};/**\r\n     * @return {!K} The maximum key in the tree.\r\n     */LLRBNode.prototype.maxKey=function(){if(this.right.isEmpty()){return this.key;}else{return this.right.maxKey();}};/**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */LLRBNode.prototype.insert=function(key,value,comparator){var n=this;var cmp=comparator(key,n.key);if(cmp<0){n=n.copy(null,null,null,n.left.insert(key,value,comparator),null);}else if(cmp===0){n=n.copy(null,value,null,null,null);}else{n=n.copy(null,null,null,null,n.right.insert(key,value,comparator));}return n.fixUp_();};/**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */LLRBNode.prototype.removeMin_=function(){if(this.left.isEmpty()){return SortedMap.EMPTY_NODE;}var n=this;if(!n.left.isRed_()&&!n.left.left.isRed_()){n=n.moveRedLeft_();}n=n.copy(null,null,null,n.left.removeMin_(),null);return n.fixUp_();};/**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */LLRBNode.prototype.remove=function(key,comparator){var n,smallest;n=this;if(comparator(key,n.key)<0){if(!n.left.isEmpty()&&!n.left.isRed_()&&!n.left.left.isRed_()){n=n.moveRedLeft_();}n=n.copy(null,null,null,n.left.remove(key,comparator),null);}else{if(n.left.isRed_()){n=n.rotateRight_();}if(!n.right.isEmpty()&&!n.right.isRed_()&&!n.right.left.isRed_()){n=n.moveRedRight_();}if(comparator(key,n.key)===0){if(n.right.isEmpty()){return SortedMap.EMPTY_NODE;}else{smallest=n.right.min_();n=n.copy(smallest.key,smallest.value,null,null,n.right.removeMin_());}}n=n.copy(null,null,null,null,n.right.remove(key,comparator));}return n.fixUp_();};/**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */LLRBNode.prototype.isRed_=function(){return this.color;};/**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */LLRBNode.prototype.fixUp_=function(){var n=this;if(n.right.isRed_()&&!n.left.isRed_()){n=n.rotateLeft_();}if(n.left.isRed_()&&n.left.left.isRed_()){n=n.rotateRight_();}if(n.left.isRed_()&&n.right.isRed_()){n=n.colorFlip_();}return n;};/**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */LLRBNode.prototype.moveRedLeft_=function(){var n=this.colorFlip_();if(n.right.left.isRed_()){n=n.copy(null,null,null,null,n.right.rotateRight_());n=n.rotateLeft_();n=n.colorFlip_();}return n;};/**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */LLRBNode.prototype.moveRedRight_=function(){var n=this.colorFlip_();if(n.left.left.isRed_()){n=n.rotateRight_();n=n.colorFlip_();}return n;};/**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */LLRBNode.prototype.rotateLeft_=function(){var nl=this.copy(null,null,LLRBNode.RED,null,this.right.left);return this.right.copy(null,null,this.color,nl,null);};/**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */LLRBNode.prototype.rotateRight_=function(){var nr=this.copy(null,null,LLRBNode.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,nr);};/**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */LLRBNode.prototype.colorFlip_=function(){var left=this.left.copy(null,null,!this.left.color,null,null);var right=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,left,right);};/**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */LLRBNode.prototype.checkMaxDepth_=function(){var blackDepth=this.check_();return Math.pow(2.0,blackDepth)<=this.count()+1;};/**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */LLRBNode.prototype.check_=function(){if(this.isRed_()&&this.left.isRed_()){throw new Error('Red node has red child('+this.key+','+this.value+')');}if(this.right.isRed_()){throw new Error('Right child of ('+this.key+','+this.value+') is red');}var blackDepth=this.left.check_();if(blackDepth!==this.right.check_()){throw new Error('Black depths differ');}else{return blackDepth+(this.isRed_()?0:1);}};LLRBNode.RED=true;LLRBNode.BLACK=false;return LLRBNode;}();/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */var LLRBEmptyNode=/** @class */function(){function LLRBEmptyNode(){}/**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */LLRBEmptyNode.prototype.copy=function(key,value,color,left,right){return this;};/**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */LLRBEmptyNode.prototype.insert=function(key,value,comparator){return new LLRBNode(key,value,null);};/**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */LLRBEmptyNode.prototype.remove=function(key,comparator){return this;};/**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */LLRBEmptyNode.prototype.count=function(){return 0;};/**\r\n     * @return {boolean} True if the tree is empty.\r\n     */LLRBEmptyNode.prototype.isEmpty=function(){return true;};/**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */LLRBEmptyNode.prototype.inorderTraversal=function(action){return false;};/**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */LLRBEmptyNode.prototype.reverseTraversal=function(action){return false;};/**\r\n     * @return {null}\r\n     */LLRBEmptyNode.prototype.minKey=function(){return null;};/**\r\n     * @return {null}\r\n     */LLRBEmptyNode.prototype.maxKey=function(){return null;};/**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */LLRBEmptyNode.prototype.check_=function(){return 0;};/**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */LLRBEmptyNode.prototype.isRed_=function(){return false;};return LLRBEmptyNode;}();/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */var SortedMap=/** @class */function(){/**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */function SortedMap(comparator_,root_){if(root_===void 0){root_=SortedMap.EMPTY_NODE;}this.comparator_=comparator_;this.root_=root_;}/**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */SortedMap.prototype.insert=function(key,value){return new SortedMap(this.comparator_,this.root_.insert(key,value,this.comparator_).copy(null,null,LLRBNode.BLACK,null,null));};/**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */SortedMap.prototype.remove=function(key){return new SortedMap(this.comparator_,this.root_.remove(key,this.comparator_).copy(null,null,LLRBNode.BLACK,null,null));};/**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */SortedMap.prototype.get=function(key){var cmp;var node=this.root_;while(!node.isEmpty()){cmp=this.comparator_(key,node.key);if(cmp===0){return node.value;}else if(cmp<0){node=node.left;}else if(cmp>0){node=node.right;}}return null;};/**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */SortedMap.prototype.getPredecessorKey=function(key){var cmp,node=this.root_,rightParent=null;while(!node.isEmpty()){cmp=this.comparator_(key,node.key);if(cmp===0){if(!node.left.isEmpty()){node=node.left;while(!node.right.isEmpty()){node=node.right;}return node.key;}else if(rightParent){return rightParent.key;}else{return null;// first item.\n}}else if(cmp<0){node=node.left;}else if(cmp>0){rightParent=node;node=node.right;}}throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');};/**\r\n     * @return {boolean} True if the map is empty.\r\n     */SortedMap.prototype.isEmpty=function(){return this.root_.isEmpty();};/**\r\n     * @return {number} The total number of nodes in the map.\r\n     */SortedMap.prototype.count=function(){return this.root_.count();};/**\r\n     * @return {?K} The minimum key in the map.\r\n     */SortedMap.prototype.minKey=function(){return this.root_.minKey();};/**\r\n     * @return {?K} The maximum key in the map.\r\n     */SortedMap.prototype.maxKey=function(){return this.root_.maxKey();};/**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */SortedMap.prototype.inorderTraversal=function(action){return this.root_.inorderTraversal(action);};/**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */SortedMap.prototype.reverseTraversal=function(action){return this.root_.reverseTraversal(action);};/**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */SortedMap.prototype.getIterator=function(resultGenerator){return new SortedMapIterator(this.root_,null,this.comparator_,false,resultGenerator);};SortedMap.prototype.getIteratorFrom=function(key,resultGenerator){return new SortedMapIterator(this.root_,key,this.comparator_,false,resultGenerator);};SortedMap.prototype.getReverseIteratorFrom=function(key,resultGenerator){return new SortedMapIterator(this.root_,key,this.comparator_,true,resultGenerator);};SortedMap.prototype.getReverseIterator=function(resultGenerator){return new SortedMapIterator(this.root_,null,this.comparator_,true,resultGenerator);};/**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */SortedMap.EMPTY_NODE=new LLRBEmptyNode();return SortedMap;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var LOG_2=Math.log(2);/**\r\n * @constructor\r\n */var Base12Num=/** @class */function(){/**\r\n     * @param {number} length\r\n     */function Base12Num(length){var logBase2=function(num){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn parseInt(Math.log(num)/LOG_2,10);};var bitMask=function(bits){return parseInt(Array(bits+1).join('1'),2);};this.count=logBase2(length+1);this.current_=this.count-1;var mask=bitMask(this.count);this.bits_=length+1&mask;}/**\r\n     * @return {boolean}\r\n     */Base12Num.prototype.nextBitIsOne=function(){//noinspection JSBitwiseOperatorUsage\nvar result=!(this.bits_&0x1<<this.current_);this.current_--;return result;};return Base12Num;}();/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */var buildChildSet=function(childList,cmp,keyFn,mapSortFn){childList.sort(cmp);var buildBalancedTree=function(low,high){var length=high-low;var namedNode;var key;if(length===0){return null;}else if(length===1){namedNode=childList[low];key=keyFn?keyFn(namedNode):namedNode;return new LLRBNode(key,namedNode.node,LLRBNode.BLACK,null,null);}else{// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar middle=parseInt(length/2,10)+low;var left=buildBalancedTree(low,middle);var right=buildBalancedTree(middle+1,high);namedNode=childList[middle];key=keyFn?keyFn(namedNode):namedNode;return new LLRBNode(key,namedNode.node,LLRBNode.BLACK,left,right);}};var buildFrom12Array=function(base12){var node=null;var root=null;var index=childList.length;var buildPennant=function(chunkSize,color){var low=index-chunkSize;var high=index;index-=chunkSize;var childTree=buildBalancedTree(low+1,high);var namedNode=childList[low];var key=keyFn?keyFn(namedNode):namedNode;attachPennant(new LLRBNode(key,namedNode.node,color,null,childTree));};var attachPennant=function(pennant){if(node){node.left=pennant;node=pennant;}else{root=pennant;node=pennant;}};for(var i=0;i<base12.count;++i){var isOne=base12.nextBitIsOne();// The number of nodes taken in each slice is 2^(arr.length - (i + 1))\nvar chunkSize=Math.pow(2,base12.count-(i+1));if(isOne){buildPennant(chunkSize,LLRBNode.BLACK);}else{// current == 2\nbuildPennant(chunkSize,LLRBNode.BLACK);buildPennant(chunkSize,LLRBNode.RED);}}return root;};var base12=new Base12Num(childList.length);var root=buildFrom12Array(base12);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn new SortedMap(mapSortFn||cmp,root);};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var _defaultIndexMap;var fallbackObject={};var IndexMap=/** @class */function(){function IndexMap(indexes_,indexSet_){this.indexes_=indexes_;this.indexSet_=indexSet_;}Object.defineProperty(IndexMap,\"Default\",{/**\r\n         * The default IndexMap for nodes without a priority\r\n         */get:function(){assert(fallbackObject&&PRIORITY_INDEX,'ChildrenNode.ts has not been loaded');_defaultIndexMap=_defaultIndexMap||new IndexMap({'.priority':fallbackObject},{'.priority':PRIORITY_INDEX});return _defaultIndexMap;},enumerable:false,configurable:true});IndexMap.prototype.get=function(indexKey){var sortedMap=safeGet(this.indexes_,indexKey);if(!sortedMap){throw new Error('No index defined for '+indexKey);}if(sortedMap instanceof SortedMap){return sortedMap;}else{// The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n// regular child map\nreturn null;}};IndexMap.prototype.hasIndex=function(indexDefinition){return contains(this.indexSet_,indexDefinition.toString());};IndexMap.prototype.addIndex=function(indexDefinition,existingChildren){assert(indexDefinition!==KEY_INDEX,\"KeyIndex always exists and isn't meant to be added to the IndexMap.\");var childList=[];var sawIndexedValue=false;var iter=existingChildren.getIterator(NamedNode.Wrap);var next=iter.getNext();while(next){sawIndexedValue=sawIndexedValue||indexDefinition.isDefinedOn(next.node);childList.push(next);next=iter.getNext();}var newIndex;if(sawIndexedValue){newIndex=buildChildSet(childList,indexDefinition.getCompare());}else{newIndex=fallbackObject;}var indexName=indexDefinition.toString();var newIndexSet=__assign({},this.indexSet_);newIndexSet[indexName]=indexDefinition;var newIndexes=__assign({},this.indexes_);newIndexes[indexName]=newIndex;return new IndexMap(newIndexes,newIndexSet);};/**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */IndexMap.prototype.addToIndexes=function(namedNode,existingChildren){var _this=this;var newIndexes=map(this.indexes_,function(indexedChildren,indexName){var index=safeGet(_this.indexSet_,indexName);assert(index,'Missing index implementation for '+indexName);if(indexedChildren===fallbackObject){// Check to see if we need to index everything\nif(index.isDefinedOn(namedNode.node)){// We need to build this index\nvar childList=[];var iter=existingChildren.getIterator(NamedNode.Wrap);var next=iter.getNext();while(next){if(next.name!==namedNode.name){childList.push(next);}next=iter.getNext();}childList.push(namedNode);return buildChildSet(childList,index.getCompare());}else{// No change, this remains a fallback\nreturn fallbackObject;}}else{var existingSnap=existingChildren.get(namedNode.name);var newChildren=indexedChildren;if(existingSnap){newChildren=newChildren.remove(new NamedNode(namedNode.name,existingSnap));}return newChildren.insert(namedNode,namedNode.node);}});return new IndexMap(newIndexes,this.indexSet_);};/**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */IndexMap.prototype.removeFromIndexes=function(namedNode,existingChildren){var newIndexes=map(this.indexes_,function(indexedChildren){if(indexedChildren===fallbackObject){// This is the fallback. Just return it, nothing to do in this case\nreturn indexedChildren;}else{var existingSnap=existingChildren.get(namedNode.name);if(existingSnap){return indexedChildren.remove(new NamedNode(namedNode.name,existingSnap));}else{// No record of this child\nreturn indexedChildren;}}});return new IndexMap(newIndexes,this.indexSet_);};return IndexMap;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function NAME_ONLY_COMPARATOR(left,right){return nameCompare(left.name,right.name);}function NAME_COMPARATOR(left,right){return nameCompare(left,right);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // TODO: For memory savings, don't store priorityNode_ if it's empty.\nvar EMPTY_NODE;/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */var ChildrenNode=/** @class */function(){/**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */function ChildrenNode(children_,priorityNode_,indexMap_){this.children_=children_;this.priorityNode_=priorityNode_;this.indexMap_=indexMap_;this.lazyHash_=null;/**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */if(this.priorityNode_){validatePriorityNode(this.priorityNode_);}if(this.children_.isEmpty()){assert(!this.priorityNode_||this.priorityNode_.isEmpty(),'An empty node cannot have a priority');}}Object.defineProperty(ChildrenNode,\"EMPTY_NODE\",{get:function(){return EMPTY_NODE||(EMPTY_NODE=new ChildrenNode(new SortedMap(NAME_COMPARATOR),null,IndexMap.Default));},enumerable:false,configurable:true});/** @inheritDoc */ChildrenNode.prototype.isLeafNode=function(){return false;};/** @inheritDoc */ChildrenNode.prototype.getPriority=function(){return this.priorityNode_||EMPTY_NODE;};/** @inheritDoc */ChildrenNode.prototype.updatePriority=function(newPriorityNode){if(this.children_.isEmpty()){// Don't allow priorities on empty nodes\nreturn this;}else{return new ChildrenNode(this.children_,newPriorityNode,this.indexMap_);}};/** @inheritDoc */ChildrenNode.prototype.getImmediateChild=function(childName){// Hack to treat priority as a regular child\nif(childName==='.priority'){return this.getPriority();}else{var child=this.children_.get(childName);return child===null?EMPTY_NODE:child;}};/** @inheritDoc */ChildrenNode.prototype.getChild=function(path){var front=path.getFront();if(front===null){return this;}return this.getImmediateChild(front).getChild(path.popFront());};/** @inheritDoc */ChildrenNode.prototype.hasChild=function(childName){return this.children_.get(childName)!==null;};/** @inheritDoc */ChildrenNode.prototype.updateImmediateChild=function(childName,newChildNode){assert(newChildNode,'We should always be passing snapshot nodes');if(childName==='.priority'){return this.updatePriority(newChildNode);}else{var namedNode=new NamedNode(childName,newChildNode);var newChildren=void 0,newIndexMap=void 0;if(newChildNode.isEmpty()){newChildren=this.children_.remove(childName);newIndexMap=this.indexMap_.removeFromIndexes(namedNode,this.children_);}else{newChildren=this.children_.insert(childName,newChildNode);newIndexMap=this.indexMap_.addToIndexes(namedNode,this.children_);}var newPriority=newChildren.isEmpty()?EMPTY_NODE:this.priorityNode_;return new ChildrenNode(newChildren,newPriority,newIndexMap);}};/** @inheritDoc */ChildrenNode.prototype.updateChild=function(path,newChildNode){var front=path.getFront();if(front===null){return newChildNode;}else{assert(path.getFront()!=='.priority'||path.getLength()===1,'.priority must be the last token in a path');var newImmediateChild=this.getImmediateChild(front).updateChild(path.popFront(),newChildNode);return this.updateImmediateChild(front,newImmediateChild);}};/** @inheritDoc */ChildrenNode.prototype.isEmpty=function(){return this.children_.isEmpty();};/** @inheritDoc */ChildrenNode.prototype.numChildren=function(){return this.children_.count();};/** @inheritDoc */ChildrenNode.prototype.val=function(exportFormat){if(this.isEmpty()){return null;}var obj={};var numKeys=0,maxKey=0,allIntegerKeys=true;this.forEachChild(PRIORITY_INDEX,function(key,childNode){obj[key]=childNode.val(exportFormat);numKeys++;if(allIntegerKeys&&ChildrenNode.INTEGER_REGEXP_.test(key)){maxKey=Math.max(maxKey,Number(key));}else{allIntegerKeys=false;}});if(!exportFormat&&allIntegerKeys&&maxKey<2*numKeys){// convert to array.\nvar array=[];// eslint-disable-next-line guard-for-in\nfor(var key in obj){array[key]=obj[key];}return array;}else{if(exportFormat&&!this.getPriority().isEmpty()){obj['.priority']=this.getPriority().val();}return obj;}};/** @inheritDoc */ChildrenNode.prototype.hash=function(){if(this.lazyHash_===null){var toHash_1='';if(!this.getPriority().isEmpty()){toHash_1+='priority:'+priorityHashText(this.getPriority().val())+':';}this.forEachChild(PRIORITY_INDEX,function(key,childNode){var childHash=childNode.hash();if(childHash!==''){toHash_1+=':'+key+':'+childHash;}});this.lazyHash_=toHash_1===''?'':sha1(toHash_1);}return this.lazyHash_;};/** @inheritDoc */ChildrenNode.prototype.getPredecessorChildName=function(childName,childNode,index){var idx=this.resolveIndex_(index);if(idx){var predecessor=idx.getPredecessorKey(new NamedNode(childName,childNode));return predecessor?predecessor.name:null;}else{return this.children_.getPredecessorKey(childName);}};/**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */ChildrenNode.prototype.getFirstChildName=function(indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){var minKey=idx.minKey();return minKey&&minKey.name;}else{return this.children_.minKey();}};/**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */ChildrenNode.prototype.getFirstChild=function(indexDefinition){var minKey=this.getFirstChildName(indexDefinition);if(minKey){return new NamedNode(minKey,this.children_.get(minKey));}else{return null;}};/**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */ChildrenNode.prototype.getLastChildName=function(indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){var maxKey=idx.maxKey();return maxKey&&maxKey.name;}else{return this.children_.maxKey();}};/**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */ChildrenNode.prototype.getLastChild=function(indexDefinition){var maxKey=this.getLastChildName(indexDefinition);if(maxKey){return new NamedNode(maxKey,this.children_.get(maxKey));}else{return null;}};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.forEachChild=function(index,action){var idx=this.resolveIndex_(index);if(idx){return idx.inorderTraversal(function(wrappedNode){return action(wrappedNode.name,wrappedNode.node);});}else{return this.children_.inorderTraversal(action);}};/**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */ChildrenNode.prototype.getIterator=function(indexDefinition){return this.getIteratorFrom(indexDefinition.minPost(),indexDefinition);};/**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */ChildrenNode.prototype.getIteratorFrom=function(startPost,indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){return idx.getIteratorFrom(startPost,function(key){return key;});}else{var iterator=this.children_.getIteratorFrom(startPost.name,NamedNode.Wrap);var next=iterator.peek();while(next!=null&&indexDefinition.compare(next,startPost)<0){iterator.getNext();next=iterator.peek();}return iterator;}};/**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */ChildrenNode.prototype.getReverseIterator=function(indexDefinition){return this.getReverseIteratorFrom(indexDefinition.maxPost(),indexDefinition);};/**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */ChildrenNode.prototype.getReverseIteratorFrom=function(endPost,indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){return idx.getReverseIteratorFrom(endPost,function(key){return key;});}else{var iterator=this.children_.getReverseIteratorFrom(endPost.name,NamedNode.Wrap);var next=iterator.peek();while(next!=null&&indexDefinition.compare(next,endPost)>0){iterator.getNext();next=iterator.peek();}return iterator;}};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.compareTo=function(other){if(this.isEmpty()){if(other.isEmpty()){return 0;}else{return-1;}}else if(other.isLeafNode()||other.isEmpty()){return 1;}else if(other===MAX_NODE$2){return-1;}else{// Must be another node with children.\nreturn 0;}};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.withIndex=function(indexDefinition){if(indexDefinition===KEY_INDEX||this.indexMap_.hasIndex(indexDefinition)){return this;}else{var newIndexMap=this.indexMap_.addIndex(indexDefinition,this.children_);return new ChildrenNode(this.children_,this.priorityNode_,newIndexMap);}};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.isIndexed=function(index){return index===KEY_INDEX||this.indexMap_.hasIndex(index);};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.equals=function(other){if(other===this){return true;}else if(other.isLeafNode()){return false;}else{var otherChildrenNode=other;if(!this.getPriority().equals(otherChildrenNode.getPriority())){return false;}else if(this.children_.count()===otherChildrenNode.children_.count()){var thisIter=this.getIterator(PRIORITY_INDEX);var otherIter=otherChildrenNode.getIterator(PRIORITY_INDEX);var thisCurrent=thisIter.getNext();var otherCurrent=otherIter.getNext();while(thisCurrent&&otherCurrent){if(thisCurrent.name!==otherCurrent.name||!thisCurrent.node.equals(otherCurrent.node)){return false;}thisCurrent=thisIter.getNext();otherCurrent=otherIter.getNext();}return thisCurrent===null&&otherCurrent===null;}else{return false;}}};/**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */ChildrenNode.prototype.resolveIndex_=function(indexDefinition){if(indexDefinition===KEY_INDEX){return null;}else{return this.indexMap_.get(indexDefinition.toString());}};/**\r\n     * @private\r\n     * @type {RegExp}\r\n     */ChildrenNode.INTEGER_REGEXP_=/^(0|[1-9]\\d*)$/;return ChildrenNode;}();/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */var MaxNode=/** @class */function(_super){__extends(MaxNode,_super);function MaxNode(){return _super.call(this,new SortedMap(NAME_COMPARATOR),ChildrenNode.EMPTY_NODE,IndexMap.Default)||this;}MaxNode.prototype.compareTo=function(other){if(other===this){return 0;}else{return 1;}};MaxNode.prototype.equals=function(other){// Not that we every compare it, but MAX_NODE is only ever equal to itself\nreturn other===this;};MaxNode.prototype.getPriority=function(){return this;};MaxNode.prototype.getImmediateChild=function(childName){return ChildrenNode.EMPTY_NODE;};MaxNode.prototype.isEmpty=function(){return false;};return MaxNode;}(ChildrenNode);/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */var MAX_NODE$2=new MaxNode();Object.defineProperties(NamedNode,{MIN:{value:new NamedNode(MIN_NAME,ChildrenNode.EMPTY_NODE)},MAX:{value:new NamedNode(MAX_NAME,MAX_NODE$2)}});/**\r\n * Reference Extensions\r\n */KeyIndex.__EMPTY_NODE=ChildrenNode.EMPTY_NODE;LeafNode.__childrenNodeConstructor=ChildrenNode;setMaxNode(MAX_NODE$2);setMaxNode$1(MAX_NODE$2);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var USE_HINZE=true;/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */function nodeFromJSON$1(json,priority){if(priority===void 0){priority=null;}if(json===null){return ChildrenNode.EMPTY_NODE;}if(typeof json==='object'&&'.priority'in json){priority=json['.priority'];}assert(priority===null||typeof priority==='string'||typeof priority==='number'||typeof priority==='object'&&'.sv'in priority,'Invalid priority type found: '+typeof priority);if(typeof json==='object'&&'.value'in json&&json['.value']!==null){json=json['.value'];}// Valid leaf nodes include non-objects or server-value wrapper objects\nif(typeof json!=='object'||'.sv'in json){var jsonLeaf=json;return new LeafNode(jsonLeaf,nodeFromJSON$1(priority));}if(!(json instanceof Array)&&USE_HINZE){var children_1=[];var childrenHavePriority_1=false;var hinzeJsonObj=json;each(hinzeJsonObj,function(key,child){if(key.substring(0,1)!=='.'){// Ignore metadata nodes\nvar childNode=nodeFromJSON$1(child);if(!childNode.isEmpty()){childrenHavePriority_1=childrenHavePriority_1||!childNode.getPriority().isEmpty();children_1.push(new NamedNode(key,childNode));}}});if(children_1.length===0){return ChildrenNode.EMPTY_NODE;}var childSet=buildChildSet(children_1,NAME_ONLY_COMPARATOR,function(namedNode){return namedNode.name;},NAME_COMPARATOR);if(childrenHavePriority_1){var sortedChildSet=buildChildSet(children_1,PRIORITY_INDEX.getCompare());return new ChildrenNode(childSet,nodeFromJSON$1(priority),new IndexMap({'.priority':sortedChildSet},{'.priority':PRIORITY_INDEX}));}else{return new ChildrenNode(childSet,nodeFromJSON$1(priority),IndexMap.Default);}}else{var node_1=ChildrenNode.EMPTY_NODE;each(json,function(key,childData){if(contains(json,key)){if(key.substring(0,1)!=='.'){// ignore metadata nodes.\nvar childNode=nodeFromJSON$1(childData);if(childNode.isLeafNode()||!childNode.isEmpty()){node_1=node_1.updateImmediateChild(key,childNode);}}}});return node_1.updatePriority(nodeFromJSON$1(priority));}}setNodeFromJSON(nodeFromJSON$1);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */var ValueIndex=/** @class */function(_super){__extends(ValueIndex,_super);function ValueIndex(){return _super!==null&&_super.apply(this,arguments)||this;}/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.compare=function(a,b){var indexCmp=a.node.compareTo(b.node);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.isDefinedOn=function(node){return true;};/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.indexedValueChanged=function(oldNode,newNode){return!oldNode.equals(newNode);};/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;};/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.maxPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MAX;};/**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */ValueIndex.prototype.makePost=function(indexValue,name){var valueNode=nodeFromJSON$1(indexValue);return new NamedNode(name,valueNode);};/**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */ValueIndex.prototype.toString=function(){return'.value';};return ValueIndex;}(Index);var VALUE_INDEX=new ValueIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */var PathIndex=/** @class */function(_super){__extends(PathIndex,_super);function PathIndex(indexPath_){var _this=_super.call(this)||this;_this.indexPath_=indexPath_;assert(!indexPath_.isEmpty()&&indexPath_.getFront()!=='.priority',\"Can't create PathIndex with empty path or .priority key\");return _this;}/**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */PathIndex.prototype.extractChild=function(snap){return snap.getChild(this.indexPath_);};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.isDefinedOn=function(node){return!node.getChild(this.indexPath_).isEmpty();};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.compare=function(a,b){var aChild=this.extractChild(a.node);var bChild=this.extractChild(b.node);var indexCmp=aChild.compareTo(bChild);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.makePost=function(indexValue,name){var valueNode=nodeFromJSON$1(indexValue);var node=ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_,valueNode);return new NamedNode(name,node);};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.maxPost=function(){var node=ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_,MAX_NODE$2);return new NamedNode(MAX_NAME,node);};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.toString=function(){return this.indexPath_.slice().join('/');};return PathIndex;}(Index);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */var DataSnapshot=/** @class */function(){/**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */function DataSnapshot(node_,ref_,index_){this.node_=node_;this.ref_=ref_;this.index_=index_;}/**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */DataSnapshot.prototype.val=function(){validateArgCount('DataSnapshot.val',0,0,arguments.length);return this.node_.val();};/**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */DataSnapshot.prototype.exportVal=function(){validateArgCount('DataSnapshot.exportVal',0,0,arguments.length);return this.node_.val(true);};// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n// for end-users\nDataSnapshot.prototype.toJSON=function(){// Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\nvalidateArgCount('DataSnapshot.toJSON',0,1,arguments.length);return this.exportVal();};/**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */DataSnapshot.prototype.exists=function(){validateArgCount('DataSnapshot.exists',0,0,arguments.length);return!this.node_.isEmpty();};/**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */DataSnapshot.prototype.child=function(childPathString){validateArgCount('DataSnapshot.child',0,1,arguments.length);// Ensure the childPath is a string (can be a number)\nchildPathString=String(childPathString);validatePathString('DataSnapshot.child',1,childPathString,false);var childPath=new Path(childPathString);var childRef=this.ref_.child(childPath);return new DataSnapshot(this.node_.getChild(childPath),childRef,PRIORITY_INDEX);};/**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */DataSnapshot.prototype.hasChild=function(childPathString){validateArgCount('DataSnapshot.hasChild',1,1,arguments.length);validatePathString('DataSnapshot.hasChild',1,childPathString,false);var childPath=new Path(childPathString);return!this.node_.getChild(childPath).isEmpty();};/**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */DataSnapshot.prototype.getPriority=function(){validateArgCount('DataSnapshot.getPriority',0,0,arguments.length);// typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\nreturn this.node_.getPriority().val();};/**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */DataSnapshot.prototype.forEach=function(action){var _this=this;validateArgCount('DataSnapshot.forEach',1,1,arguments.length);validateCallback('DataSnapshot.forEach',1,action,false);if(this.node_.isLeafNode()){return false;}var childrenNode=this.node_;// Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\nreturn!!childrenNode.forEachChild(this.index_,function(key,node){return action(new DataSnapshot(node,_this.ref_.child(key),PRIORITY_INDEX));});};/**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */DataSnapshot.prototype.hasChildren=function(){validateArgCount('DataSnapshot.hasChildren',0,0,arguments.length);if(this.node_.isLeafNode()){return false;}else{return!this.node_.isEmpty();}};Object.defineProperty(DataSnapshot.prototype,\"key\",{get:function(){return this.ref_.getKey();},enumerable:false,configurable:true});/**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */DataSnapshot.prototype.numChildren=function(){validateArgCount('DataSnapshot.numChildren',0,0,arguments.length);return this.node_.numChildren();};/**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */DataSnapshot.prototype.getRef=function(){validateArgCount('DataSnapshot.ref',0,0,arguments.length);return this.ref_;};Object.defineProperty(DataSnapshot.prototype,\"ref\",{get:function(){return this.getRef();},enumerable:false,configurable:true});return DataSnapshot;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */var DataEvent=/** @class */function(){/**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */function DataEvent(eventType,eventRegistration,snapshot,prevName){this.eventType=eventType;this.eventRegistration=eventRegistration;this.snapshot=snapshot;this.prevName=prevName;}/**\r\n     * @inheritDoc\r\n     */DataEvent.prototype.getPath=function(){var ref=this.snapshot.getRef();if(this.eventType==='value'){return ref.path;}else{return ref.getParent().path;}};/**\r\n     * @inheritDoc\r\n     */DataEvent.prototype.getEventType=function(){return this.eventType;};/**\r\n     * @inheritDoc\r\n     */DataEvent.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this);};/**\r\n     * @inheritDoc\r\n     */DataEvent.prototype.toString=function(){return this.getPath().toString()+':'+this.eventType+':'+stringify(this.snapshot.exportVal());};return DataEvent;}();var CancelEvent=/** @class */function(){/**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */function CancelEvent(eventRegistration,error,path){this.eventRegistration=eventRegistration;this.error=error;this.path=path;}/**\r\n     * @inheritDoc\r\n     */CancelEvent.prototype.getPath=function(){return this.path;};/**\r\n     * @inheritDoc\r\n     */CancelEvent.prototype.getEventType=function(){return'cancel';};/**\r\n     * @inheritDoc\r\n     */CancelEvent.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this);};/**\r\n     * @inheritDoc\r\n     */CancelEvent.prototype.toString=function(){return this.path.toString()+':cancel';};return CancelEvent;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Represents registration for 'value' events.\r\n */var ValueEventRegistration=/** @class */function(){/**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */function ValueEventRegistration(callback_,cancelCallback_,context_){this.callback_=callback_;this.cancelCallback_=cancelCallback_;this.context_=context_;}/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.respondsTo=function(eventType){return eventType==='value';};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.createEvent=function(change,query){var index=query.getQueryParams().getIndex();return new DataEvent('value',this,new DataSnapshot(change.snapshotNode,query.getRef(),index));};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.getEventRunner=function(eventData){var ctx=this.context_;if(eventData.getEventType()==='cancel'){assert(this.cancelCallback_,'Raising a cancel event on a listener with no cancel callback');var cancelCB_1=this.cancelCallback_;return function(){// We know that error exists, we checked above that this is a cancel event\ncancelCB_1.call(ctx,eventData.error);};}else{var cb_1=this.callback_;return function(){cb_1.call(ctx,eventData.snapshot);};}};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.createCancelEvent=function(error,path){if(this.cancelCallback_){return new CancelEvent(this,error,path);}else{return null;}};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.matches=function(other){if(!(other instanceof ValueEventRegistration)){return false;}else if(!other.callback_||!this.callback_){// If no callback specified, we consider it to match any callback.\nreturn true;}else{return other.callback_===this.callback_&&other.context_===this.context_;}};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.hasAnyCallback=function(){return this.callback_!==null;};return ValueEventRegistration;}();/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */var ChildEventRegistration=/** @class */function(){/**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */function ChildEventRegistration(callbacks_,cancelCallback_,context_){this.callbacks_=callbacks_;this.cancelCallback_=cancelCallback_;this.context_=context_;}/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.respondsTo=function(eventType){var eventToCheck=eventType==='children_added'?'child_added':eventType;eventToCheck=eventToCheck==='children_removed'?'child_removed':eventToCheck;return contains(this.callbacks_,eventToCheck);};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.createCancelEvent=function(error,path){if(this.cancelCallback_){return new CancelEvent(this,error,path);}else{return null;}};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.createEvent=function(change,query){assert(change.childName!=null,'Child events should have a childName.');var ref=query.getRef().child(/** @type {!string} */change.childName);var index=query.getQueryParams().getIndex();return new DataEvent(change.type,this,new DataSnapshot(change.snapshotNode,ref,index),change.prevName);};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.getEventRunner=function(eventData){var ctx=this.context_;if(eventData.getEventType()==='cancel'){assert(this.cancelCallback_,'Raising a cancel event on a listener with no cancel callback');var cancelCB_2=this.cancelCallback_;return function(){// We know that error exists, we checked above that this is a cancel event\ncancelCB_2.call(ctx,eventData.error);};}else{var cb_2=this.callbacks_[eventData.eventType];return function(){cb_2.call(ctx,eventData.snapshot,eventData.prevName);};}};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.matches=function(other){var _this=this;if(other instanceof ChildEventRegistration){if(!this.callbacks_||!other.callbacks_){return true;}else if(this.context_===other.context_){var otherKeys=Object.keys(other.callbacks_);var thisKeys=Object.keys(this.callbacks_);var otherCount=otherKeys.length;var thisCount=thisKeys.length;if(otherCount===thisCount){// If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n// If event types don't match, not a match\n// If count is not 1, exact match across all\nif(otherCount===1){var otherKey=otherKeys[0];var thisKey=thisKeys[0];return thisKey===otherKey&&(!other.callbacks_[otherKey]||!this.callbacks_[thisKey]||other.callbacks_[otherKey]===this.callbacks_[thisKey]);}else{// Exact match on each key.\nreturn thisKeys.every(function(eventType){return other.callbacks_[eventType]===_this.callbacks_[eventType];});}}}}return false;};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.hasAnyCallback=function(){return this.callbacks_!==null;};return ChildEventRegistration;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __referenceConstructor;/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */var Query=/** @class */function(){function Query(repo,path,queryParams_,orderByCalled_){this.repo=repo;this.path=path;this.queryParams_=queryParams_;this.orderByCalled_=orderByCalled_;}Object.defineProperty(Query,\"__referenceConstructor\",{get:function(){assert(__referenceConstructor,'Reference.ts has not been loaded');return __referenceConstructor;},set:function(val){__referenceConstructor=val;},enumerable:false,configurable:true});/**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */Query.validateQueryEndpoints_=function(params){var startNode=null;var endNode=null;if(params.hasStart()){startNode=params.getIndexStartValue();}if(params.hasEnd()){endNode=params.getIndexEndValue();}if(params.getIndex()===KEY_INDEX){var tooManyArgsError='Query: When ordering by key, you may only pass one argument to '+'startAt(), endAt(), or equalTo().';var wrongArgTypeError='Query: When ordering by key, the argument passed to startAt(), endAt(),'+'or equalTo() must be a string.';if(params.hasStart()){var startName=params.getIndexStartName();if(startName!==MIN_NAME){throw new Error(tooManyArgsError);}else if(typeof startNode!=='string'){throw new Error(wrongArgTypeError);}}if(params.hasEnd()){var endName=params.getIndexEndName();if(endName!==MAX_NAME){throw new Error(tooManyArgsError);}else if(typeof endNode!=='string'){throw new Error(wrongArgTypeError);}}}else if(params.getIndex()===PRIORITY_INDEX){if(startNode!=null&&!isValidPriority(startNode)||endNode!=null&&!isValidPriority(endNode)){throw new Error('Query: When ordering by priority, the first argument passed to startAt(), '+'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');}}else{assert(params.getIndex()instanceof PathIndex||params.getIndex()===VALUE_INDEX,'unknown index type.');if(startNode!=null&&typeof startNode==='object'||endNode!=null&&typeof endNode==='object'){throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be '+'an object.');}}};/**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */Query.validateLimit_=function(params){if(params.hasStart()&&params.hasEnd()&&params.hasLimit()&&!params.hasAnchoredLimit()){throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");}};/**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */Query.prototype.validateNoPreviousOrderByCall_=function(fnName){if(this.orderByCalled_===true){throw new Error(fnName+\": You can't combine multiple orderBy calls.\");}};/**\r\n     * @return {!QueryParams}\r\n     */Query.prototype.getQueryParams=function(){return this.queryParams_;};/**\r\n     * @return {!Reference}\r\n     */Query.prototype.getRef=function(){validateArgCount('Query.ref',0,0,arguments.length);// This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n// However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n// method gets called.\nreturn new Query.__referenceConstructor(this.repo,this.path);};/**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */Query.prototype.on=function(eventType,callback,cancelCallbackOrContext,context){validateArgCount('Query.on',2,4,arguments.length);validateEventType('Query.on',1,eventType,false);validateCallback('Query.on',2,callback,false);var ret=Query.getCancelAndContextArgs_('Query.on',cancelCallbackOrContext,context);if(eventType==='value'){this.onValueEvent(callback,ret.cancel,ret.context);}else{var callbacks={};callbacks[eventType]=callback;this.onChildEvent(callbacks,ret.cancel,ret.context);}return callback;};/**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */Query.prototype.onValueEvent=function(callback,cancelCallback,context){var container=new ValueEventRegistration(callback,cancelCallback||null,context||null);this.repo.addEventCallbackForQuery(this,container);};/**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */Query.prototype.onChildEvent=function(callbacks,cancelCallback,context){var container=new ChildEventRegistration(callbacks,cancelCallback,context);this.repo.addEventCallbackForQuery(this,container);};/**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */Query.prototype.off=function(eventType,callback,context){validateArgCount('Query.off',0,3,arguments.length);validateEventType('Query.off',1,eventType,true);validateCallback('Query.off',2,callback,true);validateContextObject('Query.off',3,context,true);var container=null;var callbacks=null;if(eventType==='value'){var valueCallback=callback||null;container=new ValueEventRegistration(valueCallback,null,context||null);}else if(eventType){if(callback){callbacks={};callbacks[eventType]=callback;}container=new ChildEventRegistration(callbacks,null,context||null);}this.repo.removeEventCallbackForQuery(this,container);};/**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */Query.prototype.get=function(){return this.repo.getValue(this);};/**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param failureCallbackOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */Query.prototype.once=function(eventType,userCallback,failureCallbackOrContext,context){var _this=this;validateArgCount('Query.once',1,4,arguments.length);validateEventType('Query.once',1,eventType,false);validateCallback('Query.once',2,userCallback,true);var ret=Query.getCancelAndContextArgs_('Query.once',failureCallbackOrContext,context);// TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n// TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n// because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n// against the Promise specification.\nvar firstCall=true;var deferred=new Deferred();// A dummy error handler in case a user wasn't expecting promises\ndeferred.promise.catch(function(){});var onceCallback=function(snapshot){// NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n// triggers multiple events (e.g. child_added or child_changed).\nif(firstCall){firstCall=false;_this.off(eventType,onceCallback);if(userCallback){userCallback.bind(ret.context)(snapshot);}deferred.resolve(snapshot);}};this.on(eventType,onceCallback,/*cancel=*/function(err){_this.off(eventType,onceCallback);if(ret.cancel){ret.cancel.bind(ret.context)(err);}deferred.reject(err);});return deferred.promise;};/**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */Query.prototype.limitToFirst=function(limit){validateArgCount('Query.limitToFirst',1,1,arguments.length);if(typeof limit!=='number'||Math.floor(limit)!==limit||limit<=0){throw new Error('Query.limitToFirst: First argument must be a positive integer.');}if(this.queryParams_.hasLimit()){throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, '+'limitToFirst, or limitToLast).');}return new Query(this.repo,this.path,this.queryParams_.limitToFirst(limit),this.orderByCalled_);};/**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */Query.prototype.limitToLast=function(limit){validateArgCount('Query.limitToLast',1,1,arguments.length);if(typeof limit!=='number'||Math.floor(limit)!==limit||limit<=0){throw new Error('Query.limitToLast: First argument must be a positive integer.');}if(this.queryParams_.hasLimit()){throw new Error('Query.limitToLast: Limit was already set (by another call to limit, '+'limitToFirst, or limitToLast).');}return new Query(this.repo,this.path,this.queryParams_.limitToLast(limit),this.orderByCalled_);};/**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */Query.prototype.orderByChild=function(path){validateArgCount('Query.orderByChild',1,1,arguments.length);if(path==='$key'){throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');}else if(path==='$priority'){throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');}else if(path==='$value'){throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');}validatePathString('Query.orderByChild',1,path,false);this.validateNoPreviousOrderByCall_('Query.orderByChild');var parsedPath=new Path(path);if(parsedPath.isEmpty()){throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');}var index=new PathIndex(parsedPath);var newParams=this.queryParams_.orderBy(index);Query.validateQueryEndpoints_(newParams);return new Query(this.repo,this.path,newParams,/*orderByCalled=*/true);};/**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */Query.prototype.orderByKey=function(){validateArgCount('Query.orderByKey',0,0,arguments.length);this.validateNoPreviousOrderByCall_('Query.orderByKey');var newParams=this.queryParams_.orderBy(KEY_INDEX);Query.validateQueryEndpoints_(newParams);return new Query(this.repo,this.path,newParams,/*orderByCalled=*/true);};/**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */Query.prototype.orderByPriority=function(){validateArgCount('Query.orderByPriority',0,0,arguments.length);this.validateNoPreviousOrderByCall_('Query.orderByPriority');var newParams=this.queryParams_.orderBy(PRIORITY_INDEX);Query.validateQueryEndpoints_(newParams);return new Query(this.repo,this.path,newParams,/*orderByCalled=*/true);};/**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */Query.prototype.orderByValue=function(){validateArgCount('Query.orderByValue',0,0,arguments.length);this.validateNoPreviousOrderByCall_('Query.orderByValue');var newParams=this.queryParams_.orderBy(VALUE_INDEX);Query.validateQueryEndpoints_(newParams);return new Query(this.repo,this.path,newParams,/*orderByCalled=*/true);};/**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */Query.prototype.startAt=function(value,name){if(value===void 0){value=null;}validateArgCount('Query.startAt',0,2,arguments.length);validateFirebaseDataArg('Query.startAt',1,value,this.path,true);validateKey('Query.startAt',2,name,true);var newParams=this.queryParams_.startAt(value,name);Query.validateLimit_(newParams);Query.validateQueryEndpoints_(newParams);if(this.queryParams_.hasStart()){throw new Error('Query.startAt: Starting point was already set (by another call to startAt '+'or equalTo).');}// Calling with no params tells us to start at the beginning.\nif(value===undefined){value=null;name=null;}return new Query(this.repo,this.path,newParams,this.orderByCalled_);};/**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */Query.prototype.endAt=function(value,name){if(value===void 0){value=null;}validateArgCount('Query.endAt',0,2,arguments.length);validateFirebaseDataArg('Query.endAt',1,value,this.path,true);validateKey('Query.endAt',2,name,true);var newParams=this.queryParams_.endAt(value,name);Query.validateLimit_(newParams);Query.validateQueryEndpoints_(newParams);if(this.queryParams_.hasEnd()){throw new Error('Query.endAt: Ending point was already set (by another call to endAt or '+'equalTo).');}return new Query(this.repo,this.path,newParams,this.orderByCalled_);};/**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */Query.prototype.equalTo=function(value,name){validateArgCount('Query.equalTo',1,2,arguments.length);validateFirebaseDataArg('Query.equalTo',1,value,this.path,false);validateKey('Query.equalTo',2,name,true);if(this.queryParams_.hasStart()){throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or '+'equalTo).');}if(this.queryParams_.hasEnd()){throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or '+'equalTo).');}return this.startAt(value,name).endAt(value,name);};/**\r\n     * @return {!string} URL for this location.\r\n     */Query.prototype.toString=function(){validateArgCount('Query.toString',0,0,arguments.length);return this.repo.toString()+this.path.toUrlEncodedString();};// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n// for end-users.\nQuery.prototype.toJSON=function(){// An optional spacer argument is unnecessary for a string.\nvalidateArgCount('Query.toJSON',0,1,arguments.length);return this.toString();};/**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */Query.prototype.queryObject=function(){return this.queryParams_.getQueryObject();};/**\r\n     * @return {!string}\r\n     */Query.prototype.queryIdentifier=function(){var obj=this.queryObject();var id=ObjectToUniqueKey(obj);return id==='{}'?'default':id;};/**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */Query.prototype.isEqual=function(other){validateArgCount('Query.isEqual',1,1,arguments.length);if(!(other instanceof Query)){var error='Query.isEqual failed: First argument must be an instance of firebase.database.Query.';throw new Error(error);}var sameRepo=this.repo===other.repo;var samePath=this.path.equals(other.path);var sameQueryIdentifier=this.queryIdentifier()===other.queryIdentifier();return sameRepo&&samePath&&sameQueryIdentifier;};/**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */Query.getCancelAndContextArgs_=function(fnName,cancelOrContext,context){var ret={cancel:null,context:null};if(cancelOrContext&&context){ret.cancel=cancelOrContext;validateCallback(fnName,3,ret.cancel,true);ret.context=context;validateContextObject(fnName,4,ret.context,true);}else if(cancelOrContext){// we have either a cancel callback or a context.\nif(typeof cancelOrContext==='object'&&cancelOrContext!==null){// it's a context!\nret.context=cancelOrContext;}else if(typeof cancelOrContext==='function'){ret.cancel=cancelOrContext;}else{throw new Error(errorPrefix(fnName,3,true)+' must either be a cancel callback or a context object.');}}return ret;};Object.defineProperty(Query.prototype,\"ref\",{get:function(){return this.getRef();},enumerable:false,configurable:true});return Query;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ExistingValueProvider=/** @class */function(){function ExistingValueProvider(node_){this.node_=node_;}ExistingValueProvider.prototype.getImmediateChild=function(childName){var child=this.node_.getImmediateChild(childName);return new ExistingValueProvider(child);};ExistingValueProvider.prototype.node=function(){return this.node_;};return ExistingValueProvider;}();var DeferredValueProvider=/** @class */function(){function DeferredValueProvider(syncTree,path){this.syncTree_=syncTree;this.path_=path;}DeferredValueProvider.prototype.getImmediateChild=function(childName){var childPath=this.path_.child(childName);return new DeferredValueProvider(this.syncTree_,childPath);};DeferredValueProvider.prototype.node=function(){return this.syncTree_.calcCompleteEventCache(this.path_);};return DeferredValueProvider;}();/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */var generateWithValues=function(values){values=values||{};values['timestamp']=values['timestamp']||new Date().getTime();return values;};/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */var resolveDeferredLeafValue=function(value,existingVal,serverValues){if(!value||typeof value!=='object'){return value;}assert('.sv'in value,'Unexpected leaf node or priority contents');if(typeof value['.sv']==='string'){return resolveScalarDeferredValue(value['.sv'],existingVal,serverValues);}else if(typeof value['.sv']==='object'){return resolveComplexDeferredValue(value['.sv'],existingVal);}else{assert(false,'Unexpected server value: '+JSON.stringify(value,null,2));}};var resolveScalarDeferredValue=function(op,existing,serverValues){switch(op){case'timestamp':return serverValues['timestamp'];default:assert(false,'Unexpected server value: '+op);}};var resolveComplexDeferredValue=function(op,existing,unused){if(!op.hasOwnProperty('increment')){assert(false,'Unexpected server value: '+JSON.stringify(op,null,2));}var delta=op['increment'];if(typeof delta!=='number'){assert(false,'Unexpected increment value: '+delta);}var existingNode=existing.node();assert(existingNode!==null&&typeof existingNode!=='undefined','Expected ChildrenNode.EMPTY_NODE for nulls');// Incrementing a non-number sets the value to the incremented amount\nif(!existingNode.isLeafNode()){return delta;}var leaf=existingNode;var existingVal=leaf.getValue();if(typeof existingVal!=='number'){return delta;}// No need to do over/underflow arithmetic here because JS only handles floats under the covers\nreturn existingVal+delta;};/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!Path} path path to which write is relative\r\n * @param {!Node} node new data written at path\r\n * @param {!SyncTree} syncTree current data\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */var resolveDeferredValueTree=function(path,node,syncTree,serverValues){return resolveDeferredValue(node,new DeferredValueProvider(syncTree,path),serverValues);};/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */var resolveDeferredValueSnapshot=function(node,existing,serverValues){return resolveDeferredValue(node,new ExistingValueProvider(existing),serverValues);};function resolveDeferredValue(node,existingVal,serverValues){var rawPri=node.getPriority().val();var priority=resolveDeferredLeafValue(rawPri,existingVal.getImmediateChild('.priority'),serverValues);var newNode;if(node.isLeafNode()){var leafNode=node;var value=resolveDeferredLeafValue(leafNode.getValue(),existingVal,serverValues);if(value!==leafNode.getValue()||priority!==leafNode.getPriority().val()){return new LeafNode(value,nodeFromJSON$1(priority));}else{return node;}}else{var childrenNode=node;newNode=childrenNode;if(priority!==childrenNode.getPriority().val()){newNode=newNode.updatePriority(new LeafNode(priority));}childrenNode.forEachChild(PRIORITY_INDEX,function(childName,childNode){var newChildNode=resolveDeferredValue(childNode,existingVal.getImmediateChild(childName),serverValues);if(newChildNode!==childNode){newNode=newNode.updateImmediateChild(childName,newChildNode);}});return newNode;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Helper class to store a sparse set of snapshots.\r\n */var SparseSnapshotTree=/** @class */function(){function SparseSnapshotTree(){this.value=null;this.children=new Map();}/**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return The retrieved node, or null.\r\n     */SparseSnapshotTree.prototype.find=function(path){if(this.value!=null){return this.value.getChild(path);}else if(!path.isEmpty()&&this.children.size>0){var childKey=path.getFront();path=path.popFront();if(this.children.has(childKey)){var childTree=this.children.get(childKey);return childTree.find(path);}else{return null;}}else{return null;}};/**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @param data The new data, or null.\r\n     */SparseSnapshotTree.prototype.remember=function(path,data){if(path.isEmpty()){this.value=data;this.children.clear();}else if(this.value!==null){this.value=this.value.updateChild(path,data);}else{var childKey=path.getFront();if(!this.children.has(childKey)){this.children.set(childKey,new SparseSnapshotTree());}var child=this.children.get(childKey);path=path.popFront();child.remember(path,data);}};/**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return True if this node should now be removed.\r\n     */SparseSnapshotTree.prototype.forget=function(path){if(path.isEmpty()){this.value=null;this.children.clear();return true;}else{if(this.value!==null){if(this.value.isLeafNode()){// We're trying to forget a node that doesn't exist\nreturn false;}else{var value=this.value;this.value=null;var self_1=this;value.forEachChild(PRIORITY_INDEX,function(key,tree){self_1.remember(new Path(key),tree);});return this.forget(path);}}else if(this.children.size>0){var childKey=path.getFront();path=path.popFront();if(this.children.has(childKey)){var safeToRemove=this.children.get(childKey).forget(path);if(safeToRemove){this.children.delete(childKey);}}return this.children.size===0;}else{return true;}}};/**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param prefixPath Path to look up node for.\r\n     * @param func The function to invoke for each tree.\r\n     */SparseSnapshotTree.prototype.forEachTree=function(prefixPath,func){if(this.value!==null){func(prefixPath,this.value);}else{this.forEachChild(function(key,tree){var path=new Path(prefixPath.toString()+'/'+key);tree.forEachTree(path,func);});}};/**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param func The function to invoke for each child.\r\n     */SparseSnapshotTree.prototype.forEachChild=function(func){this.children.forEach(function(tree,key){func(key,tree);});};return SparseSnapshotTree;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n *\r\n * @enum\r\n */var OperationType;(function(OperationType){OperationType[OperationType[\"OVERWRITE\"]=0]=\"OVERWRITE\";OperationType[OperationType[\"MERGE\"]=1]=\"MERGE\";OperationType[OperationType[\"ACK_USER_WRITE\"]=2]=\"ACK_USER_WRITE\";OperationType[OperationType[\"LISTEN_COMPLETE\"]=3]=\"LISTEN_COMPLETE\";})(OperationType||(OperationType={}));/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */var OperationSource=/** @class */function(){function OperationSource(fromUser,fromServer,queryId,tagged){this.fromUser=fromUser;this.fromServer=fromServer;this.queryId=queryId;this.tagged=tagged;assert(!tagged||fromServer,'Tagged queries must be from server.');}/**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */OperationSource.User=new OperationSource(/*fromUser=*/true,false,null,/*tagged=*/false);/**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */OperationSource.Server=new OperationSource(false,/*fromServer=*/true,null,/*tagged=*/false);/**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */OperationSource.forServerTaggedQuery=function(queryId){return new OperationSource(false,/*fromServer=*/true,queryId,/*tagged=*/true);};return OperationSource;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var AckUserWrite=/** @class */function(){/**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */function AckUserWrite(/** @inheritDoc */path,/** @inheritDoc */affectedTree,/** @inheritDoc */revert){this.path=path;this.affectedTree=affectedTree;this.revert=revert;/** @inheritDoc */this.type=OperationType.ACK_USER_WRITE;/** @inheritDoc */this.source=OperationSource.User;}/**\r\n     * @inheritDoc\r\n     */AckUserWrite.prototype.operationForChild=function(childName){if(!this.path.isEmpty()){assert(this.path.getFront()===childName,'operationForChild called for unrelated child.');return new AckUserWrite(this.path.popFront(),this.affectedTree,this.revert);}else if(this.affectedTree.value!=null){assert(this.affectedTree.children.isEmpty(),'affectedTree should not have overlapping affected paths.');// All child locations are affected as well; just return same operation.\nreturn this;}else{var childTree=this.affectedTree.subtree(new Path(childName));return new AckUserWrite(Path.Empty,childTree,this.revert);}};return AckUserWrite;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var emptyChildrenSingleton;/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */var EmptyChildren=function(){if(!emptyChildrenSingleton){emptyChildrenSingleton=new SortedMap(stringCompare);}return emptyChildrenSingleton;};/**\r\n * A tree with immutable elements.\r\n */var ImmutableTree=/** @class */function(){/**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */function ImmutableTree(value,children){if(children===void 0){children=EmptyChildren();}this.value=value;this.children=children;}/**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */ImmutableTree.fromObject=function(obj){var tree=ImmutableTree.Empty;each(obj,function(childPath,childSnap){tree=tree.set(new Path(childPath),childSnap);});return tree;};/**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */ImmutableTree.prototype.isEmpty=function(){return this.value===null&&this.children.isEmpty();};/**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */ImmutableTree.prototype.findRootMostMatchingPathAndValue=function(relativePath,predicate){if(this.value!=null&&predicate(this.value)){return{path:Path.Empty,value:this.value};}else{if(relativePath.isEmpty()){return null;}else{var front=relativePath.getFront();var child=this.children.get(front);if(child!==null){var childExistingPathAndValue=child.findRootMostMatchingPathAndValue(relativePath.popFront(),predicate);if(childExistingPathAndValue!=null){var fullPath=new Path(front).child(childExistingPathAndValue.path);return{path:fullPath,value:childExistingPathAndValue.value};}else{return null;}}else{return null;}}}};/**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */ImmutableTree.prototype.findRootMostValueAndPath=function(relativePath){return this.findRootMostMatchingPathAndValue(relativePath,function(){return true;});};/**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */ImmutableTree.prototype.subtree=function(relativePath){if(relativePath.isEmpty()){return this;}else{var front=relativePath.getFront();var childTree=this.children.get(front);if(childTree!==null){return childTree.subtree(relativePath.popFront());}else{return ImmutableTree.Empty;}}};/**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */ImmutableTree.prototype.set=function(relativePath,toSet){if(relativePath.isEmpty()){return new ImmutableTree(toSet,this.children);}else{var front=relativePath.getFront();var child=this.children.get(front)||ImmutableTree.Empty;var newChild=child.set(relativePath.popFront(),toSet);var newChildren=this.children.insert(front,newChild);return new ImmutableTree(this.value,newChildren);}};/**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */ImmutableTree.prototype.remove=function(relativePath){if(relativePath.isEmpty()){if(this.children.isEmpty()){return ImmutableTree.Empty;}else{return new ImmutableTree(null,this.children);}}else{var front=relativePath.getFront();var child=this.children.get(front);if(child){var newChild=child.remove(relativePath.popFront());var newChildren=void 0;if(newChild.isEmpty()){newChildren=this.children.remove(front);}else{newChildren=this.children.insert(front,newChild);}if(this.value===null&&newChildren.isEmpty()){return ImmutableTree.Empty;}else{return new ImmutableTree(this.value,newChildren);}}else{return this;}}};/**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */ImmutableTree.prototype.get=function(relativePath){if(relativePath.isEmpty()){return this.value;}else{var front=relativePath.getFront();var child=this.children.get(front);if(child){return child.get(relativePath.popFront());}else{return null;}}};/**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */ImmutableTree.prototype.setTree=function(relativePath,newTree){if(relativePath.isEmpty()){return newTree;}else{var front=relativePath.getFront();var child=this.children.get(front)||ImmutableTree.Empty;var newChild=child.setTree(relativePath.popFront(),newTree);var newChildren=void 0;if(newChild.isEmpty()){newChildren=this.children.remove(front);}else{newChildren=this.children.insert(front,newChild);}return new ImmutableTree(this.value,newChildren);}};/**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */ImmutableTree.prototype.fold=function(fn){return this.fold_(Path.Empty,fn);};/**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */ImmutableTree.prototype.fold_=function(pathSoFar,fn){var accum={};this.children.inorderTraversal(function(childKey,childTree){accum[childKey]=childTree.fold_(pathSoFar.child(childKey),fn);});return fn(pathSoFar,this.value,accum);};/**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */ImmutableTree.prototype.findOnPath=function(path,f){return this.findOnPath_(path,Path.Empty,f);};ImmutableTree.prototype.findOnPath_=function(pathToFollow,pathSoFar,f){var result=this.value?f(pathSoFar,this.value):false;if(result){return result;}else{if(pathToFollow.isEmpty()){return null;}else{var front=pathToFollow.getFront();var nextChild=this.children.get(front);if(nextChild){return nextChild.findOnPath_(pathToFollow.popFront(),pathSoFar.child(front),f);}else{return null;}}}};/**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */ImmutableTree.prototype.foreachOnPath=function(path,f){return this.foreachOnPath_(path,Path.Empty,f);};ImmutableTree.prototype.foreachOnPath_=function(pathToFollow,currentRelativePath,f){if(pathToFollow.isEmpty()){return this;}else{if(this.value){f(currentRelativePath,this.value);}var front=pathToFollow.getFront();var nextChild=this.children.get(front);if(nextChild){return nextChild.foreachOnPath_(pathToFollow.popFront(),currentRelativePath.child(front),f);}else{return ImmutableTree.Empty;}}};/**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */ImmutableTree.prototype.foreach=function(f){this.foreach_(Path.Empty,f);};ImmutableTree.prototype.foreach_=function(currentRelativePath,f){this.children.inorderTraversal(function(childName,childTree){childTree.foreach_(currentRelativePath.child(childName),f);});if(this.value){f(currentRelativePath,this.value);}};/**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */ImmutableTree.prototype.foreachChild=function(f){this.children.inorderTraversal(function(childName,childTree){if(childTree.value){f(childName,childTree.value);}});};// eslint-disable-next-line @typescript-eslint/no-explicit-any\nImmutableTree.Empty=new ImmutableTree(null);return ImmutableTree;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */var ListenComplete=/** @class */function(){function ListenComplete(source,path){this.source=source;this.path=path;/** @inheritDoc */this.type=OperationType.LISTEN_COMPLETE;}ListenComplete.prototype.operationForChild=function(childName){if(this.path.isEmpty()){return new ListenComplete(this.source,Path.Empty);}else{return new ListenComplete(this.source,this.path.popFront());}};return ListenComplete;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */var Overwrite=/** @class */function(){function Overwrite(source,path,snap){this.source=source;this.path=path;this.snap=snap;/** @inheritDoc */this.type=OperationType.OVERWRITE;}Overwrite.prototype.operationForChild=function(childName){if(this.path.isEmpty()){return new Overwrite(this.source,Path.Empty,this.snap.getImmediateChild(childName));}else{return new Overwrite(this.source,this.path.popFront(),this.snap);}};return Overwrite;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */var Merge=/** @class */function(){function Merge(/** @inheritDoc */source,/** @inheritDoc */path,/** @inheritDoc */children){this.source=source;this.path=path;this.children=children;/** @inheritDoc */this.type=OperationType.MERGE;}/**\r\n     * @inheritDoc\r\n     */Merge.prototype.operationForChild=function(childName){if(this.path.isEmpty()){var childTree=this.children.subtree(new Path(childName));if(childTree.isEmpty()){// This child is unaffected\nreturn null;}else if(childTree.value){// We have a snapshot for the child in question.  This becomes an overwrite of the child.\nreturn new Overwrite(this.source,Path.Empty,childTree.value);}else{// This is a merge at a deeper level\nreturn new Merge(this.source,Path.Empty,childTree);}}else{assert(this.path.getFront()===childName,\"Can't get a merge for a child not on the path of the operation\");return new Merge(this.source,this.path.popFront(),this.children);}};/**\r\n     * @inheritDoc\r\n     */Merge.prototype.toString=function(){return'Operation('+this.path+': '+this.source.toString()+' merge: '+this.children.toString()+')';};return Merge;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */var CacheNode=/** @class */function(){/**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */function CacheNode(node_,fullyInitialized_,filtered_){this.node_=node_;this.fullyInitialized_=fullyInitialized_;this.filtered_=filtered_;}/**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */CacheNode.prototype.isFullyInitialized=function(){return this.fullyInitialized_;};/**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */CacheNode.prototype.isFiltered=function(){return this.filtered_;};/**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */CacheNode.prototype.isCompleteForPath=function(path){if(path.isEmpty()){return this.isFullyInitialized()&&!this.filtered_;}var childKey=path.getFront();return this.isCompleteForChild(childKey);};/**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */CacheNode.prototype.isCompleteForChild=function(key){return this.isFullyInitialized()&&!this.filtered_||this.node_.hasChild(key);};/**\r\n     * @return {!Node}\r\n     */CacheNode.prototype.getNode=function(){return this.node_;};return CacheNode;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */var ViewCache=/** @class */function(){/**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */function ViewCache(eventCache_,serverCache_){this.eventCache_=eventCache_;this.serverCache_=serverCache_;}/**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */ViewCache.prototype.updateEventSnap=function(eventSnap,complete,filtered){return new ViewCache(new CacheNode(eventSnap,complete,filtered),this.serverCache_);};/**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */ViewCache.prototype.updateServerSnap=function(serverSnap,complete,filtered){return new ViewCache(this.eventCache_,new CacheNode(serverSnap,complete,filtered));};/**\r\n     * @return {!CacheNode}\r\n     */ViewCache.prototype.getEventCache=function(){return this.eventCache_;};/**\r\n     * @return {?Node}\r\n     */ViewCache.prototype.getCompleteEventSnap=function(){return this.eventCache_.isFullyInitialized()?this.eventCache_.getNode():null;};/**\r\n     * @return {!CacheNode}\r\n     */ViewCache.prototype.getServerCache=function(){return this.serverCache_;};/**\r\n     * @return {?Node}\r\n     */ViewCache.prototype.getCompleteServerSnap=function(){return this.serverCache_.isFullyInitialized()?this.serverCache_.getNode():null;};/**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */ViewCache.Empty=new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE,/*fullyInitialized=*/false,/*filtered=*/false),new CacheNode(ChildrenNode.EMPTY_NODE,/*fullyInitialized=*/false,/*filtered=*/false));return ViewCache;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */var Change=/** @class */function(){function Change(type,snapshotNode,childName,oldSnap,prevName){this.type=type;this.snapshotNode=snapshotNode;this.childName=childName;this.oldSnap=oldSnap;this.prevName=prevName;}/**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */Change.valueChange=function(snapshot){return new Change(Change.VALUE,snapshot);};/**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */Change.childAddedChange=function(childKey,snapshot){return new Change(Change.CHILD_ADDED,snapshot,childKey);};/**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */Change.childRemovedChange=function(childKey,snapshot){return new Change(Change.CHILD_REMOVED,snapshot,childKey);};/**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */Change.childChangedChange=function(childKey,newSnapshot,oldSnapshot){return new Change(Change.CHILD_CHANGED,newSnapshot,childKey,oldSnapshot);};/**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */Change.childMovedChange=function(childKey,snapshot){return new Change(Change.CHILD_MOVED,snapshot,childKey);};//event types\n/** Event type for a child added */Change.CHILD_ADDED='child_added';/** Event type for a child removed */Change.CHILD_REMOVED='child_removed';/** Event type for a child changed */Change.CHILD_CHANGED='child_changed';/** Event type for a child moved */Change.CHILD_MOVED='child_moved';/** Event type for a value change */Change.VALUE='value';return Change;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */var IndexedFilter=/** @class */function(){function IndexedFilter(index_){this.index_=index_;}IndexedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){assert(snap.isIndexed(this.index_),'A node must be indexed if only a child is updated');var oldChild=snap.getImmediateChild(key);// Check if anything actually changed.\nif(oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))){// There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n// In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n// to avoid treating these cases as \"nothing changed.\"\nif(oldChild.isEmpty()===newChild.isEmpty()){// Nothing changed.\n// This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n//assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\nreturn snap;}}if(optChangeAccumulator!=null){if(newChild.isEmpty()){if(snap.hasChild(key)){optChangeAccumulator.trackChildChange(Change.childRemovedChange(key,oldChild));}else{assert(snap.isLeafNode(),'A child remove without an old child only makes sense on a leaf node');}}else if(oldChild.isEmpty()){optChangeAccumulator.trackChildChange(Change.childAddedChange(key,newChild));}else{optChangeAccumulator.trackChildChange(Change.childChangedChange(key,newChild,oldChild));}}if(snap.isLeafNode()&&newChild.isEmpty()){return snap;}else{// Make sure the node is indexed\nreturn snap.updateImmediateChild(key,newChild).withIndex(this.index_);}};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){if(optChangeAccumulator!=null){if(!oldSnap.isLeafNode()){oldSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(!newSnap.hasChild(key)){optChangeAccumulator.trackChildChange(Change.childRemovedChange(key,childNode));}});}if(!newSnap.isLeafNode()){newSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(oldSnap.hasChild(key)){var oldChild=oldSnap.getImmediateChild(key);if(!oldChild.equals(childNode)){optChangeAccumulator.trackChildChange(Change.childChangedChange(key,childNode,oldChild));}}else{optChangeAccumulator.trackChildChange(Change.childAddedChange(key,childNode));}});}}return newSnap.withIndex(this.index_);};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.updatePriority=function(oldSnap,newPriority){if(oldSnap.isEmpty()){return ChildrenNode.EMPTY_NODE;}else{return oldSnap.updatePriority(newPriority);}};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.filtersNodes=function(){return false;};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.getIndexedFilter=function(){return this;};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.getIndex=function(){return this.index_;};return IndexedFilter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ChildChangeAccumulator=/** @class */function(){function ChildChangeAccumulator(){this.changeMap=new Map();}ChildChangeAccumulator.prototype.trackChildChange=function(change){var type=change.type;var childKey=change.childName;assert(type===Change.CHILD_ADDED||type===Change.CHILD_CHANGED||type===Change.CHILD_REMOVED,'Only child changes supported for tracking');assert(childKey!=='.priority','Only non-priority child changes can be tracked.');var oldChange=this.changeMap.get(childKey);if(oldChange){var oldType=oldChange.type;if(type===Change.CHILD_ADDED&&oldType===Change.CHILD_REMOVED){this.changeMap.set(childKey,Change.childChangedChange(childKey,change.snapshotNode,oldChange.snapshotNode));}else if(type===Change.CHILD_REMOVED&&oldType===Change.CHILD_ADDED){this.changeMap.delete(childKey);}else if(type===Change.CHILD_REMOVED&&oldType===Change.CHILD_CHANGED){this.changeMap.set(childKey,Change.childRemovedChange(childKey,oldChange.oldSnap));}else if(type===Change.CHILD_CHANGED&&oldType===Change.CHILD_ADDED){this.changeMap.set(childKey,Change.childAddedChange(childKey,change.snapshotNode));}else if(type===Change.CHILD_CHANGED&&oldType===Change.CHILD_CHANGED){this.changeMap.set(childKey,Change.childChangedChange(childKey,change.snapshotNode,oldChange.oldSnap));}else{throw assertionError('Illegal combination of changes: '+change+' occurred after '+oldChange);}}else{this.changeMap.set(childKey,change);}};ChildChangeAccumulator.prototype.getChanges=function(){return Array.from(this.changeMap.values());};return ChildChangeAccumulator;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nvar NoCompleteChildSource_=/** @class */function(){function NoCompleteChildSource_(){}/**\r\n     * @inheritDoc\r\n     */NoCompleteChildSource_.prototype.getCompleteChild=function(childKey){return null;};/**\r\n     * @inheritDoc\r\n     */NoCompleteChildSource_.prototype.getChildAfterChild=function(index,child,reverse){return null;};return NoCompleteChildSource_;}();/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */var NO_COMPLETE_CHILD_SOURCE=new NoCompleteChildSource_();/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */var WriteTreeCompleteChildSource=/** @class */function(){/**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */function WriteTreeCompleteChildSource(writes_,viewCache_,optCompleteServerCache_){if(optCompleteServerCache_===void 0){optCompleteServerCache_=null;}this.writes_=writes_;this.viewCache_=viewCache_;this.optCompleteServerCache_=optCompleteServerCache_;}/**\r\n     * @inheritDoc\r\n     */WriteTreeCompleteChildSource.prototype.getCompleteChild=function(childKey){var node=this.viewCache_.getEventCache();if(node.isCompleteForChild(childKey)){return node.getNode().getImmediateChild(childKey);}else{var serverNode=this.optCompleteServerCache_!=null?new CacheNode(this.optCompleteServerCache_,true,false):this.viewCache_.getServerCache();return this.writes_.calcCompleteChild(childKey,serverNode);}};/**\r\n     * @inheritDoc\r\n     */WriteTreeCompleteChildSource.prototype.getChildAfterChild=function(index,child,reverse){var completeServerData=this.optCompleteServerCache_!=null?this.optCompleteServerCache_:this.viewCache_.getCompleteServerSnap();var nodes=this.writes_.calcIndexedSlice(completeServerData,child,1,reverse,index);if(nodes.length===0){return null;}else{return nodes[0];}};return WriteTreeCompleteChildSource;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @constructor\r\n * @struct\r\n */var ProcessorResult=/** @class */function(){/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */function ProcessorResult(viewCache,changes){this.viewCache=viewCache;this.changes=changes;}return ProcessorResult;}();/**\r\n * @constructor\r\n */var ViewProcessor=/** @class */function(){/**\r\n     * @param {!NodeFilter} filter_\r\n     */function ViewProcessor(filter_){this.filter_=filter_;}/**\r\n     * @param {!ViewCache} viewCache\r\n     */ViewProcessor.prototype.assertIndexed=function(viewCache){assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()),'Event snap not indexed');assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()),'Server snap not indexed');};/**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */ViewProcessor.prototype.applyOperation=function(oldViewCache,operation,writesCache,completeCache){var accumulator=new ChildChangeAccumulator();var newViewCache,filterServerNode;if(operation.type===OperationType.OVERWRITE){var overwrite=operation;if(overwrite.source.fromUser){newViewCache=this.applyUserOverwrite_(oldViewCache,overwrite.path,overwrite.snap,writesCache,completeCache,accumulator);}else{assert(overwrite.source.fromServer,'Unknown source.');// We filter the node if it's a tagged update or the node has been previously filtered  and the\n// update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n// again\nfilterServerNode=overwrite.source.tagged||oldViewCache.getServerCache().isFiltered()&&!overwrite.path.isEmpty();newViewCache=this.applyServerOverwrite_(oldViewCache,overwrite.path,overwrite.snap,writesCache,completeCache,filterServerNode,accumulator);}}else if(operation.type===OperationType.MERGE){var merge=operation;if(merge.source.fromUser){newViewCache=this.applyUserMerge_(oldViewCache,merge.path,merge.children,writesCache,completeCache,accumulator);}else{assert(merge.source.fromServer,'Unknown source.');// We filter the node if it's a tagged update or the node has been previously filtered\nfilterServerNode=merge.source.tagged||oldViewCache.getServerCache().isFiltered();newViewCache=this.applyServerMerge_(oldViewCache,merge.path,merge.children,writesCache,completeCache,filterServerNode,accumulator);}}else if(operation.type===OperationType.ACK_USER_WRITE){var ackUserWrite=operation;if(!ackUserWrite.revert){newViewCache=this.ackUserWrite_(oldViewCache,ackUserWrite.path,ackUserWrite.affectedTree,writesCache,completeCache,accumulator);}else{newViewCache=this.revertUserWrite_(oldViewCache,ackUserWrite.path,writesCache,completeCache,accumulator);}}else if(operation.type===OperationType.LISTEN_COMPLETE){newViewCache=this.listenComplete_(oldViewCache,operation.path,writesCache,accumulator);}else{throw assertionError('Unknown operation type: '+operation.type);}var changes=accumulator.getChanges();ViewProcessor.maybeAddValueEvent_(oldViewCache,newViewCache,changes);return new ProcessorResult(newViewCache,changes);};/**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */ViewProcessor.maybeAddValueEvent_=function(oldViewCache,newViewCache,accumulator){var eventSnap=newViewCache.getEventCache();if(eventSnap.isFullyInitialized()){var isLeafOrEmpty=eventSnap.getNode().isLeafNode()||eventSnap.getNode().isEmpty();var oldCompleteSnap=oldViewCache.getCompleteEventSnap();if(accumulator.length>0||!oldViewCache.getEventCache().isFullyInitialized()||isLeafOrEmpty&&!eventSnap.getNode().equals(/** @type {!Node} */oldCompleteSnap)||!eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())){accumulator.push(Change.valueChange(/** @type {!Node} */newViewCache.getCompleteEventSnap()));}}};/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.generateEventCacheAfterServerEvent_=function(viewCache,changePath,writesCache,source,accumulator){var oldEventSnap=viewCache.getEventCache();if(writesCache.shadowingWrite(changePath)!=null){// we have a shadowing write, ignore changes\nreturn viewCache;}else{var newEventCache=void 0,serverNode=void 0;if(changePath.isEmpty()){// TODO: figure out how this plays with \"sliding ack windows\"\nassert(viewCache.getServerCache().isFullyInitialized(),'If change path is empty, we must have complete server data');if(viewCache.getServerCache().isFiltered()){// We need to special case this, because we need to only apply writes to complete children, or\n// we might end up raising events for incomplete children. If the server data is filtered deep\n// writes cannot be guaranteed to be complete\nvar serverCache=viewCache.getCompleteServerSnap();var completeChildren=serverCache instanceof ChildrenNode?serverCache:ChildrenNode.EMPTY_NODE;var completeEventChildren=writesCache.calcCompleteEventChildren(completeChildren);newEventCache=this.filter_.updateFullNode(viewCache.getEventCache().getNode(),completeEventChildren,accumulator);}else{var completeNode=writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());newEventCache=this.filter_.updateFullNode(viewCache.getEventCache().getNode(),completeNode,accumulator);}}else{var childKey=changePath.getFront();if(childKey==='.priority'){assert(changePath.getLength()===1,\"Can't have a priority with additional path components\");var oldEventNode=oldEventSnap.getNode();serverNode=viewCache.getServerCache().getNode();// we might have overwrites for this priority\nvar updatedPriority=writesCache.calcEventCacheAfterServerOverwrite(changePath,oldEventNode,serverNode);if(updatedPriority!=null){newEventCache=this.filter_.updatePriority(oldEventNode,updatedPriority);}else{// priority didn't change, keep old node\nnewEventCache=oldEventSnap.getNode();}}else{var childChangePath=changePath.popFront();// update child\nvar newEventChild=void 0;if(oldEventSnap.isCompleteForChild(childKey)){serverNode=viewCache.getServerCache().getNode();var eventChildUpdate=writesCache.calcEventCacheAfterServerOverwrite(changePath,oldEventSnap.getNode(),serverNode);if(eventChildUpdate!=null){newEventChild=oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath,eventChildUpdate);}else{// Nothing changed, just keep the old child\nnewEventChild=oldEventSnap.getNode().getImmediateChild(childKey);}}else{newEventChild=writesCache.calcCompleteChild(childKey,viewCache.getServerCache());}if(newEventChild!=null){newEventCache=this.filter_.updateChild(oldEventSnap.getNode(),childKey,newEventChild,childChangePath,source,accumulator);}else{// no complete child available or no change\nnewEventCache=oldEventSnap.getNode();}}}return viewCache.updateEventSnap(newEventCache,oldEventSnap.isFullyInitialized()||changePath.isEmpty(),this.filter_.filtersNodes());}};/**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.applyServerOverwrite_=function(oldViewCache,changePath,changedSnap,writesCache,completeCache,filterServerNode,accumulator){var oldServerSnap=oldViewCache.getServerCache();var newServerCache;var serverFilter=filterServerNode?this.filter_:this.filter_.getIndexedFilter();if(changePath.isEmpty()){newServerCache=serverFilter.updateFullNode(oldServerSnap.getNode(),changedSnap,null);}else if(serverFilter.filtersNodes()&&!oldServerSnap.isFiltered()){// we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\nvar newServerNode=oldServerSnap.getNode().updateChild(changePath,changedSnap);newServerCache=serverFilter.updateFullNode(oldServerSnap.getNode(),newServerNode,null);}else{var childKey=changePath.getFront();if(!oldServerSnap.isCompleteForPath(changePath)&&changePath.getLength()>1){// We don't update incomplete nodes with updates intended for other listeners\nreturn oldViewCache;}var childChangePath=changePath.popFront();var childNode=oldServerSnap.getNode().getImmediateChild(childKey);var newChildNode=childNode.updateChild(childChangePath,changedSnap);if(childKey==='.priority'){newServerCache=serverFilter.updatePriority(oldServerSnap.getNode(),newChildNode);}else{newServerCache=serverFilter.updateChild(oldServerSnap.getNode(),childKey,newChildNode,childChangePath,NO_COMPLETE_CHILD_SOURCE,null);}}var newViewCache=oldViewCache.updateServerSnap(newServerCache,oldServerSnap.isFullyInitialized()||changePath.isEmpty(),serverFilter.filtersNodes());var source=new WriteTreeCompleteChildSource(writesCache,newViewCache,completeCache);return this.generateEventCacheAfterServerEvent_(newViewCache,changePath,writesCache,source,accumulator);};/**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.applyUserOverwrite_=function(oldViewCache,changePath,changedSnap,writesCache,completeCache,accumulator){var oldEventSnap=oldViewCache.getEventCache();var newViewCache,newEventCache;var source=new WriteTreeCompleteChildSource(writesCache,oldViewCache,completeCache);if(changePath.isEmpty()){newEventCache=this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(),changedSnap,accumulator);newViewCache=oldViewCache.updateEventSnap(newEventCache,true,this.filter_.filtersNodes());}else{var childKey=changePath.getFront();if(childKey==='.priority'){newEventCache=this.filter_.updatePriority(oldViewCache.getEventCache().getNode(),changedSnap);newViewCache=oldViewCache.updateEventSnap(newEventCache,oldEventSnap.isFullyInitialized(),oldEventSnap.isFiltered());}else{var childChangePath=changePath.popFront();var oldChild=oldEventSnap.getNode().getImmediateChild(childKey);var newChild=void 0;if(childChangePath.isEmpty()){// Child overwrite, we can replace the child\nnewChild=changedSnap;}else{var childNode=source.getCompleteChild(childKey);if(childNode!=null){if(childChangePath.getBack()==='.priority'&&childNode.getChild(childChangePath.parent()).isEmpty()){// This is a priority update on an empty node. If this node exists on the server, the\n// server will send down the priority in the update, so ignore for now\nnewChild=childNode;}else{newChild=childNode.updateChild(childChangePath,changedSnap);}}else{// There is no complete child node available\nnewChild=ChildrenNode.EMPTY_NODE;}}if(!oldChild.equals(newChild)){var newEventSnap=this.filter_.updateChild(oldEventSnap.getNode(),childKey,newChild,childChangePath,source,accumulator);newViewCache=oldViewCache.updateEventSnap(newEventSnap,oldEventSnap.isFullyInitialized(),this.filter_.filtersNodes());}else{newViewCache=oldViewCache;}}}return newViewCache;};/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */ViewProcessor.cacheHasChild_=function(viewCache,childKey){return viewCache.getEventCache().isCompleteForChild(childKey);};/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.applyUserMerge_=function(viewCache,path,changedChildren,writesCache,serverCache,accumulator){var _this=this;// HACK: In the case of a limit query, there may be some changes that bump things out of the\n// window leaving room for new items.  It's important we process these changes first, so we\n// iterate the changes twice, first processing any that affect items currently in view.\n// TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n// and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n// not the other.\nvar curViewCache=viewCache;changedChildren.foreach(function(relativePath,childNode){var writePath=path.child(relativePath);if(ViewProcessor.cacheHasChild_(viewCache,writePath.getFront())){curViewCache=_this.applyUserOverwrite_(curViewCache,writePath,childNode,writesCache,serverCache,accumulator);}});changedChildren.foreach(function(relativePath,childNode){var writePath=path.child(relativePath);if(!ViewProcessor.cacheHasChild_(viewCache,writePath.getFront())){curViewCache=_this.applyUserOverwrite_(curViewCache,writePath,childNode,writesCache,serverCache,accumulator);}});return curViewCache;};/**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */ViewProcessor.prototype.applyMerge_=function(node,merge){merge.foreach(function(relativePath,childNode){node=node.updateChild(relativePath,childNode);});return node;};/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.applyServerMerge_=function(viewCache,path,changedChildren,writesCache,serverCache,filterServerNode,accumulator){var _this=this;// If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n// wait for the complete data update coming soon.\nif(viewCache.getServerCache().getNode().isEmpty()&&!viewCache.getServerCache().isFullyInitialized()){return viewCache;}// HACK: In the case of a limit query, there may be some changes that bump things out of the\n// window leaving room for new items.  It's important we process these changes first, so we\n// iterate the changes twice, first processing any that affect items currently in view.\n// TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n// and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n// not the other.\nvar curViewCache=viewCache;var viewMergeTree;if(path.isEmpty()){viewMergeTree=changedChildren;}else{viewMergeTree=ImmutableTree.Empty.setTree(path,changedChildren);}var serverNode=viewCache.getServerCache().getNode();viewMergeTree.children.inorderTraversal(function(childKey,childTree){if(serverNode.hasChild(childKey)){var serverChild=viewCache.getServerCache().getNode().getImmediateChild(childKey);var newChild=_this.applyMerge_(serverChild,childTree);curViewCache=_this.applyServerOverwrite_(curViewCache,new Path(childKey),newChild,writesCache,serverCache,filterServerNode,accumulator);}});viewMergeTree.children.inorderTraversal(function(childKey,childMergeTree){var isUnknownDeepMerge=!viewCache.getServerCache().isCompleteForChild(childKey)&&childMergeTree.value==null;if(!serverNode.hasChild(childKey)&&!isUnknownDeepMerge){var serverChild=viewCache.getServerCache().getNode().getImmediateChild(childKey);var newChild=_this.applyMerge_(serverChild,childMergeTree);curViewCache=_this.applyServerOverwrite_(curViewCache,new Path(childKey),newChild,writesCache,serverCache,filterServerNode,accumulator);}});return curViewCache;};/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.ackUserWrite_=function(viewCache,ackPath,affectedTree,writesCache,completeCache,accumulator){if(writesCache.shadowingWrite(ackPath)!=null){return viewCache;}// Only filter server node if it is currently filtered\nvar filterServerNode=viewCache.getServerCache().isFiltered();// Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n// now that it won't be shadowed.\nvar serverCache=viewCache.getServerCache();if(affectedTree.value!=null){// This is an overwrite.\nif(ackPath.isEmpty()&&serverCache.isFullyInitialized()||serverCache.isCompleteForPath(ackPath)){return this.applyServerOverwrite_(viewCache,ackPath,serverCache.getNode().getChild(ackPath),writesCache,completeCache,filterServerNode,accumulator);}else if(ackPath.isEmpty()){// This is a goofy edge case where we are acking data at this location but don't have full data.  We\n// should just re-apply whatever we have in our cache as a merge.\nvar changedChildren_1=ImmutableTree.Empty;serverCache.getNode().forEachChild(KEY_INDEX,function(name,node){changedChildren_1=changedChildren_1.set(new Path(name),node);});return this.applyServerMerge_(viewCache,ackPath,changedChildren_1,writesCache,completeCache,filterServerNode,accumulator);}else{return viewCache;}}else{// This is a merge.\nvar changedChildren_2=ImmutableTree.Empty;affectedTree.foreach(function(mergePath,value){var serverCachePath=ackPath.child(mergePath);if(serverCache.isCompleteForPath(serverCachePath)){changedChildren_2=changedChildren_2.set(mergePath,serverCache.getNode().getChild(serverCachePath));}});return this.applyServerMerge_(viewCache,ackPath,changedChildren_2,writesCache,completeCache,filterServerNode,accumulator);}};/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.listenComplete_=function(viewCache,path,writesCache,accumulator){var oldServerNode=viewCache.getServerCache();var newViewCache=viewCache.updateServerSnap(oldServerNode.getNode(),oldServerNode.isFullyInitialized()||path.isEmpty(),oldServerNode.isFiltered());return this.generateEventCacheAfterServerEvent_(newViewCache,path,writesCache,NO_COMPLETE_CHILD_SOURCE,accumulator);};/**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */ViewProcessor.prototype.revertUserWrite_=function(viewCache,path,writesCache,completeServerCache,accumulator){var complete;if(writesCache.shadowingWrite(path)!=null){return viewCache;}else{var source=new WriteTreeCompleteChildSource(writesCache,viewCache,completeServerCache);var oldEventCache=viewCache.getEventCache().getNode();var newEventCache=void 0;if(path.isEmpty()||path.getFront()==='.priority'){var newNode=void 0;if(viewCache.getServerCache().isFullyInitialized()){newNode=writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());}else{var serverChildren=viewCache.getServerCache().getNode();assert(serverChildren instanceof ChildrenNode,'serverChildren would be complete if leaf node');newNode=writesCache.calcCompleteEventChildren(serverChildren);}newNode=newNode;newEventCache=this.filter_.updateFullNode(oldEventCache,newNode,accumulator);}else{var childKey=path.getFront();var newChild=writesCache.calcCompleteChild(childKey,viewCache.getServerCache());if(newChild==null&&viewCache.getServerCache().isCompleteForChild(childKey)){newChild=oldEventCache.getImmediateChild(childKey);}if(newChild!=null){newEventCache=this.filter_.updateChild(oldEventCache,childKey,newChild,path.popFront(),source,accumulator);}else if(viewCache.getEventCache().getNode().hasChild(childKey)){// No complete child available, delete the existing one, if any\nnewEventCache=this.filter_.updateChild(oldEventCache,childKey,ChildrenNode.EMPTY_NODE,path.popFront(),source,accumulator);}else{newEventCache=oldEventCache;}if(newEventCache.isEmpty()&&viewCache.getServerCache().isFullyInitialized()){// We might have reverted all child writes. Maybe the old event was a leaf node\ncomplete=writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());if(complete.isLeafNode()){newEventCache=this.filter_.updateFullNode(newEventCache,complete,accumulator);}}}complete=viewCache.getServerCache().isFullyInitialized()||writesCache.shadowingWrite(Path.Empty)!=null;return viewCache.updateEventSnap(newEventCache,complete,this.filter_.filtersNodes());}};return ViewProcessor;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */var EventGenerator=/** @class */function(){/**\r\n     *\r\n     * @param {!Query} query_\r\n     */function EventGenerator(query_){this.query_=query_;/**\r\n         * @private\r\n         * @type {!Index}\r\n         */this.index_=this.query_.getQueryParams().getIndex();}/**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */EventGenerator.prototype.generateEventsForChanges=function(changes,eventCache,eventRegistrations){var _this=this;var events=[];var moves=[];changes.forEach(function(change){if(change.type===Change.CHILD_CHANGED&&_this.index_.indexedValueChanged(change.oldSnap,change.snapshotNode)){moves.push(Change.childMovedChange(change.childName,change.snapshotNode));}});this.generateEventsForType_(events,Change.CHILD_REMOVED,changes,eventRegistrations,eventCache);this.generateEventsForType_(events,Change.CHILD_ADDED,changes,eventRegistrations,eventCache);this.generateEventsForType_(events,Change.CHILD_MOVED,moves,eventRegistrations,eventCache);this.generateEventsForType_(events,Change.CHILD_CHANGED,changes,eventRegistrations,eventCache);this.generateEventsForType_(events,Change.VALUE,changes,eventRegistrations,eventCache);return events;};/**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */EventGenerator.prototype.generateEventsForType_=function(events,eventType,changes,registrations,eventCache){var _this=this;var filteredChanges=changes.filter(function(change){return change.type===eventType;});filteredChanges.sort(this.compareChanges_.bind(this));filteredChanges.forEach(function(change){var materializedChange=_this.materializeSingleChange_(change,eventCache);registrations.forEach(function(registration){if(registration.respondsTo(change.type)){events.push(registration.createEvent(materializedChange,_this.query_));}});});};/**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */EventGenerator.prototype.materializeSingleChange_=function(change,eventCache){if(change.type==='value'||change.type==='child_removed'){return change;}else{change.prevName=eventCache.getPredecessorChildName(/** @type {!string} */change.childName,change.snapshotNode,this.index_);return change;}};/**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */EventGenerator.prototype.compareChanges_=function(a,b){if(a.childName==null||b.childName==null){throw assertionError('Should only compare child_ events.');}var aWrapped=new NamedNode(a.childName,a.snapshotNode);var bWrapped=new NamedNode(b.childName,b.snapshotNode);return this.index_.compare(aWrapped,bWrapped);};return EventGenerator;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */var View=/** @class */function(){/**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */function View(query_,initialViewCache){this.query_=query_;this.eventRegistrations_=[];var params=this.query_.getQueryParams();var indexFilter=new IndexedFilter(params.getIndex());var filter=params.getNodeFilter();/**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */this.processor_=new ViewProcessor(filter);var initialServerCache=initialViewCache.getServerCache();var initialEventCache=initialViewCache.getEventCache();// Don't filter server node with other filter than index, wait for tagged listen\nvar serverSnap=indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE,initialServerCache.getNode(),null);var eventSnap=filter.updateFullNode(ChildrenNode.EMPTY_NODE,initialEventCache.getNode(),null);var newServerCache=new CacheNode(serverSnap,initialServerCache.isFullyInitialized(),indexFilter.filtersNodes());var newEventCache=new CacheNode(eventSnap,initialEventCache.isFullyInitialized(),filter.filtersNodes());/**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */this.viewCache_=new ViewCache(newEventCache,newServerCache);/**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */this.eventGenerator_=new EventGenerator(this.query_);}/**\r\n     * @return {!Query}\r\n     */View.prototype.getQuery=function(){return this.query_;};/**\r\n     * @return {?Node}\r\n     */View.prototype.getServerCache=function(){return this.viewCache_.getServerCache().getNode();};/**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */View.prototype.getCompleteServerCache=function(path){var cache=this.viewCache_.getCompleteServerSnap();if(cache){// If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n// we need to see if it contains the child we're interested in.\nif(this.query_.getQueryParams().loadsAllData()||!path.isEmpty()&&!cache.getImmediateChild(path.getFront()).isEmpty()){return cache.getChild(path);}}return null;};/**\r\n     * @return {boolean}\r\n     */View.prototype.isEmpty=function(){return this.eventRegistrations_.length===0;};/**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */View.prototype.addEventRegistration=function(eventRegistration){this.eventRegistrations_.push(eventRegistration);};/**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */View.prototype.removeEventRegistration=function(eventRegistration,cancelError){var cancelEvents=[];if(cancelError){assert(eventRegistration==null,'A cancel should cancel all event registrations.');var path_1=this.query_.path;this.eventRegistrations_.forEach(function(registration){cancelError/** @type {!Error} */=cancelError;var maybeEvent=registration.createCancelEvent(cancelError,path_1);if(maybeEvent){cancelEvents.push(maybeEvent);}});}if(eventRegistration){var remaining=[];for(var i=0;i<this.eventRegistrations_.length;++i){var existing=this.eventRegistrations_[i];if(!existing.matches(eventRegistration)){remaining.push(existing);}else if(eventRegistration.hasAnyCallback()){// We're removing just this one\nremaining=remaining.concat(this.eventRegistrations_.slice(i+1));break;}}this.eventRegistrations_=remaining;}else{this.eventRegistrations_=[];}return cancelEvents;};/**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */View.prototype.applyOperation=function(operation,writesCache,completeServerCache){if(operation.type===OperationType.MERGE&&operation.source.queryId!==null){assert(this.viewCache_.getCompleteServerSnap(),'We should always have a full cache before handling merges');assert(this.viewCache_.getCompleteEventSnap(),'Missing event cache, even though we have a server cache');}var oldViewCache=this.viewCache_;var result=this.processor_.applyOperation(oldViewCache,operation,writesCache,completeServerCache);this.processor_.assertIndexed(result.viewCache);assert(result.viewCache.getServerCache().isFullyInitialized()||!oldViewCache.getServerCache().isFullyInitialized(),'Once a server snap is complete, it should never go back');this.viewCache_=result.viewCache;return this.generateEventsForChanges_(result.changes,result.viewCache.getEventCache().getNode(),null);};/**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */View.prototype.getInitialEvents=function(registration){var eventSnap=this.viewCache_.getEventCache();var initialChanges=[];if(!eventSnap.getNode().isLeafNode()){var eventNode=eventSnap.getNode();eventNode.forEachChild(PRIORITY_INDEX,function(key,childNode){initialChanges.push(Change.childAddedChange(key,childNode));});}if(eventSnap.isFullyInitialized()){initialChanges.push(Change.valueChange(eventSnap.getNode()));}return this.generateEventsForChanges_(initialChanges,eventSnap.getNode(),registration);};/**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */View.prototype.generateEventsForChanges_=function(changes,eventCache,eventRegistration){var registrations=eventRegistration?[eventRegistration]:this.eventRegistrations_;return this.eventGenerator_.generateEventsForChanges(changes,eventCache,registrations);};return View;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __referenceConstructor$1;/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */var SyncPoint=/** @class */function(){function SyncPoint(){/**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */this.views=new Map();}Object.defineProperty(SyncPoint,\"__referenceConstructor\",{get:function(){assert(__referenceConstructor$1,'Reference.ts has not been loaded');return __referenceConstructor$1;},set:function(val){assert(!__referenceConstructor$1,'__referenceConstructor has already been defined');__referenceConstructor$1=val;},enumerable:false,configurable:true});SyncPoint.prototype.isEmpty=function(){return this.views.size===0;};SyncPoint.prototype.applyOperation=function(operation,writesCache,optCompleteServerCache){var e_1,_a;var queryId=operation.source.queryId;if(queryId!==null){var view=this.views.get(queryId);assert(view!=null,'SyncTree gave us an op for an invalid query.');return view.applyOperation(operation,writesCache,optCompleteServerCache);}else{var events=[];try{for(var _b=__values(this.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;events=events.concat(view.applyOperation(operation,writesCache,optCompleteServerCache));}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return events;}};/**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */SyncPoint.prototype.addEventRegistration=function(query,eventRegistration,writesCache,serverCache,serverCacheComplete){var queryId=query.queryIdentifier();var view=this.views.get(queryId);if(!view){// TODO: make writesCache take flag for complete server node\nvar eventCache=writesCache.calcCompleteEventCache(serverCacheComplete?serverCache:null);var eventCacheComplete=false;if(eventCache){eventCacheComplete=true;}else if(serverCache instanceof ChildrenNode){eventCache=writesCache.calcCompleteEventChildren(serverCache);eventCacheComplete=false;}else{eventCache=ChildrenNode.EMPTY_NODE;eventCacheComplete=false;}var viewCache=new ViewCache(new CacheNode(/** @type {!Node} */eventCache,eventCacheComplete,false),new CacheNode(/** @type {!Node} */serverCache,serverCacheComplete,false));view=new View(query,viewCache);this.views.set(queryId,view);}// This is guaranteed to exist now, we just created anything that was missing\nview.addEventRegistration(eventRegistration);return view.getInitialEvents(eventRegistration);};/**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */SyncPoint.prototype.removeEventRegistration=function(query,eventRegistration,cancelError){var e_2,_a;var queryId=query.queryIdentifier();var removed=[];var cancelEvents=[];var hadCompleteView=this.hasCompleteView();if(queryId==='default'){try{// When you do ref.off(...), we search all views for the registration to remove.\nfor(var _b=__values(this.views.entries()),_c=_b.next();!_c.done;_c=_b.next()){var _d=__read(_c.value,2),viewQueryId=_d[0],view=_d[1];cancelEvents=cancelEvents.concat(view.removeEventRegistration(eventRegistration,cancelError));if(view.isEmpty()){this.views.delete(viewQueryId);// We'll deal with complete views later.\nif(!view.getQuery().getQueryParams().loadsAllData()){removed.push(view.getQuery());}}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_2)throw e_2.error;}}}else{// remove the callback from the specific view.\nvar view=this.views.get(queryId);if(view){cancelEvents=cancelEvents.concat(view.removeEventRegistration(eventRegistration,cancelError));if(view.isEmpty()){this.views.delete(queryId);// We'll deal with complete views later.\nif(!view.getQuery().getQueryParams().loadsAllData()){removed.push(view.getQuery());}}}}if(hadCompleteView&&!this.hasCompleteView()){// We removed our last complete view.\nremoved.push(new SyncPoint.__referenceConstructor(query.repo,query.path));}return{removed:removed,events:cancelEvents};};SyncPoint.prototype.getQueryViews=function(){var e_3,_a;var result=[];try{for(var _b=__values(this.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;if(!view.getQuery().getQueryParams().loadsAllData()){result.push(view);}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_3)throw e_3.error;}}return result;};/**\r\n     * @param path The path to the desired complete snapshot\r\n     * @return A complete cache, if it exists\r\n     */SyncPoint.prototype.getCompleteServerCache=function(path){var e_4,_a;var serverCache=null;try{for(var _b=__values(this.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;serverCache=serverCache||view.getCompleteServerCache(path);}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_4)throw e_4.error;}}return serverCache;};SyncPoint.prototype.viewForQuery=function(query){var params=query.getQueryParams();if(params.loadsAllData()){return this.getCompleteView();}else{var queryId=query.queryIdentifier();return this.views.get(queryId);}};SyncPoint.prototype.viewExistsForQuery=function(query){return this.viewForQuery(query)!=null;};SyncPoint.prototype.hasCompleteView=function(){return this.getCompleteView()!=null;};SyncPoint.prototype.getCompleteView=function(){var e_5,_a;try{for(var _b=__values(this.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;if(view.getQuery().getQueryParams().loadsAllData()){return view;}}}catch(e_5_1){e_5={error:e_5_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_5)throw e_5.error;}}return null;};return SyncPoint;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */var CompoundWrite=/** @class */function(){function CompoundWrite(writeTree_){this.writeTree_=writeTree_;}CompoundWrite.prototype.addWrite=function(path,node){if(path.isEmpty()){return new CompoundWrite(new ImmutableTree(node));}else{var rootmost=this.writeTree_.findRootMostValueAndPath(path);if(rootmost!=null){var rootMostPath=rootmost.path;var value=rootmost.value;var relativePath=Path.relativePath(rootMostPath,path);value=value.updateChild(relativePath,node);return new CompoundWrite(this.writeTree_.set(rootMostPath,value));}else{var subtree=new ImmutableTree(node);var newWriteTree=this.writeTree_.setTree(path,subtree);return new CompoundWrite(newWriteTree);}}};CompoundWrite.prototype.addWrites=function(path,updates){var newWrite=this;each(updates,function(childKey,node){newWrite=newWrite.addWrite(path.child(childKey),node);});return newWrite;};/**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */CompoundWrite.prototype.removeWrite=function(path){if(path.isEmpty()){return CompoundWrite.Empty;}else{var newWriteTree=this.writeTree_.setTree(path,ImmutableTree.Empty);return new CompoundWrite(newWriteTree);}};/**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param path The path to check for\r\n     * @return Whether there is a complete write at that path\r\n     */CompoundWrite.prototype.hasCompleteWrite=function(path){return this.getCompleteNode(path)!=null;};/**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param path The path to get a complete write\r\n     * @return The node if complete at that path, or null otherwise.\r\n     */CompoundWrite.prototype.getCompleteNode=function(path){var rootmost=this.writeTree_.findRootMostValueAndPath(path);if(rootmost!=null){return this.writeTree_.get(rootmost.path).getChild(Path.relativePath(rootmost.path,path));}else{return null;}};/**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return A list of all complete children.\r\n     */CompoundWrite.prototype.getCompleteChildren=function(){var children=[];var node=this.writeTree_.value;if(node!=null){// If it's a leaf node, it has no children; so nothing to do.\nif(!node.isLeafNode()){node.forEachChild(PRIORITY_INDEX,function(childName,childNode){children.push(new NamedNode(childName,childNode));});}}else{this.writeTree_.children.inorderTraversal(function(childName,childTree){if(childTree.value!=null){children.push(new NamedNode(childName,childTree.value));}});}return children;};CompoundWrite.prototype.childCompoundWrite=function(path){if(path.isEmpty()){return this;}else{var shadowingNode=this.getCompleteNode(path);if(shadowingNode!=null){return new CompoundWrite(new ImmutableTree(shadowingNode));}else{return new CompoundWrite(this.writeTree_.subtree(path));}}};/**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return Whether this CompoundWrite is empty\r\n     */CompoundWrite.prototype.isEmpty=function(){return this.writeTree_.isEmpty();};/**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param node The node to apply this CompoundWrite to\r\n     * @return The node with all writes applied\r\n     */CompoundWrite.prototype.apply=function(node){return applySubtreeWrite(Path.Empty,this.writeTree_,node);};CompoundWrite.Empty=new CompoundWrite(new ImmutableTree(null));return CompoundWrite;}();function applySubtreeWrite(relativePath,writeTree,node){if(writeTree.value!=null){// Since there a write is always a leaf, we're done here\nreturn node.updateChild(relativePath,writeTree.value);}else{var priorityWrite_1=null;writeTree.children.inorderTraversal(function(childKey,childTree){if(childKey==='.priority'){// Apply priorities at the end so we don't update priorities for either empty nodes or forget\n// to apply priorities to empty nodes that are later filled\nassert(childTree.value!==null,'Priority writes must always be leaf nodes');priorityWrite_1=childTree.value;}else{node=applySubtreeWrite(relativePath.child(childKey),childTree,node);}});// If there was a priority write, we only apply it if the node is not empty\nif(!node.getChild(relativePath).isEmpty()&&priorityWrite_1!==null){node=node.updateChild(relativePath.child('.priority'),priorityWrite_1);}return node;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */var WriteTree=/** @class */function(){function WriteTree(){/**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */this.visibleWrites_=CompoundWrite.Empty;/**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */this.allWrites_=[];this.lastWriteId_=-1;}/**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */WriteTree.prototype.childWrites=function(path){return new WriteTreeRef(path,this);};/**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */WriteTree.prototype.addOverwrite=function(path,snap,writeId,visible){assert(writeId>this.lastWriteId_,'Stacking an older write on top of newer ones');if(visible===undefined){visible=true;}this.allWrites_.push({path:path,snap:snap,writeId:writeId,visible:visible});if(visible){this.visibleWrites_=this.visibleWrites_.addWrite(path,snap);}this.lastWriteId_=writeId;};/**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */WriteTree.prototype.addMerge=function(path,changedChildren,writeId){assert(writeId>this.lastWriteId_,'Stacking an older merge on top of newer ones');this.allWrites_.push({path:path,children:changedChildren,writeId:writeId,visible:true});this.visibleWrites_=this.visibleWrites_.addWrites(path,changedChildren);this.lastWriteId_=writeId;};/**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */WriteTree.prototype.getWrite=function(writeId){for(var i=0;i<this.allWrites_.length;i++){var record=this.allWrites_[i];if(record.writeId===writeId){return record;}}return null;};/**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */WriteTree.prototype.removeWrite=function(writeId){// Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n// out of order.\n//const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n//assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\nvar _this=this;var idx=this.allWrites_.findIndex(function(s){return s.writeId===writeId;});assert(idx>=0,'removeWrite called with nonexistent writeId.');var writeToRemove=this.allWrites_[idx];this.allWrites_.splice(idx,1);var removedWriteWasVisible=writeToRemove.visible;var removedWriteOverlapsWithOtherWrites=false;var i=this.allWrites_.length-1;while(removedWriteWasVisible&&i>=0){var currentWrite=this.allWrites_[i];if(currentWrite.visible){if(i>=idx&&this.recordContainsPath_(currentWrite,writeToRemove.path)){// The removed write was completely shadowed by a subsequent write.\nremovedWriteWasVisible=false;}else if(writeToRemove.path.contains(currentWrite.path)){// Either we're covering some writes or they're covering part of us (depending on which came first).\nremovedWriteOverlapsWithOtherWrites=true;}}i--;}if(!removedWriteWasVisible){return false;}else if(removedWriteOverlapsWithOtherWrites){// There's some shadowing going on. Just rebuild the visible writes from scratch.\nthis.resetTree_();return true;}else{// There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\nif(writeToRemove.snap){this.visibleWrites_=this.visibleWrites_.removeWrite(writeToRemove.path);}else{var children=writeToRemove.children;each(children,function(childName){_this.visibleWrites_=_this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));});}return true;}};/**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */WriteTree.prototype.getCompleteWriteData=function(path){return this.visibleWrites_.getCompleteNode(path);};/**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */WriteTree.prototype.calcCompleteEventCache=function(treePath,completeServerCache,writeIdsToExclude,includeHiddenWrites){if(!writeIdsToExclude&&!includeHiddenWrites){var shadowingNode=this.visibleWrites_.getCompleteNode(treePath);if(shadowingNode!=null){return shadowingNode;}else{var subMerge=this.visibleWrites_.childCompoundWrite(treePath);if(subMerge.isEmpty()){return completeServerCache;}else if(completeServerCache==null&&!subMerge.hasCompleteWrite(Path.Empty)){// We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\nreturn null;}else{var layeredCache=completeServerCache||ChildrenNode.EMPTY_NODE;return subMerge.apply(layeredCache);}}}else{var merge=this.visibleWrites_.childCompoundWrite(treePath);if(!includeHiddenWrites&&merge.isEmpty()){return completeServerCache;}else{// If the server cache is null, and we don't have a complete cache, we need to return null\nif(!includeHiddenWrites&&completeServerCache==null&&!merge.hasCompleteWrite(Path.Empty)){return null;}else{var filter=function(write){return(write.visible||includeHiddenWrites)&&(!writeIdsToExclude||!~writeIdsToExclude.indexOf(write.writeId))&&(write.path.contains(treePath)||treePath.contains(write.path));};var mergeAtPath=WriteTree.layerTree_(this.allWrites_,filter,treePath);var layeredCache=completeServerCache||ChildrenNode.EMPTY_NODE;return mergeAtPath.apply(layeredCache);}}}};/**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */WriteTree.prototype.calcCompleteEventChildren=function(treePath,completeServerChildren){var completeChildren=ChildrenNode.EMPTY_NODE;var topLevelSet=this.visibleWrites_.getCompleteNode(treePath);if(topLevelSet){if(!topLevelSet.isLeafNode()){// we're shadowing everything. Return the children.\ntopLevelSet.forEachChild(PRIORITY_INDEX,function(childName,childSnap){completeChildren=completeChildren.updateImmediateChild(childName,childSnap);});}return completeChildren;}else if(completeServerChildren){// Layer any children we have on top of this\n// We know we don't have a top-level set, so just enumerate existing children\nvar merge_1=this.visibleWrites_.childCompoundWrite(treePath);completeServerChildren.forEachChild(PRIORITY_INDEX,function(childName,childNode){var node=merge_1.childCompoundWrite(new Path(childName)).apply(childNode);completeChildren=completeChildren.updateImmediateChild(childName,node);});// Add any complete children we have from the set\nmerge_1.getCompleteChildren().forEach(function(namedNode){completeChildren=completeChildren.updateImmediateChild(namedNode.name,namedNode.node);});return completeChildren;}else{// We don't have anything to layer on top of. Layer on any children we have\n// Note that we can return an empty snap if we have a defined delete\nvar merge=this.visibleWrites_.childCompoundWrite(treePath);merge.getCompleteChildren().forEach(function(namedNode){completeChildren=completeChildren.updateImmediateChild(namedNode.name,namedNode.node);});return completeChildren;}};/**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */WriteTree.prototype.calcEventCacheAfterServerOverwrite=function(treePath,childPath,existingEventSnap,existingServerSnap){assert(existingEventSnap||existingServerSnap,'Either existingEventSnap or existingServerSnap must exist');var path=treePath.child(childPath);if(this.visibleWrites_.hasCompleteWrite(path)){// At this point we can probably guarantee that we're in case 2, meaning no events\n// May need to check visibility while doing the findRootMostValueAndPath call\nreturn null;}else{// No complete shadowing. We're either partially shadowing or not shadowing at all.\nvar childMerge=this.visibleWrites_.childCompoundWrite(path);if(childMerge.isEmpty()){// We're not shadowing at all. Case 1\nreturn existingServerSnap.getChild(childPath);}else{// This could be more efficient if the serverNode + updates doesn't change the eventSnap\n// However this is tricky to find out, since user updates don't necessary change the server\n// snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n// adds nodes, but doesn't change any existing writes. It is therefore not enough to\n// only check if the updates change the serverNode.\n// Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\nreturn childMerge.apply(existingServerSnap.getChild(childPath));}}};/**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */WriteTree.prototype.calcCompleteChild=function(treePath,childKey,existingServerSnap){var path=treePath.child(childKey);var shadowingNode=this.visibleWrites_.getCompleteNode(path);if(shadowingNode!=null){return shadowingNode;}else{if(existingServerSnap.isCompleteForChild(childKey)){var childMerge=this.visibleWrites_.childCompoundWrite(path);return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));}else{return null;}}};/**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     */WriteTree.prototype.shadowingWrite=function(path){return this.visibleWrites_.getCompleteNode(path);};/**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     */WriteTree.prototype.calcIndexedSlice=function(treePath,completeServerData,startPost,count,reverse,index){var toIterate;var merge=this.visibleWrites_.childCompoundWrite(treePath);var shadowingNode=merge.getCompleteNode(Path.Empty);if(shadowingNode!=null){toIterate=shadowingNode;}else if(completeServerData!=null){toIterate=merge.apply(completeServerData);}else{// no children to iterate on\nreturn[];}toIterate=toIterate.withIndex(index);if(!toIterate.isEmpty()&&!toIterate.isLeafNode()){var nodes=[];var cmp=index.getCompare();var iter=reverse?toIterate.getReverseIteratorFrom(startPost,index):toIterate.getIteratorFrom(startPost,index);var next=iter.getNext();while(next&&nodes.length<count){if(cmp(next,startPost)!==0){nodes.push(next);}next=iter.getNext();}return nodes;}else{return[];}};WriteTree.prototype.recordContainsPath_=function(writeRecord,path){if(writeRecord.snap){return writeRecord.path.contains(path);}else{for(var childName in writeRecord.children){if(writeRecord.children.hasOwnProperty(childName)&&writeRecord.path.child(childName).contains(path)){return true;}}return false;}};/**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     */WriteTree.prototype.resetTree_=function(){this.visibleWrites_=WriteTree.layerTree_(this.allWrites_,WriteTree.DefaultFilter_,Path.Empty);if(this.allWrites_.length>0){this.lastWriteId_=this.allWrites_[this.allWrites_.length-1].writeId;}else{this.lastWriteId_=-1;}};/**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     */WriteTree.DefaultFilter_=function(write){return write.visible;};/**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     */WriteTree.layerTree_=function(writes,filter,treeRoot){var compoundWrite=CompoundWrite.Empty;for(var i=0;i<writes.length;++i){var write=writes[i];// Theory, a later set will either:\n// a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n// b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\nif(filter(write)){var writePath=write.path;var relativePath=void 0;if(write.snap){if(treeRoot.contains(writePath)){relativePath=Path.relativePath(treeRoot,writePath);compoundWrite=compoundWrite.addWrite(relativePath,write.snap);}else if(writePath.contains(treeRoot)){relativePath=Path.relativePath(writePath,treeRoot);compoundWrite=compoundWrite.addWrite(Path.Empty,write.snap.getChild(relativePath));}else;}else if(write.children){if(treeRoot.contains(writePath)){relativePath=Path.relativePath(treeRoot,writePath);compoundWrite=compoundWrite.addWrites(relativePath,write.children);}else if(writePath.contains(treeRoot)){relativePath=Path.relativePath(writePath,treeRoot);if(relativePath.isEmpty()){compoundWrite=compoundWrite.addWrites(Path.Empty,write.children);}else{var child=safeGet(write.children,relativePath.getFront());if(child){// There exists a child in this node that matches the root path\nvar deepNode=child.getChild(relativePath.popFront());compoundWrite=compoundWrite.addWrite(Path.Empty,deepNode);}}}else;}else{throw assertionError('WriteRecord should have .snap or .children');}}}return compoundWrite;};return WriteTree;}();/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */var WriteTreeRef=/** @class */function(){/**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */function WriteTreeRef(path,writeTree){this.treePath_=path;this.writeTree_=writeTree;}/**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */WriteTreeRef.prototype.calcCompleteEventCache=function(completeServerCache,writeIdsToExclude,includeHiddenWrites){return this.writeTree_.calcCompleteEventCache(this.treePath_,completeServerCache,writeIdsToExclude,includeHiddenWrites);};/**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */WriteTreeRef.prototype.calcCompleteEventChildren=function(completeServerChildren){return this.writeTree_.calcCompleteEventChildren(this.treePath_,completeServerChildren);};/**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite=function(path,existingEventSnap,existingServerSnap){return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_,path,existingEventSnap,existingServerSnap);};/**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */WriteTreeRef.prototype.shadowingWrite=function(path){return this.writeTree_.shadowingWrite(this.treePath_.child(path));};/**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */WriteTreeRef.prototype.calcIndexedSlice=function(completeServerData,startPost,count,reverse,index){return this.writeTree_.calcIndexedSlice(this.treePath_,completeServerData,startPost,count,reverse,index);};/**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */WriteTreeRef.prototype.calcCompleteChild=function(childKey,existingServerCache){return this.writeTree_.calcCompleteChild(this.treePath_,childKey,existingServerCache);};/**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */WriteTreeRef.prototype.child=function(childName){return new WriteTreeRef(this.treePath_.child(childName),this.writeTree_);};return WriteTreeRef;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */var SyncTree=/** @class */function(){/**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */function SyncTree(listenProvider_){this.listenProvider_=listenProvider_;/**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */this.syncPointTree_=ImmutableTree.Empty;/**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */this.pendingWriteTree_=new WriteTree();this.tagToQueryMap=new Map();this.queryToTagMap=new Map();}/**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @return Events to raise.\r\n     */SyncTree.prototype.applyUserOverwrite=function(path,newData,writeId,visible){// Record pending write.\nthis.pendingWriteTree_.addOverwrite(path,newData,writeId,visible);if(!visible){return[];}else{return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User,path,newData));}};/**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @return Events to raise.\r\n     */SyncTree.prototype.applyUserMerge=function(path,changedChildren,writeId){// Record pending merge.\nthis.pendingWriteTree_.addMerge(path,changedChildren,writeId);var changeTree=ImmutableTree.fromObject(changedChildren);return this.applyOperationToSyncPoints_(new Merge(OperationSource.User,path,changeTree));};/**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param revert True if the given write failed and needs to be reverted\r\n     * @return Events to raise.\r\n     */SyncTree.prototype.ackUserWrite=function(writeId,revert){if(revert===void 0){revert=false;}var write=this.pendingWriteTree_.getWrite(writeId);var needToReevaluate=this.pendingWriteTree_.removeWrite(writeId);if(!needToReevaluate){return[];}else{var affectedTree_1=ImmutableTree.Empty;if(write.snap!=null){// overwrite\naffectedTree_1=affectedTree_1.set(Path.Empty,true);}else{each(write.children,function(pathString,node){affectedTree_1=affectedTree_1.set(new Path(pathString),node);});}return this.applyOperationToSyncPoints_(new AckUserWrite(write.path,affectedTree_1,revert));}};/**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @return Events to raise.\r\n     */SyncTree.prototype.applyServerOverwrite=function(path,newData){return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server,path,newData));};/**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @return Events to raise.\r\n     */SyncTree.prototype.applyServerMerge=function(path,changedChildren){var changeTree=ImmutableTree.fromObject(changedChildren);return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server,path,changeTree));};/**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @return Events to raise.\r\n     */SyncTree.prototype.applyListenComplete=function(path){return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server,path));};/**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */SyncTree.prototype.applyTaggedQueryOverwrite=function(path,snap,tag){var queryKey=this.queryKeyForTag_(tag);if(queryKey!=null){var r=SyncTree.parseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=Path.relativePath(queryPath,path);var op=new Overwrite(OperationSource.forServerTaggedQuery(queryId),relativePath,snap);return this.applyTaggedOperation_(queryPath,op);}else{// Query must have been removed already\nreturn[];}};/**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */SyncTree.prototype.applyTaggedQueryMerge=function(path,changedChildren,tag){var queryKey=this.queryKeyForTag_(tag);if(queryKey){var r=SyncTree.parseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=Path.relativePath(queryPath,path);var changeTree=ImmutableTree.fromObject(changedChildren);var op=new Merge(OperationSource.forServerTaggedQuery(queryId),relativePath,changeTree);return this.applyTaggedOperation_(queryPath,op);}else{// We've already removed the query. No big deal, ignore the update\nreturn[];}};/**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @return Events to raise.\r\n     */SyncTree.prototype.applyTaggedListenComplete=function(path,tag){var queryKey=this.queryKeyForTag_(tag);if(queryKey){var r=SyncTree.parseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=Path.relativePath(queryPath,path);var op=new ListenComplete(OperationSource.forServerTaggedQuery(queryId),relativePath);return this.applyTaggedOperation_(queryPath,op);}else{// We've already removed the query. No big deal, ignore the update\nreturn[];}};/**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @return Events to raise.\r\n     */SyncTree.prototype.addEventRegistration=function(query,eventRegistration){var path=query.path;var serverCache=null;var foundAncestorDefaultView=false;// Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n// Consider optimizing this once there's a better understanding of what actual behavior will be.\nthis.syncPointTree_.foreachOnPath(path,function(pathToSyncPoint,sp){var relativePath=Path.relativePath(pathToSyncPoint,path);serverCache=serverCache||sp.getCompleteServerCache(relativePath);foundAncestorDefaultView=foundAncestorDefaultView||sp.hasCompleteView();});var syncPoint=this.syncPointTree_.get(path);if(!syncPoint){syncPoint=new SyncPoint();this.syncPointTree_=this.syncPointTree_.set(path,syncPoint);}else{foundAncestorDefaultView=foundAncestorDefaultView||syncPoint.hasCompleteView();serverCache=serverCache||syncPoint.getCompleteServerCache(Path.Empty);}var serverCacheComplete;if(serverCache!=null){serverCacheComplete=true;}else{serverCacheComplete=false;serverCache=ChildrenNode.EMPTY_NODE;var subtree=this.syncPointTree_.subtree(path);subtree.foreachChild(function(childName,childSyncPoint){var completeCache=childSyncPoint.getCompleteServerCache(Path.Empty);if(completeCache){serverCache=serverCache.updateImmediateChild(childName,completeCache);}});}var viewAlreadyExists=syncPoint.viewExistsForQuery(query);if(!viewAlreadyExists&&!query.getQueryParams().loadsAllData()){// We need to track a tag for this query\nvar queryKey=SyncTree.makeQueryKey_(query);assert(!this.queryToTagMap.has(queryKey),'View does not exist, but we have a tag');var tag=SyncTree.getNextQueryTag_();this.queryToTagMap.set(queryKey,tag);this.tagToQueryMap.set(tag,queryKey);}var writesCache=this.pendingWriteTree_.childWrites(path);var events=syncPoint.addEventRegistration(query,eventRegistration,writesCache,serverCache,serverCacheComplete);if(!viewAlreadyExists&&!foundAncestorDefaultView){var view/** @type !View */=syncPoint.viewForQuery(query);events=events.concat(this.setupListener_(query,view));}return events;};/**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param eventRegistration If null, all callbacks are removed.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */SyncTree.prototype.removeEventRegistration=function(query,eventRegistration,cancelError){var _this=this;// Find the syncPoint first. Then deal with whether or not it has matching listeners\nvar path=query.path;var maybeSyncPoint=this.syncPointTree_.get(path);var cancelEvents=[];// A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n// other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n// not loadsAllData().\nif(maybeSyncPoint&&(query.queryIdentifier()==='default'||maybeSyncPoint.viewExistsForQuery(query))){/**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */var removedAndEvents=maybeSyncPoint.removeEventRegistration(query,eventRegistration,cancelError);if(maybeSyncPoint.isEmpty()){this.syncPointTree_=this.syncPointTree_.remove(path);}var removed=removedAndEvents.removed;cancelEvents=removedAndEvents.events;// We may have just removed one of many listeners and can short-circuit this whole process\n// We may also not have removed a default listener, in which case all of the descendant listeners should already be\n// properly set up.\n//\n// Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n// queryId === 'default'\nvar removingDefault=-1!==removed.findIndex(function(query){return query.getQueryParams().loadsAllData();});var covered=this.syncPointTree_.findOnPath(path,function(relativePath,parentSyncPoint){return parentSyncPoint.hasCompleteView();});if(removingDefault&&!covered){var subtree=this.syncPointTree_.subtree(path);// There are potentially child listeners. Determine what if any listens we need to send before executing the\n// removal\nif(!subtree.isEmpty()){// We need to fold over our subtree and collect the listeners to send\nvar newViews=this.collectDistinctViewsForSubTree_(subtree);// Ok, we've collected all the listens we need. Set them up.\nfor(var i=0;i<newViews.length;++i){var view=newViews[i],newQuery=view.getQuery();var listener=this.createListenerForView_(view);this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery),this.tagForQuery_(newQuery),listener.hashFn,listener.onComplete);}}}// If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n// The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n// Also, note that if we have a cancelError, it's already been removed at the provider level.\nif(!covered&&removed.length>0&&!cancelError){// If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n// default. Otherwise, we need to iterate through and cancel each individual query\nif(removingDefault){// We don't tag default listeners\nvar defaultTag=null;this.listenProvider_.stopListening(SyncTree.queryForListening_(query),defaultTag);}else{removed.forEach(function(queryToRemove){var tagToRemove=_this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));_this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove),tagToRemove);});}}// Now, clear all of the tags we're tracking for the removed listens\nthis.removeTags_(removed);}return cancelEvents;};/**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n     * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n     * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n     *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     *\r\n     * @param path The path to the data we want\r\n     * @param writeIdsToExclude A specific set to be excluded\r\n     */SyncTree.prototype.calcCompleteEventCache=function(path,writeIdsToExclude){var includeHiddenSets=true;var writeTree=this.pendingWriteTree_;var serverCache=this.syncPointTree_.findOnPath(path,function(pathSoFar,syncPoint){var relativePath=Path.relativePath(pathSoFar,path);var serverCache=syncPoint.getCompleteServerCache(relativePath);if(serverCache){return serverCache;}});return writeTree.calcCompleteEventCache(path,serverCache,writeIdsToExclude,includeHiddenSets);};/**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     */SyncTree.prototype.collectDistinctViewsForSubTree_=function(subtree){return subtree.fold(function(relativePath,maybeChildSyncPoint,childMap){if(maybeChildSyncPoint&&maybeChildSyncPoint.hasCompleteView()){var completeView=maybeChildSyncPoint.getCompleteView();return[completeView];}else{// No complete view here, flatten any deeper listens into an array\nvar views_1=[];if(maybeChildSyncPoint){views_1=maybeChildSyncPoint.getQueryViews();}each(childMap,function(_key,childViews){views_1=views_1.concat(childViews);});return views_1;}});};SyncTree.prototype.removeTags_=function(queries){for(var j=0;j<queries.length;++j){var removedQuery=queries[j];if(!removedQuery.getQueryParams().loadsAllData()){// We should have a tag for this\nvar removedQueryKey=SyncTree.makeQueryKey_(removedQuery);var removedQueryTag=this.queryToTagMap.get(removedQueryKey);this.queryToTagMap.delete(removedQueryKey);this.tagToQueryMap.delete(removedQueryTag);}}};/**\r\n     * Normalizes a query to a query we send the server for listening\r\n     *\r\n     * @return The normalized query\r\n     */SyncTree.queryForListening_=function(query){if(query.getQueryParams().loadsAllData()&&!query.getQueryParams().isDefault()){// We treat queries that load all data as default queries\n// Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n// from Query\nreturn query.getRef();}else{return query;}};/**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @return This method can return events to support synchronous data sources\r\n     */SyncTree.prototype.setupListener_=function(query,view){var path=query.path;var tag=this.tagForQuery_(query);var listener=this.createListenerForView_(view);var events=this.listenProvider_.startListening(SyncTree.queryForListening_(query),tag,listener.hashFn,listener.onComplete);var subtree=this.syncPointTree_.subtree(path);// The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n// may need to shadow other listens as well.\nif(tag){assert(!subtree.value.hasCompleteView(),\"If we're adding a query, it shouldn't be shadowed\");}else{// Shadow everything at or below this location, this is a default listener.\nvar queriesToStop=subtree.fold(function(relativePath,maybeChildSyncPoint,childMap){if(!relativePath.isEmpty()&&maybeChildSyncPoint&&maybeChildSyncPoint.hasCompleteView()){return[maybeChildSyncPoint.getCompleteView().getQuery()];}else{// No default listener here, flatten any deeper queries into an array\nvar queries_1=[];if(maybeChildSyncPoint){queries_1=queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function(view){return view.getQuery();}));}each(childMap,function(_key,childQueries){queries_1=queries_1.concat(childQueries);});return queries_1;}});for(var i=0;i<queriesToStop.length;++i){var queryToStop=queriesToStop[i];this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop),this.tagForQuery_(queryToStop));}}return events;};SyncTree.prototype.createListenerForView_=function(view){var _this=this;var query=view.getQuery();var tag=this.tagForQuery_(query);return{hashFn:function(){var cache=view.getServerCache()||ChildrenNode.EMPTY_NODE;return cache.hash();},onComplete:function(status){if(status==='ok'){if(tag){return _this.applyTaggedListenComplete(query.path,tag);}else{return _this.applyListenComplete(query.path);}}else{// If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n// Note that this may need to be scoped to just this listener if we change permissions on filtered children\nvar error=errorForServerCode(status,query);return _this.removeEventRegistration(query,/*eventRegistration*/null,error);}}};};/**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     */SyncTree.makeQueryKey_=function(query){return query.path.toString()+'$'+query.queryIdentifier();};/**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     */SyncTree.parseQueryKey_=function(queryKey){var splitIndex=queryKey.indexOf('$');assert(splitIndex!==-1&&splitIndex<queryKey.length-1,'Bad queryKey.');return{queryId:queryKey.substr(splitIndex+1),path:new Path(queryKey.substr(0,splitIndex))};};/**\r\n     * Return the query associated with the given tag, if we have one\r\n     */SyncTree.prototype.queryKeyForTag_=function(tag){return this.tagToQueryMap.get(tag);};/**\r\n     * Return the tag associated with the given query.\r\n     */SyncTree.prototype.tagForQuery_=function(query){var queryKey=SyncTree.makeQueryKey_(query);return this.queryToTagMap.get(queryKey);};/**\r\n     * Static accessor for query tags.\r\n     */SyncTree.getNextQueryTag_=function(){return SyncTree.nextQueryTag_++;};/**\r\n     * A helper method to apply tagged operations\r\n     */SyncTree.prototype.applyTaggedOperation_=function(queryPath,operation){var syncPoint=this.syncPointTree_.get(queryPath);assert(syncPoint,\"Missing sync point for query tag that we're tracking\");var writesCache=this.pendingWriteTree_.childWrites(queryPath);return syncPoint.applyOperation(operation,writesCache,/*serverCache=*/null);};/**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n     *\r\n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n     *\r\n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     */SyncTree.prototype.applyOperationToSyncPoints_=function(operation){return this.applyOperationHelper_(operation,this.syncPointTree_,/*serverCache=*/null,this.pendingWriteTree_.childWrites(Path.Empty));};/**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */SyncTree.prototype.applyOperationHelper_=function(operation,syncPointTree,serverCache,writesCache){if(operation.path.isEmpty()){return this.applyOperationDescendantsHelper_(operation,syncPointTree,serverCache,writesCache);}else{var syncPoint=syncPointTree.get(Path.Empty);// If we don't have cached server data, see if we can get it from this SyncPoint.\nif(serverCache==null&&syncPoint!=null){serverCache=syncPoint.getCompleteServerCache(Path.Empty);}var events=[];var childName=operation.path.getFront();var childOperation=operation.operationForChild(childName);var childTree=syncPointTree.children.get(childName);if(childTree&&childOperation){var childServerCache=serverCache?serverCache.getImmediateChild(childName):null;var childWritesCache=writesCache.child(childName);events=events.concat(this.applyOperationHelper_(childOperation,childTree,childServerCache,childWritesCache));}if(syncPoint){events=events.concat(syncPoint.applyOperation(operation,writesCache,serverCache));}return events;}};/**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */SyncTree.prototype.applyOperationDescendantsHelper_=function(operation,syncPointTree,serverCache,writesCache){var _this=this;var syncPoint=syncPointTree.get(Path.Empty);// If we don't have cached server data, see if we can get it from this SyncPoint.\nif(serverCache==null&&syncPoint!=null){serverCache=syncPoint.getCompleteServerCache(Path.Empty);}var events=[];syncPointTree.children.inorderTraversal(function(childName,childTree){var childServerCache=serverCache?serverCache.getImmediateChild(childName):null;var childWritesCache=writesCache.child(childName);var childOperation=operation.operationForChild(childName);if(childOperation){events=events.concat(_this.applyOperationDescendantsHelper_(childOperation,childTree,childServerCache,childWritesCache));}});if(syncPoint){events=events.concat(syncPoint.applyOperation(operation,writesCache,serverCache));}return events;};/**\r\n     * Static tracker for next query tag.\r\n     */SyncTree.nextQueryTag_=1;return SyncTree;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */var SnapshotHolder=/** @class */function(){function SnapshotHolder(){this.rootNode_=ChildrenNode.EMPTY_NODE;}SnapshotHolder.prototype.getNode=function(path){return this.rootNode_.getChild(path);};SnapshotHolder.prototype.updateSnapshot=function(path,newSnapshotNode){this.rootNode_=this.rootNode_.updateChild(path,newSnapshotNode);};return SnapshotHolder;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */var StatsCollection=/** @class */function(){function StatsCollection(){this.counters_={};}StatsCollection.prototype.incrementCounter=function(name,amount){if(amount===void 0){amount=1;}if(!contains(this.counters_,name)){this.counters_[name]=0;}this.counters_[name]+=amount;};StatsCollection.prototype.get=function(){return deepCopy(this.counters_);};return StatsCollection;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var StatsManager=/** @class */function(){function StatsManager(){}StatsManager.getCollection=function(repoInfo){var hashString=repoInfo.toString();if(!this.collections_[hashString]){this.collections_[hashString]=new StatsCollection();}return this.collections_[hashString];};StatsManager.getOrCreateReporter=function(repoInfo,creatorFunction){var hashString=repoInfo.toString();if(!this.reporters_[hashString]){this.reporters_[hashString]=creatorFunction();}return this.reporters_[hashString];};StatsManager.collections_={};StatsManager.reporters_={};return StatsManager;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */var StatsListener=/** @class */function(){function StatsListener(collection_){this.collection_=collection_;this.last_=null;}StatsListener.prototype.get=function(){var newStats=this.collection_.get();var delta=__assign({},newStats);if(this.last_){each(this.last_,function(stat,value){delta[stat]=delta[stat]-value;});}this.last_=newStats;return delta;};return StatsListener;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nvar FIRST_STATS_MIN_TIME=10*1000;var FIRST_STATS_MAX_TIME=30*1000;// We'll continue to report stats on average every 5 minutes.\nvar REPORT_STATS_INTERVAL=5*60*1000;/**\r\n * @constructor\r\n */var StatsReporter=/** @class */function(){/**\r\n     * @param collection\r\n     * @param server_\r\n     */function StatsReporter(collection,server_){this.server_=server_;this.statsToReport_={};this.statsListener_=new StatsListener(collection);var timeout=FIRST_STATS_MIN_TIME+(FIRST_STATS_MAX_TIME-FIRST_STATS_MIN_TIME)*Math.random();setTimeoutNonBlocking(this.reportStats_.bind(this),Math.floor(timeout));}StatsReporter.prototype.includeStat=function(stat){this.statsToReport_[stat]=true;};StatsReporter.prototype.reportStats_=function(){var _this=this;var stats=this.statsListener_.get();var reportedStats={};var haveStatsToReport=false;each(stats,function(stat,value){if(value>0&&contains(_this.statsToReport_,stat)){reportedStats[stat]=value;haveStatsToReport=true;}});if(haveStatsToReport){this.server_.reportStats(reportedStats);}// queue our next run.\nsetTimeoutNonBlocking(this.reportStats_.bind(this),Math.floor(Math.random()*2*REPORT_STATS_INTERVAL));};return StatsReporter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */var EventQueue=/** @class */function(){function EventQueue(){/**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */this.eventLists_=[];/**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */this.recursionDepth_=0;}/**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */EventQueue.prototype.queueEvents=function(eventDataList){// We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\nvar currList=null;for(var i=0;i<eventDataList.length;i++){var eventData=eventDataList[i];var eventPath=eventData.getPath();if(currList!==null&&!eventPath.equals(currList.getPath())){this.eventLists_.push(currList);currList=null;}if(currList===null){currList=new EventList(eventPath);}currList.add(eventData);}if(currList){this.eventLists_.push(currList);}};/**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */EventQueue.prototype.raiseEventsAtPath=function(path,eventDataList){this.queueEvents(eventDataList);this.raiseQueuedEventsMatchingPredicate_(function(eventPath){return eventPath.equals(path);});};/**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */EventQueue.prototype.raiseEventsForChangedPath=function(changedPath,eventDataList){this.queueEvents(eventDataList);this.raiseQueuedEventsMatchingPredicate_(function(eventPath){return eventPath.contains(changedPath)||changedPath.contains(eventPath);});};/**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */EventQueue.prototype.raiseQueuedEventsMatchingPredicate_=function(predicate){this.recursionDepth_++;var sentAll=true;for(var i=0;i<this.eventLists_.length;i++){var eventList=this.eventLists_[i];if(eventList){var eventPath=eventList.getPath();if(predicate(eventPath)){this.eventLists_[i].raise();this.eventLists_[i]=null;}else{sentAll=false;}}}if(sentAll){this.eventLists_=[];}this.recursionDepth_--;};return EventQueue;}();/**\r\n * @param {!Path} path\r\n * @constructor\r\n */var EventList=/** @class */function(){function EventList(path_){this.path_=path_;/**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */this.events_=[];}/**\r\n     * @param {!Event} eventData\r\n     */EventList.prototype.add=function(eventData){this.events_.push(eventData);};/**\r\n     * Iterates through the list and raises each event\r\n     */EventList.prototype.raise=function(){for(var i=0;i<this.events_.length;i++){var eventData=this.events_[i];if(eventData!==null){this.events_[i]=null;var eventFn=eventData.getEventRunner();if(logger){log('event: '+eventData.toString());}exceptionGuard(eventFn);}}};/**\r\n     * @return {!Path}\r\n     */EventList.prototype.getPath=function(){return this.path_;};return EventList;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */var EventEmitter=/** @class */function(){/**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */function EventEmitter(allowedEvents_){this.allowedEvents_=allowedEvents_;this.listeners_={};assert(Array.isArray(allowedEvents_)&&allowedEvents_.length>0,'Requires a non-empty array');}/**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} varArgs\r\n     */EventEmitter.prototype.trigger=function(eventType){var varArgs=[];for(var _i=1;_i<arguments.length;_i++){varArgs[_i-1]=arguments[_i];}if(Array.isArray(this.listeners_[eventType])){// Clone the list, since callbacks could add/remove listeners.\nvar listeners=__spread(this.listeners_[eventType]);for(var i=0;i<listeners.length;i++){listeners[i].callback.apply(listeners[i].context,varArgs);}}};EventEmitter.prototype.on=function(eventType,callback,context){this.validateEventType_(eventType);this.listeners_[eventType]=this.listeners_[eventType]||[];this.listeners_[eventType].push({callback:callback,context:context});var eventData=this.getInitialEvent(eventType);if(eventData){callback.apply(context,eventData);}};EventEmitter.prototype.off=function(eventType,callback,context){this.validateEventType_(eventType);var listeners=this.listeners_[eventType]||[];for(var i=0;i<listeners.length;i++){if(listeners[i].callback===callback&&(!context||context===listeners[i].context)){listeners.splice(i,1);return;}}};EventEmitter.prototype.validateEventType_=function(eventType){assert(this.allowedEvents_.find(function(et){return et===eventType;}),'Unknown event: '+eventType);};return EventEmitter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @extends {EventEmitter}\r\n */var VisibilityMonitor=/** @class */function(_super){__extends(VisibilityMonitor,_super);function VisibilityMonitor(){var _this=_super.call(this,['visible'])||this;var hidden;var visibilityChange;if(typeof document!=='undefined'&&typeof document.addEventListener!=='undefined'){if(typeof document['hidden']!=='undefined'){// Opera 12.10 and Firefox 18 and later support\nvisibilityChange='visibilitychange';hidden='hidden';}else if(typeof document['mozHidden']!=='undefined'){visibilityChange='mozvisibilitychange';hidden='mozHidden';}else if(typeof document['msHidden']!=='undefined'){visibilityChange='msvisibilitychange';hidden='msHidden';}else if(typeof document['webkitHidden']!=='undefined'){visibilityChange='webkitvisibilitychange';hidden='webkitHidden';}}// Initially, we always assume we are visible. This ensures that in browsers\n// without page visibility support or in cases where we are never visible\n// (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n// reconnects\n_this.visible_=true;if(visibilityChange){document.addEventListener(visibilityChange,function(){var visible=!document[hidden];if(visible!==_this.visible_){_this.visible_=visible;_this.trigger('visible',visible);}},false);}return _this;}VisibilityMonitor.getInstance=function(){return new VisibilityMonitor();};/**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */VisibilityMonitor.prototype.getInitialEvent=function(eventType){assert(eventType==='visible','Unknown event type: '+eventType);return[this.visible_];};return VisibilityMonitor;}(EventEmitter);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */var OnlineMonitor=/** @class */function(_super){__extends(OnlineMonitor,_super);function OnlineMonitor(){var _this=_super.call(this,['online'])||this;_this.online_=true;// We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n// https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n// It would seem that the 'online' event does not always fire consistently. So we disable it\n// for Cordova.\nif(typeof window!=='undefined'&&typeof window.addEventListener!=='undefined'&&!isMobileCordova()){window.addEventListener('online',function(){if(!_this.online_){_this.online_=true;_this.trigger('online',true);}},false);window.addEventListener('offline',function(){if(_this.online_){_this.online_=false;_this.trigger('online',false);}},false);}return _this;}OnlineMonitor.getInstance=function(){return new OnlineMonitor();};/**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */OnlineMonitor.prototype.getInitialEvent=function(eventType){assert(eventType==='online','Unknown event type: '+eventType);return[this.online_];};/**\r\n     * @return {boolean}\r\n     */OnlineMonitor.prototype.currentlyOnline=function(){return this.online_;};return OnlineMonitor;}(EventEmitter);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */var PacketReceiver=/** @class */function(){/**\r\n     * @param onMessage_\r\n     */function PacketReceiver(onMessage_){this.onMessage_=onMessage_;this.pendingResponses=[];this.currentResponseNum=0;this.closeAfterResponse=-1;this.onClose=null;}PacketReceiver.prototype.closeAfter=function(responseNum,callback){this.closeAfterResponse=responseNum;this.onClose=callback;if(this.closeAfterResponse<this.currentResponseNum){this.onClose();this.onClose=null;}};/**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */PacketReceiver.prototype.handleResponse=function(requestNum,data){var _this=this;this.pendingResponses[requestNum]=data;var _loop_1=function(){var toProcess=this_1.pendingResponses[this_1.currentResponseNum];delete this_1.pendingResponses[this_1.currentResponseNum];var _loop_2=function(i){if(toProcess[i]){exceptionGuard(function(){_this.onMessage_(toProcess[i]);});}};for(var i=0;i<toProcess.length;++i){_loop_2(i);}if(this_1.currentResponseNum===this_1.closeAfterResponse){if(this_1.onClose){this_1.onClose();this_1.onClose=null;}return\"break\";}this_1.currentResponseNum++;};var this_1=this;while(this.pendingResponses[this.currentResponseNum]){var state_1=_loop_1();if(state_1===\"break\")break;}};return PacketReceiver;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // URL query parameters associated with longpolling\nvar FIREBASE_LONGPOLL_START_PARAM='start';var FIREBASE_LONGPOLL_CLOSE_COMMAND='close';var FIREBASE_LONGPOLL_COMMAND_CB_NAME='pLPCommand';var FIREBASE_LONGPOLL_DATA_CB_NAME='pRTLPCB';var FIREBASE_LONGPOLL_ID_PARAM='id';var FIREBASE_LONGPOLL_PW_PARAM='pw';var FIREBASE_LONGPOLL_SERIAL_PARAM='ser';var FIREBASE_LONGPOLL_CALLBACK_ID_PARAM='cb';var FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM='seg';var FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET='ts';var FIREBASE_LONGPOLL_DATA_PARAM='d';var FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM='dframe';//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nvar MAX_URL_DATA_SIZE=1870;var SEG_HEADER_SIZE=30;//ie: &seg=8299234&ts=982389123&d=\nvar MAX_PAYLOAD_SIZE=MAX_URL_DATA_SIZE-SEG_HEADER_SIZE;/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */var KEEPALIVE_REQUEST_INTERVAL=25000;/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */var LP_CONNECT_TIMEOUT=30000;/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */var BrowserPollConnection=/** @class */function(){/**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */function BrowserPollConnection(connId,repoInfo,applicationId,transportSessionId,lastSessionId){this.connId=connId;this.repoInfo=repoInfo;this.applicationId=applicationId;this.transportSessionId=transportSessionId;this.lastSessionId=lastSessionId;this.bytesSent=0;this.bytesReceived=0;this.everConnected_=false;this.log_=logWrapper(connId);this.stats_=StatsManager.getCollection(repoInfo);this.urlFn=function(params){return repoInfo.connectionURL(LONG_POLLING,params);};}/**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */BrowserPollConnection.prototype.open=function(onMessage,onDisconnect){var _this=this;this.curSegmentNum=0;this.onDisconnect_=onDisconnect;this.myPacketOrderer=new PacketReceiver(onMessage);this.isClosed_=false;this.connectTimeoutTimer_=setTimeout(function(){_this.log_('Timed out trying to connect.');// Make sure we clear the host cache\n_this.onClosed_();_this.connectTimeoutTimer_=null;// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(LP_CONNECT_TIMEOUT));// Ensure we delay the creation of the iframe until the DOM is loaded.\nexecuteWhenDOMReady(function(){if(_this.isClosed_){return;}//Set up a callback that gets triggered once a connection is set up.\n_this.scriptTagHolder=new FirebaseIFrameScriptHolder(function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var _a=__read(args,5),command=_a[0],arg1=_a[1],arg2=_a[2],arg3=_a[3],arg4=_a[4];_this.incrementIncomingBytes_(args);if(!_this.scriptTagHolder){return;// we closed the connection.\n}if(_this.connectTimeoutTimer_){clearTimeout(_this.connectTimeoutTimer_);_this.connectTimeoutTimer_=null;}_this.everConnected_=true;if(command===FIREBASE_LONGPOLL_START_PARAM){_this.id=arg1;_this.password=arg2;}else if(command===FIREBASE_LONGPOLL_CLOSE_COMMAND){// Don't clear the host cache. We got a response from the server, so we know it's reachable\nif(arg1){// We aren't expecting any more data (other than what the server's already in the process of sending us\n// through our already open polls), so don't send any more.\n_this.scriptTagHolder.sendNewPolls=false;// arg1 in this case is the last response number sent by the server. We should try to receive\n// all of the responses up to this one before closing\n_this.myPacketOrderer.closeAfter(arg1,function(){_this.onClosed_();});}else{_this.onClosed_();}}else{throw new Error('Unrecognized command received: '+command);}},function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var _a=__read(args,2),pN=_a[0],data=_a[1];_this.incrementIncomingBytes_(args);_this.myPacketOrderer.handleResponse(pN,data);},function(){_this.onClosed_();},_this.urlFn);//Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n//from cache.\nvar urlParams={};urlParams[FIREBASE_LONGPOLL_START_PARAM]='t';urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM]=Math.floor(Math.random()*100000000);if(_this.scriptTagHolder.uniqueCallbackIdentifier){urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM]=_this.scriptTagHolder.uniqueCallbackIdentifier;}urlParams[VERSION_PARAM]=PROTOCOL_VERSION;if(_this.transportSessionId){urlParams[TRANSPORT_SESSION_PARAM]=_this.transportSessionId;}if(_this.lastSessionId){urlParams[LAST_SESSION_PARAM]=_this.lastSessionId;}if(_this.applicationId){urlParams[APPLICATION_ID_PARAM]=_this.applicationId;}if(typeof location!=='undefined'&&location.href&&location.href.indexOf(FORGE_DOMAIN)!==-1){urlParams[REFERER_PARAM]=FORGE_REF;}var connectURL=_this.urlFn(urlParams);_this.log_('Connecting via long-poll to '+connectURL);_this.scriptTagHolder.addTag(connectURL,function(){/* do nothing */});});};/**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */BrowserPollConnection.prototype.start=function(){this.scriptTagHolder.startLongPoll(this.id,this.password);this.addDisconnectPingFrame(this.id,this.password);};/**\r\n     * Forces long polling to be considered as a potential transport\r\n     */BrowserPollConnection.forceAllow=function(){BrowserPollConnection.forceAllow_=true;};/**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */BrowserPollConnection.forceDisallow=function(){BrowserPollConnection.forceDisallow_=true;};// Static method, use string literal so it can be accessed in a generic way\nBrowserPollConnection.isAvailable=function(){if(isNodeSdk()){return false;}else if(BrowserPollConnection.forceAllow_){return true;}else{// NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n// the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\nreturn!BrowserPollConnection.forceDisallow_&&typeof document!=='undefined'&&document.createElement!=null&&!isChromeExtensionContentScript()&&!isWindowsStoreApp();}};/**\r\n     * No-op for polling\r\n     */BrowserPollConnection.prototype.markConnectionHealthy=function(){};/**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */BrowserPollConnection.prototype.shutdown_=function(){this.isClosed_=true;if(this.scriptTagHolder){this.scriptTagHolder.close();this.scriptTagHolder=null;}//remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\nif(this.myDisconnFrame){document.body.removeChild(this.myDisconnFrame);this.myDisconnFrame=null;}if(this.connectTimeoutTimer_){clearTimeout(this.connectTimeoutTimer_);this.connectTimeoutTimer_=null;}};/**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */BrowserPollConnection.prototype.onClosed_=function(){if(!this.isClosed_){this.log_('Longpoll is closing itself');this.shutdown_();if(this.onDisconnect_){this.onDisconnect_(this.everConnected_);this.onDisconnect_=null;}}};/**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */BrowserPollConnection.prototype.close=function(){if(!this.isClosed_){this.log_('Longpoll is being closed.');this.shutdown_();}};/**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */BrowserPollConnection.prototype.send=function(data){var dataStr=stringify(data);this.bytesSent+=dataStr.length;this.stats_.incrementCounter('bytes_sent',dataStr.length);//first, lets get the base64-encoded data\nvar base64data=base64Encode(dataStr);//We can only fit a certain amount in each URL, so we need to split this request\n//up into multiple pieces if it doesn't fit in one request.\nvar dataSegs=splitStringBySize(base64data,MAX_PAYLOAD_SIZE);//Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n//of segments so that we can reassemble the packet on the server.\nfor(var i=0;i<dataSegs.length;i++){this.scriptTagHolder.enqueueSegment(this.curSegmentNum,dataSegs.length,dataSegs[i]);this.curSegmentNum++;}};/**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */BrowserPollConnection.prototype.addDisconnectPingFrame=function(id,pw){if(isNodeSdk()){return;}this.myDisconnFrame=document.createElement('iframe');var urlParams={};urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM]='t';urlParams[FIREBASE_LONGPOLL_ID_PARAM]=id;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=pw;this.myDisconnFrame.src=this.urlFn(urlParams);this.myDisconnFrame.style.display='none';document.body.appendChild(this.myDisconnFrame);};/**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */BrowserPollConnection.prototype.incrementIncomingBytes_=function(args){// TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\nvar bytesReceived=stringify(args).length;this.bytesReceived+=bytesReceived;this.stats_.incrementCounter('bytes_received',bytesReceived);};return BrowserPollConnection;}();/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/var FirebaseIFrameScriptHolder=/** @class */function(){/**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */function FirebaseIFrameScriptHolder(commandCB,onMessageCB,onDisconnect,urlFn){this.onDisconnect=onDisconnect;this.urlFn=urlFn;//We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n//problems in some browsers.\nthis.outstandingRequests=new Set();//A queue of the pending segments waiting for transmission to the server.\nthis.pendingSegs=[];//A serial number. We use this for two things:\n// 1) A way to ensure the browser doesn't cache responses to polls\n// 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n//    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n//    JSONP code in the order it was added to the iframe.\nthis.currentSerial=Math.floor(Math.random()*100000000);// This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n// incoming data from the server that we're waiting for).\nthis.sendNewPolls=true;if(!isNodeSdk()){//Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n//iframes where we put the long-polling script tags. We have two callbacks:\n//   1) Command Callback - Triggered for control issues, like starting a connection.\n//   2) Message Callback - Triggered when new data arrives.\nthis.uniqueCallbackIdentifier=LUIDGenerator();window[FIREBASE_LONGPOLL_COMMAND_CB_NAME+this.uniqueCallbackIdentifier]=commandCB;window[FIREBASE_LONGPOLL_DATA_CB_NAME+this.uniqueCallbackIdentifier]=onMessageCB;//Create an iframe for us to add script tags to.\nthis.myIFrame=FirebaseIFrameScriptHolder.createIFrame_();// Set the iframe's contents.\nvar script='';// if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n// for ie9, but ie8 needs to do it again in the document itself.\nif(this.myIFrame.src&&this.myIFrame.src.substr(0,'javascript:'.length)==='javascript:'){var currentDomain=document.domain;script='<script>document.domain=\"'+currentDomain+'\";</script>';}var iframeContents='<html><body>'+script+'</body></html>';try{this.myIFrame.doc.open();this.myIFrame.doc.write(iframeContents);this.myIFrame.doc.close();}catch(e){log('frame writing exception');if(e.stack){log(e.stack);}log(e);}}else{this.commandCB=commandCB;this.onMessageCB=onMessageCB;}}/**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */FirebaseIFrameScriptHolder.createIFrame_=function(){var iframe=document.createElement('iframe');iframe.style.display='none';// This is necessary in order to initialize the document inside the iframe\nif(document.body){document.body.appendChild(iframe);try{// If document.domain has been modified in IE, this will throw an error, and we need to set the\n// domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n// Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\nvar a=iframe.contentWindow.document;if(!a){// Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\nlog('No IE domain setting required');}}catch(e){var domain=document.domain;iframe.src=\"javascript:void((function(){document.open();document.domain='\"+domain+\"';document.close();})())\";}}else{// LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n// never gets hit.\nthrow'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';}// Get the document of the iframe in a browser-specific way.\nif(iframe.contentDocument){iframe.doc=iframe.contentDocument;// Firefox, Opera, Safari\n}else if(iframe.contentWindow){iframe.doc=iframe.contentWindow.document;// Internet Explorer\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n}else if(iframe.document){// eslint-disable-next-line @typescript-eslint/no-explicit-any\niframe.doc=iframe.document;//others?\n}return iframe;};/**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */FirebaseIFrameScriptHolder.prototype.close=function(){var _this=this;//Mark this iframe as dead, so no new requests are sent.\nthis.alive=false;if(this.myIFrame){//We have to actually remove all of the html inside this iframe before removing it from the\n//window, or IE will continue loading and executing the script tags we've already added, which\n//can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\nthis.myIFrame.doc.body.innerHTML='';setTimeout(function(){if(_this.myIFrame!==null){document.body.removeChild(_this.myIFrame);_this.myIFrame=null;}},Math.floor(0));}// Protect from being called recursively.\nvar onDisconnect=this.onDisconnect;if(onDisconnect){this.onDisconnect=null;onDisconnect();}};/**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */FirebaseIFrameScriptHolder.prototype.startLongPoll=function(id,pw){this.myID=id;this.myPW=pw;this.alive=true;//send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\nwhile(this.newRequest_()){}};/**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */FirebaseIFrameScriptHolder.prototype.newRequest_=function(){// We keep one outstanding request open all the time to receive data, but if we need to send data\n// (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n// close the old request.\nif(this.alive&&this.sendNewPolls&&this.outstandingRequests.size<(this.pendingSegs.length>0?2:1)){//construct our url\nthis.currentSerial++;var urlParams={};urlParams[FIREBASE_LONGPOLL_ID_PARAM]=this.myID;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=this.myPW;urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM]=this.currentSerial;var theURL=this.urlFn(urlParams);//Now add as much data as we can.\nvar curDataString='';var i=0;while(this.pendingSegs.length>0){//first, lets see if the next segment will fit.\nvar nextSeg=this.pendingSegs[0];if(nextSeg.d.length+SEG_HEADER_SIZE+curDataString.length<=MAX_URL_DATA_SIZE){//great, the segment will fit. Lets append it.\nvar theSeg=this.pendingSegs.shift();curDataString=curDataString+'&'+FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM+i+'='+theSeg.seg+'&'+FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET+i+'='+theSeg.ts+'&'+FIREBASE_LONGPOLL_DATA_PARAM+i+'='+theSeg.d;i++;}else{break;}}theURL=theURL+curDataString;this.addLongPollTag_(theURL,this.currentSerial);return true;}else{return false;}};/**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */FirebaseIFrameScriptHolder.prototype.enqueueSegment=function(segnum,totalsegs,data){//add this to the queue of segments to send.\nthis.pendingSegs.push({seg:segnum,ts:totalsegs,d:data});//send the data immediately if there isn't already data being transmitted, unless\n//startLongPoll hasn't been called yet.\nif(this.alive){this.newRequest_();}};/**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */FirebaseIFrameScriptHolder.prototype.addLongPollTag_=function(url,serial){var _this=this;//remember that we sent this request.\nthis.outstandingRequests.add(serial);var doNewRequest=function(){_this.outstandingRequests.delete(serial);_this.newRequest_();};// If this request doesn't return on its own accord (by the server sending us some data), we'll\n// create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\nvar keepaliveTimeout=setTimeout(doNewRequest,Math.floor(KEEPALIVE_REQUEST_INTERVAL));var readyStateCB=function(){// Request completed.  Cancel the keepalive.\nclearTimeout(keepaliveTimeout);// Trigger a new request so we can continue receiving data.\ndoNewRequest();};this.addTag(url,readyStateCB);};/**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */FirebaseIFrameScriptHolder.prototype.addTag=function(url,loadCB){var _this=this;if(isNodeSdk()){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nthis.doNodeLongPoll(url,loadCB);}else{setTimeout(function(){try{// if we're already closed, don't add this poll\nif(!_this.sendNewPolls){return;}var newScript_1=_this.myIFrame.doc.createElement('script');newScript_1.type='text/javascript';newScript_1.async=true;newScript_1.src=url;// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnewScript_1.onload=newScript_1.onreadystatechange=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar rstate=newScript_1.readyState;if(!rstate||rstate==='loaded'||rstate==='complete'){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnewScript_1.onload=newScript_1.onreadystatechange=null;if(newScript_1.parentNode){newScript_1.parentNode.removeChild(newScript_1);}loadCB();}};newScript_1.onerror=function(){log('Long-poll script failed to load: '+url);_this.sendNewPolls=false;_this.close();};_this.myIFrame.doc.body.appendChild(newScript_1);}catch(e){// TODO: we should make this error visible somehow\n}},Math.floor(1));}};return FirebaseIFrameScriptHolder;}();/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /** The semver (www.semver.org) version of the SDK. */var SDK_VERSION='';// SDK_VERSION should be set before any database instance is created\nfunction setSDKVersion(version){SDK_VERSION=version;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var WEBSOCKET_MAX_FRAME_SIZE=16384;var WEBSOCKET_KEEPALIVE_INTERVAL=45000;var WebSocketImpl=null;if(typeof MozWebSocket!=='undefined'){WebSocketImpl=MozWebSocket;}else if(typeof WebSocket!=='undefined'){WebSocketImpl=WebSocket;}/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */var WebSocketConnection=/** @class */function(){/**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n     */function WebSocketConnection(connId,repoInfo,applicationId,transportSessionId,lastSessionId){this.connId=connId;this.applicationId=applicationId;this.keepaliveTimer=null;this.frames=null;this.totalFrames=0;this.bytesSent=0;this.bytesReceived=0;this.log_=logWrapper(this.connId);this.stats_=StatsManager.getCollection(repoInfo);this.connURL=WebSocketConnection.connectionURL_(repoInfo,transportSessionId,lastSessionId);this.nodeAdmin=repoInfo.nodeAdmin;}/**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */WebSocketConnection.connectionURL_=function(repoInfo,transportSessionId,lastSessionId){var urlParams={};urlParams[VERSION_PARAM]=PROTOCOL_VERSION;if(!isNodeSdk()&&typeof location!=='undefined'&&location.href&&location.href.indexOf(FORGE_DOMAIN)!==-1){urlParams[REFERER_PARAM]=FORGE_REF;}if(transportSessionId){urlParams[TRANSPORT_SESSION_PARAM]=transportSessionId;}if(lastSessionId){urlParams[LAST_SESSION_PARAM]=lastSessionId;}return repoInfo.connectionURL(WEBSOCKET,urlParams);};/**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */WebSocketConnection.prototype.open=function(onMessage,onDisconnect){var _this=this;this.onDisconnect=onDisconnect;this.onMessage=onMessage;this.log_('Websocket connecting to '+this.connURL);this.everConnected_=false;// Assume failure until proven otherwise.\nPersistentStorage.set('previous_websocket_failure',true);try{if(isNodeSdk()){var device=this.nodeAdmin?'AdminNode':'Node';// UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\nvar options={headers:{'User-Agent':\"Firebase/\"+PROTOCOL_VERSION+\"/\"+SDK_VERSION+\"/\"+process.platform+\"/\"+device,'X-Firebase-GMPID':this.applicationId||''}};// Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\nvar env=process['env'];var proxy=this.connURL.indexOf('wss://')===0?env['HTTPS_PROXY']||env['https_proxy']:env['HTTP_PROXY']||env['http_proxy'];if(proxy){options['proxy']={origin:proxy};}this.mySock=new WebSocketImpl(this.connURL,[],options);}else{var options={headers:{'X-Firebase-GMPID':this.applicationId||''}};this.mySock=new WebSocketImpl(this.connURL,[],options);}}catch(e){this.log_('Error instantiating WebSocket.');var error=e.message||e.data;if(error){this.log_(error);}this.onClosed_();return;}this.mySock.onopen=function(){_this.log_('Websocket connected.');_this.everConnected_=true;};this.mySock.onclose=function(){_this.log_('Websocket connection was disconnected.');_this.mySock=null;_this.onClosed_();};this.mySock.onmessage=function(m){_this.handleIncomingFrame(m);};this.mySock.onerror=function(e){_this.log_('WebSocket error.  Closing connection.');// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar error=e.message||e.data;if(error){_this.log_(error);}_this.onClosed_();};};/**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */WebSocketConnection.prototype.start=function(){};WebSocketConnection.forceDisallow=function(){WebSocketConnection.forceDisallow_=true;};WebSocketConnection.isAvailable=function(){var isOldAndroid=false;if(typeof navigator!=='undefined'&&navigator.userAgent){var oldAndroidRegex=/Android ([0-9]{0,}\\.[0-9]{0,})/;var oldAndroidMatch=navigator.userAgent.match(oldAndroidRegex);if(oldAndroidMatch&&oldAndroidMatch.length>1){if(parseFloat(oldAndroidMatch[1])<4.4){isOldAndroid=true;}}}return!isOldAndroid&&WebSocketImpl!==null&&!WebSocketConnection.forceDisallow_;};/**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */WebSocketConnection.previouslyFailed=function(){// If our persistent storage is actually only in-memory storage,\n// we default to assuming that it previously failed to be safe.\nreturn PersistentStorage.isInMemoryStorage||PersistentStorage.get('previous_websocket_failure')===true;};WebSocketConnection.prototype.markConnectionHealthy=function(){PersistentStorage.remove('previous_websocket_failure');};WebSocketConnection.prototype.appendFrame_=function(data){this.frames.push(data);if(this.frames.length===this.totalFrames){var fullMess=this.frames.join('');this.frames=null;var jsonMess=jsonEval(fullMess);//handle the message\nthis.onMessage(jsonMess);}};/**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */WebSocketConnection.prototype.handleNewFrameCount_=function(frameCount){this.totalFrames=frameCount;this.frames=[];};/**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */WebSocketConnection.prototype.extractFrameCount_=function(data){assert(this.frames===null,'We already have a frame buffer');// TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n// currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\nif(data.length<=6){var frameCount=Number(data);if(!isNaN(frameCount)){this.handleNewFrameCount_(frameCount);return null;}}this.handleNewFrameCount_(1);return data;};/**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */WebSocketConnection.prototype.handleIncomingFrame=function(mess){if(this.mySock===null){return;// Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n}var data=mess['data'];this.bytesReceived+=data.length;this.stats_.incrementCounter('bytes_received',data.length);this.resetKeepAlive();if(this.frames!==null){// we're buffering\nthis.appendFrame_(data);}else{// try to parse out a frame count, otherwise, assume 1 and process it\nvar remainingData=this.extractFrameCount_(data);if(remainingData!==null){this.appendFrame_(remainingData);}}};/**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */WebSocketConnection.prototype.send=function(data){this.resetKeepAlive();var dataStr=stringify(data);this.bytesSent+=dataStr.length;this.stats_.incrementCounter('bytes_sent',dataStr.length);//We can only fit a certain amount in each websocket frame, so we need to split this request\n//up into multiple pieces if it doesn't fit in one request.\nvar dataSegs=splitStringBySize(dataStr,WEBSOCKET_MAX_FRAME_SIZE);//Send the length header\nif(dataSegs.length>1){this.sendString_(String(dataSegs.length));}//Send the actual data in segments.\nfor(var i=0;i<dataSegs.length;i++){this.sendString_(dataSegs[i]);}};WebSocketConnection.prototype.shutdown_=function(){this.isClosed_=true;if(this.keepaliveTimer){clearInterval(this.keepaliveTimer);this.keepaliveTimer=null;}if(this.mySock){this.mySock.close();this.mySock=null;}};WebSocketConnection.prototype.onClosed_=function(){if(!this.isClosed_){this.log_('WebSocket is closing itself');this.shutdown_();// since this is an internal close, trigger the close listener\nif(this.onDisconnect){this.onDisconnect(this.everConnected_);this.onDisconnect=null;}}};/**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */WebSocketConnection.prototype.close=function(){if(!this.isClosed_){this.log_('WebSocket is being closed');this.shutdown_();}};/**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */WebSocketConnection.prototype.resetKeepAlive=function(){var _this=this;clearInterval(this.keepaliveTimer);this.keepaliveTimer=setInterval(function(){//If there has been no websocket activity for a while, send a no-op\nif(_this.mySock){_this.sendString_('0');}_this.resetKeepAlive();// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));};/**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */WebSocketConnection.prototype.sendString_=function(str){// Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n// calls for some unknown reason.  We treat these as an error and disconnect.\n// See https://app.asana.com/0/58926111402292/68021340250410\ntry{this.mySock.send(str);}catch(e){this.log_('Exception thrown from WebSocket.send():',e.message||e.data,'Closing connection.');setTimeout(this.onClosed_.bind(this),0);}};/**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */WebSocketConnection.responsesRequiredToBeHealthy=2;/**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */WebSocketConnection.healthyTimeout=30000;return WebSocketConnection;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */var TransportManager=/** @class */function(){/**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */function TransportManager(repoInfo){this.initTransports_(repoInfo);}Object.defineProperty(TransportManager,\"ALL_TRANSPORTS\",{/**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */get:function(){return[BrowserPollConnection,WebSocketConnection];},enumerable:false,configurable:true});/**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */TransportManager.prototype.initTransports_=function(repoInfo){var e_1,_a;var isWebSocketsAvailable=WebSocketConnection&&WebSocketConnection['isAvailable']();var isSkipPollConnection=isWebSocketsAvailable&&!WebSocketConnection.previouslyFailed();if(repoInfo.webSocketOnly){if(!isWebSocketsAvailable){warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");}isSkipPollConnection=true;}if(isSkipPollConnection){this.transports_=[WebSocketConnection];}else{var transports=this.transports_=[];try{for(var _b=__values(TransportManager.ALL_TRANSPORTS),_c=_b.next();!_c.done;_c=_b.next()){var transport=_c.value;if(transport&&transport['isAvailable']()){transports.push(transport);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}}};/**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */TransportManager.prototype.initialTransport=function(){if(this.transports_.length>0){return this.transports_[0];}else{throw new Error('No transports available');}};/**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */TransportManager.prototype.upgradeTransport=function(){if(this.transports_.length>1){return this.transports_[1];}else{return null;}};return TransportManager;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Abort upgrade attempt if it takes longer than 60s.\nvar UPGRADE_TIMEOUT=60000;// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS=5000;// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nvar BYTES_SENT_HEALTHY_OVERRIDE=10*1024;var BYTES_RECEIVED_HEALTHY_OVERRIDE=100*1024;var MESSAGE_TYPE='t';var MESSAGE_DATA='d';var CONTROL_SHUTDOWN='s';var CONTROL_RESET='r';var CONTROL_ERROR='e';var CONTROL_PONG='o';var SWITCH_ACK='a';var END_TRANSMISSION='n';var PING='p';var SERVER_HELLO='h';/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */var Connection=/** @class */function(){/**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */function Connection(id,repoInfo_,applicationId_,onMessage_,onReady_,onDisconnect_,onKill_,lastSessionId){this.id=id;this.repoInfo_=repoInfo_;this.applicationId_=applicationId_;this.onMessage_=onMessage_;this.onReady_=onReady_;this.onDisconnect_=onDisconnect_;this.onKill_=onKill_;this.lastSessionId=lastSessionId;this.connectionCount=0;this.pendingDataMessages=[];this.state_=0/* CONNECTING */;this.log_=logWrapper('c:'+this.id+':');this.transportManager_=new TransportManager(repoInfo_);this.log_('Connection created');this.start_();}/**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */Connection.prototype.start_=function(){var _this=this;var conn=this.transportManager_.initialTransport();this.conn_=new conn(this.nextTransportId_(),this.repoInfo_,this.applicationId_,undefined,this.lastSessionId);// For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n// can consider the transport healthy.\nthis.primaryResponsesRequired_=conn['responsesRequiredToBeHealthy']||0;var onMessageReceived=this.connReceiver_(this.conn_);var onConnectionLost=this.disconnReceiver_(this.conn_);this.tx_=this.conn_;this.rx_=this.conn_;this.secondaryConn_=null;this.isHealthy_=false;/*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */setTimeout(function(){// this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n_this.conn_&&_this.conn_.open(onMessageReceived,onConnectionLost);},Math.floor(0));var healthyTimeoutMS=conn['healthyTimeout']||0;if(healthyTimeoutMS>0){this.healthyTimeout_=setTimeoutNonBlocking(function(){_this.healthyTimeout_=null;if(!_this.isHealthy_){if(_this.conn_&&_this.conn_.bytesReceived>BYTES_RECEIVED_HEALTHY_OVERRIDE){_this.log_('Connection exceeded healthy timeout but has received '+_this.conn_.bytesReceived+' bytes.  Marking connection healthy.');_this.isHealthy_=true;_this.conn_.markConnectionHealthy();}else if(_this.conn_&&_this.conn_.bytesSent>BYTES_SENT_HEALTHY_OVERRIDE){_this.log_('Connection exceeded healthy timeout but has sent '+_this.conn_.bytesSent+' bytes.  Leaving connection alive.');// NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n// the server.\n}else{_this.log_('Closing unhealthy connection after timeout.');_this.close();}}// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(healthyTimeoutMS));}};/**\r\n     * @return {!string}\r\n     * @private\r\n     */Connection.prototype.nextTransportId_=function(){return'c:'+this.id+':'+this.connectionCount++;};Connection.prototype.disconnReceiver_=function(conn){var _this=this;return function(everConnected){if(conn===_this.conn_){_this.onConnectionLost_(everConnected);}else if(conn===_this.secondaryConn_){_this.log_('Secondary connection lost.');_this.onSecondaryConnectionLost_();}else{_this.log_('closing an old connection');}};};Connection.prototype.connReceiver_=function(conn){var _this=this;return function(message){if(_this.state_!==2/* DISCONNECTED */){if(conn===_this.rx_){_this.onPrimaryMessageReceived_(message);}else if(conn===_this.secondaryConn_){_this.onSecondaryMessageReceived_(message);}else{_this.log_('message on old connection');}}};};/**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */Connection.prototype.sendRequest=function(dataMsg){// wrap in a data message envelope and send it on\nvar msg={t:'d',d:dataMsg};this.sendData_(msg);};Connection.prototype.tryCleanupConnection=function(){if(this.tx_===this.secondaryConn_&&this.rx_===this.secondaryConn_){this.log_('cleaning up and promoting a connection: '+this.secondaryConn_.connId);this.conn_=this.secondaryConn_;this.secondaryConn_=null;// the server will shutdown the old connection\n}};Connection.prototype.onSecondaryControl_=function(controlData){if(MESSAGE_TYPE in controlData){var cmd=controlData[MESSAGE_TYPE];if(cmd===SWITCH_ACK){this.upgradeIfSecondaryHealthy_();}else if(cmd===CONTROL_RESET){// Most likely the session wasn't valid. Abandon the switch attempt\nthis.log_('Got a reset on secondary, closing it');this.secondaryConn_.close();// If we were already using this connection for something, than we need to fully close\nif(this.tx_===this.secondaryConn_||this.rx_===this.secondaryConn_){this.close();}}else if(cmd===CONTROL_PONG){this.log_('got pong on secondary.');this.secondaryResponsesRequired_--;this.upgradeIfSecondaryHealthy_();}}};Connection.prototype.onSecondaryMessageReceived_=function(parsedData){var layer=requireKey('t',parsedData);var data=requireKey('d',parsedData);if(layer==='c'){this.onSecondaryControl_(data);}else if(layer==='d'){// got a data message, but we're still second connection. Need to buffer it up\nthis.pendingDataMessages.push(data);}else{throw new Error('Unknown protocol layer: '+layer);}};Connection.prototype.upgradeIfSecondaryHealthy_=function(){if(this.secondaryResponsesRequired_<=0){this.log_('Secondary connection is healthy.');this.isHealthy_=true;this.secondaryConn_.markConnectionHealthy();this.proceedWithUpgrade_();}else{// Send a ping to make sure the connection is healthy.\nthis.log_('sending ping on secondary.');this.secondaryConn_.send({t:'c',d:{t:PING,d:{}}});}};Connection.prototype.proceedWithUpgrade_=function(){// tell this connection to consider itself open\nthis.secondaryConn_.start();// send ack\nthis.log_('sending client ack on secondary');this.secondaryConn_.send({t:'c',d:{t:SWITCH_ACK,d:{}}});// send end packet on primary transport, switch to sending on this one\n// can receive on this one, buffer responses until end received on primary transport\nthis.log_('Ending transmission on primary');this.conn_.send({t:'c',d:{t:END_TRANSMISSION,d:{}}});this.tx_=this.secondaryConn_;this.tryCleanupConnection();};Connection.prototype.onPrimaryMessageReceived_=function(parsedData){// Must refer to parsedData properties in quotes, so closure doesn't touch them.\nvar layer=requireKey('t',parsedData);var data=requireKey('d',parsedData);if(layer==='c'){this.onControl_(data);}else if(layer==='d'){this.onDataMessage_(data);}};Connection.prototype.onDataMessage_=function(message){this.onPrimaryResponse_();// We don't do anything with data messages, just kick them up a level\nthis.onMessage_(message);};Connection.prototype.onPrimaryResponse_=function(){if(!this.isHealthy_){this.primaryResponsesRequired_--;if(this.primaryResponsesRequired_<=0){this.log_('Primary connection is healthy.');this.isHealthy_=true;this.conn_.markConnectionHealthy();}}};Connection.prototype.onControl_=function(controlData){var cmd=requireKey(MESSAGE_TYPE,controlData);if(MESSAGE_DATA in controlData){var payload=controlData[MESSAGE_DATA];if(cmd===SERVER_HELLO){this.onHandshake_(payload);}else if(cmd===END_TRANSMISSION){this.log_('recvd end transmission on primary');this.rx_=this.secondaryConn_;for(var i=0;i<this.pendingDataMessages.length;++i){this.onDataMessage_(this.pendingDataMessages[i]);}this.pendingDataMessages=[];this.tryCleanupConnection();}else if(cmd===CONTROL_SHUTDOWN){// This was previously the 'onKill' callback passed to the lower-level connection\n// payload in this case is the reason for the shutdown. Generally a human-readable error\nthis.onConnectionShutdown_(payload);}else if(cmd===CONTROL_RESET){// payload in this case is the host we should contact\nthis.onReset_(payload);}else if(cmd===CONTROL_ERROR){error('Server Error: '+payload);}else if(cmd===CONTROL_PONG){this.log_('got pong on primary.');this.onPrimaryResponse_();this.sendPingOnPrimaryIfNecessary_();}else{error('Unknown control packet command: '+cmd);}}};/**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */Connection.prototype.onHandshake_=function(handshake){var timestamp=handshake.ts;var version=handshake.v;var host=handshake.h;this.sessionId=handshake.s;this.repoInfo_.updateHost(host);// if we've already closed the connection, then don't bother trying to progress further\nif(this.state_===0/* CONNECTING */){this.conn_.start();this.onConnectionEstablished_(this.conn_,timestamp);if(PROTOCOL_VERSION!==version){warn('Protocol version mismatch detected');}// TODO: do we want to upgrade? when? maybe a delay?\nthis.tryStartUpgrade_();}};Connection.prototype.tryStartUpgrade_=function(){var conn=this.transportManager_.upgradeTransport();if(conn){this.startUpgrade_(conn);}};Connection.prototype.startUpgrade_=function(conn){var _this=this;this.secondaryConn_=new conn(this.nextTransportId_(),this.repoInfo_,this.applicationId_,this.sessionId);// For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n// can consider the transport healthy.\nthis.secondaryResponsesRequired_=conn['responsesRequiredToBeHealthy']||0;var onMessage=this.connReceiver_(this.secondaryConn_);var onDisconnect=this.disconnReceiver_(this.secondaryConn_);this.secondaryConn_.open(onMessage,onDisconnect);// If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\nsetTimeoutNonBlocking(function(){if(_this.secondaryConn_){_this.log_('Timed out trying to upgrade.');_this.secondaryConn_.close();}},Math.floor(UPGRADE_TIMEOUT));};Connection.prototype.onReset_=function(host){this.log_('Reset packet received.  New host: '+host);this.repoInfo_.updateHost(host);// TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n// We don't currently support resets after the connection has already been established\nif(this.state_===1/* CONNECTED */){this.close();}else{// Close whatever connections we have open and start again.\nthis.closeConnections_();this.start_();}};Connection.prototype.onConnectionEstablished_=function(conn,timestamp){var _this=this;this.log_('Realtime connection established.');this.conn_=conn;this.state_=1/* CONNECTED */;if(this.onReady_){this.onReady_(timestamp,this.sessionId);this.onReady_=null;}// If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n// send some pings.\nif(this.primaryResponsesRequired_===0){this.log_('Primary connection is healthy.');this.isHealthy_=true;}else{setTimeoutNonBlocking(function(){_this.sendPingOnPrimaryIfNecessary_();},Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));}};Connection.prototype.sendPingOnPrimaryIfNecessary_=function(){// If the connection isn't considered healthy yet, we'll send a noop ping packet request.\nif(!this.isHealthy_&&this.state_===1/* CONNECTED */){this.log_('sending ping on primary.');this.sendData_({t:'c',d:{t:PING,d:{}}});}};Connection.prototype.onSecondaryConnectionLost_=function(){var conn=this.secondaryConn_;this.secondaryConn_=null;if(this.tx_===conn||this.rx_===conn){// we are relying on this connection already in some capacity. Therefore, a failure is real\nthis.close();}};/**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */Connection.prototype.onConnectionLost_=function(everConnected){this.conn_=null;// NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n// called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\nif(!everConnected&&this.state_===0/* CONNECTING */){this.log_('Realtime connection failed.');// Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\nif(this.repoInfo_.isCacheableHost()){PersistentStorage.remove('host:'+this.repoInfo_.host);// reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\nthis.repoInfo_.internalHost=this.repoInfo_.host;}}else if(this.state_===1/* CONNECTED */){this.log_('Realtime connection lost.');}this.close();};/**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */Connection.prototype.onConnectionShutdown_=function(reason){this.log_('Connection shutdown command received. Shutting down...');if(this.onKill_){this.onKill_(reason);this.onKill_=null;}// We intentionally don't want to fire onDisconnect (kill is a different case),\n// so clear the callback.\nthis.onDisconnect_=null;this.close();};Connection.prototype.sendData_=function(data){if(this.state_!==1/* CONNECTED */){throw'Connection is not connected';}else{this.tx_.send(data);}};/**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */Connection.prototype.close=function(){if(this.state_!==2/* DISCONNECTED */){this.log_('Closing realtime connection.');this.state_=2/* DISCONNECTED */;this.closeConnections_();if(this.onDisconnect_){this.onDisconnect_();this.onDisconnect_=null;}}};/**\r\n     *\r\n     * @private\r\n     */Connection.prototype.closeConnections_=function(){this.log_('Shutting down all connections');if(this.conn_){this.conn_.close();this.conn_=null;}if(this.secondaryConn_){this.secondaryConn_.close();this.secondaryConn_=null;}if(this.healthyTimeout_){clearTimeout(this.healthyTimeout_);this.healthyTimeout_=null;}};return Connection;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */var ServerActions=/** @class */function(){function ServerActions(){}/**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */ServerActions.prototype.put=function(pathString,data,onComplete,hash){};/**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */ServerActions.prototype.merge=function(pathString,data,onComplete,hash){};/**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */ServerActions.prototype.refreshAuthToken=function(token){};/**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */ServerActions.prototype.onDisconnectPut=function(pathString,data,onComplete){};/**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */ServerActions.prototype.onDisconnectMerge=function(pathString,data,onComplete){};/**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */ServerActions.prototype.onDisconnectCancel=function(pathString,onComplete){};/**\r\n     * @param {Object.<string, *>} stats\r\n     */ServerActions.prototype.reportStats=function(stats){};return ServerActions;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var RECONNECT_MIN_DELAY=1000;var RECONNECT_MAX_DELAY_DEFAULT=60*5*1000;// 5 minutes in milliseconds (Case: 1858)\nvar GET_CONNECT_TIMEOUT=3*1000;var RECONNECT_MAX_DELAY_FOR_ADMINS=30*1000;// 30 seconds for admin clients (likely to be a backend server)\nvar RECONNECT_DELAY_MULTIPLIER=1.3;var RECONNECT_DELAY_RESET_TIMEOUT=30000;// Reset delay back to MIN_DELAY after being connected for 30sec.\nvar SERVER_KILL_INTERRUPT_REASON='server_kill';// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nvar INVALID_AUTH_TOKEN_THRESHOLD=3;/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */var PersistentConnection=/** @class */function(_super){__extends(PersistentConnection,_super);/**\r\n     * @implements {ServerActions}\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param applicationId_ The Firebase App ID for this project\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */function PersistentConnection(repoInfo_,applicationId_,onDataUpdate_,onConnectStatus_,onServerInfoUpdate_,authTokenProvider_,authOverride_){var _this=_super.call(this)||this;_this.repoInfo_=repoInfo_;_this.applicationId_=applicationId_;_this.onDataUpdate_=onDataUpdate_;_this.onConnectStatus_=onConnectStatus_;_this.onServerInfoUpdate_=onServerInfoUpdate_;_this.authTokenProvider_=authTokenProvider_;_this.authOverride_=authOverride_;// Used for diagnostic logging.\n_this.id=PersistentConnection.nextPersistentConnectionId_++;_this.log_=logWrapper('p:'+_this.id+':');_this.interruptReasons_={};/** Map<path, Map<queryId, ListenSpec>> */_this.listens=new Map();_this.outstandingPuts_=[];_this.outstandingGets_=[];_this.outstandingPutCount_=0;_this.outstandingGetCount_=0;_this.onDisconnectRequestQueue_=[];_this.connected_=false;_this.reconnectDelay_=RECONNECT_MIN_DELAY;_this.maxReconnectDelay_=RECONNECT_MAX_DELAY_DEFAULT;_this.securityDebugCallback_=null;_this.lastSessionId=null;_this.establishConnectionTimer_=null;_this.visible_=false;// Before we get connected, we keep a queue of pending messages to send.\n_this.requestCBHash_={};_this.requestNumber_=0;_this.realtime_=null;_this.authToken_=null;_this.forceTokenRefresh_=false;_this.invalidAuthTokenCount_=0;_this.firstConnection_=true;_this.lastConnectionAttemptTime_=null;_this.lastConnectionEstablishedTime_=null;if(authOverride_&&!isNodeSdk()){throw new Error('Auth override specified in options, but not supported on non Node.js platforms');}_this.scheduleConnect_(0);VisibilityMonitor.getInstance().on('visible',_this.onVisible_,_this);if(repoInfo_.host.indexOf('fblocal')===-1){OnlineMonitor.getInstance().on('online',_this.onOnline_,_this);}return _this;}PersistentConnection.prototype.sendRequest=function(action,body,onResponse){var curReqNum=++this.requestNumber_;var msg={r:curReqNum,a:action,b:body};this.log_(stringify(msg));assert(this.connected_,\"sendRequest call when we're not connected not allowed.\");this.realtime_.sendRequest(msg);if(onResponse){this.requestCBHash_[curReqNum]=onResponse;}};PersistentConnection.prototype.get=function(query){var _this=this;var deferred=new Deferred();var request={p:query.path.toString(),q:query.queryObject()};var outstandingGet={action:'g',request:request,onComplete:function(message){var payload=message['d'];if(message['s']==='ok'){_this.onDataUpdate_(request['p'],payload,/*isMerge*/false,/*tag*/null);deferred.resolve(payload);}else{deferred.reject(payload);}}};this.outstandingGets_.push(outstandingGet);this.outstandingGetCount_++;var index=this.outstandingGets_.length-1;if(!this.connected_){setTimeout(function(){var get=_this.outstandingGets_[index];if(get===undefined||outstandingGet!==get){return;}delete _this.outstandingGets_[index];_this.outstandingGetCount_--;if(_this.outstandingGetCount_===0){_this.outstandingGets_=[];}_this.log_('get '+index+' timed out on connection');deferred.reject(new Error('Client is offline.'));},GET_CONNECT_TIMEOUT);}if(this.connected_){this.sendGet_(index);}return deferred.promise;};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.listen=function(query,currentHashFn,tag,onComplete){var queryId=query.queryIdentifier();var pathString=query.path.toString();this.log_('Listen called for '+pathString+' '+queryId);if(!this.listens.has(pathString)){this.listens.set(pathString,new Map());}assert(query.getQueryParams().isDefault()||!query.getQueryParams().loadsAllData(),'listen() called for non-default but complete query');assert(!this.listens.get(pathString).has(queryId),'listen() called twice for same path/queryId.');var listenSpec={onComplete:onComplete,hashFn:currentHashFn,query:query,tag:tag};this.listens.get(pathString).set(queryId,listenSpec);if(this.connected_){this.sendListen_(listenSpec);}};PersistentConnection.prototype.sendGet_=function(index){var _this=this;var get=this.outstandingGets_[index];this.sendRequest('g',get.request,function(message){delete _this.outstandingGets_[index];_this.outstandingGetCount_--;if(_this.outstandingGetCount_===0){_this.outstandingGets_=[];}if(get.onComplete){get.onComplete(message);}});};PersistentConnection.prototype.sendListen_=function(listenSpec){var _this=this;var query=listenSpec.query;var pathString=query.path.toString();var queryId=query.queryIdentifier();this.log_('Listen on '+pathString+' for '+queryId);var req={/*path*/p:pathString};var action='q';// Only bother to send query if it's non-default.\nif(listenSpec.tag){req['q']=query.queryObject();req['t']=listenSpec.tag;}req[/*hash*/'h']=listenSpec.hashFn();this.sendRequest(action,req,function(message){var payload=message[/*data*/'d'];var status=message[/*status*/'s'];// print warnings in any case...\nPersistentConnection.warnOnListenWarnings_(payload,query);var currentListenSpec=_this.listens.get(pathString)&&_this.listens.get(pathString).get(queryId);// only trigger actions if the listen hasn't been removed and readded\nif(currentListenSpec===listenSpec){_this.log_('listen response',message);if(status!=='ok'){_this.removeListen_(pathString,queryId);}if(listenSpec.onComplete){listenSpec.onComplete(status,payload);}}});};PersistentConnection.warnOnListenWarnings_=function(payload,query){if(payload&&typeof payload==='object'&&contains(payload,'w')){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar warnings=safeGet(payload,'w');if(Array.isArray(warnings)&&~warnings.indexOf('no_index')){var indexSpec='\".indexOn\": \"'+query.getQueryParams().getIndex().toString()+'\"';var indexPath=query.path.toString();warn(\"Using an unspecified index. Your data will be downloaded and \"+(\"filtered on the client. Consider adding \"+indexSpec+\" at \")+(indexPath+\" to your security rules for better performance.\"));}}};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.refreshAuthToken=function(token){this.authToken_=token;this.log_('Auth token refreshed');if(this.authToken_){this.tryAuth();}else{//If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n//the credential so we dont become authenticated next time we connect.\nif(this.connected_){this.sendRequest('unauth',{},function(){});}}this.reduceReconnectDelayIfAdminCredential_(token);};PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_=function(credential){// NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n// Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\nvar isFirebaseSecret=credential&&credential.length===40;if(isFirebaseSecret||isAdmin(credential)){this.log_('Admin auth credential detected.  Reducing max reconnect time.');this.maxReconnectDelay_=RECONNECT_MAX_DELAY_FOR_ADMINS;}};/**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */PersistentConnection.prototype.tryAuth=function(){var _this=this;if(this.connected_&&this.authToken_){var token_1=this.authToken_;var authMethod=isValidFormat(token_1)?'auth':'gauth';var requestData={cred:token_1};if(this.authOverride_===null){requestData['noauth']=true;}else if(typeof this.authOverride_==='object'){requestData['authvar']=this.authOverride_;}this.sendRequest(authMethod,requestData,function(res){var status=res[/*status*/'s'];var data=res[/*data*/'d']||'error';if(_this.authToken_===token_1){if(status==='ok'){_this.invalidAuthTokenCount_=0;}else{// Triggers reconnect and force refresh for auth token\n_this.onAuthRevoked_(status,data);}}});}};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.unlisten=function(query,tag){var pathString=query.path.toString();var queryId=query.queryIdentifier();this.log_('Unlisten called for '+pathString+' '+queryId);assert(query.getQueryParams().isDefault()||!query.getQueryParams().loadsAllData(),'unlisten() called for non-default but complete query');var listen=this.removeListen_(pathString,queryId);if(listen&&this.connected_){this.sendUnlisten_(pathString,queryId,query.queryObject(),tag);}};PersistentConnection.prototype.sendUnlisten_=function(pathString,queryId,queryObj,tag){this.log_('Unlisten on '+pathString+' for '+queryId);var req={/*path*/p:pathString};var action='n';// Only bother sending queryId if it's non-default.\nif(tag){req['q']=queryObj;req['t']=tag;}this.sendRequest(action,req);};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.onDisconnectPut=function(pathString,data,onComplete){if(this.connected_){this.sendOnDisconnect_('o',pathString,data,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'o',data:data,onComplete:onComplete});}};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.onDisconnectMerge=function(pathString,data,onComplete){if(this.connected_){this.sendOnDisconnect_('om',pathString,data,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'om',data:data,onComplete:onComplete});}};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.onDisconnectCancel=function(pathString,onComplete){if(this.connected_){this.sendOnDisconnect_('oc',pathString,null,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'oc',data:null,onComplete:onComplete});}};PersistentConnection.prototype.sendOnDisconnect_=function(action,pathString,data,onComplete){var request={/*path*/p:pathString,/*data*/d:data};this.log_('onDisconnect '+action,request);this.sendRequest(action,request,function(response){if(onComplete){setTimeout(function(){onComplete(response[/*status*/'s'],response[/* data */'d']);},Math.floor(0));}});};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.put=function(pathString,data,onComplete,hash){this.putInternal('p',pathString,data,onComplete,hash);};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.merge=function(pathString,data,onComplete,hash){this.putInternal('m',pathString,data,onComplete,hash);};PersistentConnection.prototype.putInternal=function(action,pathString,data,onComplete,hash){var request={/*path*/p:pathString,/*data*/d:data};if(hash!==undefined){request[/*hash*/'h']=hash;}// TODO: Only keep track of the most recent put for a given path?\nthis.outstandingPuts_.push({action:action,request:request,onComplete:onComplete});this.outstandingPutCount_++;var index=this.outstandingPuts_.length-1;if(this.connected_){this.sendPut_(index);}else{this.log_('Buffering put: '+pathString);}};PersistentConnection.prototype.sendPut_=function(index){var _this=this;var action=this.outstandingPuts_[index].action;var request=this.outstandingPuts_[index].request;var onComplete=this.outstandingPuts_[index].onComplete;this.outstandingPuts_[index].queued=this.connected_;this.sendRequest(action,request,function(message){_this.log_(action+' response',message);delete _this.outstandingPuts_[index];_this.outstandingPutCount_--;// Clean up array occasionally.\nif(_this.outstandingPutCount_===0){_this.outstandingPuts_=[];}if(onComplete){onComplete(message[/*status*/'s'],message[/* data */'d']);}});};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.reportStats=function(stats){var _this=this;// If we're not connected, we just drop the stats.\nif(this.connected_){var request={/*counters*/c:stats};this.log_('reportStats',request);this.sendRequest(/*stats*/'s',request,function(result){var status=result[/*status*/'s'];if(status!=='ok'){var errorReason=result[/* data */'d'];_this.log_('reportStats','Error sending stats: '+errorReason);}});}};PersistentConnection.prototype.onDataMessage_=function(message){if('r'in message){// this is a response\nthis.log_('from server: '+stringify(message));var reqNum=message['r'];var onResponse=this.requestCBHash_[reqNum];if(onResponse){delete this.requestCBHash_[reqNum];onResponse(message[/*body*/'b']);}}else if('error'in message){throw'A server-side error has occurred: '+message['error'];}else if('a'in message){// a and b are action and body, respectively\nthis.onDataPush_(message['a'],message['b']);}};PersistentConnection.prototype.onDataPush_=function(action,body){this.log_('handleServerMessage',action,body);if(action==='d'){this.onDataUpdate_(body[/*path*/'p'],body[/*data*/'d'],/*isMerge*/false,body['t']);}else if(action==='m'){this.onDataUpdate_(body[/*path*/'p'],body[/*data*/'d'],/*isMerge=*/true,body['t']);}else if(action==='c'){this.onListenRevoked_(body[/*path*/'p'],body[/*query*/'q']);}else if(action==='ac'){this.onAuthRevoked_(body[/*status code*/'s'],body[/* explanation */'d']);}else if(action==='sd'){this.onSecurityDebugPacket_(body);}else{error('Unrecognized action received from server: '+stringify(action)+'\\nAre you using the latest client?');}};PersistentConnection.prototype.onReady_=function(timestamp,sessionId){this.log_('connection ready');this.connected_=true;this.lastConnectionEstablishedTime_=new Date().getTime();this.handleTimestamp_(timestamp);this.lastSessionId=sessionId;if(this.firstConnection_){this.sendConnectStats_();}this.restoreState_();this.firstConnection_=false;this.onConnectStatus_(true);};PersistentConnection.prototype.scheduleConnect_=function(timeout){var _this=this;assert(!this.realtime_,\"Scheduling a connect when we're already connected/ing?\");if(this.establishConnectionTimer_){clearTimeout(this.establishConnectionTimer_);}// NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n// Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\nthis.establishConnectionTimer_=setTimeout(function(){_this.establishConnectionTimer_=null;_this.establishConnection_();// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(timeout));};PersistentConnection.prototype.onVisible_=function(visible){// NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\nif(visible&&!this.visible_&&this.reconnectDelay_===this.maxReconnectDelay_){this.log_('Window became visible.  Reducing delay.');this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}this.visible_=visible;};PersistentConnection.prototype.onOnline_=function(online){if(online){this.log_('Browser went online.');this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}else{this.log_('Browser went offline.  Killing connection.');if(this.realtime_){this.realtime_.close();}}};PersistentConnection.prototype.onRealtimeDisconnect_=function(){this.log_('data client disconnected');this.connected_=false;this.realtime_=null;// Since we don't know if our sent transactions succeeded or not, we need to cancel them.\nthis.cancelSentTransactions_();// Clear out the pending requests.\nthis.requestCBHash_={};if(this.shouldReconnect_()){if(!this.visible_){this.log_(\"Window isn't visible.  Delaying reconnect.\");this.reconnectDelay_=this.maxReconnectDelay_;this.lastConnectionAttemptTime_=new Date().getTime();}else if(this.lastConnectionEstablishedTime_){// If we've been connected long enough, reset reconnect delay to minimum.\nvar timeSinceLastConnectSucceeded=new Date().getTime()-this.lastConnectionEstablishedTime_;if(timeSinceLastConnectSucceeded>RECONNECT_DELAY_RESET_TIMEOUT){this.reconnectDelay_=RECONNECT_MIN_DELAY;}this.lastConnectionEstablishedTime_=null;}var timeSinceLastConnectAttempt=new Date().getTime()-this.lastConnectionAttemptTime_;var reconnectDelay=Math.max(0,this.reconnectDelay_-timeSinceLastConnectAttempt);reconnectDelay=Math.random()*reconnectDelay;this.log_('Trying to reconnect in '+reconnectDelay+'ms');this.scheduleConnect_(reconnectDelay);// Adjust reconnect delay for next time.\nthis.reconnectDelay_=Math.min(this.maxReconnectDelay_,this.reconnectDelay_*RECONNECT_DELAY_MULTIPLIER);}this.onConnectStatus_(false);};PersistentConnection.prototype.establishConnection_=function(){var _this=this;if(this.shouldReconnect_()){this.log_('Making a connection attempt');this.lastConnectionAttemptTime_=new Date().getTime();this.lastConnectionEstablishedTime_=null;var onDataMessage_1=this.onDataMessage_.bind(this);var onReady_1=this.onReady_.bind(this);var onDisconnect_1=this.onRealtimeDisconnect_.bind(this);var connId_1=this.id+':'+PersistentConnection.nextConnectionId_++;var self_1=this;var lastSessionId_1=this.lastSessionId;var canceled_1=false;var connection_1=null;var closeFn_1=function(){if(connection_1){connection_1.close();}else{canceled_1=true;onDisconnect_1();}};var sendRequestFn=function(msg){assert(connection_1,\"sendRequest call when we're not connected not allowed.\");connection_1.sendRequest(msg);};this.realtime_={close:closeFn_1,sendRequest:sendRequestFn};var forceRefresh=this.forceTokenRefresh_;this.forceTokenRefresh_=false;// First fetch auth token, and establish connection after fetching the token was successful\nthis.authTokenProvider_.getToken(forceRefresh).then(function(result){if(!canceled_1){log('getToken() completed. Creating connection.');self_1.authToken_=result&&result.accessToken;connection_1=new Connection(connId_1,self_1.repoInfo_,self_1.applicationId_,onDataMessage_1,onReady_1,onDisconnect_1,/* onKill= */function(reason){warn(reason+' ('+self_1.repoInfo_.toString()+')');self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);},lastSessionId_1);}else{log('getToken() completed but was canceled');}}).then(null,function(error){self_1.log_('Failed to get token: '+error);if(!canceled_1){if(_this.repoInfo_.nodeAdmin){// This may be a critical error for the Admin Node.js SDK, so log a warning.\n// But getToken() may also just have temporarily failed, so we still want to\n// continue retrying.\nwarn(error);}closeFn_1();}});}};PersistentConnection.prototype.interrupt=function(reason){log('Interrupting connection for reason: '+reason);this.interruptReasons_[reason]=true;if(this.realtime_){this.realtime_.close();}else{if(this.establishConnectionTimer_){clearTimeout(this.establishConnectionTimer_);this.establishConnectionTimer_=null;}if(this.connected_){this.onRealtimeDisconnect_();}}};PersistentConnection.prototype.resume=function(reason){log('Resuming connection for reason: '+reason);delete this.interruptReasons_[reason];if(isEmpty(this.interruptReasons_)){this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}};PersistentConnection.prototype.handleTimestamp_=function(timestamp){var delta=timestamp-new Date().getTime();this.onServerInfoUpdate_({serverTimeOffset:delta});};PersistentConnection.prototype.cancelSentTransactions_=function(){for(var i=0;i<this.outstandingPuts_.length;i++){var put=this.outstandingPuts_[i];if(put&&/*hash*/'h'in put.request&&put.queued){if(put.onComplete){put.onComplete('disconnect');}delete this.outstandingPuts_[i];this.outstandingPutCount_--;}}// Clean up array occasionally.\nif(this.outstandingPutCount_===0){this.outstandingPuts_=[];}};PersistentConnection.prototype.onListenRevoked_=function(pathString,query){// Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\nvar queryId;if(!query){queryId='default';}else{queryId=query.map(function(q){return ObjectToUniqueKey(q);}).join('$');}var listen=this.removeListen_(pathString,queryId);if(listen&&listen.onComplete){listen.onComplete('permission_denied');}};PersistentConnection.prototype.removeListen_=function(pathString,queryId){var normalizedPathString=new Path(pathString).toString();// normalize path.\nvar listen;if(this.listens.has(normalizedPathString)){var map=this.listens.get(normalizedPathString);listen=map.get(queryId);map.delete(queryId);if(map.size===0){this.listens.delete(normalizedPathString);}}else{// all listens for this path has already been removed\nlisten=undefined;}return listen;};PersistentConnection.prototype.onAuthRevoked_=function(statusCode,explanation){log('Auth token revoked: '+statusCode+'/'+explanation);this.authToken_=null;this.forceTokenRefresh_=true;this.realtime_.close();if(statusCode==='invalid_token'||statusCode==='permission_denied'){// We'll wait a couple times before logging the warning / increasing the\n// retry period since oauth tokens will report as \"invalid\" if they're\n// just expired. Plus there may be transient issues that resolve themselves.\nthis.invalidAuthTokenCount_++;if(this.invalidAuthTokenCount_>=INVALID_AUTH_TOKEN_THRESHOLD){// Set a long reconnect delay because recovery is unlikely\nthis.reconnectDelay_=RECONNECT_MAX_DELAY_FOR_ADMINS;// Notify the auth token provider that the token is invalid, which will log\n// a warning\nthis.authTokenProvider_.notifyForInvalidToken();}}};PersistentConnection.prototype.onSecurityDebugPacket_=function(body){if(this.securityDebugCallback_){this.securityDebugCallback_(body);}else{if('msg'in body){console.log('FIREBASE: '+body['msg'].replace('\\n','\\nFIREBASE: '));}}};PersistentConnection.prototype.restoreState_=function(){var e_1,_a,e_2,_b;//Re-authenticate ourselves if we have a credential stored.\nthis.tryAuth();try{// Puts depend on having received the corresponding data update from the server before they complete, so we must\n// make sure to send listens before puts.\nfor(var _c=__values(this.listens.values()),_d=_c.next();!_d.done;_d=_c.next()){var queries=_d.value;try{for(var _e=(e_2=void 0,__values(queries.values())),_f=_e.next();!_f.done;_f=_e.next()){var listenSpec=_f.value;this.sendListen_(listenSpec);}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_f&&!_f.done&&(_b=_e.return))_b.call(_e);}finally{if(e_2)throw e_2.error;}}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c);}finally{if(e_1)throw e_1.error;}}for(var i=0;i<this.outstandingPuts_.length;i++){if(this.outstandingPuts_[i]){this.sendPut_(i);}}while(this.onDisconnectRequestQueue_.length){var request=this.onDisconnectRequestQueue_.shift();this.sendOnDisconnect_(request.action,request.pathString,request.data,request.onComplete);}for(var i=0;i<this.outstandingGets_.length;i++){if(this.outstandingGets_[i]){this.sendGet_(i);}}};/**\r\n     * Sends client stats for first connection\r\n     */PersistentConnection.prototype.sendConnectStats_=function(){var stats={};var clientName='js';if(isNodeSdk()){if(this.repoInfo_.nodeAdmin){clientName='admin_node';}else{clientName='node';}}stats['sdk.'+clientName+'.'+SDK_VERSION.replace(/\\./g,'-')]=1;if(isMobileCordova()){stats['framework.cordova']=1;}else if(isReactNative()){stats['framework.reactnative']=1;}this.reportStats(stats);};PersistentConnection.prototype.shouldReconnect_=function(){var online=OnlineMonitor.getInstance().currentlyOnline();return isEmpty(this.interruptReasons_)&&online;};PersistentConnection.nextPersistentConnectionId_=0;/**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */PersistentConnection.nextConnectionId_=0;return PersistentConnection;}(ServerActions);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */var ReadonlyRestClient=/** @class */function(_super){__extends(ReadonlyRestClient,_super);/**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */function ReadonlyRestClient(repoInfo_,onDataUpdate_,authTokenProvider_){var _this=_super.call(this)||this;_this.repoInfo_=repoInfo_;_this.onDataUpdate_=onDataUpdate_;_this.authTokenProvider_=authTokenProvider_;/** @private {function(...[*])} */_this.log_=logWrapper('p:rest:');/**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */_this.listens_={};return _this;}ReadonlyRestClient.prototype.reportStats=function(stats){throw new Error('Method not implemented.');};/**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */ReadonlyRestClient.getListenId_=function(query,tag){if(tag!==undefined){return'tag$'+tag;}else{assert(query.getQueryParams().isDefault(),\"should have a tag if it's not a default query.\");return query.path.toString();}};/** @inheritDoc */ReadonlyRestClient.prototype.listen=function(query,currentHashFn,tag,onComplete){var _this=this;var pathString=query.path.toString();this.log_('Listen called for '+pathString+' '+query.queryIdentifier());// Mark this listener so we can tell if it's removed.\nvar listenId=ReadonlyRestClient.getListenId_(query,tag);var thisListen={};this.listens_[listenId]=thisListen;var queryStringParameters=query.getQueryParams().toRestQueryStringParameters();this.restRequest_(pathString+'.json',queryStringParameters,function(error,result){var data=result;if(error===404){data=null;error=null;}if(error===null){_this.onDataUpdate_(pathString,data,/*isMerge=*/false,tag);}if(safeGet(_this.listens_,listenId)===thisListen){var status_1;if(!error){status_1='ok';}else if(error===401){status_1='permission_denied';}else{status_1='rest_error:'+error;}onComplete(status_1,null);}});};/** @inheritDoc */ReadonlyRestClient.prototype.unlisten=function(query,tag){var listenId=ReadonlyRestClient.getListenId_(query,tag);delete this.listens_[listenId];};ReadonlyRestClient.prototype.get=function(query){var _this=this;var queryStringParameters=query.getQueryParams().toRestQueryStringParameters();var pathString=query.path.toString();var deferred=new Deferred();this.restRequest_(pathString+'.json',queryStringParameters,function(error,result){var data=result;if(error===404){data=null;error=null;}if(error===null){_this.onDataUpdate_(pathString,data,/*isMerge=*/false,/*tag=*/null);deferred.resolve(data);}else{deferred.reject(new Error(data));}});return deferred.promise;};/** @inheritDoc */ReadonlyRestClient.prototype.refreshAuthToken=function(token){// no-op since we just always call getToken.\n};/**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */ReadonlyRestClient.prototype.restRequest_=function(pathString,queryStringParameters,callback){var _this=this;if(queryStringParameters===void 0){queryStringParameters={};}queryStringParameters['format']='export';this.authTokenProvider_.getToken(/*forceRefresh=*/false).then(function(authTokenData){var authToken=authTokenData&&authTokenData.accessToken;if(authToken){queryStringParameters['auth']=authToken;}var url=(_this.repoInfo_.secure?'https://':'http://')+_this.repoInfo_.host+pathString+'?'+'ns='+_this.repoInfo_.namespace+querystring(queryStringParameters);_this.log_('Sending REST request for '+url);var xhr=new XMLHttpRequest();xhr.onreadystatechange=function(){if(callback&&xhr.readyState===4){_this.log_('REST Response for '+url+' received. status:',xhr.status,'response:',xhr.responseText);var res=null;if(xhr.status>=200&&xhr.status<300){try{res=jsonEval(xhr.responseText);}catch(e){warn('Failed to parse JSON response for '+url+': '+xhr.responseText);}callback(null,res);}else{// 401 and 404 are expected.\nif(xhr.status!==401&&xhr.status!==404){warn('Got unsuccessful REST response for '+url+' Status: '+xhr.status);}callback(xhr.status);}callback=null;}};xhr.open('GET',url,/*asynchronous=*/true);xhr.send();});};return ReadonlyRestClient;}(ServerActions);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var INTERRUPT_REASON='repo_interrupt';/**\r\n * A connection to a single data repository.\r\n */var Repo=/** @class */function(){function Repo(repoInfo_,forceRestClient_,app,authTokenProvider_){this.repoInfo_=repoInfo_;this.forceRestClient_=forceRestClient_;this.app=app;this.authTokenProvider_=authTokenProvider_;this.dataUpdateCount=0;this.statsListener_=null;this.eventQueue_=new EventQueue();this.nextWriteId_=1;this.interceptServerDataCallback_=null;/** A list of data pieces and paths to be set when this client disconnects. */this.onDisconnect_=new SparseSnapshotTree();// TODO: This should be @private but it's used by test_access.js and internal.js\nthis.persistentConnection_=null;// This key is intentionally not updated if RepoInfo is later changed or replaced\nthis.key=this.repoInfo_.toURLString();}Repo.prototype.start=function(){var _this=this;this.stats_=StatsManager.getCollection(this.repoInfo_);if(this.forceRestClient_||beingCrawled()){this.server_=new ReadonlyRestClient(this.repoInfo_,this.onDataUpdate_.bind(this),this.authTokenProvider_);// Minor hack: Fire onConnect immediately, since there's no actual connection.\nsetTimeout(this.onConnectStatus_.bind(this,true),0);}else{var authOverride=this.app.options['databaseAuthVariableOverride'];// Validate authOverride\nif(typeof authOverride!=='undefined'&&authOverride!==null){if(typeof authOverride!=='object'){throw new Error('Only objects are supported for option databaseAuthVariableOverride');}try{stringify(authOverride);}catch(e){throw new Error('Invalid authOverride provided: '+e);}}this.persistentConnection_=new PersistentConnection(this.repoInfo_,this.app.options.appId,this.onDataUpdate_.bind(this),this.onConnectStatus_.bind(this),this.onServerInfoUpdate_.bind(this),this.authTokenProvider_,authOverride);this.server_=this.persistentConnection_;}this.authTokenProvider_.addTokenChangeListener(function(token){_this.server_.refreshAuthToken(token);});// In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n// we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\nthis.statsReporter_=StatsManager.getOrCreateReporter(this.repoInfo_,function(){return new StatsReporter(_this.stats_,_this.server_);});this.transactionsInit_();// Used for .info.\nthis.infoData_=new SnapshotHolder();this.infoSyncTree_=new SyncTree({startListening:function(query,tag,currentHashFn,onComplete){var infoEvents=[];var node=_this.infoData_.getNode(query.path);// This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n// on initial data...\nif(!node.isEmpty()){infoEvents=_this.infoSyncTree_.applyServerOverwrite(query.path,node);setTimeout(function(){onComplete('ok');},0);}return infoEvents;},stopListening:function(){}});this.updateInfo_('connected',false);this.serverSyncTree_=new SyncTree({startListening:function(query,tag,currentHashFn,onComplete){_this.server_.listen(query,currentHashFn,tag,function(status,data){var events=onComplete(status,data);_this.eventQueue_.raiseEventsForChangedPath(query.path,events);});// No synchronous events for network-backed sync trees\nreturn[];},stopListening:function(query,tag){_this.server_.unlisten(query,tag);}});};/**\r\n     * @return The URL corresponding to the root of this Firebase.\r\n     */Repo.prototype.toString=function(){return(this.repoInfo_.secure?'https://':'http://')+this.repoInfo_.host;};/**\r\n     * @return The namespace represented by the repo.\r\n     */Repo.prototype.name=function(){return this.repoInfo_.namespace;};/**\r\n     * @return The time in milliseconds, taking the server offset into account if we have one.\r\n     */Repo.prototype.serverTime=function(){var offsetNode=this.infoData_.getNode(new Path('.info/serverTimeOffset'));var offset=offsetNode.val()||0;return new Date().getTime()+offset;};/**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     */Repo.prototype.generateServerValues=function(){return generateWithValues({timestamp:this.serverTime()});};/**\r\n     * Called by realtime when we get new messages from the server.\r\n     */Repo.prototype.onDataUpdate_=function(pathString,data,isMerge,tag){// For testing.\nthis.dataUpdateCount++;var path=new Path(pathString);data=this.interceptServerDataCallback_?this.interceptServerDataCallback_(pathString,data):data;var events=[];if(tag){if(isMerge){var taggedChildren=map(data,function(raw){return nodeFromJSON$1(raw);});events=this.serverSyncTree_.applyTaggedQueryMerge(path,taggedChildren,tag);}else{var taggedSnap=nodeFromJSON$1(data);events=this.serverSyncTree_.applyTaggedQueryOverwrite(path,taggedSnap,tag);}}else if(isMerge){var changedChildren=map(data,function(raw){return nodeFromJSON$1(raw);});events=this.serverSyncTree_.applyServerMerge(path,changedChildren);}else{var snap=nodeFromJSON$1(data);events=this.serverSyncTree_.applyServerOverwrite(path,snap);}var affectedPath=path;if(events.length>0){// Since we have a listener outstanding for each transaction, receiving any events\n// is a proxy for some change having occurred.\naffectedPath=this.rerunTransactions_(path);}this.eventQueue_.raiseEventsForChangedPath(affectedPath,events);};// TODO: This should be @private but it's used by test_access.js and internal.js\nRepo.prototype.interceptServerData_=function(callback){this.interceptServerDataCallback_=callback;};Repo.prototype.onConnectStatus_=function(connectStatus){this.updateInfo_('connected',connectStatus);if(connectStatus===false){this.runOnDisconnectEvents_();}};Repo.prototype.onServerInfoUpdate_=function(updates){var _this=this;each(updates,function(key,value){_this.updateInfo_(key,value);});};Repo.prototype.updateInfo_=function(pathString,value){var path=new Path('/.info/'+pathString);var newNode=nodeFromJSON$1(value);this.infoData_.updateSnapshot(path,newNode);var events=this.infoSyncTree_.applyServerOverwrite(path,newNode);this.eventQueue_.raiseEventsForChangedPath(path,events);};Repo.prototype.getNextWriteId_=function(){return this.nextWriteId_++;};/**\r\n     * The purpose of `getValue` is to return the latest known value\r\n     * satisfying `query`.\r\n     *\r\n     * If the client is connected, this method will send a request\r\n     * to the server. If the client is not connected, then either:\r\n     *\r\n     * 1. The client was once connected, but not anymore.\r\n     * 2. The client has never connected, this is the first operation\r\n     *    this repo is handling.\r\n     *\r\n     * In case (1), it's possible that the client still has an active\r\n     * listener, with cached data. Since this is the latest known\r\n     * value satisfying the query, that's what getValue will return.\r\n     * If there is no cached data, `getValue` surfaces an \"offline\"\r\n     * error.\r\n     *\r\n     * In case (2), `getValue` will trigger a time-limited connection\r\n     * attempt. If the client is unable to connect to the server, it\r\n     * will surface an \"offline\" error because there cannot be any\r\n     * cached data. On the other hand, if the client is able to connect,\r\n     * `getValue` will return the server's value for the query, if one\r\n     * exists.\r\n     *\r\n     * @param query - The query to surface a value for.\r\n     */Repo.prototype.getValue=function(query){var _this=this;return this.server_.get(query).then(function(payload){var node=nodeFromJSON$1(payload);var events=_this.serverSyncTree_.applyServerOverwrite(query.path,node);_this.eventQueue_.raiseEventsAtPath(query.path,events);return Promise.resolve(new DataSnapshot(node,query.getRef(),query.getQueryParams().getIndex()));},function(err){_this.log_('get for query '+stringify(query)+' falling back to cache after error: '+err);var cached=_this.serverSyncTree_.calcCompleteEventCache(query.path);if(!cached.isEmpty()){return Promise.resolve(new DataSnapshot(cached,query.getRef(),query.getQueryParams().getIndex()));}return Promise.reject(new Error(err));});};Repo.prototype.setWithPriority=function(path,newVal,newPriority,onComplete){var _this=this;this.log_('set',{path:path.toString(),value:newVal,priority:newPriority});// TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n// (b) store unresolved paths on JSON parse\nvar serverValues=this.generateServerValues();var newNodeUnresolved=nodeFromJSON$1(newVal,newPriority);var existing=this.serverSyncTree_.calcCompleteEventCache(path);var newNode=resolveDeferredValueSnapshot(newNodeUnresolved,existing,serverValues);var writeId=this.getNextWriteId_();var events=this.serverSyncTree_.applyUserOverwrite(path,newNode,writeId,true);this.eventQueue_.queueEvents(events);this.server_.put(path.toString(),newNodeUnresolved.val(/*export=*/true),function(status,errorReason){var success=status==='ok';if(!success){warn('set at '+path+' failed: '+status);}var clearEvents=_this.serverSyncTree_.ackUserWrite(writeId,!success);_this.eventQueue_.raiseEventsForChangedPath(path,clearEvents);_this.callOnCompleteCallback(onComplete,status,errorReason);});var affectedPath=this.abortTransactions_(path);this.rerunTransactions_(affectedPath);// We queued the events above, so just flush the queue here\nthis.eventQueue_.raiseEventsForChangedPath(affectedPath,[]);};Repo.prototype.update=function(path,childrenToMerge,onComplete){var _this=this;this.log_('update',{path:path.toString(),value:childrenToMerge});// Start with our existing data and merge each child into it.\nvar empty=true;var serverValues=this.generateServerValues();var changedChildren={};each(childrenToMerge,function(changedKey,changedValue){empty=false;changedChildren[changedKey]=resolveDeferredValueTree(path.child(changedKey),nodeFromJSON$1(changedValue),_this.serverSyncTree_,serverValues);});if(!empty){var writeId_1=this.getNextWriteId_();var events=this.serverSyncTree_.applyUserMerge(path,changedChildren,writeId_1);this.eventQueue_.queueEvents(events);this.server_.merge(path.toString(),childrenToMerge,function(status,errorReason){var success=status==='ok';if(!success){warn('update at '+path+' failed: '+status);}var clearEvents=_this.serverSyncTree_.ackUserWrite(writeId_1,!success);var affectedPath=clearEvents.length>0?_this.rerunTransactions_(path):path;_this.eventQueue_.raiseEventsForChangedPath(affectedPath,clearEvents);_this.callOnCompleteCallback(onComplete,status,errorReason);});each(childrenToMerge,function(changedPath){var affectedPath=_this.abortTransactions_(path.child(changedPath));_this.rerunTransactions_(affectedPath);});// We queued the events above, so just flush the queue here\nthis.eventQueue_.raiseEventsForChangedPath(path,[]);}else{log(\"update() called with empty data.  Don't do anything.\");this.callOnCompleteCallback(onComplete,'ok');}};/**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     */Repo.prototype.runOnDisconnectEvents_=function(){var _this=this;this.log_('onDisconnectEvents');var serverValues=this.generateServerValues();var resolvedOnDisconnectTree=new SparseSnapshotTree();this.onDisconnect_.forEachTree(Path.Empty,function(path,node){var resolved=resolveDeferredValueTree(path,node,_this.serverSyncTree_,serverValues);resolvedOnDisconnectTree.remember(path,resolved);});var events=[];resolvedOnDisconnectTree.forEachTree(Path.Empty,function(path,snap){events=events.concat(_this.serverSyncTree_.applyServerOverwrite(path,snap));var affectedPath=_this.abortTransactions_(path);_this.rerunTransactions_(affectedPath);});this.onDisconnect_=new SparseSnapshotTree();this.eventQueue_.raiseEventsForChangedPath(Path.Empty,events);};Repo.prototype.onDisconnectCancel=function(path,onComplete){var _this=this;this.server_.onDisconnectCancel(path.toString(),function(status,errorReason){if(status==='ok'){_this.onDisconnect_.forget(path);}_this.callOnCompleteCallback(onComplete,status,errorReason);});};Repo.prototype.onDisconnectSet=function(path,value,onComplete){var _this=this;var newNode=nodeFromJSON$1(value);this.server_.onDisconnectPut(path.toString(),newNode.val(/*export=*/true),function(status,errorReason){if(status==='ok'){_this.onDisconnect_.remember(path,newNode);}_this.callOnCompleteCallback(onComplete,status,errorReason);});};Repo.prototype.onDisconnectSetWithPriority=function(path,value,priority,onComplete){var _this=this;var newNode=nodeFromJSON$1(value,priority);this.server_.onDisconnectPut(path.toString(),newNode.val(/*export=*/true),function(status,errorReason){if(status==='ok'){_this.onDisconnect_.remember(path,newNode);}_this.callOnCompleteCallback(onComplete,status,errorReason);});};Repo.prototype.onDisconnectUpdate=function(path,childrenToMerge,onComplete){var _this=this;if(isEmpty(childrenToMerge)){log(\"onDisconnect().update() called with empty data.  Don't do anything.\");this.callOnCompleteCallback(onComplete,'ok');return;}this.server_.onDisconnectMerge(path.toString(),childrenToMerge,function(status,errorReason){if(status==='ok'){each(childrenToMerge,function(childName,childNode){var newChildNode=nodeFromJSON$1(childNode);_this.onDisconnect_.remember(path.child(childName),newChildNode);});}_this.callOnCompleteCallback(onComplete,status,errorReason);});};Repo.prototype.addEventCallbackForQuery=function(query,eventRegistration){var events;if(query.path.getFront()==='.info'){events=this.infoSyncTree_.addEventRegistration(query,eventRegistration);}else{events=this.serverSyncTree_.addEventRegistration(query,eventRegistration);}this.eventQueue_.raiseEventsAtPath(query.path,events);};Repo.prototype.removeEventCallbackForQuery=function(query,eventRegistration){// These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n// a little bit by handling the return values anyways.\nvar events;if(query.path.getFront()==='.info'){events=this.infoSyncTree_.removeEventRegistration(query,eventRegistration);}else{events=this.serverSyncTree_.removeEventRegistration(query,eventRegistration);}this.eventQueue_.raiseEventsAtPath(query.path,events);};Repo.prototype.interrupt=function(){if(this.persistentConnection_){this.persistentConnection_.interrupt(INTERRUPT_REASON);}};Repo.prototype.resume=function(){if(this.persistentConnection_){this.persistentConnection_.resume(INTERRUPT_REASON);}};Repo.prototype.stats=function(showDelta){if(showDelta===void 0){showDelta=false;}if(typeof console==='undefined'){return;}var stats;if(showDelta){if(!this.statsListener_){this.statsListener_=new StatsListener(this.stats_);}stats=this.statsListener_.get();}else{stats=this.stats_.get();}var longestName=Object.keys(stats).reduce(function(previousValue,currentValue){return Math.max(currentValue.length,previousValue);},0);each(stats,function(stat,value){var paddedStat=stat;// pad stat names to be the same length (plus 2 extra spaces).\nfor(var i=stat.length;i<longestName+2;i++){paddedStat+=' ';}console.log(paddedStat+value);});};Repo.prototype.statsIncrementCounter=function(metric){this.stats_.incrementCounter(metric);this.statsReporter_.includeStat(metric);};Repo.prototype.log_=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}var prefix='';if(this.persistentConnection_){prefix=this.persistentConnection_.id+':';}log.apply(void 0,__spread([prefix],varArgs));};Repo.prototype.callOnCompleteCallback=function(callback,status,errorReason){if(callback){exceptionGuard(function(){if(status==='ok'){callback(null);}else{var code=(status||'error').toUpperCase();var message=code;if(errorReason){message+=': '+errorReason;}var error=new Error(message);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nerror.code=code;callback(error);}});}};Object.defineProperty(Repo.prototype,\"database\",{get:function(){return this.__database||(this.__database=new Database(this));},enumerable:false,configurable:true});return Repo;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */var RangedFilter=/** @class */function(){/**\r\n     * @param {!QueryParams} params\r\n     */function RangedFilter(params){this.indexedFilter_=new IndexedFilter(params.getIndex());this.index_=params.getIndex();this.startPost_=RangedFilter.getStartPost_(params);this.endPost_=RangedFilter.getEndPost_(params);}/**\r\n     * @return {!NamedNode}\r\n     */RangedFilter.prototype.getStartPost=function(){return this.startPost_;};/**\r\n     * @return {!NamedNode}\r\n     */RangedFilter.prototype.getEndPost=function(){return this.endPost_;};/**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */RangedFilter.prototype.matches=function(node){return this.index_.compare(this.getStartPost(),node)<=0&&this.index_.compare(node,this.getEndPost())<=0;};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){if(!this.matches(new NamedNode(key,newChild))){newChild=ChildrenNode.EMPTY_NODE;}return this.indexedFilter_.updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator);};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){if(newSnap.isLeafNode()){// Make sure we have a children node with the correct index, not a leaf node;\nnewSnap=ChildrenNode.EMPTY_NODE;}var filtered=newSnap.withIndex(this.index_);// Don't support priorities on queries\nfiltered=filtered.updatePriority(ChildrenNode.EMPTY_NODE);var self=this;newSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(!self.matches(new NamedNode(key,childNode))){filtered=filtered.updateImmediateChild(key,ChildrenNode.EMPTY_NODE);}});return this.indexedFilter_.updateFullNode(oldSnap,filtered,optChangeAccumulator);};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.updatePriority=function(oldSnap,newPriority){// Don't support priorities on queries\nreturn oldSnap;};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.filtersNodes=function(){return true;};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.getIndexedFilter=function(){return this.indexedFilter_;};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.getIndex=function(){return this.index_;};/**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */RangedFilter.getStartPost_=function(params){if(params.hasStart()){var startName=params.getIndexStartName();return params.getIndex().makePost(params.getIndexStartValue(),startName);}else{return params.getIndex().minPost();}};/**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */RangedFilter.getEndPost_=function(params){if(params.hasEnd()){var endName=params.getIndexEndName();return params.getIndex().makePost(params.getIndexEndValue(),endName);}else{return params.getIndex().maxPost();}};return RangedFilter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */var LimitedFilter=/** @class */function(){/**\r\n     * @param {!QueryParams} params\r\n     */function LimitedFilter(params){this.rangedFilter_=new RangedFilter(params);this.index_=params.getIndex();this.limit_=params.getLimit();this.reverse_=!params.isViewFromLeft();}/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){if(!this.rangedFilter_.matches(new NamedNode(key,newChild))){newChild=ChildrenNode.EMPTY_NODE;}if(snap.getImmediateChild(key).equals(newChild)){// No change\nreturn snap;}else if(snap.numChildren()<this.limit_){return this.rangedFilter_.getIndexedFilter().updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator);}else{return this.fullLimitUpdateChild_(snap,key,newChild,source,optChangeAccumulator);}};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){var filtered;if(newSnap.isLeafNode()||newSnap.isEmpty()){// Make sure we have a children node with the correct index, not a leaf node;\nfiltered=ChildrenNode.EMPTY_NODE.withIndex(this.index_);}else{if(this.limit_*2<newSnap.numChildren()&&newSnap.isIndexed(this.index_)){// Easier to build up a snapshot, since what we're given has more than twice the elements we want\nfiltered=ChildrenNode.EMPTY_NODE.withIndex(this.index_);// anchor to the startPost, endPost, or last element as appropriate\nvar iterator=void 0;if(this.reverse_){iterator=newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(),this.index_);}else{iterator=newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(),this.index_);}var count=0;while(iterator.hasNext()&&count<this.limit_){var next=iterator.getNext();var inRange=void 0;if(this.reverse_){inRange=this.index_.compare(this.rangedFilter_.getStartPost(),next)<=0;}else{inRange=this.index_.compare(next,this.rangedFilter_.getEndPost())<=0;}if(inRange){filtered=filtered.updateImmediateChild(next.name,next.node);count++;}else{// if we have reached the end post, we cannot keep adding elemments\nbreak;}}}else{// The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\nfiltered=newSnap.withIndex(this.index_);// Don't support priorities on queries\nfiltered=filtered.updatePriority(ChildrenNode.EMPTY_NODE);var startPost=void 0;var endPost=void 0;var cmp=void 0;var iterator=void 0;if(this.reverse_){iterator=filtered.getReverseIterator(this.index_);startPost=this.rangedFilter_.getEndPost();endPost=this.rangedFilter_.getStartPost();var indexCompare_1=this.index_.getCompare();cmp=function(a,b){return indexCompare_1(b,a);};}else{iterator=filtered.getIterator(this.index_);startPost=this.rangedFilter_.getStartPost();endPost=this.rangedFilter_.getEndPost();cmp=this.index_.getCompare();}var count=0;var foundStartPost=false;while(iterator.hasNext()){var next=iterator.getNext();if(!foundStartPost&&cmp(startPost,next)<=0){// start adding\nfoundStartPost=true;}var inRange=foundStartPost&&count<this.limit_&&cmp(next,endPost)<=0;if(inRange){count++;}else{filtered=filtered.updateImmediateChild(next.name,ChildrenNode.EMPTY_NODE);}}}}return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap,filtered,optChangeAccumulator);};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.updatePriority=function(oldSnap,newPriority){// Don't support priorities on queries\nreturn oldSnap;};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.filtersNodes=function(){return true;};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.getIndexedFilter=function(){return this.rangedFilter_.getIndexedFilter();};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.getIndex=function(){return this.index_;};/**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */LimitedFilter.prototype.fullLimitUpdateChild_=function(snap,childKey,childSnap,source,changeAccumulator){// TODO: rename all cache stuff etc to general snap terminology\nvar cmp;if(this.reverse_){var indexCmp_1=this.index_.getCompare();cmp=function(a,b){return indexCmp_1(b,a);};}else{cmp=this.index_.getCompare();}var oldEventCache=snap;assert(oldEventCache.numChildren()===this.limit_,'');var newChildNamedNode=new NamedNode(childKey,childSnap);var windowBoundary=this.reverse_?oldEventCache.getFirstChild(this.index_):oldEventCache.getLastChild(this.index_);var inRange=this.rangedFilter_.matches(newChildNamedNode);if(oldEventCache.hasChild(childKey)){var oldChildSnap=oldEventCache.getImmediateChild(childKey);var nextChild=source.getChildAfterChild(this.index_,windowBoundary,this.reverse_);while(nextChild!=null&&(nextChild.name===childKey||oldEventCache.hasChild(nextChild.name))){// There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n// been applied to the limited filter yet. Ignore this next child which will be updated later in\n// the limited filter...\nnextChild=source.getChildAfterChild(this.index_,nextChild,this.reverse_);}var compareNext=nextChild==null?1:cmp(nextChild,newChildNamedNode);var remainsInWindow=inRange&&!childSnap.isEmpty()&&compareNext>=0;if(remainsInWindow){if(changeAccumulator!=null){changeAccumulator.trackChildChange(Change.childChangedChange(childKey,childSnap,oldChildSnap));}return oldEventCache.updateImmediateChild(childKey,childSnap);}else{if(changeAccumulator!=null){changeAccumulator.trackChildChange(Change.childRemovedChange(childKey,oldChildSnap));}var newEventCache=oldEventCache.updateImmediateChild(childKey,ChildrenNode.EMPTY_NODE);var nextChildInRange=nextChild!=null&&this.rangedFilter_.matches(nextChild);if(nextChildInRange){if(changeAccumulator!=null){changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name,nextChild.node));}return newEventCache.updateImmediateChild(nextChild.name,nextChild.node);}else{return newEventCache;}}}else if(childSnap.isEmpty()){// we're deleting a node, but it was not in the window, so ignore it\nreturn snap;}else if(inRange){if(cmp(windowBoundary,newChildNamedNode)>=0){if(changeAccumulator!=null){changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name,windowBoundary.node));changeAccumulator.trackChildChange(Change.childAddedChange(childKey,childSnap));}return oldEventCache.updateImmediateChild(childKey,childSnap).updateImmediateChild(windowBoundary.name,ChildrenNode.EMPTY_NODE);}else{return snap;}}else{return snap;}};return LimitedFilter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */var QueryParams=/** @class */function(){function QueryParams(){this.limitSet_=false;this.startSet_=false;this.startNameSet_=false;this.endSet_=false;this.endNameSet_=false;this.limit_=0;this.viewFrom_='';this.indexStartValue_=null;this.indexStartName_='';this.indexEndValue_=null;this.indexEndName_='';this.index_=PRIORITY_INDEX;}/**\r\n     * @return {boolean}\r\n     */QueryParams.prototype.hasStart=function(){return this.startSet_;};/**\r\n     * @return {boolean} True if it would return from left.\r\n     */QueryParams.prototype.isViewFromLeft=function(){if(this.viewFrom_===''){// limit(), rather than limitToFirst or limitToLast was called.\n// This means that only one of startSet_ and endSet_ is true. Use them\n// to calculate which side of the view to anchor to. If neither is set,\n// anchor to the end.\nreturn this.startSet_;}else{return this.viewFrom_===QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;}};/**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */QueryParams.prototype.getIndexStartValue=function(){assert(this.startSet_,'Only valid if start has been set');return this.indexStartValue_;};/**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */QueryParams.prototype.getIndexStartName=function(){assert(this.startSet_,'Only valid if start has been set');if(this.startNameSet_){return this.indexStartName_;}else{return MIN_NAME;}};/**\r\n     * @return {boolean}\r\n     */QueryParams.prototype.hasEnd=function(){return this.endSet_;};/**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */QueryParams.prototype.getIndexEndValue=function(){assert(this.endSet_,'Only valid if end has been set');return this.indexEndValue_;};/**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */QueryParams.prototype.getIndexEndName=function(){assert(this.endSet_,'Only valid if end has been set');if(this.endNameSet_){return this.indexEndName_;}else{return MAX_NAME;}};/**\r\n     * @return {boolean}\r\n     */QueryParams.prototype.hasLimit=function(){return this.limitSet_;};/**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */QueryParams.prototype.hasAnchoredLimit=function(){return this.limitSet_&&this.viewFrom_!=='';};/**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */QueryParams.prototype.getLimit=function(){assert(this.limitSet_,'Only valid if limit has been set');return this.limit_;};/**\r\n     * @return {!Index}\r\n     */QueryParams.prototype.getIndex=function(){return this.index_;};/**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */QueryParams.prototype.copy_=function(){var copy=new QueryParams();copy.limitSet_=this.limitSet_;copy.limit_=this.limit_;copy.startSet_=this.startSet_;copy.indexStartValue_=this.indexStartValue_;copy.startNameSet_=this.startNameSet_;copy.indexStartName_=this.indexStartName_;copy.endSet_=this.endSet_;copy.indexEndValue_=this.indexEndValue_;copy.endNameSet_=this.endNameSet_;copy.indexEndName_=this.indexEndName_;copy.index_=this.index_;copy.viewFrom_=this.viewFrom_;return copy;};/**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */QueryParams.prototype.limit=function(newLimit){var newParams=this.copy_();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_='';return newParams;};/**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */QueryParams.prototype.limitToFirst=function(newLimit){var newParams=this.copy_();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_=QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;return newParams;};/**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */QueryParams.prototype.limitToLast=function(newLimit){var newParams=this.copy_();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_=QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;return newParams;};/**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */QueryParams.prototype.startAt=function(indexValue,key){var newParams=this.copy_();newParams.startSet_=true;if(indexValue===undefined){indexValue=null;}newParams.indexStartValue_=indexValue;if(key!=null){newParams.startNameSet_=true;newParams.indexStartName_=key;}else{newParams.startNameSet_=false;newParams.indexStartName_='';}return newParams;};/**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */QueryParams.prototype.endAt=function(indexValue,key){var newParams=this.copy_();newParams.endSet_=true;if(indexValue===undefined){indexValue=null;}newParams.indexEndValue_=indexValue;if(key!==undefined){newParams.endNameSet_=true;newParams.indexEndName_=key;}else{newParams.endNameSet_=false;newParams.indexEndName_='';}return newParams;};/**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */QueryParams.prototype.orderBy=function(index){var newParams=this.copy_();newParams.index_=index;return newParams;};/**\r\n     * @return {!Object}\r\n     */QueryParams.prototype.getQueryObject=function(){var WIRE_PROTOCOL_CONSTANTS=QueryParams.WIRE_PROTOCOL_CONSTANTS_;var obj={};if(this.startSet_){obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE]=this.indexStartValue_;if(this.startNameSet_){obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME]=this.indexStartName_;}}if(this.endSet_){obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE]=this.indexEndValue_;if(this.endNameSet_){obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME]=this.indexEndName_;}}if(this.limitSet_){obj[WIRE_PROTOCOL_CONSTANTS.LIMIT]=this.limit_;var viewFrom=this.viewFrom_;if(viewFrom===''){if(this.isViewFromLeft()){viewFrom=WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;}else{viewFrom=WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;}}obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM]=viewFrom;}// For now, priority index is the default, so we only specify if it's some other index\nif(this.index_!==PRIORITY_INDEX){obj[WIRE_PROTOCOL_CONSTANTS.INDEX]=this.index_.toString();}return obj;};/**\r\n     * @return {boolean}\r\n     */QueryParams.prototype.loadsAllData=function(){return!(this.startSet_||this.endSet_||this.limitSet_);};/**\r\n     * @return {boolean}\r\n     */QueryParams.prototype.isDefault=function(){return this.loadsAllData()&&this.index_===PRIORITY_INDEX;};/**\r\n     * @return {!NodeFilter}\r\n     */QueryParams.prototype.getNodeFilter=function(){if(this.loadsAllData()){return new IndexedFilter(this.getIndex());}else if(this.hasLimit()){return new LimitedFilter(this);}else{return new RangedFilter(this);}};/**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */QueryParams.prototype.toRestQueryStringParameters=function(){var REST_CONSTANTS=QueryParams.REST_QUERY_CONSTANTS_;var qs={};if(this.isDefault()){return qs;}var orderBy;if(this.index_===PRIORITY_INDEX){orderBy=REST_CONSTANTS.PRIORITY_INDEX;}else if(this.index_===VALUE_INDEX){orderBy=REST_CONSTANTS.VALUE_INDEX;}else if(this.index_===KEY_INDEX){orderBy=REST_CONSTANTS.KEY_INDEX;}else{assert(this.index_ instanceof PathIndex,'Unrecognized index type!');orderBy=this.index_.toString();}qs[REST_CONSTANTS.ORDER_BY]=stringify(orderBy);if(this.startSet_){qs[REST_CONSTANTS.START_AT]=stringify(this.indexStartValue_);if(this.startNameSet_){qs[REST_CONSTANTS.START_AT]+=','+stringify(this.indexStartName_);}}if(this.endSet_){qs[REST_CONSTANTS.END_AT]=stringify(this.indexEndValue_);if(this.endNameSet_){qs[REST_CONSTANTS.END_AT]+=','+stringify(this.indexEndName_);}}if(this.limitSet_){if(this.isViewFromLeft()){qs[REST_CONSTANTS.LIMIT_TO_FIRST]=this.limit_;}else{qs[REST_CONSTANTS.LIMIT_TO_LAST]=this.limit_;}}return qs;};/**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */QueryParams.WIRE_PROTOCOL_CONSTANTS_={INDEX_START_VALUE:'sp',INDEX_START_NAME:'sn',INDEX_END_VALUE:'ep',INDEX_END_NAME:'en',LIMIT:'l',VIEW_FROM:'vf',VIEW_FROM_LEFT:'l',VIEW_FROM_RIGHT:'r',INDEX:'i'};/**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */QueryParams.REST_QUERY_CONSTANTS_={ORDER_BY:'orderBy',PRIORITY_INDEX:'$priority',VALUE_INDEX:'$value',KEY_INDEX:'$key',START_AT:'startAt',END_AT:'endAt',LIMIT_TO_FIRST:'limitToFirst',LIMIT_TO_LAST:'limitToLast'};/**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */QueryParams.DEFAULT=new QueryParams();return QueryParams;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var Reference=/** @class */function(_super){__extends(Reference,_super);/**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */function Reference(repo,path){var _this=this;if(!(repo instanceof Repo)){throw new Error('new Reference() no longer supported - use app.database().');}// call Query's constructor, passing in the repo and path.\n_this=_super.call(this,repo,path,QueryParams.DEFAULT,false)||this;return _this;}/** @return {?string} */Reference.prototype.getKey=function(){validateArgCount('Reference.key',0,0,arguments.length);if(this.path.isEmpty()){return null;}else{return this.path.getBack();}};/**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */Reference.prototype.child=function(pathString){validateArgCount('Reference.child',1,1,arguments.length);if(typeof pathString==='number'){pathString=String(pathString);}else if(!(pathString instanceof Path)){if(this.path.getFront()===null){validateRootPathString('Reference.child',1,pathString,false);}else{validatePathString('Reference.child',1,pathString,false);}}return new Reference(this.repo,this.path.child(pathString));};/** @return {?Reference} */Reference.prototype.getParent=function(){validateArgCount('Reference.parent',0,0,arguments.length);var parentPath=this.path.parent();return parentPath===null?null:new Reference(this.repo,parentPath);};/** @return {!Reference} */Reference.prototype.getRoot=function(){validateArgCount('Reference.root',0,0,arguments.length);var ref=this;while(ref.getParent()!==null){ref=ref.getParent();}return ref;};/** @return {!Database} */Reference.prototype.databaseProp=function(){return this.repo.database;};/**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */Reference.prototype.set=function(newVal,onComplete){validateArgCount('Reference.set',1,2,arguments.length);validateWritablePath('Reference.set',this.path);validateFirebaseDataArg('Reference.set',1,newVal,this.path,false);validateCallback('Reference.set',2,onComplete,true);var deferred=new Deferred();this.repo.setWithPriority(this.path,newVal,/*priority=*/null,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */Reference.prototype.update=function(objectToMerge,onComplete){validateArgCount('Reference.update',1,2,arguments.length);validateWritablePath('Reference.update',this.path);if(Array.isArray(objectToMerge)){var newObjectToMerge={};for(var i=0;i<objectToMerge.length;++i){newObjectToMerge[''+i]=objectToMerge[i];}objectToMerge=newObjectToMerge;warn('Passing an Array to Firebase.update() is deprecated. '+'Use set() if you want to overwrite the existing data, or '+'an Object with integer keys if you really do want to '+'only update some of the children.');}validateFirebaseMergeDataArg('Reference.update',1,objectToMerge,this.path,false);validateCallback('Reference.update',2,onComplete,true);var deferred=new Deferred();this.repo.update(this.path,objectToMerge,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */Reference.prototype.setWithPriority=function(newVal,newPriority,onComplete){validateArgCount('Reference.setWithPriority',2,3,arguments.length);validateWritablePath('Reference.setWithPriority',this.path);validateFirebaseDataArg('Reference.setWithPriority',1,newVal,this.path,false);validatePriority('Reference.setWithPriority',2,newPriority,false);validateCallback('Reference.setWithPriority',3,onComplete,true);if(this.getKey()==='.length'||this.getKey()==='.keys'){throw'Reference.setWithPriority failed: '+this.getKey()+' is a read-only object.';}var deferred=new Deferred();this.repo.setWithPriority(this.path,newVal,newPriority,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */Reference.prototype.remove=function(onComplete){validateArgCount('Reference.remove',0,1,arguments.length);validateWritablePath('Reference.remove',this.path);validateCallback('Reference.remove',1,onComplete,true);return this.set(null,onComplete);};/**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */Reference.prototype.transaction=function(transactionUpdate,onComplete,applyLocally){validateArgCount('Reference.transaction',1,3,arguments.length);validateWritablePath('Reference.transaction',this.path);validateCallback('Reference.transaction',1,transactionUpdate,false);validateCallback('Reference.transaction',2,onComplete,true);// NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n// to expose it.\nvalidateBoolean('Reference.transaction',3,applyLocally,true);if(this.getKey()==='.length'||this.getKey()==='.keys'){throw'Reference.transaction failed: '+this.getKey()+' is a read-only object.';}if(applyLocally===undefined){applyLocally=true;}var deferred=new Deferred();if(typeof onComplete==='function'){deferred.promise.catch(function(){});}var promiseComplete=function(error,committed,snapshot){if(error){deferred.reject(error);}else{deferred.resolve(new TransactionResult(committed,snapshot));}if(typeof onComplete==='function'){onComplete(error,committed,snapshot);}};this.repo.startTransaction(this.path,transactionUpdate,promiseComplete,applyLocally);return deferred.promise;};/**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */Reference.prototype.setPriority=function(priority,onComplete){validateArgCount('Reference.setPriority',1,2,arguments.length);validateWritablePath('Reference.setPriority',this.path);validatePriority('Reference.setPriority',1,priority,false);validateCallback('Reference.setPriority',2,onComplete,true);var deferred=new Deferred();this.repo.setWithPriority(this.path.child('.priority'),priority,null,deferred.wrapCallback(onComplete));return deferred.promise;};/**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */Reference.prototype.push=function(value,onComplete){validateArgCount('Reference.push',0,2,arguments.length);validateWritablePath('Reference.push',this.path);validateFirebaseDataArg('Reference.push',1,value,this.path,true);validateCallback('Reference.push',2,onComplete,true);var now=this.repo.serverTime();var name=nextPushId(now);// push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n// We use child() to create handles to two different references. The first is turned into a\n// ThennableReference below by adding then() and catch() methods and is used as the\n// return value of push(). The second remains a regular Reference and is used as the fulfilled\n// value of the first ThennableReference.\nvar thennablePushRef=this.child(name);var pushRef=this.child(name);var promise;if(value!=null){promise=thennablePushRef.set(value,onComplete).then(function(){return pushRef;});}else{promise=Promise.resolve(pushRef);}thennablePushRef.then=promise.then.bind(promise);thennablePushRef.catch=promise.then.bind(promise,undefined);if(typeof onComplete==='function'){promise.catch(function(){});}return thennablePushRef;};/**\r\n     * @return {!OnDisconnect}\r\n     */Reference.prototype.onDisconnect=function(){validateWritablePath('Reference.onDisconnect',this.path);return new OnDisconnect(this.repo,this.path);};Object.defineProperty(Reference.prototype,\"database\",{get:function(){return this.databaseProp();},enumerable:false,configurable:true});Object.defineProperty(Reference.prototype,\"key\",{get:function(){return this.getKey();},enumerable:false,configurable:true});Object.defineProperty(Reference.prototype,\"parent\",{get:function(){return this.getParent();},enumerable:false,configurable:true});Object.defineProperty(Reference.prototype,\"root\",{get:function(){return this.getRoot();},enumerable:false,configurable:true});return Reference;}(Query);/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */Query.__referenceConstructor=Reference;SyncPoint.__referenceConstructor=Reference;/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Node in a Tree.\r\n */var TreeNode=/** @class */function(){function TreeNode(){// TODO: Consider making accessors that create children and value lazily or\n// separate Internal / Leaf 'types'.\nthis.children={};this.childCount=0;this.value=null;}return TreeNode;}();/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */var Tree=/** @class */function(){/**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */function Tree(name_,parent_,node_){if(name_===void 0){name_='';}if(parent_===void 0){parent_=null;}if(node_===void 0){node_=new TreeNode();}this.name_=name_;this.parent_=parent_;this.node_=node_;}/**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */Tree.prototype.subTree=function(pathObj){// TODO: Require pathObj to be Path?\nvar path=pathObj instanceof Path?pathObj:new Path(pathObj);var child=this,next=path.getFront();while(next!==null){var childNode=safeGet(child.node_.children,next)||new TreeNode();child=new Tree(next,child,childNode);path=path.popFront();next=path.getFront();}return child;};/**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */Tree.prototype.getValue=function(){return this.node_.value;};/**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */Tree.prototype.setValue=function(value){assert(typeof value!=='undefined','Cannot set value to undefined');this.node_.value=value;this.updateParents_();};/**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */Tree.prototype.clear=function(){this.node_.value=null;this.node_.children={};this.node_.childCount=0;this.updateParents_();};/**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */Tree.prototype.hasChildren=function(){return this.node_.childCount>0;};/**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */Tree.prototype.isEmpty=function(){return this.getValue()===null&&!this.hasChildren();};/**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */Tree.prototype.forEachChild=function(action){var _this=this;each(this.node_.children,function(child,childTree){action(new Tree(child,_this,childTree));});};/**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */Tree.prototype.forEachDescendant=function(action,includeSelf,childrenFirst){if(includeSelf&&!childrenFirst){action(this);}this.forEachChild(function(child){child.forEachDescendant(action,/*includeSelf=*/true,childrenFirst);});if(includeSelf&&childrenFirst){action(this);}};/**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */Tree.prototype.forEachAncestor=function(action,includeSelf){var node=includeSelf?this:this.parent();while(node!==null){if(action(node)){return true;}node=node.parent();}return false;};/**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */Tree.prototype.forEachImmediateDescendantWithValue=function(action){this.forEachChild(function(child){if(child.getValue()!==null){action(child);}else{child.forEachImmediateDescendantWithValue(action);}});};/**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */Tree.prototype.path=function(){return new Path(this.parent_===null?this.name_:this.parent_.path()+'/'+this.name_);};/**\r\n     * @return {string} The name of the tree node.\r\n     */Tree.prototype.name=function(){return this.name_;};/**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */Tree.prototype.parent=function(){return this.parent_;};/**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */Tree.prototype.updateParents_=function(){if(this.parent_!==null){this.parent_.updateChild_(this.name_,this);}};/**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */Tree.prototype.updateChild_=function(childName,child){var childEmpty=child.isEmpty();var childExists=contains(this.node_.children,childName);if(childEmpty&&childExists){delete this.node_.children[childName];this.node_.childCount--;this.updateParents_();}else if(!childEmpty&&!childExists){this.node_.children[childName]=child.node_;this.node_.childCount++;this.updateParents_();}};return Tree;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n/**\r\n * @enum {number}\r\n */var TransactionStatus;(function(TransactionStatus){// We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n// server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n// mismatched hash.\nTransactionStatus[TransactionStatus[\"RUN\"]=0]=\"RUN\";// We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n// or rejected yet).\nTransactionStatus[TransactionStatus[\"SENT\"]=1]=\"SENT\";// Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n// removed when we get a chance to prune completed ones.\nTransactionStatus[TransactionStatus[\"COMPLETED\"]=2]=\"COMPLETED\";// Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n// If it comes back as unsuccessful, we'll abort it.\nTransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"]=3]=\"SENT_NEEDS_ABORT\";// Temporary state used to mark transactions that need to be aborted.\nTransactionStatus[TransactionStatus[\"NEEDS_ABORT\"]=4]=\"NEEDS_ABORT\";})(TransactionStatus||(TransactionStatus={}));/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nRepo.MAX_TRANSACTION_RETRIES_=25;/**\r\n * Setup the transaction data structures\r\n * @private\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nRepo.prototype.transactionsInit_=function(){/**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */this.transactionQueueTree_=new Tree();};/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */Repo.prototype.startTransaction=function(path,transactionUpdate,onComplete,applyLocally){this.log_('transaction on '+path);// Add a watch to make sure we get server updates.\nvar valueCallback=function(){};var watchRef=new Reference(this,path);watchRef.on('value',valueCallback);var unwatcher=function(){watchRef.off('value',valueCallback);};// Initialize transaction.\nvar transaction={path:path,update:transactionUpdate,onComplete:onComplete,// One of TransactionStatus enums.\nstatus:null,// Used when combining transactions at different locations to figure out which one goes first.\norder:LUIDGenerator(),// Whether to raise local events for this transaction.\napplyLocally:applyLocally,// Count of how many times we've retried the transaction.\nretryCount:0,// Function to call to clean up our .on() listener.\nunwatcher:unwatcher,// Stores why a transaction was aborted.\nabortReason:null,currentWriteId:null,currentInputSnapshot:null,currentOutputSnapshotRaw:null,currentOutputSnapshotResolved:null};// Run transaction initially.\nvar currentState=this.getLatestState_(path);transaction.currentInputSnapshot=currentState;var newVal=transaction.update(currentState.val());if(newVal===undefined){// Abort transaction.\ntransaction.unwatcher();transaction.currentOutputSnapshotRaw=null;transaction.currentOutputSnapshotResolved=null;if(transaction.onComplete){// We just set the input snapshot, so this cast should be safe\nvar snapshot=new DataSnapshot(transaction.currentInputSnapshot,new Reference(this,transaction.path),PRIORITY_INDEX);transaction.onComplete(null,false,snapshot);}}else{validateFirebaseData('transaction failed: Data returned ',newVal,transaction.path);// Mark as run and add to our queue.\ntransaction.status=TransactionStatus.RUN;var queueNode=this.transactionQueueTree_.subTree(path);var nodeQueue=queueNode.getValue()||[];nodeQueue.push(transaction);queueNode.setValue(nodeQueue);// Update visibleData and raise events\n// Note: We intentionally raise events after updating all of our transaction state, since the user could\n// start new transactions from the event callbacks.\nvar priorityForNode=void 0;if(typeof newVal==='object'&&newVal!==null&&contains(newVal,'.priority')){// eslint-disable-next-line @typescript-eslint/no-explicit-any\npriorityForNode=safeGet(newVal,'.priority');assert(isValidPriority(priorityForNode),'Invalid priority returned by transaction. '+'Priority must be a valid string, finite number, server value, or null.');}else{var currentNode=this.serverSyncTree_.calcCompleteEventCache(path)||ChildrenNode.EMPTY_NODE;priorityForNode=currentNode.getPriority().val();}priorityForNode/** @type {null|number|string} */=priorityForNode;var serverValues=this.generateServerValues();var newNodeUnresolved=nodeFromJSON$1(newVal,priorityForNode);var newNode=resolveDeferredValueSnapshot(newNodeUnresolved,currentState,serverValues);transaction.currentOutputSnapshotRaw=newNodeUnresolved;transaction.currentOutputSnapshotResolved=newNode;transaction.currentWriteId=this.getNextWriteId_();var events=this.serverSyncTree_.applyUserOverwrite(path,newNode,transaction.currentWriteId,transaction.applyLocally);this.eventQueue_.raiseEventsForChangedPath(path,events);this.sendReadyTransactions_();}};/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nRepo.prototype.getLatestState_=function(path,excludeSets){return this.serverSyncTree_.calcCompleteEventCache(path,excludeSets)||ChildrenNode.EMPTY_NODE;};/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nRepo.prototype.sendReadyTransactions_=function(node){var _this=this;if(node===void 0){node=this.transactionQueueTree_;}// Before recursing, make sure any completed transactions are removed.\nif(!node){this.pruneCompletedTransactionsBelowNode_(node);}if(node.getValue()!==null){var queue=this.buildTransactionQueue_(node);assert(queue.length>0,'Sending zero length transaction queue');var allRun=queue.every(function(transaction){return transaction.status===TransactionStatus.RUN;});// If they're all run (and not sent), we can send them.  Else, we must wait.\nif(allRun){this.sendTransactionQueue_(node.path(),queue);}}else if(node.hasChildren()){node.forEachChild(function(childNode){_this.sendReadyTransactions_(childNode);});}};/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nRepo.prototype.sendTransactionQueue_=function(path,queue){var _this=this;// Mark transactions as sent and increment retry count!\nvar setsToIgnore=queue.map(function(txn){return txn.currentWriteId;});var latestState=this.getLatestState_(path,setsToIgnore);var snapToSend=latestState;var latestHash=latestState.hash();for(var i=0;i<queue.length;i++){var txn=queue[i];assert(txn.status===TransactionStatus.RUN,'tryToSendTransactionQueue_: items in queue should all be run.');txn.status=TransactionStatus.SENT;txn.retryCount++;var relativePath=Path.relativePath(path,txn.path);// If we've gotten to this point, the output snapshot must be defined.\nsnapToSend=snapToSend.updateChild(relativePath/** @type {!Node} */,txn.currentOutputSnapshotRaw);}var dataToSend=snapToSend.val(true);var pathToSend=path;// Send the put.\nthis.server_.put(pathToSend.toString(),dataToSend,function(status){_this.log_('transaction put response',{path:pathToSend.toString(),status:status});var events=[];if(status==='ok'){// Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n// the callback could trigger more transactions or sets.\nvar callbacks=[];for(var i=0;i<queue.length;i++){queue[i].status=TransactionStatus.COMPLETED;events=events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));if(queue[i].onComplete){// We never unset the output snapshot, and given that this transaction is complete, it should be set\nvar node=queue[i].currentOutputSnapshotResolved;var ref=new Reference(_this,queue[i].path);var snapshot=new DataSnapshot(node,ref,PRIORITY_INDEX);callbacks.push(queue[i].onComplete.bind(null,null,true,snapshot));}queue[i].unwatcher();}// Now remove the completed transactions.\n_this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));// There may be pending transactions that we can now send.\n_this.sendReadyTransactions_();_this.eventQueue_.raiseEventsForChangedPath(path,events);// Finally, trigger onComplete callbacks.\nfor(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}}else{// transactions are no longer sent.  Update their status appropriately.\nif(status==='datastale'){for(var i=0;i<queue.length;i++){if(queue[i].status===TransactionStatus.SENT_NEEDS_ABORT){queue[i].status=TransactionStatus.NEEDS_ABORT;}else{queue[i].status=TransactionStatus.RUN;}}}else{warn('transaction at '+pathToSend.toString()+' failed: '+status);for(var i=0;i<queue.length;i++){queue[i].status=TransactionStatus.NEEDS_ABORT;queue[i].abortReason=status;}}_this.rerunTransactions_(path);}},latestHash);};/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nRepo.prototype.rerunTransactions_=function(changedPath){var rootMostTransactionNode=this.getAncestorTransactionNode_(changedPath);var path=rootMostTransactionNode.path();var queue=this.buildTransactionQueue_(rootMostTransactionNode);this.rerunTransactionQueue_(queue,path);return path;};/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nRepo.prototype.rerunTransactionQueue_=function(queue,path){if(queue.length===0){return;// Nothing to do!\n}// Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n// the callback could trigger more transactions or sets.\nvar callbacks=[];var events=[];// Ignore all of the sets we're going to re-run.\nvar txnsToRerun=queue.filter(function(q){return q.status===TransactionStatus.RUN;});var setsToIgnore=txnsToRerun.map(function(q){return q.currentWriteId;});for(var i=0;i<queue.length;i++){var transaction=queue[i];var relativePath=Path.relativePath(path,transaction.path);var abortTransaction=false,abortReason=void 0;assert(relativePath!==null,'rerunTransactionsUnderNode_: relativePath should not be null.');if(transaction.status===TransactionStatus.NEEDS_ABORT){abortTransaction=true;abortReason=transaction.abortReason;events=events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId,true));}else if(transaction.status===TransactionStatus.RUN){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif(transaction.retryCount>=Repo.MAX_TRANSACTION_RETRIES_){abortTransaction=true;abortReason='maxretry';events=events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId,true));}else{// This code reruns a transaction\nvar currentNode=this.getLatestState_(transaction.path,setsToIgnore);transaction.currentInputSnapshot=currentNode;var newData=queue[i].update(currentNode.val());if(newData!==undefined){validateFirebaseData('transaction failed: Data returned ',newData,transaction.path);var newDataNode=nodeFromJSON$1(newData);var hasExplicitPriority=typeof newData==='object'&&newData!=null&&contains(newData,'.priority');if(!hasExplicitPriority){// Keep the old priority if there wasn't a priority explicitly specified.\nnewDataNode=newDataNode.updatePriority(currentNode.getPriority());}var oldWriteId=transaction.currentWriteId;var serverValues=this.generateServerValues();var newNodeResolved=resolveDeferredValueSnapshot(newDataNode,currentNode,serverValues);transaction.currentOutputSnapshotRaw=newDataNode;transaction.currentOutputSnapshotResolved=newNodeResolved;transaction.currentWriteId=this.getNextWriteId_();// Mutates setsToIgnore in place\nsetsToIgnore.splice(setsToIgnore.indexOf(oldWriteId),1);events=events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path,newNodeResolved,transaction.currentWriteId,transaction.applyLocally));events=events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId,true));}else{abortTransaction=true;abortReason='nodata';events=events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId,true));}}}this.eventQueue_.raiseEventsForChangedPath(path,events);events=[];if(abortTransaction){// Abort.\nqueue[i].status=TransactionStatus.COMPLETED;// Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n// So defer the unwatcher until we're done.\n(function(unwatcher){setTimeout(unwatcher,Math.floor(0));})(queue[i].unwatcher);if(queue[i].onComplete){if(abortReason==='nodata'){var ref=new Reference(this,queue[i].path);// We set this field immediately, so it's safe to cast to an actual snapshot\nvar lastInput/** @type {!Node} */=queue[i].currentInputSnapshot;var snapshot=new DataSnapshot(lastInput,ref,PRIORITY_INDEX);callbacks.push(queue[i].onComplete.bind(null,null,false,snapshot));}else{callbacks.push(queue[i].onComplete.bind(null,new Error(abortReason),false,null));}}}}// Clean up completed transactions.\nthis.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);// Now fire callbacks, now that we're in a good, known state.\nfor(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}// Try to send the transaction result to the server.\nthis.sendReadyTransactions_();};/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nRepo.prototype.getAncestorTransactionNode_=function(path){var front;// Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\nvar transactionNode=this.transactionQueueTree_;front=path.getFront();while(front!==null&&transactionNode.getValue()===null){transactionNode=transactionNode.subTree(front);path=path.popFront();front=path.getFront();}return transactionNode;};/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nRepo.prototype.buildTransactionQueue_=function(transactionNode){// Walk any child transaction queues and aggregate them into a single queue.\nvar transactionQueue=[];this.aggregateTransactionQueuesForNode_(transactionNode,transactionQueue);// Sort them by the order the transactions were created.\ntransactionQueue.sort(function(a,b){return a.order-b.order;});return transactionQueue;};/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nRepo.prototype.aggregateTransactionQueuesForNode_=function(node,queue){var _this=this;var nodeQueue=node.getValue();if(nodeQueue!==null){for(var i=0;i<nodeQueue.length;i++){queue.push(nodeQueue[i]);}}node.forEachChild(function(child){_this.aggregateTransactionQueuesForNode_(child,queue);});};/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nRepo.prototype.pruneCompletedTransactionsBelowNode_=function(node){var _this=this;var queue=node.getValue();if(queue){var to=0;for(var from=0;from<queue.length;from++){if(queue[from].status!==TransactionStatus.COMPLETED){queue[to]=queue[from];to++;}}queue.length=to;node.setValue(queue.length>0?queue:null);}node.forEachChild(function(childNode){_this.pruneCompletedTransactionsBelowNode_(childNode);});};/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nRepo.prototype.abortTransactions_=function(path){var _this=this;var affectedPath=this.getAncestorTransactionNode_(path).path();var transactionNode=this.transactionQueueTree_.subTree(path);transactionNode.forEachAncestor(function(node){_this.abortTransactionsOnNode_(node);});this.abortTransactionsOnNode_(transactionNode);transactionNode.forEachDescendant(function(node){_this.abortTransactionsOnNode_(node);});return affectedPath;};/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nRepo.prototype.abortTransactionsOnNode_=function(node){var queue=node.getValue();if(queue!==null){// Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n// the callback could trigger more transactions or sets.\nvar callbacks=[];// Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n// can be immediately aborted and removed.\nvar events=[];var lastSent=-1;for(var i=0;i<queue.length;i++){if(queue[i].status===TransactionStatus.SENT_NEEDS_ABORT);else if(queue[i].status===TransactionStatus.SENT){assert(lastSent===i-1,'All SENT items should be at beginning of queue.');lastSent=i;// Mark transaction for abort when it comes back.\nqueue[i].status=TransactionStatus.SENT_NEEDS_ABORT;queue[i].abortReason='set';}else{assert(queue[i].status===TransactionStatus.RUN,'Unexpected transaction status in abort');// We can abort it immediately.\nqueue[i].unwatcher();events=events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId,true));if(queue[i].onComplete){var snapshot=null;callbacks.push(queue[i].onComplete.bind(null,new Error('set'),false,snapshot));}}}if(lastSent===-1){// We're not waiting for any sent transactions.  We can clear the queue.\nnode.setValue(null);}else{// Remove the transactions we aborted.\nqueue.length=lastSent+1;}// Now fire the callbacks.\nthis.eventQueue_.raiseEventsForChangedPath(node.path(),events);for(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}}};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */var FirebaseAuthTokenProvider=/** @class */function(){function FirebaseAuthTokenProvider(app_,authProvider_){var _this=this;this.app_=app_;this.authProvider_=authProvider_;this.auth_=null;this.auth_=authProvider_.getImmediate({optional:true});if(!this.auth_){authProvider_.get().then(function(auth){return _this.auth_=auth;});}}/**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */FirebaseAuthTokenProvider.prototype.getToken=function(forceRefresh){if(!this.auth_){return Promise.resolve(null);}return this.auth_.getToken(forceRefresh).catch(function(error){// TODO: Need to figure out all the cases this is raised and whether\n// this makes sense.\nif(error&&error.code==='auth/token-not-initialized'){log('Got auth/token-not-initialized error.  Treating as null token.');return null;}else{return Promise.reject(error);}});};FirebaseAuthTokenProvider.prototype.addTokenChangeListener=function(listener){// TODO: We might want to wrap the listener and call it with no args to\n// avoid a leaky abstraction, but that makes removing the listener harder.\nif(this.auth_){this.auth_.addAuthTokenListener(listener);}else{setTimeout(function(){return listener(null);},0);this.authProvider_.get().then(function(auth){return auth.addAuthTokenListener(listener);});}};FirebaseAuthTokenProvider.prototype.removeTokenChangeListener=function(listener){this.authProvider_.get().then(function(auth){return auth.removeAuthTokenListener(listener);});};FirebaseAuthTokenProvider.prototype.notifyForInvalidToken=function(){var errorMessage='Provided authentication credentials for the app named \"'+this.app_.name+'\" are invalid. This usually indicates your app was not '+'initialized correctly. ';if('credential'in this.app_.options){errorMessage+='Make sure the \"credential\" property provided to initializeApp() '+'is authorized to access the specified \"databaseURL\" and is from the correct '+'project.';}else if('serviceAccount'in this.app_.options){errorMessage+='Make sure the \"serviceAccount\" property provided to initializeApp() '+'is authorized to access the specified \"databaseURL\" and is from the correct '+'project.';}else{errorMessage+='Make sure the \"apiKey\" and \"databaseURL\" properties provided to '+'initializeApp() match the values provided for your app at '+'https://console.firebase.google.com/.';}warn(errorMessage);};return FirebaseAuthTokenProvider;}();/* Auth token provider that the Admin SDK uses to connect to the Emulator. */var EmulatorAdminTokenProvider=/** @class */function(){function EmulatorAdminTokenProvider(){}EmulatorAdminTokenProvider.prototype.getToken=function(forceRefresh){return Promise.resolve({accessToken:EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN});};EmulatorAdminTokenProvider.prototype.addTokenChangeListener=function(listener){// Invoke the listener immediately to match the behavior in Firebase Auth\n// (see packages/auth/src/auth.js#L1807)\nlistener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);};EmulatorAdminTokenProvider.prototype.removeTokenChangeListener=function(listener){};EmulatorAdminTokenProvider.prototype.notifyForInvalidToken=function(){};EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN='owner';return EmulatorAdminTokenProvider;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */var FIREBASE_DATABASE_EMULATOR_HOST_VAR='FIREBASE_DATABASE_EMULATOR_HOST';var _staticInstance;/**\r\n * Creates and caches Repo instances.\r\n */var RepoManager=/** @class */function(){function RepoManager(){/**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */this.repos_={};/**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */this.useRestClient_=false;}RepoManager.getInstance=function(){if(!_staticInstance){_staticInstance=new RepoManager();}return _staticInstance;};// TODO(koss): Remove these functions unless used in tests?\nRepoManager.prototype.interrupt=function(){var e_1,_a,e_2,_b;try{for(var _c=__values(Object.keys(this.repos_)),_d=_c.next();!_d.done;_d=_c.next()){var appName=_d.value;try{for(var _e=(e_2=void 0,__values(Object.keys(this.repos_[appName]))),_f=_e.next();!_f.done;_f=_e.next()){var dbUrl=_f.value;this.repos_[appName][dbUrl].interrupt();}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_f&&!_f.done&&(_b=_e.return))_b.call(_e);}finally{if(e_2)throw e_2.error;}}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c);}finally{if(e_1)throw e_1.error;}}};RepoManager.prototype.resume=function(){var e_3,_a,e_4,_b;try{for(var _c=__values(Object.keys(this.repos_)),_d=_c.next();!_d.done;_d=_c.next()){var appName=_d.value;try{for(var _e=(e_4=void 0,__values(Object.keys(this.repos_[appName]))),_f=_e.next();!_f.done;_f=_e.next()){var dbUrl=_f.value;this.repos_[appName][dbUrl].resume();}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(_f&&!_f.done&&(_b=_e.return))_b.call(_e);}finally{if(e_4)throw e_4.error;}}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c);}finally{if(e_3)throw e_3.error;}}};/**\r\n     * Update an existing repo in place to point to a new host/port.\r\n     */RepoManager.prototype.applyEmulatorSettings=function(repo,host,port){repo.repoInfo_=new RepoInfo(host+\":\"+port,/* secure= */false,repo.repoInfo_.namespace,repo.repoInfo_.webSocketOnly,repo.repoInfo_.nodeAdmin,repo.repoInfo_.persistenceKey,repo.repoInfo_.includeNamespaceInQueryParams);if(repo.repoInfo_.nodeAdmin){repo.authTokenProvider_=new EmulatorAdminTokenProvider();}};/**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */RepoManager.prototype.databaseFromApp=function(app,authProvider,url,nodeAdmin){var dbUrl=url||app.options.databaseURL;if(dbUrl===undefined){if(!app.options.projectId){fatal(\"Can't determine Firebase Database URL. Be sure to include \"+' a Project ID when calling firebase.initializeApp().');}log('Using default host for project ',app.options.projectId);dbUrl=app.options.projectId+\"-default-rtdb.firebaseio.com\";}var parsedUrl=parseRepoInfo(dbUrl,nodeAdmin);var repoInfo=parsedUrl.repoInfo;var isEmulator;var dbEmulatorHost=undefined;if(typeof process!=='undefined'){dbEmulatorHost=process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];}if(dbEmulatorHost){isEmulator=true;dbUrl=\"http://\"+dbEmulatorHost+\"?ns=\"+repoInfo.namespace;parsedUrl=parseRepoInfo(dbUrl,nodeAdmin);repoInfo=parsedUrl.repoInfo;}else{isEmulator=!parsedUrl.repoInfo.secure;}var authTokenProvider=nodeAdmin&&isEmulator?new EmulatorAdminTokenProvider():new FirebaseAuthTokenProvider(app,authProvider);validateUrl('Invalid Firebase Database URL',1,parsedUrl);if(!parsedUrl.path.isEmpty()){fatal('Database URL must point to the root of a Firebase Database '+'(not including a child path).');}var repo=this.createRepo(repoInfo,app,authTokenProvider);return repo.database;};/**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */RepoManager.prototype.deleteRepo=function(repo){var appRepos=safeGet(this.repos_,repo.app.name);// This should never happen...\nif(!appRepos||safeGet(appRepos,repo.key)!==repo){fatal(\"Database \"+repo.app.name+\"(\"+repo.repoInfo_+\") has already been deleted.\");}repo.interrupt();delete appRepos[repo.key];};/**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */RepoManager.prototype.createRepo=function(repoInfo,app,authTokenProvider){var appRepos=safeGet(this.repos_,app.name);if(!appRepos){appRepos={};this.repos_[app.name]=appRepos;}var repo=safeGet(appRepos,repoInfo.toURLString());if(repo){fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');}repo=new Repo(repoInfo,this.useRestClient_,app,authTokenProvider);appRepos[repoInfo.toURLString()]=repo;return repo;};/**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */RepoManager.prototype.forceRestClient=function(forceRestClient){this.useRestClient_=forceRestClient;};return RepoManager;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */var Database=/** @class */function(){/**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repoInternal_\r\n     */function Database(repoInternal_){var _this=this;this.repoInternal_=repoInternal_;/** Track if the instance has been used (root or repo accessed) */this.instanceStarted_=false;this.INTERNAL={delete:function(){return __awaiter(_this,void 0,void 0,function(){return __generator(this,function(_a){this.checkDeleted_('delete');RepoManager.getInstance().deleteRepo(this.repo_);this.repoInternal_=null;this.rootInternal_=null;return[2/*return*/];});});}};if(!(repoInternal_ instanceof Repo)){fatal(\"Don't call new Database() directly - please use firebase.database().\");}}Object.defineProperty(Database.prototype,\"repo_\",{get:function(){if(!this.instanceStarted_){this.repoInternal_.start();this.instanceStarted_=true;}return this.repoInternal_;},enumerable:false,configurable:true});Object.defineProperty(Database.prototype,\"root_\",{get:function(){if(!this.rootInternal_){this.rootInternal_=new Reference(this.repo_,Path.Empty);}return this.rootInternal_;},enumerable:false,configurable:true});Object.defineProperty(Database.prototype,\"app\",{get:function(){return this.repo_.app;},enumerable:false,configurable:true});/**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host the emulator host (ex: localhost)\r\n     * @param port the emulator port (ex: 8080)\r\n     */Database.prototype.useEmulator=function(host,port){this.checkDeleted_('useEmulator');if(this.instanceStarted_){fatal('Cannot call useEmulator() after instance has already been initialized.');return;}// Modify the repo to apply emulator settings\nRepoManager.getInstance().applyEmulatorSettings(this.repoInternal_,host,port);};Database.prototype.ref=function(path){this.checkDeleted_('ref');validateArgCount('database.ref',0,1,arguments.length);if(path instanceof Reference){return this.refFromURL(path.toString());}return path!==undefined?this.root_.child(path):this.root_;};/**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */Database.prototype.refFromURL=function(url){/** @const {string} */var apiName='database.refFromURL';this.checkDeleted_(apiName);validateArgCount(apiName,1,1,arguments.length);var parsedURL=parseRepoInfo(url,this.repo_.repoInfo_.nodeAdmin);validateUrl(apiName,1,parsedURL);var repoInfo=parsedURL.repoInfo;if(!repoInfo.isCustomHost()&&repoInfo.host!==this.repo_.repoInfo_.host){fatal(apiName+': Host name does not match the current database: '+'(found '+repoInfo.host+' but expected '+this.repo_.repoInfo_.host+')');}return this.ref(parsedURL.path.toString());};/**\r\n     * @param {string} apiName\r\n     */Database.prototype.checkDeleted_=function(apiName){if(this.repoInternal_===null){fatal('Cannot call '+apiName+' on a deleted database.');}};// Make individual repo go offline.\nDatabase.prototype.goOffline=function(){validateArgCount('database.goOffline',0,0,arguments.length);this.checkDeleted_('goOffline');this.repo_.interrupt();};Database.prototype.goOnline=function(){validateArgCount('database.goOnline',0,0,arguments.length);this.checkDeleted_('goOnline');this.repo_.resume();};Database.ServerValue={TIMESTAMP:{'.sv':'timestamp'},increment:function(delta){return{'.sv':{'increment':delta}};}};return Database;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */var forceLongPolling=function(){WebSocketConnection.forceDisallow();BrowserPollConnection.forceAllow();};var forceWebSockets=function(){BrowserPollConnection.forceDisallow();};/* Used by App Manager */var isWebSocketsAvailable=function(){return WebSocketConnection['isAvailable']();};var setSecurityDebugCallback=function(ref,callback){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nref.repo.persistentConnection_.securityDebugCallback_=callback;};var stats=function(ref,showDelta){ref.repo.stats(showDelta);};var statsIncrementCounter=function(ref,metric){ref.repo.statsIncrementCounter(metric);};var dataUpdateCount=function(ref){return ref.repo.dataUpdateCount;};var interceptServerData=function(ref,callback){return ref.repo.interceptServerData_(callback);};/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app A valid FirebaseApp-like object\r\n * @param url A valid Firebase databaseURL\r\n * @param version custom version e.g. firebase-admin version\r\n * @param customAuthImpl custom auth implementation\r\n */function initStandalone(_a){var app=_a.app,url=_a.url,version=_a.version,customAuthImpl=_a.customAuthImpl,namespace=_a.namespace,_b=_a.nodeAdmin,nodeAdmin=_b===void 0?false:_b;setSDKVersion(version);/**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */var authProvider=new Provider('auth-internal',new ComponentContainer('database-standalone'));authProvider.setComponent(new Component('auth-internal',function(){return customAuthImpl;},\"PRIVATE\"/* PRIVATE */));return{instance:RepoManager.getInstance().databaseFromApp(app,authProvider,url,nodeAdmin),namespace:namespace};}var INTERNAL=/*#__PURE__*/Object.freeze({__proto__:null,forceLongPolling:forceLongPolling,forceWebSockets:forceWebSockets,isWebSocketsAvailable:isWebSocketsAvailable,setSecurityDebugCallback:setSecurityDebugCallback,stats:stats,statsIncrementCounter:statsIncrementCounter,dataUpdateCount:dataUpdateCount,interceptServerData:interceptServerData,initStandalone:initStandalone});/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var DataConnection=PersistentConnection;/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nPersistentConnection.prototype.simpleListen=function(pathString,onComplete){this.sendRequest('q',{p:pathString},onComplete);};/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nPersistentConnection.prototype.echo=function(data,onEcho){this.sendRequest('echo',{d:data},onEcho);};// RealTimeConnection properties that we use in tests.\nvar RealTimeConnection=Connection;/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */var hijackHash=function(newHash){var oldPut=PersistentConnection.prototype.put;PersistentConnection.prototype.put=function(pathString,data,onComplete,hash){if(hash!==undefined){hash=newHash();}oldPut.call(this,pathString,data,onComplete,hash);};return function(){PersistentConnection.prototype.put=oldPut;};};/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */var ConnectionTarget=RepoInfo;/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */var queryIdentifier=function(query){return query.queryIdentifier();};/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */var forceRestClient=function(forceRestClient){RepoManager.getInstance().forceRestClient(forceRestClient);};var TEST_ACCESS=/*#__PURE__*/Object.freeze({__proto__:null,DataConnection:DataConnection,RealTimeConnection:RealTimeConnection,hijackHash:hijackHash,ConnectionTarget:ConnectionTarget,queryIdentifier:queryIdentifier,forceRestClient:forceRestClient});var name=\"@firebase/database\";var version=\"0.8.1\";/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ServerValue=Database.ServerValue;function registerDatabase(instance){// set SDK_VERSION\nsetSDKVersion(instance.SDK_VERSION);// Register the Database Service with the 'firebase' namespace.\nvar namespace=instance.INTERNAL.registerComponent(new Component('database',function(container,url){/* Dependencies */ // getImmediate for FirebaseApp will always succeed\nvar app=container.getProvider('app').getImmediate();var authProvider=container.getProvider('auth-internal');return RepoManager.getInstance().databaseFromApp(app,authProvider,url);},\"PUBLIC\"/* PUBLIC */).setServiceProps(// firebase.database namespace properties\n{Reference:Reference,Query:Query,Database:Database,DataSnapshot:DataSnapshot,enableLogging:enableLogging,INTERNAL:INTERNAL,ServerValue:ServerValue,TEST_ACCESS:TEST_ACCESS}).setMultipleInstances(true));instance.registerVersion(name,version);if(isNodeSdk()){module.exports=namespace;}}registerDatabase(firebase);export{DataSnapshot,Database,OnDisconnect,Query,Reference,ServerValue,enableLogging,registerDatabase};","map":{"version":3,"mappings":"klBAAA;;;;;;;;;;;;;;;IAmBA;;;;;;;;;GAUA;;OAOE,2BAAoBA,WAApB,CAAwC,CAApB;AALZ,aAAU,WAAV,CAKoC;;;OAM5CC,yCAAIC,GAAJ,CAAiBC,KAAjB,CAAsC,CACpC,GAAIA,KAAK,EAAI,IAAb,CAAmB,CACjB,KAAKH,WAAL,CAAiBI,UAAjB,CAA4B,KAAKC,aAAL,CAAmBH,GAAnB,CAA5B,EACD,CAFD,IAEO,CACL,KAAKF,WAAL,CAAiBM,OAAjB,CAAyB,KAAKD,aAAL,CAAmBH,GAAnB,CAAzB,CAAkDK,SAAS,CAACJ,KAAD,CAA3D,EACD,CACF,CAND;;;OAYAF,yCAAIC,GAAJ,CAAe,CACb,GAAMM,UAAS,CAAG,KAAKR,WAAL,CAAiBS,OAAjB,CAAyB,KAAKJ,aAAL,CAAmBH,GAAnB,CAAzB,CAAlB,CACA,GAAIM,SAAS,EAAI,IAAjB,CAAuB,CACrB,MAAO,KAAP,CACD,CAFD,IAEO,CACL,MAAOE,SAAQ,CAACF,SAAD,CAAf,CACD,CACF,CAPD;;OAYAP,4CAAOC,GAAP,CAAkB,CAChB,KAAKF,WAAL,CAAiBI,UAAjB,CAA4B,KAAKC,aAAL,CAAmBH,GAAnB,CAA5B,EACD,CAFD;;;OAUAD,mDAAcU,IAAd,CAA0B,CACxB,MAAO,MAAKC,OAAL,CAAeD,IAAtB,CACD,CAFD,CAIAV,gDACE,MAAO,MAAKD,WAAL,CAAiBa,QAAjB,EAAP,CACD,CAFD,CAGF,yBAAC,CAtDD,GC7BA;;;;;;;;;;;;;;;IAmBA;;;;;GAMA,mEACU,YAAmC,EAAnC,CAqBR,uBAAoB,IAApB,CACD,CApBCC,qCAAIZ,GAAJ,CAAiBC,KAAjB,CAAsC,CACpC,GAAIA,KAAK,EAAI,IAAb,CAAmB,CACjB,MAAO,MAAKY,MAAL,CAAYb,GAAZ,CAAP,CACD,CAFD,IAEO,CACL,KAAKa,MAAL,CAAYb,GAAZ,EAAmBC,KAAnB,CACD,CACF,CAND,CAQAW,qCAAIZ,GAAJ,CAAe,CACb,GAAIc,QAAQ,CAAC,KAAKD,MAAN,CAAcb,GAAd,CAAZ,CAAgC,CAC9B,MAAO,MAAKa,MAAL,CAAYb,GAAZ,CAAP,CACD,CACD,MAAO,KAAP,CACD,CALD,CAOAY,wCAAOZ,GAAP,CAAkB,CAChB,MAAO,MAAKa,MAAL,CAAYb,GAAZ,CAAP,CACD,CAFD,CAKF,qBAAC,CAvBD,GCzBA;;;;;;;;;;;;;;;IAsBA;;;;;;;;GASA,GAAMe,iBAAgB,CAAG,SACvBC,cADuB,CACD,CAEtB,GAAI;;AAGF,GACE,MAAOC,OAAP,GAAkB,WAAlB,EACA,MAAOA,OAAM,CAACD,cAAD,CAAb,GAAkC,WAFpC,CAGE;AAEA,GAAME,WAAU,CAAGD,MAAM,CAACD,cAAD,CAAzB,CACAE,UAAU,CAACd,OAAX,CAAmB,mBAAnB,CAAwC,OAAxC,EACAc,UAAU,CAAChB,UAAX,CAAsB,mBAAtB,EACA,MAAO,IAAIH,kBAAJ,CAAsBmB,UAAtB,CAAP,CACD,CACF,CAAC,MAAOC,CAAP,CAAU,CAAE;;AAId,MAAO,IAAIP,cAAJ,EAAP,CACD,CArBD,CAuBA,kDACO,GAAMQ,kBAAiB,CAAGL,gBAAgB,CAAC,cAAD,CAA1C,CAEP,mDACO,GAAMM,eAAc,CAAGN,gBAAgB,CAAC,gBAAD,CAAvC,CC1DP;;;;;;;;;;;;;;;GAiCA,GAAMO,UAAS,CAAG,GAAIC,OAAJ,CAAW,oBAAX,CAAlB,CAEA;;;GAIO,GAAMC,cAAa,CAAkB,WAC1C,GAAIC,GAAE,CAAG,CAAT,CACA,MAAO,YACL,MAAOA,GAAE,EAAT,CACD,CAFD,CAGD,CAL0C,EAApC,CAOP;;;;GAKO,GAAMC,KAAI,CAAG,SAAUC,GAAV,CAAqB,CACvC,GAAMC,UAAS,CAAGC,iBAAiB,CAACF,GAAD,CAAnC,CACA,GAAMD,KAAI,CAAG,GAAII,KAAJ,EAAb,CACAJ,IAAI,CAACK,MAAL,CAAYH,SAAZ,EACA,GAAMI,UAAS,CAAGN,IAAI,CAACO,MAAL,EAAlB,CACA,MAAOC,OAAM,CAACC,eAAP,CAAuBH,SAAvB,CAAP,CACD,CANM,CAQP;;;;GAKA,GAAMI,iBAAgB,CAAG,WAAU,qDAAqB,CAArBC,2BACjC,GAAIC,QAAO,CAAG,EAAd,CACA,IAAK,GAAIC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,OAAO,CAACG,MAA5B,CAAoCD,CAAC,EAArC,CAAyC,CACvC,GAAME,IAAG,CAAGJ,OAAO,CAACE,CAAD,CAAnB,CACA,GACEG,KAAK,CAACC,OAAN,CAAcF,GAAd,GACCA,GAAG,EACF,MAAOA,IAAP,GAAe,QADhB;AAGC,MAAQA,IAAW,CAACD,MAApB,GAA+B,QALnC,CAME,CACAF,OAAO,EAAIF,gBAAgB,CAACQ,KAAjB,CAAuB,IAAvB,CAA6BH,GAA7B,CAAX,CACD,CARD,IAQO,IAAI,MAAOA,IAAP,GAAe,QAAnB,CAA6B,CAClCH,OAAO,EAAIjC,SAAS,CAACoC,GAAD,CAApB,CACD,CAFM,IAEA,CACLH,OAAO,EAAIG,GAAX,CACD,CACDH,OAAO,EAAI,GAAX,CACD,CAED,MAAOA,QAAP,CACD,CArBD,CAuBA;;;GAIO,GAAIO,OAAM,CAAiC,IAA3C,CAEP;;;;GAKA,GAAIC,UAAS,CAAG,IAAhB,CAEA;;;;MAKaC,cAAa,CAAG,SAC3BC,OAD2B,CAE3BC,UAF2B,CAEP,CAEpBC,MAAM,CACJ,CAACD,UAAD,EAAeD,OAAO,GAAK,IAA3B,EAAmCA,OAAO,GAAK,KAD3C,CAEJ,4CAFI,CAAN,CAIA,GAAIA,OAAO,GAAK,IAAhB,CAAsB,CACpB1B,SAAS,CAAC6B,QAAV,CAAqBC,QAAQ,CAACC,OAA9B,CACAR,MAAM,CAAGvB,SAAS,CAACgC,GAAV,CAAcC,IAAd,CAAmBjC,SAAnB,CAAT,CACA,GAAI2B,UAAJ,CAAgB,CACd5B,cAAc,CAACmC,GAAf,CAAmB,iBAAnB,CAAsC,IAAtC,EACD,CACF,CAND,IAMO,IAAI,MAAOR,QAAP,GAAmB,UAAvB,CAAmC,CACxCH,MAAM,CAAGG,OAAT,CACD,CAFM,IAEA,CACLH,MAAM,CAAG,IAAT,CACAxB,cAAc,CAACoC,MAAf,CAAsB,iBAAtB,EACD,CACH,EAEA;;;GAIO,GAAMH,IAAG,CAAG,WAAU,qDAAqB,CAArBjB,2BAC3B,GAAIS,SAAS,GAAK,IAAlB,CAAwB,CACtBA,SAAS,CAAG,KAAZ,CACA,GAAID,MAAM,GAAK,IAAX,EAAmBxB,cAAc,CAACqC,GAAf,CAAmB,iBAAnB,IAA0C,IAAjE,CAAuE,CACrEX,aAAa,CAAC,IAAD,CAAb,CACD,CACF,CAED,GAAIF,MAAJ,CAAY,CACV,GAAMP,QAAO,CAAGF,gBAAgB,CAACQ,KAAjB,CAAuB,IAAvB,CAA6BP,OAA7B,CAAhB,CACAQ,MAAM,CAACP,OAAD,CAAN,CACD,CACF,CAZM,CAcP;;;GAIO,GAAMqB,WAAU,CAAG,SACxBC,MADwB,CACV,CAEd,MAAO,YAAU,qDAAqB,CAArBvB,2BACfiB,GAAG,MAAH,CAAG,MAAH,CAAGO,UAACD,MAAD,EAAYvB,OAAZ,CAAH,EACD,CAFD,CAGD,CANM,CAQP;;GAGO,GAAMyB,MAAK,CAAG,WAAU,qDAAoB,CAApBzB,2BAC7B,GAAMC,QAAO,CAAG,4BAA8BF,gBAAgB,MAAhB,CAAgB,MAAhB,CAAgByB,SAAIxB,OAAJ,CAAhB,CAA9C,CACAf,SAAS,CAACwC,KAAV,CAAgBxB,OAAhB,EACD,CAHM,CAKP;;GAGO,GAAMyB,MAAK,CAAG,WAAU,qDAAoB,CAApB1B,2BAC7B,GAAMC,QAAO,CAAG,yBAAyBF,gBAAgB,MAAhB,CAAgB,MAAhB,CAAgByB,SAAIxB,OAAJ,CAAhB,CAAzC,CACAf,SAAS,CAACwC,KAAV,CAAgBxB,OAAhB,EACA,KAAM,IAAI0B,MAAJ,CAAU1B,OAAV,CAAN,CACD,CAJM,CAMP;;GAGO,GAAM2B,KAAI,CAAG,WAAU,qDAAqB,CAArB5B,2BAC5B,GAAMC,QAAO,CAAG,qBAAuBF,gBAAgB,MAAhB,CAAgB,MAAhB,CAAgByB,SAAIxB,OAAJ,CAAhB,CAAvC,CACAf,SAAS,CAAC2C,IAAV,CAAe3B,OAAf,EACD,CAHM,CAKP;;;GAIO,GAAM4B,mBAAkB,CAAG;AAEhC,GACE,MAAOjD,OAAP,GAAkB,WAAlB,EACAA,MAAM,CAACkD,QADP,EAEAlD,MAAM,CAACkD,QAAP,CAAgBC,QAFhB,EAGAnD,MAAM,CAACkD,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,QAAjC,IAA+C,CAAC,CAJlD,CAKE,CACAJ,IAAI,CACF,gDACE,8CAFA,CAAJ,CAID,CACF,CAbM,CA0BP;;;;GAKO,GAAMK,oBAAmB,CAAG,SAAUC,IAAV,CAAuB,CACxD,MACE,OAAOA,KAAP,GAAgB,QAAhB,GACCA,IAAI,GAAKA,IAAT,EAAa;AACZA,IAAI,GAAKC,MAAM,CAACC,iBADjB,EAECF,IAAI,GAAKC,MAAM,CAACE,iBAHlB,CADF,CAMD,CAPM,CASP;;GAGO,GAAMC,oBAAmB,CAAG,SAAUC,EAAV,CAAwB,CACzD,GAAIC,SAAS,IAAMC,QAAQ,CAACC,UAAT,GAAwB,UAA3C,CAAuD,CACrDH,EAAE,GACH,CAFD,IAEO;;AAIL,GAAII,SAAM,CAAG,KAAb,CACA,GAAMC,YAAS,CAAG,WAChB,GAAI,CAACH,QAAQ,CAACI,IAAd,CAAoB,CAClBC,UAAU,CAACF,WAAD,CAAYG,IAAI,CAACC,KAAL,CAAW,EAAX,CAAZ,CAAV,CACA,OACD,CAED,GAAI,CAACL,QAAL,CAAa,CACXA,QAAM,CAAG,IAAT,CACAJ,EAAE,GACH,CACF,CAVD,CAYA,GAAIE,QAAQ,CAACQ,gBAAb,CAA+B,CAC7BR,QAAQ,CAACQ,gBAAT,CAA0B,kBAA1B,CAA8CL,WAA9C,CAAyD,KAAzD;AAEAhE,MAAM,CAACqE,gBAAP,CAAwB,MAAxB,CAAgCL,WAAhC,CAA2C,KAA3C;AAED,CALD,IAKO,IAAKH,QAAgB,CAACS,WAAtB,CAAmC;;AAGvCT,QAAgB,CAACS,WAAjB,CAA6B,oBAA7B,CAAmD,WAClD,GAAIT,QAAQ,CAACC,UAAT,GAAwB,UAA5B,CAAwC,CACtCE,WAAS,GACV,CACF,CAJA;;AAOAhE,MAAc,CAACsE,WAAf,CAA2B,QAA3B,CAAqCN,WAArC;;;AAKF,CACF,CACF,CA1CM,CA4CP;;;GAIO,GAAMO,SAAQ,CAAG,YAAjB,CAEP;;;GAIO,GAAMC,SAAQ,CAAG,YAAjB,CAEP;;;;;GAMO,GAAMC,YAAW,CAAG,SAAUC,CAAV,CAAqBC,CAArB,CAA8B,CACvD,GAAID,CAAC,GAAKC,CAAV,CAAa,CACX,MAAO,EAAP,CACD,CAFD,IAEO,IAAID,CAAC,GAAKH,QAAN,EAAkBI,CAAC,GAAKH,QAA5B,CAAsC,CAC3C,MAAO,CAAC,CAAR,CACD,CAFM,IAEA,IAAIG,CAAC,GAAKJ,QAAN,EAAkBG,CAAC,GAAKF,QAA5B,CAAsC,CAC3C,MAAO,EAAP,CACD,CAFM,IAEA,CACL,GAAMI,OAAM,CAAGC,WAAW,CAACH,CAAD,CAA1B,CACEI,MAAM,CAAGD,WAAW,CAACF,CAAD,CADtB,CAGA,GAAIC,MAAM,GAAK,IAAf,CAAqB,CACnB,GAAIE,MAAM,GAAK,IAAf,CAAqB,CACnB,MAAOF,OAAM,CAAGE,MAAT,GAAoB,CAApB,CAAwBJ,CAAC,CAACnD,MAAF,CAAWoD,CAAC,CAACpD,MAArC,CAA8CqD,MAAM,CAAGE,MAA9D,CACD,CAFD,IAEO,CACL,MAAO,CAAC,CAAR,CACD,CACF,CAND,IAMO,IAAIA,MAAM,GAAK,IAAf,CAAqB,CAC1B,MAAO,EAAP,CACD,CAFM,IAEA,CACL,MAAOJ,EAAC,CAAGC,CAAJ,CAAQ,CAAC,CAAT,CAAa,CAApB,CACD,CACF,CACF,CAvBM,CAyBP;;;;GAKO,GAAMI,cAAa,CAAG,SAAUL,CAAV,CAAqBC,CAArB,CAA8B,CACzD,GAAID,CAAC,GAAKC,CAAV,CAAa,CACX,MAAO,EAAP,CACD,CAFD,IAEO,IAAID,CAAC,CAAGC,CAAR,CAAW,CAChB,MAAO,CAAC,CAAR,CACD,CAFM,IAEA,CACL,MAAO,EAAP,CACD,CACF,CARM,CAUP;;;;GAKO,GAAMK,WAAU,CAAG,SACxBjG,GADwB,CAExBkG,GAFwB,CAEK,CAE7B,GAAIA,GAAG,EAAIlG,GAAG,GAAIkG,IAAlB,CAAuB,CACrB,MAAOA,IAAG,CAAClG,GAAD,CAAV,CACD,CAFD,IAEO,CACL,KAAM,IAAIgE,MAAJ,CACJ,yBAA2BhE,GAA3B,CAAiC,eAAjC,CAAmDK,SAAS,CAAC6F,GAAD,CADxD,CAAN,CAGD,CACF,CAXM,CAaP;;;GAIO,GAAMC,kBAAiB,CAAG,SAAUD,GAAV,CAAsB,CACrD,GAAI,MAAOA,IAAP,GAAe,QAAf,EAA2BA,GAAG,GAAK,IAAvC,CAA6C,CAC3C,MAAO7F,UAAS,CAAC6F,GAAD,CAAhB,CACD,CAED,GAAME,KAAI,CAAG,EAAb;AAEA,IAAK,GAAMC,EAAX,GAAgBH,IAAhB,CAAqB,CACnBE,IAAI,CAACE,IAAL,CAAUD,CAAV,EACD;AAGDD,IAAI,CAACG,IAAL,GACA,GAAIvG,IAAG,CAAG,GAAV,CACA,IAAK,GAAIuC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG6D,IAAI,CAAC5D,MAAzB,CAAiCD,CAAC,EAAlC,CAAsC,CACpC,GAAIA,CAAC,GAAK,CAAV,CAAa,CACXvC,GAAG,EAAI,GAAP,CACD,CACDA,GAAG,EAAIK,SAAS,CAAC+F,IAAI,CAAC7D,CAAD,CAAL,CAAhB,CACAvC,GAAG,EAAI,GAAP,CACAA,GAAG,EAAImG,iBAAiB,CAACD,GAAG,CAACE,IAAI,CAAC7D,CAAD,CAAL,CAAJ,CAAxB,CACD,CAEDvC,GAAG,EAAI,GAAP,CACA,MAAOA,IAAP,CACD,CAzBM,CA2BP;;;;;GAMO,GAAMwG,kBAAiB,CAAG,SAC/B7E,GAD+B,CAE/B8E,OAF+B,CAEhB,CAEf,GAAMC,IAAG,CAAG/E,GAAG,CAACa,MAAhB,CAEA,GAAIkE,GAAG,EAAID,OAAX,CAAoB,CAClB,MAAO,CAAC9E,GAAD,CAAP,CACD,CAED,GAAMgF,SAAQ,CAAG,EAAjB,CACA,IAAK,GAAIC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,GAApB,CAAyBE,CAAC,EAAIH,OAA9B,CAAuC,CACrC,GAAIG,CAAC,CAAGH,OAAJ,CAAcC,GAAlB,CAAuB,CACrBC,QAAQ,CAACL,IAAT,CAAc3E,GAAG,CAACkF,SAAJ,CAAcD,CAAd,CAAiBF,GAAjB,CAAd,EACD,CAFD,IAEO,CACLC,QAAQ,CAACL,IAAT,CAAc3E,GAAG,CAACkF,SAAJ,CAAcD,CAAd,CAAiBA,CAAC,CAAGH,OAArB,CAAd,EACD,CACF,CACD,MAAOE,SAAP,CACD,CAnBM,CAqBP;;;;;WAMgBG,MAAKZ,IAAatB,GAAmC,CACnE,IAAK,GAAM5E,IAAX,GAAkBkG,IAAlB,CAAuB,CACrB,GAAIA,GAAG,CAACa,cAAJ,CAAmB/G,GAAnB,CAAJ,CAA6B,CAC3B4E,EAAE,CAAC5E,GAAD,CAAMkG,GAAG,CAAClG,GAAD,CAAT,CAAF,CACD,CACF,CACF,CAeD;;;;;;GAOO,GAAMgH,sBAAqB,CAAG,SAAUC,CAAV,CAAmB,CACtD/D,MAAM,CAAC,CAACoB,mBAAmB,CAAC2C,CAAD,CAArB,CAA0B,qBAA1B,CAAN,CAAuD;AAEvD,GAAMC,MAAK,CAAG,EAAd,CACEC,KAAK,CAAG,EADV,CAEA,GAAMC,KAAI,CAAG,CAAC,GAAMF,KAAK,CAAG,CAAf,EAAqB,CAAlC,CACA,GAAIG,EAAJ,CAAOlG,CAAP,CAAUmG,CAAV,CAAaC,EAAb,CAAiBhF,CAAjB;;AAIA,GAAI0E,CAAC,GAAK,CAAV,CAAa,CACX9F,CAAC,CAAG,CAAJ,CACAmG,CAAC,CAAG,CAAJ,CACAD,CAAC,CAAG,EAAIJ,CAAJ,GAAU,CAACO,QAAX,CAAsB,CAAtB,CAA0B,CAA9B,CACD,CAJD,IAIO,CACLH,CAAC,CAAGJ,CAAC,CAAG,CAAR,CACAA,CAAC,CAAG7B,IAAI,CAACqC,GAAL,CAASR,CAAT,CAAJ,CAEA,GAAIA,CAAC,EAAI7B,IAAI,CAACsC,GAAL,CAAS,CAAT,CAAY,EAAIN,IAAhB,CAAT,CAAgC;AAE9BG,EAAE,CAAGnC,IAAI,CAACuC,GAAL,CAASvC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC9B,GAAL,CAAS2D,CAAT,EAAc7B,IAAI,CAACwC,GAA9B,CAAT,CAA6CR,IAA7C,CAAL,CACAjG,CAAC,CAAGoG,EAAE,CAAGH,IAAT,CACAE,CAAC,CAAGlC,IAAI,CAACyC,KAAL,CAAWZ,CAAC,CAAG7B,IAAI,CAACsC,GAAL,CAAS,CAAT,CAAYP,KAAK,CAAGI,EAApB,CAAJ,CAA8BnC,IAAI,CAACsC,GAAL,CAAS,CAAT,CAAYP,KAAZ,CAAzC,CAAJ,CACD,CALD,IAKO;AAELhG,CAAC,CAAG,CAAJ,CACAmG,CAAC,CAAGlC,IAAI,CAACyC,KAAL,CAAWZ,CAAC,CAAG7B,IAAI,CAACsC,GAAL,CAAS,CAAT,CAAY,EAAIN,IAAJ,CAAWD,KAAvB,CAAf,CAAJ,CACD,CACF;AAGD,GAAMW,KAAI,CAAG,EAAb,CACA,IAAKvF,CAAC,CAAG4E,KAAT,CAAgB5E,CAAhB,CAAmBA,CAAC,EAAI,CAAxB,CAA2B,CACzBuF,IAAI,CAACxB,IAAL,CAAUgB,CAAC,CAAG,CAAJ,CAAQ,CAAR,CAAY,CAAtB,EACAA,CAAC,CAAGlC,IAAI,CAACC,KAAL,CAAWiC,CAAC,CAAG,CAAf,CAAJ,CACD,CACD,IAAK/E,CAAC,CAAG2E,KAAT,CAAgB3E,CAAhB,CAAmBA,CAAC,EAAI,CAAxB,CAA2B,CACzBuF,IAAI,CAACxB,IAAL,CAAUnF,CAAC,CAAG,CAAJ,CAAQ,CAAR,CAAY,CAAtB,EACAA,CAAC,CAAGiE,IAAI,CAACC,KAAL,CAAWlE,CAAC,CAAG,CAAf,CAAJ,CACD,CACD2G,IAAI,CAACxB,IAAL,CAAUe,CAAC,CAAG,CAAH,CAAO,CAAlB,EACAS,IAAI,CAACC,OAAL,GACA,GAAMpG,IAAG,CAAGmG,IAAI,CAACE,IAAL,CAAU,EAAV,CAAZ;AAGA,GAAIC,cAAa,CAAG,EAApB,CACA,IAAK1F,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG,EAAhB,CAAoBA,CAAC,EAAI,CAAzB,CAA4B,CAC1B,GAAI2F,QAAO,CAAGC,QAAQ,CAACxG,GAAG,CAACyG,MAAJ,CAAW7F,CAAX,CAAc,CAAd,CAAD,CAAmB,CAAnB,CAAR,CAA8B5B,QAA9B,CAAuC,EAAvC,CAAd,CACA,GAAIuH,OAAO,CAAC1F,MAAR,GAAmB,CAAvB,CAA0B,CACxB0F,OAAO,CAAG,IAAMA,OAAhB,CACD,CACDD,aAAa,CAAGA,aAAa,CAAGC,OAAhC,CACD,CACD,MAAOD,cAAa,CAACI,WAAd,EAAP,CACD,CAtDM,CAwDP;;;;GAKO,GAAMC,+BAA8B,CAAG,WAC5C,MAAO,CAAC,EACN,MAAOrH,OAAP,GAAkB,QAAlB,EACAA,MAAM,CAAC,QAAD,CADN,EAEAA,MAAM,CAAC,QAAD,CAAN,CAAiB,WAAjB,CAFA,EAGA,CAAC,UAAUsH,IAAV,CAAetH,MAAM,CAACkD,QAAP,CAAgBqE,IAA/B,CAJK,CAAR,CAMD,CAPM,CASP;;;GAIO,GAAMC,kBAAiB,CAAG;AAE/B,MAAO,OAAOC,QAAP,GAAmB,QAAnB,EAA+B,MAAOA,QAAO,CAACC,EAAf,GAAsB,QAA5D,CACD,CAHM,CAKP;;;;;GAMO,GAAMC,mBAAkB,CAAG,SAAUC,IAAV,CAAwBC,KAAxB,CAAoC,CACpE,GAAIC,OAAM,CAAG,eAAb,CACA,GAAIF,IAAI,GAAK,SAAb,CAAwB,CACtBE,MAAM,CACJ,+CACA,6CAFF,CAGD,CAJD,IAIO,IAAIF,IAAI,GAAK,mBAAb,CAAkC,CACvCE,MAAM,CAAG,4DAAT,CACD,CAFM,IAEA,IAAIF,IAAI,GAAK,aAAb,CAA4B,CACjCE,MAAM,CAAG,4BAAT,CACD,CAED,GAAMjF,MAAK,CAAG,GAAIE,MAAJ,CACZ6E,IAAI,CAAG,MAAP,CAAgBC,KAAK,CAACE,IAAN,CAAWrI,QAAX,EAAhB,CAAwC,IAAxC,CAA+CoI,MADnC,CAAd;AAICjF,KAAa,CAAC+E,IAAd,CAAqBA,IAAI,CAACI,WAAL,EAArB,CACD,MAAOnF,MAAP,CACD,CAlBM,CAoBP;;;;GAKO,GAAMoF,gBAAe,CAAG,GAAIC,OAAJ,CAAW,mBAAX,CAAxB,CAEP;;;;GAKO,GAAMrD,YAAW,CAAG,SAAUnE,GAAV,CAAqB,CAC9C,GAAIuH,eAAe,CAACX,IAAhB,CAAqB5G,GAArB,CAAJ,CAA+B,CAC7B,GAAMyH,OAAM,CAAG5E,MAAM,CAAC7C,GAAD,CAArB,CACA,GAAIyH,MAAM,EAAI,CAAC,UAAX,EAAyBA,MAAM,EAAI,UAAvC,CAAmD,CACjD,MAAOA,OAAP,CACD,CACF,CACD,MAAO,KAAP,CACD,CARM,CAUP;;;;;;;;;;;;;;;;GAiBO,GAAMC,eAAc,CAAG,SAAUzE,EAAV,CAAwB,CACpD,GAAI,CACFA,EAAE,GACH,CAAC,MAAOzD,CAAP,CAAU;AAEVgE,UAAU,CAAC;;;;AAKT,GAAMmE,MAAK,CAAGnI,CAAC,CAACmI,KAAF,EAAW,EAAzB,CACArF,IAAI,CAAC,wCAAD,CAA2CqF,KAA3C,CAAJ,CACA,KAAMnI,EAAN,CACD,CARS,CAQPiE,IAAI,CAACC,KAAL,CAAW,CAAX,CARO,CAAV,CASD,CACF,CAfM,CAqCP;;GAGO,GAAMkE,aAAY,CAAG,WAC1B,GAAMC,UAAS,CACZ,MAAOvI,OAAP,GAAkB,QAAlB,EACCA,MAAM,CAAC,WAAD,CADP,EAECA,MAAM,CAAC,WAAD,CAAN,CAAoB,WAApB,CAFF,EAGA,EAJF;;;;AAUA,MACEuI,UAAS,CAACC,MAAV,CACE,0FADF,GAEK,CAHP,CAKD,CAhBM,CAiCP;;;;;;;;GASO,GAAMC,sBAAqB,CAAG,SACnC9E,EADmC,CAEnC+E,IAFmC,CAEvB,CAEZ,GAAMC,QAAO,CAAoBzE,UAAU,CAACP,EAAD,CAAK+E,IAAL,CAA3C;AAEA,GAAI,MAAOC,QAAP,GAAmB,QAAnB,EAAgCA,OAAe,CAAC,OAAD,CAAnD,CAA8D;AAE3DA,OAAe,CAAC,OAAD,CAAf,GACF,CACD,MAAOA,QAAP,CACD,CAXM,CC3pBP;;;;;;;;;;;;;;;IAmBA;;;;GAMA;;;;OAkBE,cAAYC,YAAZ,CAA6CC,QAA7C,CAA8D,CAC5D,GAAIA,QAAQ,GAAK,IAAK,EAAtB,CAAyB,CACvB,KAAKC,OAAL,CAAgBF,YAAuB,CAACG,KAAxB,CAA8B,GAA9B,CAAhB;AAGA,GAAIC,OAAM,CAAG,CAAb,CACA,IAAK,GAAI1H,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAKwH,OAAL,CAAavH,MAAjC,CAAyCD,CAAC,EAA1C,CAA8C,CAC5C,GAAI,KAAKwH,OAAL,CAAaxH,CAAb,EAAgBC,MAAhB,CAAyB,CAA7B,CAAgC,CAC9B,KAAKuH,OAAL,CAAaE,MAAb,EAAuB,KAAKF,OAAL,CAAaxH,CAAb,CAAvB,CACA0H,MAAM,GACP,CACF,CACD,KAAKF,OAAL,CAAavH,MAAb,CAAsByH,MAAtB,CAEA,KAAKC,SAAL,CAAiB,CAAjB,CACD,CAdD,IAcO,CACL,KAAKH,OAAL,CAAeF,YAAf,CACA,KAAKK,SAAL,CAAiBJ,QAAjB,CACD,CACF,CA5BDK,sBAAWC,IAAX,CAAW,OAAX,CAAgB;;;;eAAhB,WACE,MAAO,IAAIA,KAAJ,CAAS,EAAT,CAAP,CACD,CAFe,oCAAhB,EA8BAA,mCACE,GAAI,KAAKF,SAAL,EAAkB,KAAKH,OAAL,CAAavH,MAAnC,CAA2C,CACzC,MAAO,KAAP,CACD,CAED,MAAO,MAAKuH,OAAL,CAAa,KAAKG,SAAlB,CAAP,CACD,CAND;;OAWAE,oCACE,MAAO,MAAKL,OAAL,CAAavH,MAAb,CAAsB,KAAK0H,SAAlC,CACD,CAFD;;OAOAE,mCACE,GAAIN,SAAQ,CAAG,KAAKI,SAApB,CACA,GAAIJ,QAAQ,CAAG,KAAKC,OAAL,CAAavH,MAA5B,CAAoC,CAClCsH,QAAQ,GACT,CACD,MAAO,IAAIM,KAAJ,CAAS,KAAKL,OAAd,CAAuBD,QAAvB,CAAP,CACD,CAND;;OAWAM,kCACE,GAAI,KAAKF,SAAL,CAAiB,KAAKH,OAAL,CAAavH,MAAlC,CAA0C,CACxC,MAAO,MAAKuH,OAAL,CAAa,KAAKA,OAAL,CAAavH,MAAb,CAAsB,CAAnC,CAAP,CACD,CAED,MAAO,KAAP,CACD,CAND,CAQA4H,mCACE,GAAIC,WAAU,CAAG,EAAjB,CACA,IAAK,GAAI9H,EAAC,CAAG,KAAK2H,SAAlB,CAA6B3H,CAAC,CAAG,KAAKwH,OAAL,CAAavH,MAA9C,CAAsDD,CAAC,EAAvD,CAA2D,CACzD,GAAI,KAAKwH,OAAL,CAAaxH,CAAb,IAAoB,EAAxB,CAA4B,CAC1B8H,UAAU,EAAI,IAAM,KAAKN,OAAL,CAAaxH,CAAb,CAApB,CACD,CACF,CAED,MAAO8H,WAAU,EAAI,GAArB,CACD,CATD,CAWAD,6CACE,GAAIC,WAAU,CAAG,EAAjB,CACA,IAAK,GAAI9H,EAAC,CAAG,KAAK2H,SAAlB,CAA6B3H,CAAC,CAAG,KAAKwH,OAAL,CAAavH,MAA9C,CAAsDD,CAAC,EAAvD,CAA2D,CACzD,GAAI,KAAKwH,OAAL,CAAaxH,CAAb,IAAoB,EAAxB,CAA4B,CAC1B8H,UAAU,EAAI,IAAMC,kBAAkB,CAACC,MAAM,CAAC,KAAKR,OAAL,CAAaxH,CAAb,CAAD,CAAP,CAAtC,CACD,CACF,CAED,MAAO8H,WAAU,EAAI,GAArB,CACD,CATD;;;;;OAiBAD,8BAAMI,KAAN,CAAuB,CAAjB,2BAAiB,CACrB,MAAO,MAAKT,OAAL,CAAaU,KAAb,CAAmB,KAAKP,SAAL,CAAiBM,KAApC,CAAP,CACD,CAFD;;OAOAJ,iCACE,GAAI,KAAKF,SAAL,EAAkB,KAAKH,OAAL,CAAavH,MAAnC,CAA2C,CACzC,MAAO,KAAP,CACD,CAED,GAAMkI,OAAM,CAAG,EAAf,CACA,IAAK,GAAInI,EAAC,CAAG,KAAK2H,SAAlB,CAA6B3H,CAAC,CAAG,KAAKwH,OAAL,CAAavH,MAAb,CAAsB,CAAvD,CAA0DD,CAAC,EAA3D,CAA+D,CAC7DmI,MAAM,CAACpE,IAAP,CAAY,KAAKyD,OAAL,CAAaxH,CAAb,CAAZ,EACD,CAED,MAAO,IAAI6H,KAAJ,CAASM,MAAT,CAAiB,CAAjB,CAAP,CACD,CAXD;;;OAiBAN,8BAAMO,YAAN,CAAiC,CAC/B,GAAMD,OAAM,CAAG,EAAf,CACA,IAAK,GAAInI,EAAC,CAAG,KAAK2H,SAAlB,CAA6B3H,CAAC,CAAG,KAAKwH,OAAL,CAAavH,MAA9C,CAAsDD,CAAC,EAAvD,CAA2D,CACzDmI,MAAM,CAACpE,IAAP,CAAY,KAAKyD,OAAL,CAAaxH,CAAb,CAAZ,EACD,CAED,GAAIoI,YAAY,WAAYP,KAA5B,CAAkC,CAChC,IACE,GAAI7H,EAAC,CAAGoI,YAAY,CAACT,SADvB,CAEE3H,CAAC,CAAGoI,YAAY,CAACZ,OAAb,CAAqBvH,MAF3B,CAGED,CAAC,EAHH,CAIE,CACAmI,MAAM,CAACpE,IAAP,CAAYqE,YAAY,CAACZ,OAAb,CAAqBxH,CAArB,CAAZ,EACD,CACF,CARD,IAQO,CACL,GAAMqI,YAAW,CAAGD,YAAY,CAACX,KAAb,CAAmB,GAAnB,CAApB,CACA,IAAK,GAAIzH,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGqI,WAAW,CAACpI,MAAhC,CAAwCD,CAAC,EAAzC,CAA6C,CAC3C,GAAIqI,WAAW,CAACrI,CAAD,CAAX,CAAeC,MAAf,CAAwB,CAA5B,CAA+B,CAC7BkI,MAAM,CAACpE,IAAP,CAAYsE,WAAW,CAACrI,CAAD,CAAvB,EACD,CACF,CACF,CAED,MAAO,IAAI6H,KAAJ,CAASM,MAAT,CAAiB,CAAjB,CAAP,CACD,CAxBD;;OA6BAN,kCACE,MAAO,MAAKF,SAAL,EAAkB,KAAKH,OAAL,CAAavH,MAAtC,CACD,CAFD;;;;OASO4H,kBAAP,SAAoBS,SAApB,CAAqCC,SAArC,CAAoD,CAClD,GAAMC,MAAK,CAAGF,SAAS,CAACG,QAAV,EAAd,CACEC,KAAK,CAAGH,SAAS,CAACE,QAAV,EADV,CAEA,GAAID,KAAK,GAAK,IAAd,CAAoB,CAClB,MAAOD,UAAP,CACD,CAFD,IAEO,IAAIC,KAAK,GAAKE,KAAd,CAAqB,CAC1B,MAAOb,KAAI,CAACc,YAAL,CAAkBL,SAAS,CAACM,QAAV,EAAlB,CAAwCL,SAAS,CAACK,QAAV,EAAxC,CAAP,CACD,CAFM,IAEA,CACL,KAAM,IAAInH,MAAJ,CACJ,8BACE8G,SADF,CAEE,kBAFF,CAGE,aAHF,CAIED,SAJF,CAKE,GANE,CAAN,CAQD,CACF,CAjBM;;;;OAwBAT,kBAAP,SAAoBgB,IAApB,CAAgCC,KAAhC,CAA2C,CACzC,GAAMC,SAAQ,CAAGF,IAAI,CAACX,KAAL,EAAjB,CACA,GAAMc,UAAS,CAAGF,KAAK,CAACZ,KAAN,EAAlB,CACA,IAAK,GAAIlI,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG+I,QAAQ,CAAC9I,MAAb,EAAuBD,CAAC,CAAGgJ,SAAS,CAAC/I,MAArD,CAA6DD,CAAC,EAA9D,CAAkE,CAChE,GAAMiJ,IAAG,CAAG9F,WAAW,CAAC4F,QAAQ,CAAC/I,CAAD,CAAT,CAAcgJ,SAAS,CAAChJ,CAAD,CAAvB,CAAvB,CACA,GAAIiJ,GAAG,GAAK,CAAZ,CAAe,CACb,MAAOA,IAAP,CACD,CACF,CACD,GAAIF,QAAQ,CAAC9I,MAAT,GAAoB+I,SAAS,CAAC/I,MAAlC,CAA0C,CACxC,MAAO,EAAP,CACD,CACD,MAAO8I,SAAQ,CAAC9I,MAAT,CAAkB+I,SAAS,CAAC/I,MAA5B,CAAqC,CAAC,CAAtC,CAA0C,CAAjD,CACD,CAbM;;;;OAoBP4H,+BAAOqB,KAAP,CAAkB,CAChB,GAAI,KAAKC,SAAL,KAAqBD,KAAK,CAACC,SAAN,EAAzB,CAA4C,CAC1C,MAAO,MAAP,CACD,CAED,IACE,GAAInJ,EAAC,CAAG,KAAK2H,SAAb,CAAwByB,CAAC,CAAGF,KAAK,CAACvB,SADpC,CAEE3H,CAAC,EAAI,KAAKwH,OAAL,CAAavH,MAFpB,CAGED,CAAC,GAAIoJ,CAAC,EAHR,CAIE,CACA,GAAI,KAAK5B,OAAL,CAAaxH,CAAb,IAAoBkJ,KAAK,CAAC1B,OAAN,CAAc4B,CAAd,CAAxB,CAA0C,CACxC,MAAO,MAAP,CACD,CACF,CAED,MAAO,KAAP,CACD,CAhBD;;;;OAuBAvB,iCAASqB,KAAT,CAAoB,CAClB,GAAIlJ,EAAC,CAAG,KAAK2H,SAAb,CACA,GAAIyB,EAAC,CAAGF,KAAK,CAACvB,SAAd,CACA,GAAI,KAAKwB,SAAL,GAAmBD,KAAK,CAACC,SAAN,EAAvB,CAA0C,CACxC,MAAO,MAAP,CACD,CACD,MAAOnJ,CAAC,CAAG,KAAKwH,OAAL,CAAavH,MAAxB,CAAgC,CAC9B,GAAI,KAAKuH,OAAL,CAAaxH,CAAb,IAAoBkJ,KAAK,CAAC1B,OAAN,CAAc4B,CAAd,CAAxB,CAA0C,CACxC,MAAO,MAAP,CACD,CACD,EAAEpJ,CAAF,CACA,EAAEoJ,CAAF,CACD,CACD,MAAO,KAAP,CACD,CAdD,CAeF,YAxPA,IAwPC;AAED;;;;;;;;;GAUA;;;OAUE,wBAAY3C,IAAZ,CAAgC4C,YAAhC,CAAoD,CAApB,4DAE9B,KAAKC,MAAL,CAAc7C,IAAI,CAACyB,KAAL,EAAd,wEAEA,KAAKqB,WAAL,CAAmB1G,IAAI,CAAC2G,GAAL,CAAS,CAAT,CAAY,KAAKF,MAAL,CAAYrJ,MAAxB,CAAnB,CAEA,IAAK,GAAID,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAKsJ,MAAL,CAAYrJ,MAAhC,CAAwCD,CAAC,EAAzC,CAA6C,CAC3C,KAAKuJ,WAAL,EAAoBE,YAAY,CAAC,KAAKH,MAAL,CAAYtJ,CAAZ,CAAD,CAAhC,CACD,CACD,KAAK0J,WAAL,GACD,CAGD9B,sBAAW+B,cAAX,CAAW,gBAAX,CAAyB,8CAAzB,WACE,MAAO,GAAP,CACD,CAFwB,oCAAzB,EAKA/B,sBAAW+B,cAAX,CAAW,uBAAX,CAAgC,8EAAhC,WACE,MAAO,IAAP,CACD,CAF+B,oCAAhC,8BAKAA,uCAAKC,KAAL,CAAkB;AAEhB,GAAI,KAAKN,MAAL,CAAYrJ,MAAZ,CAAqB,CAAzB,CAA4B,CAC1B,KAAKsJ,WAAL,EAAoB,CAApB,CACD,CACD,KAAKD,MAAL,CAAYvF,IAAZ,CAAiB6F,KAAjB,EACA,KAAKL,WAAL,EAAoBE,YAAY,CAACG,KAAD,CAAhC,CACA,KAAKF,WAAL,GACD,CARD,CAUAC,wCACE,GAAME,KAAI,CAAG,KAAKP,MAAL,CAAYQ,GAAZ,EAAb,CACA,KAAKP,WAAL,EAAoBE,YAAY,CAACI,IAAD,CAAhC;AAEA,GAAI,KAAKP,MAAL,CAAYrJ,MAAZ,CAAqB,CAAzB,CAA4B,CAC1B,KAAKsJ,WAAL,EAAoB,CAApB,CACD,CACF,CAPD,CASQI,qCAAR,WACE,GAAI,KAAKJ,WAAL,CAAmBI,cAAc,CAACI,qBAAtC,CAA6D,CAC3D,KAAM,IAAItI,MAAJ,CACJ,KAAK4H,YAAL,CACE,6BADF,CAEEM,cAAc,CAACI,qBAFjB,CAGE,UAHF,CAIE,KAAKR,WAJP,CAKE,IANE,CAAN,CAQD,CACD,GAAI,KAAKD,MAAL,CAAYrJ,MAAZ,CAAqB0J,cAAc,CAACK,cAAxC,CAAwD,CACtD,KAAM,IAAIvI,MAAJ,CACJ,KAAK4H,YAAL,CACE,gEADF,CAEEM,cAAc,CAACK,cAFjB,CAGE,+BAHF,CAIE,KAAKC,aAAL,EALE,CAAN,CAOD,CACF,CApBO;;;;OA2BRN,kDACE,GAAI,KAAKL,MAAL,CAAYrJ,MAAZ,GAAuB,CAA3B,CAA8B,CAC5B,MAAO,EAAP,CACD,CACD,MAAO,gBAAkB,KAAKqJ,MAAL,CAAY7D,IAAZ,CAAiB,GAAjB,CAAlB,CAA0C,GAAjD,CACD,CALD,CAMF,sBAAC,CArFD,GC7RA;;;;;;;;;;;;;;;GAiBO,GAAMyE,iBAAgB,CAAG,GAAzB,CAEA,GAAMC,cAAa,CAAG,GAAtB,CAEA,GAAMC,wBAAuB,CAAG,GAAhC,CAEA,GAAMC,cAAa,CAAG,GAAtB,CAEA,GAAMC,UAAS,CAAG,GAAlB,CAEA,GAAMC,aAAY,CAAG,gBAArB,CAEA,GAAMC,mBAAkB,CAAG,IAA3B,CAEA,GAAMC,qBAAoB,CAAG,GAA7B,CAEA,GAAMC,UAAS,CAAG,WAAlB,CAEA,GAAMC,aAAY,CAAG,cAArB,CCnCP;;;;;;;;;;;;;;;IAsBA;;;;GAKA;;;;;;;OAaE,kBACEC,IADF,CAEkBC,MAFlB,CAGkBC,SAHlB,CAIkBC,aAJlB,CAKkBC,SALlB,CAMkBC,cANlB,CAOkBC,6BAPlB,CAOgE,CAF9C,uCAA0B,CAC1B,8CAA2B,CAC3B,+EAA8C,CAL9C,mBACA,yBACA,iCACA,yBACA,mCACA,iEAEhB,KAAKN,IAAL,CAAYA,IAAI,CAAC9E,WAAL,EAAZ,CACA,KAAKqF,MAAL,CAAc,KAAKP,IAAL,CAAU/E,MAAV,CAAiB,KAAK+E,IAAL,CAAU9I,OAAV,CAAkB,GAAlB,EAAyB,CAA1C,CAAd,CACA,KAAKsJ,YAAL,CACGvM,iBAAiB,CAACsC,GAAlB,CAAsB,QAAUyJ,IAAhC,GAAoD,KAAKA,IAD5D,CAED,CAEDS,8CACE,MACE,MAAKT,IAAL,GAAc,KAAKQ,YAAnB,EACA,KAAKE,YAAL,EADA,EAEA,KAAKJ,6BAHP,CAKD,CAND,CAQAG,8CACE,MAAO,MAAKD,YAAL,CAAkBvF,MAAlB,CAAyB,CAAzB,CAA4B,CAA5B,IAAmC,IAA1C,CACD,CAFD,CAIAwF,yCACE,MAAO,MAAKF,MAAL,GAAgB,qBAAvB,CACD,CAFD,CAIAE,2CACE,MACE,MAAKF,MAAL,GAAgB,gBAAhB,EAAoC,KAAKA,MAAL,GAAgB,qBADtD,CAGD,CAJD,CAMAE,uCAAWE,OAAX,CAA0B,CACxB,GAAIA,OAAO,GAAK,KAAKH,YAArB,CAAmC,CACjC,KAAKA,YAAL,CAAoBG,OAApB,CACA,GAAI,KAAKC,eAAL,EAAJ,CAA4B,CAC1B3M,iBAAiB,CAACoC,GAAlB,CAAsB,QAAU,KAAK2J,IAArC,CAA2C,KAAKQ,YAAhD,EACD,CACF,CACF,CAPD;;;;;OAeAC,0CAAcI,IAAd,CAA4BC,MAA5B,CAA2D,CACzD/K,MAAM,CAAC,MAAO8K,KAAP,GAAgB,QAAjB,CAA2B,4BAA3B,CAAN,CACA9K,MAAM,CAAC,MAAO+K,OAAP,GAAkB,QAAnB,CAA6B,8BAA7B,CAAN,CAEA,GAAIC,QAAJ,CACA,GAAIF,IAAI,GAAKf,SAAb,CAAwB,CACtBiB,OAAO,CACL,CAAC,KAAKd,MAAL,CAAc,QAAd,CAAyB,OAA1B,EAAqC,KAAKO,YAA1C,CAAyD,OAD3D,CAED,CAHD,IAGO,IAAIK,IAAI,GAAKd,YAAb,CAA2B,CAChCgB,OAAO,CACL,CAAC,KAAKd,MAAL,CAAc,UAAd,CAA2B,SAA5B,EAAyC,KAAKO,YAA9C,CAA6D,OAD/D,CAED,CAHM,IAGA,CACL,KAAM,IAAI3J,MAAJ,CAAU,4BAA8BgK,IAAxC,CAAN,CACD,CACD,GAAI,KAAKG,eAAL,EAAJ,CAA4B,CAC1BF,MAAM,CAAC,IAAD,CAAN,CAAe,KAAKZ,SAApB,CACD,CAED,GAAMe,MAAK,CAAa,EAAxB,CAEAtH,IAAI,CAACmH,MAAD,CAAS,SAACjO,GAAD,CAAcC,KAAd,CAA2B,CACtCmO,KAAK,CAAC9H,IAAN,CAAWtG,GAAG,CAAG,GAAN,CAAYC,KAAvB,EACD,CAFG,CAAJ,CAIA,MAAOiO,QAAO,CAAGE,KAAK,CAACpG,IAAN,CAAW,GAAX,CAAjB,CACD,CAzBD,wBA4BA4F,uCACE,GAAIjM,IAAG,CAAG,KAAK0M,WAAL,EAAV,CACA,GAAI,KAAKb,cAAT,CAAyB,CACvB7L,GAAG,EAAI,IAAM,KAAK6L,cAAX,CAA4B,GAAnC,CACD,CACD,MAAO7L,IAAP,CACD,CAND,wBASAiM,0CACE,MAAO,CAAC,KAAKR,MAAL,CAAc,UAAd,CAA2B,SAA5B,EAAyC,KAAKD,IAArD,CACD,CAFD,CAGF,gBAAC,CAzGD,GC3BA;;;;;;;;;;;;;;;IAqBA;;;GAIA,QAASmB,WAAT,CAAoBjE,UAApB,CAAsC,CACpC,GAAIkE,kBAAiB,CAAG,EAAxB,CACA,GAAM7D,OAAM,CAAGL,UAAU,CAACL,KAAX,CAAiB,GAAjB,CAAf,CACA,IAAK,GAAIzH,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGmI,MAAM,CAAClI,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACtC,GAAImI,MAAM,CAACnI,CAAD,CAAN,CAAUC,MAAV,CAAmB,CAAvB,CAA0B,CACxB,GAAIgM,MAAK,CAAG9D,MAAM,CAACnI,CAAD,CAAlB,CACA,GAAI,CACFiM,KAAK,CAAGC,kBAAkB,CAACD,KAAK,CAACE,OAAN,CAAc,KAAd,CAAqB,GAArB,CAAD,CAA1B,CACD,CAAC,MAAOvN,CAAP,CAAU,CAAE,CACdoN,iBAAiB,EAAI,IAAMC,KAA3B,CACD,CACF,CACD,MAAOD,kBAAP,CACD,CAED;;;GAIA,QAASI,YAAT,CAAqBC,WAArB,CAAwC,YACtC,GAAMC,QAAO,CAAG,EAAhB,CACA,GAAID,WAAW,CAACE,MAAZ,CAAmB,CAAnB,IAA0B,GAA9B,CAAmC,CACjCF,WAAW,CAAGA,WAAW,CAAC/H,SAAZ,CAAsB,CAAtB,CAAd,CACD,KACD,IAAsB,2BAAW,CAACmD,KAAZ,CAAkB,GAAlB,GAAsB+E,YAA5C,CAA4C,QAA5C,CAA4CA,YAA5C,CAA8C,CAAzC,GAAMC,QAAO,SAAb,CACH,GAAIA,OAAO,CAACxM,MAAR,GAAmB,CAAvB,CAA0B,CACxB,SACD,CACD,GAAMyM,GAAE,CAAGD,OAAO,CAAChF,KAAR,CAAc,GAAd,CAAX,CACA,GAAIiF,EAAE,CAACzM,MAAH,GAAc,CAAlB,CAAqB,CACnBqM,OAAO,CAACJ,kBAAkB,CAACQ,EAAE,CAAC,CAAD,CAAH,CAAnB,CAAP,CAAqCR,kBAAkB,CAACQ,EAAE,CAAC,CAAD,CAAH,CAAvD,CACD,CAFD,IAEO,CACLhL,IAAI,CAAC,0BAA0B+K,OAA1B,CAAiC,cAAjC,CAAgDJ,WAAhD,CAA2D,GAA5D,CAAJ,CACD,CACF,4HACD,MAAOC,QAAP,CACD,CAEM,GAAMK,cAAa,CAAG,SAC3BC,OAD2B,CAE3B5B,SAF2B,CAET,CAElB,GAAM6B,UAAS,CAAGC,gBAAgB,CAACF,OAAD,CAAlC,CACE9B,SAAS,CAAG+B,SAAS,CAAC/B,SADxB,CAGA,GAAI+B,SAAS,CAAC1B,MAAV,GAAqB,cAAzB,CAAyC,CACvC3J,KAAK,CACHqL,SAAS,CAACjC,IAAV,CACE,2BADF,CAEE,mDAHC,CAAL,CAKD;AAGD,GACE,CAAC,CAACE,SAAD,EAAcA,SAAS,GAAK,WAA7B,GACA+B,SAAS,CAAC1B,MAAV,GAAqB,WAFvB,CAGE,CACA3J,KAAK,CACH,8EADG,CAAL,CAGD,CAED,GAAI,CAACqL,SAAS,CAAChC,MAAf,CAAuB,CACrBlJ,kBAAkB,GACnB,CAED,GAAMoJ,cAAa,CAAG8B,SAAS,CAACE,MAAV,GAAqB,IAArB,EAA6BF,SAAS,CAACE,MAAV,GAAqB,KAAxE,CAEA,MAAO,CACLC,QAAQ,CAAE,GAAI3B,SAAJ,CACRwB,SAAS,CAACjC,IADF,CAERiC,SAAS,CAAChC,MAFF,CAGRC,SAHQ,CAIRE,SAJQ,CAKRD,aALQ,oBAMY,EANZ,mCAO2BD,SAAS,GAAK+B,SAAS,CAACI,SAPnD,CADL,CAULxG,IAAI,CAAE,GAAIoB,KAAJ,CAASgF,SAAS,CAAC/E,UAAnB,CAVD,CAAP,CAYD,CA3CM,CA6CP;;;;GAKO,GAAMgF,iBAAgB,CAAG,SAC9BF,OAD8B,CACf;AAYf,GAAIhC,KAAI,CAAG,EAAX,CACEO,MAAM,CAAG,EADX,CAEE8B,SAAS,CAAG,EAFd,CAGEnF,UAAU,CAAG,EAHf,CAIEgD,SAAS,CAAG,EAJd;AAOA,GAAID,OAAM,CAAG,IAAb,CACEkC,MAAM,CAAG,OADX,CAEEG,IAAI,CAAG,GAFT;AAKA,GAAI,MAAON,QAAP,GAAmB,QAAvB,CAAiC;AAE/B,GAAIO,SAAQ,CAAGP,OAAO,CAAC9K,OAAR,CAAgB,IAAhB,CAAf,CACA,GAAIqL,QAAQ,EAAI,CAAhB,CAAmB,CACjBJ,MAAM,CAAGH,OAAO,CAACtI,SAAR,CAAkB,CAAlB,CAAqB6I,QAAQ,CAAG,CAAhC,CAAT,CACAP,OAAO,CAAGA,OAAO,CAACtI,SAAR,CAAkB6I,QAAQ,CAAG,CAA7B,CAAV,CACD;AAGD,GAAIC,SAAQ,CAAGR,OAAO,CAAC9K,OAAR,CAAgB,GAAhB,CAAf,CACA,GAAIsL,QAAQ,GAAK,CAAC,CAAlB,CAAqB,CACnBA,QAAQ,CAAGR,OAAO,CAAC3M,MAAnB,CACD,CACD,GAAIoN,gBAAe,CAAGT,OAAO,CAAC9K,OAAR,CAAgB,GAAhB,CAAtB,CACA,GAAIuL,eAAe,GAAK,CAAC,CAAzB,CAA4B,CAC1BA,eAAe,CAAGT,OAAO,CAAC3M,MAA1B,CACD,CACD2K,IAAI,CAAGgC,OAAO,CAACtI,SAAR,CAAkB,CAAlB,CAAqBzB,IAAI,CAACuC,GAAL,CAASgI,QAAT,CAAmBC,eAAnB,CAArB,CAAP,CACA,GAAID,QAAQ,CAAGC,eAAf,CAAgC;AAE9BvF,UAAU,CAAGiE,UAAU,CAACa,OAAO,CAACtI,SAAR,CAAkB8I,QAAlB,CAA4BC,eAA5B,CAAD,CAAvB,CACD,CACD,GAAMC,YAAW,CAAGlB,WAAW,CAC7BQ,OAAO,CAACtI,SAAR,CAAkBzB,IAAI,CAACuC,GAAL,CAASwH,OAAO,CAAC3M,MAAjB,CAAyBoN,eAAzB,CAAlB,CAD6B,CAA/B;AAKAF,QAAQ,CAAGvC,IAAI,CAAC9I,OAAL,CAAa,GAAb,CAAX,CACA,GAAIqL,QAAQ,EAAI,CAAhB,CAAmB,CACjBtC,MAAM,CAAGkC,MAAM,GAAK,OAAX,EAAsBA,MAAM,GAAK,KAA1C,CACAG,IAAI,CAAGtH,QAAQ,CAACgF,IAAI,CAACtG,SAAL,CAAe6I,QAAQ,CAAG,CAA1B,CAAD,CAA+B,EAA/B,CAAf,CACD,CAHD,IAGO,CACLA,QAAQ,CAAGvC,IAAI,CAAC3K,MAAhB,CACD,CAED,GAAMsN,gBAAe,CAAG3C,IAAI,CAAC1C,KAAL,CAAW,CAAX,CAAciF,QAAd,CAAxB,CACA,GAAII,eAAe,CAACzH,WAAhB,KAAkC,WAAtC,CAAmD,CACjDqF,MAAM,CAAG,WAAT,CACD,CAFD,IAEO,IAAIoC,eAAe,CAAC9F,KAAhB,CAAsB,GAAtB,EAA2BxH,MAA3B,EAAqC,CAAzC,CAA4C,CACjDkL,MAAM,CAAGoC,eAAT,CACD,CAFM,IAEA;AAEL,GAAMC,OAAM,CAAG5C,IAAI,CAAC9I,OAAL,CAAa,GAAb,CAAf,CACAmL,SAAS,CAAGrC,IAAI,CAACtG,SAAL,CAAe,CAAf,CAAkBkJ,MAAlB,EAA0B1H,WAA1B,EAAZ,CACAqF,MAAM,CAAGP,IAAI,CAACtG,SAAL,CAAekJ,MAAM,CAAG,CAAxB,CAAT;AAEA1C,SAAS,CAAGmC,SAAZ,CACD;AAED,GAAI,MAAQK,YAAZ,CAAyB,CACvBxC,SAAS,CAAGwC,WAAW,CAAC,IAAD,CAAvB,CACD,CACF,CAED,MAAO,CACL1C,IAAI,KADC,CAELsC,IAAI,KAFC,CAGL/B,MAAM,OAHD,CAIL8B,SAAS,UAJJ,CAKLpC,MAAM,OALD,CAMLkC,MAAM,OAND,CAOLjF,UAAU,WAPL,CAQLgD,SAAS,UARJ,CAAP,CAUD,CAzFM,CCjHP;;;;;;;;;;;;;;;IA4BA;;;;GAKO,GAAM2C,mBAAkB,CAAG,gCAA3B,CAEP;;;;;GAMO,GAAMC,oBAAmB,CAAG,8BAA5B,CAEP;;;;GAKO,GAAMC,eAAc,CAAG,GAAK,IAAL,CAAY,IAAnC,CAEP;;;GAIO,GAAMC,WAAU,CAAG,SAAUnQ,GAAV,CAAsB,CAC9C,MACE,OAAOA,IAAP,GAAe,QAAf,EAA2BA,GAAG,CAACwC,MAAJ,GAAe,CAA1C,EAA+C,CAACwN,kBAAkB,CAACzH,IAAnB,CAAwBvI,GAAxB,CADlD,CAGD,CAJM,CAMP;;;GAIO,GAAMoQ,kBAAiB,CAAG,SAAU/F,UAAV,CAA4B,CAC3D,MACE,OAAOA,WAAP,GAAsB,QAAtB,EACAA,UAAU,CAAC7H,MAAX,GAAsB,CADtB,EAEA,CAACyN,mBAAmB,CAAC1H,IAApB,CAAyB8B,UAAzB,CAHH,CAKD,CANM,CAQP;;;GAIO,GAAMgG,sBAAqB,CAAG,SAAUhG,UAAV,CAA4B,CAC/D,GAAIA,UAAJ,CAAgB;AAEdA,UAAU,CAAGA,UAAU,CAACqE,OAAX,CAAmB,kBAAnB,CAAuC,GAAvC,CAAb,CACD,CAED,MAAO0B,kBAAiB,CAAC/F,UAAD,CAAxB,CACD,CAPM,CASP;;;GAIO,GAAMiG,gBAAe,CAAG,SAAUC,QAAV,CAA2B,CACxD,MACEA,SAAQ,GAAK,IAAb,EACA,MAAOA,SAAP,GAAoB,QADpB,EAEC,MAAOA,SAAP,GAAoB,QAApB,EAAgC,CAACjM,mBAAmB,CAACiM,QAAD,CAFrD,EAGCA,QAAQ,EACP,MAAOA,SAAP,GAAoB,QADrB;AAGCzP,QAAQ,CAACyP,QAAD,CAAkB,KAAlB,CAPZ,CASD,CAVM,CAYP;;;;;;;;GASO,GAAMC,wBAAuB,CAAG,SACrCC,MADqC,CAErCC,cAFqC,CAGrCnM,IAHqC,CAIrCyE,IAJqC,CAKrC2H,QALqC,CAKpB,CAEjB,GAAIA,QAAQ,EAAIpM,IAAI,GAAKqM,SAAzB,CAAoC,CAClC,OACD,CAEDC,oBAAoB,CAClBC,WAAc,CAACL,MAAD,CAASC,cAAT,CAAyBC,QAAzB,CADI,CAElBpM,IAFkB,CAGlByE,IAHkB,CAApB,CAKD,CAhBM,CAkBP;;;;;;GAOO,GAAM6H,qBAAoB,CAAG,SAClCE,WADkC,CAElCxM,IAFkC,CAGlCyM,KAHkC,CAGN,CAE5B,GAAMhI,KAAI,CACRgI,KAAK,WAAY5G,KAAjB,CAAwB,GAAI8B,eAAJ,CAAmB8E,KAAnB,CAA0BD,WAA1B,CAAxB,CAAiEC,KADnE,CAGA,GAAIzM,IAAI,GAAKqM,SAAb,CAAwB,CACtB,KAAM,IAAI5M,MAAJ,CAAU+M,WAAW,CAAG,qBAAd,CAAsC/H,IAAI,CAACwD,aAAL,EAAhD,CAAN,CACD,CACD,GAAI,MAAOjI,KAAP,GAAgB,UAApB,CAAgC,CAC9B,KAAM,IAAIP,MAAJ,CACJ+M,WAAW,CACT,sBADF,CAEE/H,IAAI,CAACwD,aAAL,EAFF,CAGE,mBAHF,CAIEjI,IAAI,CAAC5D,QAAL,EALE,CAAN,CAOD,CACD,GAAI2D,mBAAmB,CAACC,IAAD,CAAvB,CAA+B,CAC7B,KAAM,IAAIP,MAAJ,CACJ+M,WAAW,CAAG,WAAd,CAA4BxM,IAAI,CAAC5D,QAAL,EAA5B,CAA8C,GAA9C,CAAoDqI,IAAI,CAACwD,aAAL,EADhD,CAAN,CAGD;AAGD,GACE,MAAOjI,KAAP,GAAgB,QAAhB,EACAA,IAAI,CAAC/B,MAAL,CAAc0N,cAAc,CAAG,CAD/B,EAEAlE,YAAY,CAACzH,IAAD,CAAZ,CAAqB2L,cAHvB,CAIE,CACA,KAAM,IAAIlM,MAAJ,CACJ+M,WAAW,CACT,iCADF,CAEEb,cAFF,CAGE,cAHF,CAIElH,IAAI,CAACwD,aAAL,EAJF,CAKE,KALF,CAMEjI,IAAI,CAACsC,SAAL,CAAe,CAAf,CAAkB,EAAlB,CANF,CAOE,OARE,CAAN,CAUD;;AAID,GAAItC,IAAI,EAAI,MAAOA,KAAP,GAAgB,QAA5B,CAAsC,CACpC,GAAI0M,cAAW,CAAG,KAAlB,CACA,GAAIC,iBAAc,CAAG,KAArB,CACApK,IAAI,CAACvC,IAAD,CAAO,SAACvE,GAAD,CAAcC,KAAd,CAA4B,CACrC,GAAID,GAAG,GAAK,QAAZ,CAAsB,CACpBiR,aAAW,CAAG,IAAd,CACD,CAFD,IAEO,IAAIjR,GAAG,GAAK,WAAR,EAAuBA,GAAG,GAAK,KAAnC,CAA0C,CAC/CkR,gBAAc,CAAG,IAAjB,CACA,GAAI,CAACf,UAAU,CAACnQ,GAAD,CAAf,CAAsB,CACpB,KAAM,IAAIgE,MAAJ,CACJ+M,WAAW,CACT,4BADF,CAEE/Q,GAFF,CAGE,IAHF,CAIEgJ,IAAI,CAACwD,aAAL,EAJF,CAKE,oCALF,CAME,oDAPE,CAAN,CASD,CACF,CAEDxD,IAAI,CAAC1C,IAAL,CAAUtG,GAAV,EACA6Q,oBAAoB,CAACE,WAAD,CAAc9Q,KAAd,CAAqB+I,IAArB,CAApB,CACAA,IAAI,CAACqD,GAAL,GACD,CArBG,CAAJ,CAuBA,GAAI4E,aAAW,EAAIC,gBAAnB,CAAmC,CACjC,KAAM,IAAIlN,MAAJ,CACJ+M,WAAW,CACT,2BADF,CAEE/H,IAAI,CAACwD,aAAL,EAFF,CAGE,kCAJE,CAAN,CAMD,CACF,CACF,CAjFM,CAmFP;;;;;GAMO,GAAM2E,2BAA0B,CAAG,SACxCJ,WADwC,CAExCK,UAFwC,CAEtB,CAElB,GAAI7O,EAAJ,CAAO8O,OAAP,CACA,IAAK9O,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG6O,UAAU,CAAC5O,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACtC8O,OAAO,CAAGD,UAAU,CAAC7O,CAAD,CAApB,CACA,GAAM6D,KAAI,CAAGiL,OAAO,CAAC5G,KAAR,EAAb,CACA,IAAK,GAAIkB,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGvF,IAAI,CAAC5D,MAAzB,CAAiCmJ,CAAC,EAAlC,CAAsC,CACpC,GAAIvF,IAAI,CAACuF,CAAD,CAAJ,GAAY,WAAZ,EAA2BA,CAAC,GAAKvF,IAAI,CAAC5D,MAAL,CAAc,CAAnD,CAAsD,CAAtD,IAEO,IAAI,CAAC2N,UAAU,CAAC/J,IAAI,CAACuF,CAAD,CAAL,CAAf,CAA0B,CAC/B,KAAM,IAAI3H,MAAJ,CACJ+M,WAAW,CACT,2BADF,CAEE3K,IAAI,CAACuF,CAAD,CAFN,CAGE,YAHF,CAIE0F,OAAO,CAAC1Q,QAAR,EAJF,CAKE,mCALF,CAME,oDAPE,CAAN,CASD,CACF,CACF;;;AAKDyQ,UAAU,CAAC7K,IAAX,CAAgB6D,IAAI,CAACkH,YAArB,EACA,GAAIC,SAAQ,CAAgB,IAA5B,CACA,IAAKhP,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG6O,UAAU,CAAC5O,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACtC8O,OAAO,CAAGD,UAAU,CAAC7O,CAAD,CAApB,CACA,GAAIgP,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACzQ,QAAT,CAAkBuQ,OAAlB,CAAzB,CAAqD,CACnD,KAAM,IAAIrN,MAAJ,CACJ+M,WAAW,CACT,kBADF,CAEEQ,QAAQ,CAAC5Q,QAAT,EAFF,CAGE,oCAHF,CAIE0Q,OAAO,CAAC1Q,QAAR,EALE,CAAN,CAOD,CACD4Q,QAAQ,CAAGF,OAAX,CACD,CACF,CA3CM,CA6CP;;;;;;;;;GAUO,GAAMG,6BAA4B,CAAG,SAC1Cf,MAD0C,CAE1CC,cAF0C,CAG1CnM,IAH0C,CAI1CyE,IAJ0C,CAK1C2H,QAL0C,CAKzB,CAEjB,GAAIA,QAAQ,EAAIpM,IAAI,GAAKqM,SAAzB,CAAoC,CAClC,OACD,CAED,GAAMG,cAAW,CAAGD,WAAc,CAACL,MAAD,CAASC,cAAT,CAAyBC,QAAzB,CAAlC,CAEA,GAAI,EAAEpM,IAAI,EAAI,MAAOA,KAAP,GAAgB,QAA1B,GAAuC7B,KAAK,CAACC,OAAN,CAAc4B,IAAd,CAA3C,CAAgE,CAC9D,KAAM,IAAIP,MAAJ,CACJ+M,aAAW,CAAG,wDADV,CAAN,CAGD,CAED,GAAMK,WAAU,CAAW,EAA3B,CACAtK,IAAI,CAACvC,IAAD,CAAO,SAACvE,GAAD,CAAcC,KAAd,CAA4B,CACrC,GAAMoR,QAAO,CAAG,GAAIjH,KAAJ,CAASpK,GAAT,CAAhB,CACA6Q,oBAAoB,CAACE,aAAD,CAAc9Q,KAAd,CAAqB+I,IAAI,CAACmD,KAAL,CAAWkF,OAAX,CAArB,CAApB,CACA,GAAIA,OAAO,CAACI,OAAR,KAAsB,WAA1B,CAAuC,CACrC,GAAI,CAACnB,eAAe,CAACrQ,KAAD,CAApB,CAA6B,CAC3B,KAAM,IAAI+D,MAAJ,CACJ+M,aAAW,CACT,iCADFA,CAEEM,OAAO,CAAC1Q,QAAR,EAFFoQ,CAGE,2BAHFA,CAIE,qEALE,CAAN,CAOD,CACF,CACDK,UAAU,CAAC9K,IAAX,CAAgB+K,OAAhB,EACD,CAfG,CAAJ,CAgBAF,0BAA0B,CAACJ,aAAD,CAAcK,UAAd,CAA1B,CACD,CArCM,CAuCA,GAAMM,iBAAgB,CAAG,SAC9BjB,MAD8B,CAE9BC,cAF8B,CAG9BH,QAH8B,CAI9BI,QAJ8B,CAIb,CAEjB,GAAIA,QAAQ,EAAIJ,QAAQ,GAAKK,SAA7B,CAAwC,CACtC,OACD,CACD,GAAItM,mBAAmB,CAACiM,QAAD,CAAvB,CAAmC,CACjC,KAAM,IAAIvM,MAAJ,CACJ8M,WAAc,CAACL,MAAD,CAASC,cAAT,CAAyBC,QAAzB,CAAdG,CACE,KADFA,CAEEP,QAAQ,CAAC5P,QAAT,EAFFmQ,CAGE,oEAHFA,CAIE,yBALE,CAAN,CAOD;AAED,GAAI,CAACR,eAAe,CAACC,QAAD,CAApB,CAAgC,CAC9B,KAAM,IAAIvM,MAAJ,CACJ8M,WAAc,CAACL,MAAD,CAASC,cAAT,CAAyBC,QAAzB,CAAdG,CACE,oCADFA,CAEE,mDAHE,CAAN,CAKD,CACF,CA1BM,CA4BA,GAAMa,kBAAiB,CAAG,SAC/BlB,MAD+B,CAE/BC,cAF+B,CAG/BkB,SAH+B,CAI/BjB,QAJ+B,CAId,CAEjB,GAAIA,QAAQ,EAAIiB,SAAS,GAAKhB,SAA9B,CAAyC,CACvC,OACD,CAED,OAAQgB,SAAR,EACE,IAAK,OAAL,CACA,IAAK,aAAL,CACA,IAAK,eAAL,CACA,IAAK,eAAL,CACA,IAAK,aAAL,CACE,MACF,QACE,KAAM,IAAI5N,MAAJ,CACJ8M,WAAc,CAACL,MAAD,CAASC,cAAT,CAAyBC,QAAzB,CAAdG,CACE,wEADFA,CAEE,oCAHE,CAAN,CARJ,CAcD,CAxBM,CA0BA,GAAMe,YAAW,CAAG,SACzBpB,MADyB,CAEzBC,cAFyB,CAGzB1Q,GAHyB,CAIzB2Q,QAJyB,CAIR,CAEjB,GAAIA,QAAQ,EAAI3Q,GAAG,GAAK4Q,SAAxB,CAAmC,CACjC,OACD,CACD,GAAI,CAACT,UAAU,CAACnQ,GAAD,CAAf,CAAsB,CACpB,KAAM,IAAIgE,MAAJ,CACJ8M,WAAc,CAACL,MAAD,CAASC,cAAT,CAAyBC,QAAzB,CAAdG,CACE,wBADFA,CAEE9Q,GAFF8Q,CAGE,kDAHFA,CAIE,kDALE,CAAN,CAOD,CACF,CAlBM,CAoBA,GAAMgB,mBAAkB,CAAG,SAChCrB,MADgC,CAEhCC,cAFgC,CAGhCrG,UAHgC,CAIhCsG,QAJgC,CAIf,CAEjB,GAAIA,QAAQ,EAAItG,UAAU,GAAKuG,SAA/B,CAA0C,CACxC,OACD,CAED,GAAI,CAACR,iBAAiB,CAAC/F,UAAD,CAAtB,CAAoC,CAClC,KAAM,IAAIrG,MAAJ,CACJ8M,WAAc,CAACL,MAAD,CAASC,cAAT,CAAyBC,QAAzB,CAAdG,CACE,yBADFA,CAEEzG,UAFFyG,CAGE,yCAHFA,CAIE,2CALE,CAAN,CAOD,CACF,CAnBM,CAqBA,GAAMiB,uBAAsB,CAAG,SACpCtB,MADoC,CAEpCC,cAFoC,CAGpCrG,UAHoC,CAIpCsG,QAJoC,CAInB,CAEjB,GAAItG,UAAJ,CAAgB;AAEdA,UAAU,CAAGA,UAAU,CAACqE,OAAX,CAAmB,kBAAnB,CAAuC,GAAvC,CAAb,CACD,CAEDoD,kBAAkB,CAACrB,MAAD,CAASC,cAAT,CAAyBrG,UAAzB,CAAqCsG,QAArC,CAAlB,CACD,CAZM,CAcA,GAAMqB,qBAAoB,CAAG,SAAUvB,MAAV,CAA0BzH,IAA1B,CAAoC,CACtE,GAAIA,IAAI,CAACgC,QAAL,KAAoB,OAAxB,CAAiC,CAC/B,KAAM,IAAIhH,MAAJ,CAAUyM,MAAM,CAAG,2CAAnB,CAAN,CACD,CACF,CAJM,CAMA,GAAMwB,YAAW,CAAG,SACzBxB,MADyB,CAEzBC,cAFyB,CAGzBtB,SAHyB,CAGoB;AAG7C,GAAM/E,WAAU,CAAG+E,SAAS,CAACpG,IAAV,CAAerI,QAAf,EAAnB,CACA,GACE,EAAE,MAAOyO,UAAS,CAACG,QAAV,CAAmBpC,IAA1B,GAAmC,QAArC,GACAiC,SAAS,CAACG,QAAV,CAAmBpC,IAAnB,CAAwB3K,MAAxB,GAAmC,CADnC,EAEC,CAAC2N,UAAU,CAACf,SAAS,CAACG,QAAV,CAAmBlC,SAApB,CAAX,EACC+B,SAAS,CAACG,QAAV,CAAmBpC,IAAnB,CAAwBnD,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,IAA0C,WAH5C,EAICK,UAAU,CAAC7H,MAAX,GAAsB,CAAtB,EAA2B,CAAC6N,qBAAqB,CAAChG,UAAD,CALpD,CAME,CACA,KAAM,IAAIrG,MAAJ,CACJ8M,WAAc,CAACL,MAAD,CAASC,cAAT,CAAyB,KAAzB,CAAdI,CACE,mCADFA,CAEE,qDAHE,CAAN,CAKD,CACF,CApBM,CAuCA,GAAMoB,gBAAe,CAAG,SAC7BzB,MAD6B,CAE7BC,cAF6B,CAG7ByB,IAH6B,CAI7BxB,QAJ6B,CAIZ,CAEjB,GAAIA,QAAQ,EAAIwB,IAAI,GAAKvB,SAAzB,CAAoC,CAClC,OACD,CACD,GAAI,MAAOuB,KAAP,GAAgB,SAApB,CAA+B,CAC7B,KAAM,IAAInO,MAAJ,CACJ8M,WAAc,CAACL,MAAD,CAASC,cAAT,CAAyBC,QAAzB,CAAdG,CAAmD,oBAD/C,CAAN,CAGD,CACF,CAdM,CCxdP;;;;;;;;;;;;;;;IA8BA;;;;;OAQE,sBAAoBsB,KAApB,CAAyCpB,KAAzC,CAAoD,CAAhC,iBAAqB,iBAAe;;;OAMxDqB,uCAAOC,UAAP,CAA6C,CAC3CC,gBAAgB,CAAC,qBAAD,CAAwB,CAAxB,CAA2B,CAA3B,CAA8BC,SAAS,CAAChQ,MAAxC,CAAhB,CACAiQ,gBAAgB,CAAC,qBAAD,CAAwB,CAAxB,CAA2BH,UAA3B,CAAuC,IAAvC,CAAhB,CACA,GAAMI,SAAQ,CAAG,GAAIC,SAAJ,EAAjB,CACA,KAAKP,KAAL,CAAWQ,kBAAX,CACE,KAAK5B,KADP,CAEE0B,QAAQ,CAACG,YAAT,CAAsBP,UAAtB,CAFF,EAIA,MAAOI,SAAQ,CAACI,OAAhB,CACD,CATD;;;OAeAT,uCAAOC,UAAP,CAA6C,CAC3CC,gBAAgB,CAAC,qBAAD,CAAwB,CAAxB,CAA2B,CAA3B,CAA8BC,SAAS,CAAChQ,MAAxC,CAAhB,CACAwP,oBAAoB,CAAC,qBAAD,CAAwB,KAAKhB,KAA7B,CAApB,CACAyB,gBAAgB,CAAC,qBAAD,CAAwB,CAAxB,CAA2BH,UAA3B,CAAuC,IAAvC,CAAhB,CACA,GAAMI,SAAQ,CAAG,GAAIC,SAAJ,EAAjB,CACA,KAAKP,KAAL,CAAWW,eAAX,CACE,KAAK/B,KADP,CAEE,IAFF,CAGE0B,QAAQ,CAACG,YAAT,CAAsBP,UAAtB,CAHF,EAKA,MAAOI,SAAQ,CAACI,OAAhB,CACD,CAXD;;;;OAkBAT,oCAAIpS,KAAJ,CAAoBqS,UAApB,CAA0D,CACxDC,gBAAgB,CAAC,kBAAD,CAAqB,CAArB,CAAwB,CAAxB,CAA2BC,SAAS,CAAChQ,MAArC,CAAhB,CACAwP,oBAAoB,CAAC,kBAAD,CAAqB,KAAKhB,KAA1B,CAApB,CACAR,uBAAuB,CAAC,kBAAD,CAAqB,CAArB,CAAwBvQ,KAAxB,CAA+B,KAAK+Q,KAApC,CAA2C,KAA3C,CAAvB,CACAyB,gBAAgB,CAAC,kBAAD,CAAqB,CAArB,CAAwBH,UAAxB,CAAoC,IAApC,CAAhB,CACA,GAAMI,SAAQ,CAAG,GAAIC,SAAJ,EAAjB,CACA,KAAKP,KAAL,CAAWW,eAAX,CACE,KAAK/B,KADP,CAEE/Q,KAFF,CAGEyS,QAAQ,CAACG,YAAT,CAAsBP,UAAtB,CAHF,EAKA,MAAOI,SAAQ,CAACI,OAAhB,CACD,CAZD;;;;;OAoBAT,gDACEpS,KADF,CAEEsQ,QAFF,CAGE+B,UAHF,CAGwC,CAEtCC,gBAAgB,CAAC,8BAAD,CAAiC,CAAjC,CAAoC,CAApC,CAAuCC,SAAS,CAAChQ,MAAjD,CAAhB,CACAwP,oBAAoB,CAAC,8BAAD,CAAiC,KAAKhB,KAAtC,CAApB,CACAR,uBAAuB,CACrB,8BADqB,CAErB,CAFqB,CAGrBvQ,KAHqB,CAIrB,KAAK+Q,KAJgB,CAKrB,KALqB,CAAvB,CAOAU,gBAAgB,CAAC,8BAAD,CAAiC,CAAjC,CAAoCnB,QAApC,CAA8C,KAA9C,CAAhB,CACAkC,gBAAgB,CAAC,8BAAD,CAAiC,CAAjC,CAAoCH,UAApC,CAAgD,IAAhD,CAAhB,CAEA,GAAMI,SAAQ,CAAG,GAAIC,SAAJ,EAAjB,CACA,KAAKP,KAAL,CAAWY,2BAAX,CACE,KAAKhC,KADP,CAEE/Q,KAFF,CAGEsQ,QAHF,CAIEmC,QAAQ,CAACG,YAAT,CAAsBP,UAAtB,CAJF,EAMA,MAAOI,SAAQ,CAACI,OAAhB,CACD,CAzBD;;;;OAgCAT,uCACEY,aADF,CAEEX,UAFF,CAEwC,CAEtCC,gBAAgB,CAAC,qBAAD,CAAwB,CAAxB,CAA2B,CAA3B,CAA8BC,SAAS,CAAChQ,MAAxC,CAAhB,CACAwP,oBAAoB,CAAC,qBAAD,CAAwB,KAAKhB,KAA7B,CAApB,CACA,GAAItO,KAAK,CAACC,OAAN,CAAcsQ,aAAd,CAAJ,CAAkC,CAChC,GAAMC,iBAAgB,CAA6B,EAAnD,CACA,IAAK,GAAI3Q,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG0Q,aAAa,CAACzQ,MAAlC,CAA0C,EAAED,CAA5C,CAA+C,CAC7C2Q,gBAAgB,CAAC,GAAK3Q,CAAN,CAAhB,CAA2B0Q,aAAa,CAAC1Q,CAAD,CAAxC,CACD,CACD0Q,aAAa,CAAGC,gBAAhB,CACAjP,IAAI,CACF,uHACE,0GAFA,CAAJ,CAID,CACDuN,4BAA4B,CAC1B,qBAD0B,CAE1B,CAF0B,CAG1ByB,aAH0B,CAI1B,KAAKjC,KAJqB,CAK1B,KAL0B,CAA5B,CAOAyB,gBAAgB,CAAC,qBAAD,CAAwB,CAAxB,CAA2BH,UAA3B,CAAuC,IAAvC,CAAhB,CACA,GAAMI,SAAQ,CAAG,GAAIC,SAAJ,EAAjB,CACA,KAAKP,KAAL,CAAWe,kBAAX,CACE,KAAKnC,KADP,CAEEiC,aAFF,CAGEP,QAAQ,CAACG,YAAT,CAAsBP,UAAtB,CAHF,EAKA,MAAOI,SAAQ,CAACI,OAAhB,CACD,CAhCD,CAiCF,oBAAC,IClKD;;;;;;;;;;;;;;;GAoBA;;;;;;OAQE,2BAAmBM,SAAnB,CAA8CC,QAA9C,CAAoE,CAAjD,yBAA2B,uBAA0B;;AAIxEC,8CACEf,gBAAgB,CAAC,0BAAD,CAA6B,CAA7B,CAAgC,CAAhC,CAAmCC,SAAS,CAAChQ,MAA7C,CAAhB,CACA,MAAO,CAAE4Q,SAAS,CAAE,KAAKA,SAAlB,CAA6BC,QAAQ,CAAE,KAAKA,QAAL,CAAcE,MAAd,EAAvC,CAAP,CACD,CAHD,CAIF,yBAAC,CAhBD,GCpBA;;;;;;;;;;;;;;;IAmBA;;;;;;;;;;;;;GAcO,GAAMC,WAAU,CAAI;AAEzB,GAAMC,WAAU,CACd,kEADF;;AAKA,GAAIC,aAAY,CAAG,CAAnB;;;;AAMA,GAAMC,cAAa,CAAa,EAAhC,CAEA,MAAO,UAAUC,GAAV,CAAqB,CAC1B,GAAMC,cAAa,CAAGD,GAAG,GAAKF,YAA9B,CACAA,YAAY,CAAGE,GAAf,CAEA,GAAIrR,EAAJ,CACA,GAAMuR,eAAc,CAAG,GAAIpR,MAAJ,CAAU,CAAV,CAAvB,CACA,IAAKH,CAAC,CAAG,CAAT,CAAYA,CAAC,EAAI,CAAjB,CAAoBA,CAAC,EAArB,CAAyB,CACvBuR,cAAc,CAACvR,CAAD,CAAd,CAAoBkR,UAAU,CAAC3E,MAAX,CAAkB8E,GAAG,CAAG,EAAxB,CAApB;;AAGAA,GAAG,CAAGxO,IAAI,CAACC,KAAL,CAAWuO,GAAG,CAAG,EAAjB,CAAN,CACD,CACD1Q,MAAM,CAAC0Q,GAAG,GAAK,CAAT,CAAY,0BAAZ,CAAN,CAEA,GAAInS,GAAE,CAAGqS,cAAc,CAAC9L,IAAf,CAAoB,EAApB,CAAT,CAEA,GAAI,CAAC6L,aAAL,CAAoB,CAClB,IAAKtR,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG,EAAhB,CAAoBA,CAAC,EAArB,CAAyB,CACvBoR,aAAa,CAACpR,CAAD,CAAb,CAAmB6C,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC2O,MAAL,GAAgB,EAA3B,CAAnB,CACD,CACF,CAJD,IAIO;;AAGL,IAAKxR,CAAC,CAAG,EAAT,CAAaA,CAAC,EAAI,CAAL,EAAUoR,aAAa,CAACpR,CAAD,CAAb,GAAqB,EAA5C,CAAgDA,CAAC,EAAjD,CAAqD,CACnDoR,aAAa,CAACpR,CAAD,CAAb,CAAmB,CAAnB,CACD,CACDoR,aAAa,CAACpR,CAAD,CAAb,GACD,CACD,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG,EAAhB,CAAoBA,CAAC,EAArB,CAAyB,CACvBd,EAAE,EAAIgS,UAAU,CAAC3E,MAAX,CAAkB6E,aAAa,CAACpR,CAAD,CAA/B,CAAN,CACD,CACDW,MAAM,CAACzB,EAAE,CAACe,MAAH,GAAc,EAAf,CAAmB,kCAAnB,CAAN,CAEA,MAAOf,GAAP,CACD,CAlCD,CAmCD,CAlDyB,EAAnB,CCjCP;;;;;;;;;;;;;;;IAyJA;;;;;;GAOA,sCACE,mBAAmBhB,IAAnB,CAAwCuT,IAAxC,CAAkD,CAA/B,eAAqB,eAAc;;;;;OAQ/CC,eAAP,SAAYxT,IAAZ,CAA0BuT,IAA1B,CAAoC,CAClC,MAAO,IAAIC,UAAJ,CAAcxT,IAAd,CAAoBuT,IAApB,CAAP,CACD,CAFM,CAGT,iBAAC,CAZD,GChKA;;;;;;;;;;;;;;;IAqBA;;;GAIA,mDA8DC;;;OA5CCE,sCACE,MAAO,MAAKC,OAAL,CAAa5Q,IAAb,CAAkB,IAAlB,CAAP,CACD,CAFD;;;;;;;OAYA2Q,6CAAoBE,OAApB,CAAmCC,OAAnC,CAAgD,CAC9C,GAAMC,WAAU,CAAG,GAAIL,UAAJ,CAAczO,QAAd,CAAwB4O,OAAxB,CAAnB,CACA,GAAMG,WAAU,CAAG,GAAIN,UAAJ,CAAczO,QAAd,CAAwB6O,OAAxB,CAAnB,CACA,MAAO,MAAKF,OAAL,CAAaG,UAAb,CAAyBC,UAAzB,IAAyC,CAAhD,CACD,CAJD;;;OAUAL;AAEE,MAAQD,UAAiB,CAACO,GAA1B,CACD,CAHD,CAsBF,aAAC,CA9DD,GCzBA;;;;;;;;;;;;;;;GAuBA,GAAIC,aAAJ,CAEA,2CAA8BC,2BAA9B,6EAqEC,CApECvK,sBAAWwK,QAAX,CAAW,cAAX,CAAuB,KAAvB,WACE,MAAOF,aAAP,CACD,CAFsB,KAIvB,SAAwBG,GAAxB,CAA2B,CACzBH,YAAY,CAAGG,GAAf,CACD,CANsB,oCAAvB;;OAWAD,oCAAQhP,CAAR,CAAsBC,CAAtB,CAAkC,CAChC,MAAOF,YAAW,CAACC,CAAC,CAAClF,IAAH,CAASmF,CAAC,CAACnF,IAAX,CAAlB,CACD,CAFD;;OAOAkU,wCAAYX,IAAZ,CAAsB;;AAGpB,KAAMa,eAAc,CAAC,iDAAD,CAApB,CACD,CAJD;;OASAF,gDAAoBP,OAApB,CAAmCC,OAAnC,CAAgD,CAC9C,MAAO,MAAP,CAAa;AACd,CAFD;;OAOAM;AAEE,MAAQV,UAAiB,CAACO,GAA1B,CACD,CAHD;;OAQAG;;AAGE,MAAO,IAAIV,UAAJ,CAAcxO,QAAd,CAAwBgP,YAAxB,CAAP,CACD,CAJD;;;;OAWAE,qCAASG,UAAT,CAA6BrU,IAA7B,CAAyC,CACvCyC,MAAM,CACJ,MAAO4R,WAAP,GAAsB,QADlB,CAEJ,8CAFI,CAAN;AAKA,MAAO,IAAIb,UAAJ,CAAca,UAAd,CAA0BL,YAA1B,CAAP,CACD,CAPD;;OAYAE,uCACE,MAAO,MAAP,CACD,CAFD,CAGF,gBArEA,EAA8BT,KAA9B,EAuEO,GAAMa,UAAS,CAAG,GAAIJ,SAAJ,EAAlB,CChGP;;;;;;;;;;;;;;;GAuBA,GAAIK,SAAJ,SAEgBC,YAAWL,IAAS,CAClCI,QAAQ,CAAGJ,GAAX,CACD,CAED;;;GAIO,GAAMM,iBAAgB,CAAG,SAAU3E,QAAV,CAAmC,CACjE,GAAI,MAAOA,SAAP,GAAoB,QAAxB,CAAkC,CAChC,MAAO,UAAYvJ,qBAAqB,CAACuJ,QAAD,CAAxC,CACD,CAFD,IAEO,CACL,MAAO,UAAYA,QAAnB,CACD,CACF,CANM,CAQP;;;;GAKO,GAAM4E,qBAAoB,CAAG,SAAUC,YAAV,CAA4B,CAC9D,GAAIA,YAAY,CAACC,UAAb,EAAJ,CAA+B,CAC7B,GAAMT,IAAG,CAAGQ,YAAY,CAACR,GAAb,EAAZ,CACA1R,MAAM,CACJ,MAAO0R,IAAP,GAAe,QAAf,EACE,MAAOA,IAAP,GAAe,QADjB,EAEG,MAAOA,IAAP,GAAe,QAAf,EAA2B9T,QAAQ,CAAC8T,GAAD,CAAmB,KAAnB,CAHlC,CAIJ,sCAJI,CAAN,CAMD,CARD,IAQO,CACL1R,MAAM,CACJkS,YAAY,GAAKJ,QAAjB,EAA6BI,YAAY,CAACE,OAAb,EADzB,CAEJ,8BAFI,CAAN,CAID;AAEDpS,MAAM,CACJkS,YAAY,GAAKJ,QAAjB,EAA6BI,YAAY,CAACG,WAAb,GAA2BD,OAA3B,EADzB,CAEJ,oDAFI,CAAN,CAID,CApBM,CC9CP;;;;;;;;;;;;;;;GA0BA,GAAIE,0BAAJ,CAEA;;;;GAKA;;;;;OAyBE,kBACmBC,MADnB,CAEUC,aAFV,CAE6E,CAAnE,yCAAsBC,QAAQ,CAACH,yBAAT,CAAmCI,UAAzD,CAAmE,CAD1D,mBACT,iCAVF,eAA2B,IAA3B,CAYN1S,MAAM,CACJ,KAAKuS,MAAL,GAAgB7E,SAAhB,EAA6B,KAAK6E,MAAL,GAAgB,IADzC,CAEJ,0DAFI,CAAN,CAKAN,oBAAoB,CAAC,KAAKO,aAAN,CAApB,CACD,CAlCDvL,sBAAWwL,QAAX,CAAW,2BAAX,CAAoC,KAIpC,WACE,MAAOH,0BAAP,CACD,CANmC,KAApC,SAAqCZ,GAArC,CAAiE,CAC/DY,yBAAyB,CAAGZ,GAA5B,CACD,CAFmC,oCAApC,oBAqCAe,yCACE,MAAO,KAAP,CACD,CAFD,mBAKAA,0CACE,MAAO,MAAKD,aAAZ,CACD,CAFD,mBAKAC,2CAAeE,eAAf,CAAoC,CAClC,MAAO,IAAIF,SAAJ,CAAa,KAAKF,MAAlB,CAA0BI,eAA1B,CAAP,CACD,CAFD,mBAKAF,8CAAkBG,SAAlB,CAAmC;AAEjC,GAAIA,SAAS,GAAK,WAAlB,CAA+B,CAC7B,MAAO,MAAKJ,aAAZ,CACD,CAFD,IAEO,CACL,MAAOC,SAAQ,CAACH,yBAAT,CAAmCI,UAA1C,CACD,CACF,CAPD,mBAUAD,qCAAS3M,IAAT,CAAmB,CACjB,GAAIA,IAAI,CAACsM,OAAL,EAAJ,CAAoB,CAClB,MAAO,KAAP,CACD,CAFD,IAEO,IAAItM,IAAI,CAACgC,QAAL,KAAoB,WAAxB,CAAqC,CAC1C,MAAO,MAAK0K,aAAZ,CACD,CAFM,IAEA,CACL,MAAOC,SAAQ,CAACH,yBAAT,CAAmCI,UAA1C,CACD,CACF,CARD;;OAaAD,uCACE,MAAO,MAAP,CACD,CAFD,mBAKAA,oDAAwBG,SAAxB,CAA2CC,SAA3C,CAA0D,CACxD,MAAO,KAAP,CACD,CAFD,mBAKAJ,iDAAqBG,SAArB,CAAwCE,YAAxC,CAA0D,CACxD,GAAIF,SAAS,GAAK,WAAlB,CAA+B,CAC7B,MAAO,MAAKG,cAAL,CAAoBD,YAApB,CAAP,CACD,CAFD,IAEO,IAAIA,YAAY,CAACV,OAAb,IAA0BQ,SAAS,GAAK,WAA5C,CAAyD,CAC9D,MAAO,KAAP,CACD,CAFM,IAEA,CACL,MAAOH,SAAQ,CAACH,yBAAT,CAAmCI,UAAnC,CAA8CM,oBAA9C,CACLJ,SADK,CAELE,YAFK,EAGLC,cAHK,CAGU,KAAKP,aAHf,CAAP,CAID,CACF,CAXD,mBAcAC,wCAAY3M,IAAZ,CAAwBgN,YAAxB,CAA0C,CACxC,GAAMG,MAAK,CAAGnN,IAAI,CAACgC,QAAL,EAAd,CACA,GAAImL,KAAK,GAAK,IAAd,CAAoB,CAClB,MAAOH,aAAP,CACD,CAFD,IAEO,IAAIA,YAAY,CAACV,OAAb,IAA0Ba,KAAK,GAAK,WAAxC,CAAqD,CAC1D,MAAO,KAAP,CACD,CAFM,IAEA,CACLjT,MAAM,CACJiT,KAAK,GAAK,WAAV,EAAyBnN,IAAI,CAAC0C,SAAL,KAAqB,CAD1C,CAEJ,4CAFI,CAAN,CAKA,MAAO,MAAKwK,oBAAL,CACLC,KADK,CAELR,QAAQ,CAACH,yBAAT,CAAmCI,UAAnC,CAA8CQ,WAA9C,CACEpN,IAAI,CAACmC,QAAL,EADF,CAEE6K,YAFF,CAFK,CAAP,CAOD,CACF,CApBD,mBAuBAL,sCACE,MAAO,MAAP,CACD,CAFD,mBAKAA,0CACE,MAAO,EAAP,CACD,CAFD,mBAKAA,yCAAaU,KAAb,CAA2BC,MAA3B,CAA+D,CAC7D,MAAO,MAAP,CACD,CAFD;;OAOAX,gCAAIY,YAAJ,CAA0B,CACxB,GAAIA,YAAY,EAAI,CAAC,KAAKhB,WAAL,GAAmBD,OAAnB,EAArB,CAAmD,CACjD,MAAO,CACL,SAAU,KAAKkB,QAAL,EADL,CAEL,YAAa,KAAKjB,WAAL,GAAmBX,GAAnB,EAFR,CAAP,CAID,CALD,IAKO,CACL,MAAO,MAAK4B,QAAL,EAAP,CACD,CACF,CATD,mBAYAb,mCACE,GAAI,KAAKc,SAAL,GAAmB,IAAvB,CAA6B,CAC3B,GAAIC,OAAM,CAAG,EAAb,CACA,GAAI,CAAC,KAAKhB,aAAL,CAAmBJ,OAAnB,EAAL,CAAmC,CACjCoB,MAAM,EACJ,YACAxB,gBAAgB,CAAC,KAAKQ,aAAL,CAAmBd,GAAnB,EAAD,CADhB,CAEA,GAHF,CAID,CAED,GAAM5G,KAAI,CAAG,MAAO,MAAKyH,MAAzB,CACAiB,MAAM,EAAI1I,IAAI,CAAG,GAAjB,CACA,GAAIA,IAAI,GAAK,QAAb,CAAuB,CACrB0I,MAAM,EAAI1P,qBAAqB,CAAC,KAAKyO,MAAN,CAA/B,CACD,CAFD,IAEO,CACLiB,MAAM,EAAI,KAAKjB,MAAf,CACD,CACD,KAAKgB,SAAL,CAAiB/U,IAAI,CAACgV,MAAD,CAArB,CACD,CACD,MAAO,MAAKD,SAAZ,CACD,CApBD;;;OA0BAd,uCACE,MAAO,MAAKF,MAAZ,CACD,CAFD;;OAOAE,sCAAUlK,KAAV,CAAqB,CACnB,GAAIA,KAAK,GAAKkK,QAAQ,CAACH,yBAAT,CAAmCI,UAAjD,CAA6D,CAC3D,MAAO,EAAP,CACD,CAFD,IAEO,IAAInK,KAAK,WAAYkK,SAAQ,CAACH,yBAA9B,CAAyD,CAC9D,MAAO,CAAC,CAAR,CACD,CAFM,IAEA,CACLtS,MAAM,CAACuI,KAAK,CAAC4J,UAAN,EAAD,CAAqB,mBAArB,CAAN,CACA,MAAO,MAAKsB,kBAAL,CAAwBlL,KAAxB,CAAP,CACD,CACF,CATD;;;;;OAiBQkK,sCAAR,SAA2BiB,SAA3B,CAA8C,CAC5C,GAAMC,cAAa,CAAG,MAAOD,UAAS,CAACnB,MAAvC,CACA,GAAMqB,aAAY,CAAG,MAAO,MAAKrB,MAAjC,CACA,GAAMsB,WAAU,CAAGpB,QAAQ,CAACqB,gBAAT,CAA0B3S,OAA1B,CAAkCwS,aAAlC,CAAnB,CACA,GAAMI,UAAS,CAAGtB,QAAQ,CAACqB,gBAAT,CAA0B3S,OAA1B,CAAkCyS,YAAlC,CAAlB,CACA5T,MAAM,CAAC6T,UAAU,EAAI,CAAf,CAAkB,sBAAwBF,aAA1C,CAAN,CACA3T,MAAM,CAAC+T,SAAS,EAAI,CAAd,CAAiB,sBAAwBH,YAAzC,CAAN,CACA,GAAIC,UAAU,GAAKE,SAAnB,CAA8B;AAE5B,GAAIH,YAAY,GAAK,QAArB,CAA+B;AAE7B,MAAO,EAAP,CACD,CAHD,IAGO;AAEL,GAAI,KAAKrB,MAAL,CAAcmB,SAAS,CAACnB,MAA5B,CAAoC,CAClC,MAAO,CAAC,CAAR,CACD,CAFD,IAEO,IAAI,KAAKA,MAAL,GAAgBmB,SAAS,CAACnB,MAA9B,CAAsC,CAC3C,MAAO,EAAP,CACD,CAFM,IAEA,CACL,MAAO,EAAP,CACD,CACF,CACF,CAfD,IAeO,CACL,MAAOwB,UAAS,CAAGF,UAAnB,CACD,CACF,CAzBO;;OA8BRpB,wCACE,MAAO,KAAP,CACD,CAFD;;OAOAA,wCACE,MAAO,KAAP,CACD,CAFD;;OAOAA,mCAAOlK,KAAP,CAAkB;;WAIhB,GAAIA,KAAK,GAAK,IAAd,CAAoB,CAClB,MAAO,KAAP,CACD,CAFD,IAEO,IAAIA,KAAK,CAAC4J,UAAN,EAAJ,CAAwB,CAC7B,GAAMuB,UAAS,CAAGnL,KAAlB,CACA,MACE,MAAKgK,MAAL,GAAgBmB,SAAS,CAACnB,MAA1B,EACA,KAAKC,aAAL,CAAmBwB,MAAnB,CAA0BN,SAAS,CAAClB,aAApC,CAFF,CAID,CANM,IAMA,CACL,MAAO,MAAP,CACD,CACF,CAfD;;;;;OAvOOC,0BAAmB,CAAC,QAAD,CAAW,SAAX,CAAsB,QAAtB,CAAgC,QAAhC,CAAnB,CAuPT,gBAtQA,ICjCA;;;;;;;;;;;;;;;GAsBA,GAAIwB,aAAJ,CACA,GAAInC,WAAJ,SAEgBoC,iBAAgBxC,IAAyB,CACvDuC,YAAY,CAAGvC,GAAf,CACD,SAEeK,cAAWL,IAAS,CAClCI,UAAQ,CAAGJ,GAAXI,CACD,CAED;;;;GAKA,gDAAmCN,gCAAnC,kFA4DC;;OAxDC2C,yCAAQ1R,CAAR,CAAsBC,CAAtB,CAAkC,CAChC,GAAM0R,UAAS,CAAG3R,CAAC,CAACqO,IAAF,CAAOuB,WAAP,EAAlB,CACA,GAAMgC,UAAS,CAAG3R,CAAC,CAACoO,IAAF,CAAOuB,WAAP,EAAlB,CACA,GAAMiC,SAAQ,CAAGF,SAAS,CAACG,SAAV,CAAoBF,SAApB,CAAjB,CACA,GAAIC,QAAQ,GAAK,CAAjB,CAAoB,CAClB,MAAO9R,YAAW,CAACC,CAAC,CAAClF,IAAH,CAASmF,CAAC,CAACnF,IAAX,CAAlB,CACD,CAFD,IAEO,CACL,MAAO+W,SAAP,CACD,CACF,CATD;;OAcAH,6CAAYrD,IAAZ,CAAsB,CACpB,MAAO,CAACA,IAAI,CAACuB,WAAL,GAAmBD,OAAnB,EAAR,CACD,CAFD;;OAOA+B,qDAAoBjD,OAApB,CAAmCC,OAAnC,CAAgD,CAC9C,MAAO,CAACD,OAAO,CAACmB,WAAR,GAAsB2B,MAAtB,CAA6B7C,OAAO,CAACkB,WAAR,EAA7B,CAAR,CACD,CAFD;;OAOA8B;AAEE,MAAQpD,UAAiB,CAACO,GAA1B,CACD,CAHD;;OAQA6C,2CACE,MAAO,IAAIpD,UAAJ,CAAcxO,QAAd,CAAwB,GAAIkQ,SAAJ,CAAa,iBAAb,CAAgCX,UAAhC,CAAxB,CAAP,CACD,CAFD;;;;OASAqC,0CAASvC,UAAT,CAA8BrU,IAA9B,CAA0C,CACxC,GAAM2U,aAAY,CAAG+B,YAAY,CAACrC,UAAD,CAAjC,CACA,MAAO,IAAIb,UAAJ,CAAcxT,IAAd,CAAoB,GAAIkV,SAAJ,CAAa,iBAAb,CAAgCP,YAAhC,CAApB,CAAP,CACD,CAHD;;OAQAiC,4CACE,MAAO,WAAP,CACD,CAFD,CAGF,qBA5DA,EAAmCnD,KAAnC,EA8DO,GAAMwD,eAAc,CAAG,GAAIL,cAAJ,EAAvB,CCpGP;;;;;;;;;;;;;;;IAuCA;;GAGA;;;;;;;OAcE,2BACErD,IADF,CAEE2D,QAFF,CAGEC,UAHF,CAIUC,UAJV,CAKUC,gBALV,CAK6D,CAAnD,oDAAmD,CADnD,2BACA;;WAfF,gBAA0D,EAA1D,CAiBN,GAAItM,IAAG,CAAG,CAAV,CACA,MAAO,CAACwI,IAAI,CAACsB,OAAL,EAAR,CAAwB,CACtBtB,IAAI,CAAGA,IAAP,CACAxI,GAAG,CAAGmM,QAAQ,CAAGC,UAAU,CAAC5D,IAAI,CAAChU,GAAN,CAAW2X,QAAX,CAAb,CAAoC,CAAlD;AAEA,GAAIE,UAAJ,CAAgB,CACdrM,GAAG,EAAI,CAAC,CAAR,CACD,CAED,GAAIA,GAAG,CAAG,CAAV,CAAa;AAEX,GAAI,KAAKqM,UAAT,CAAqB,CACnB7D,IAAI,CAAGA,IAAI,CAAC5I,IAAZ,CACD,CAFD,IAEO,CACL4I,IAAI,CAAGA,IAAI,CAAC3I,KAAZ,CACD,CACF,CAPD,IAOO,IAAIG,GAAG,GAAK,CAAZ,CAAe;AAEpB,KAAKuM,UAAL,CAAgBzR,IAAhB,CAAqB0N,IAArB,EACA,MACD,CAJM,IAIA;AAEL,KAAK+D,UAAL,CAAgBzR,IAAhB,CAAqB0N,IAArB,EACA,GAAI,KAAK6D,UAAT,CAAqB,CACnB7D,IAAI,CAAGA,IAAI,CAAC3I,KAAZ,CACD,CAFD,IAEO,CACL2I,IAAI,CAAGA,IAAI,CAAC5I,IAAZ,CACD,CACF,CACF,CACF,CAED4M,+CACE,GAAI,KAAKD,UAAL,CAAgBvV,MAAhB,GAA2B,CAA/B,CAAkC,CAChC,MAAO,KAAP,CACD,CAED,GAAIwR,KAAI,CAAG,KAAK+D,UAAL,CAAgB1L,GAAhB,EAAX,CACA,GAAI4L,OAAJ,CACA,GAAI,KAAKH,gBAAT,CAA2B,CACzBG,MAAM,CAAG,KAAKH,gBAAL,CAAsB9D,IAAI,CAAChU,GAA3B,CAAgCgU,IAAI,CAAC/T,KAArC,CAAT,CACD,CAFD,IAEO,CACLgY,MAAM,CAAI,CAAEjY,GAAG,CAAEgU,IAAI,CAAChU,GAAZ,CAAiBC,KAAK,CAAE+T,IAAI,CAAC/T,KAA7B,CAAV,CACD,CAED,GAAI,KAAK4X,UAAT,CAAqB,CACnB7D,IAAI,CAAGA,IAAI,CAAC5I,IAAZ,CACA,MAAO,CAAC4I,IAAI,CAACsB,OAAL,EAAR,CAAwB,CACtB,KAAKyC,UAAL,CAAgBzR,IAAhB,CAAqB0N,IAArB,EACAA,IAAI,CAAGA,IAAI,CAAC3I,KAAZ,CACD,CACF,CAND,IAMO,CACL2I,IAAI,CAAGA,IAAI,CAAC3I,KAAZ,CACA,MAAO,CAAC2I,IAAI,CAACsB,OAAL,EAAR,CAAwB,CACtB,KAAKyC,UAAL,CAAgBzR,IAAhB,CAAqB0N,IAArB,EACAA,IAAI,CAAGA,IAAI,CAAC5I,IAAZ,CACD,CACF,CAED,MAAO6M,OAAP,CACD,CA5BD,CA8BAD,+CACE,MAAO,MAAKD,UAAL,CAAgBvV,MAAhB,CAAyB,CAAhC,CACD,CAFD,CAIAwV,4CACE,GAAI,KAAKD,UAAL,CAAgBvV,MAAhB,GAA2B,CAA/B,CAAkC,CAChC,MAAO,KAAP,CACD,CAED,GAAMwR,KAAI,CAAG,KAAK+D,UAAL,CAAgB,KAAKA,UAAL,CAAgBvV,MAAhB,CAAyB,CAAzC,CAAb,CACA,GAAI,KAAKsV,gBAAT,CAA2B,CACzB,MAAO,MAAKA,gBAAL,CAAsB9D,IAAI,CAAChU,GAA3B,CAAgCgU,IAAI,CAAC/T,KAArC,CAAP,CACD,CAFD,IAEO,CACL,MAAQ,CAAED,GAAG,CAAEgU,IAAI,CAAChU,GAAZ,CAAiBC,KAAK,CAAE+T,IAAI,CAAC/T,KAA7B,CAAR,CACD,CACF,CAXD,CAYF,yBAAC,CAnGD,GAqGA;;GAGA;;;;;;;OAaE,kBACSD,GADT,CAESC,KAFT,CAGEiY,KAHF,CAIE9M,IAJF,CAKEC,KALF,CAKqD,CAJ5C,aACA,iBAKP,KAAK6M,KAAL,CAAaA,KAAK,EAAI,IAAT,CAAgBA,KAAhB,CAAwBC,QAAQ,CAACC,GAA9C,CACA,KAAKhN,IAAL,CACEA,IAAI,EAAI,IAAR,CAAeA,IAAf,CAAuBiN,SAAS,CAACzC,UADnC,CAEA,KAAKvK,KAAL,CACEA,KAAK,EAAI,IAAT,CAAgBA,KAAhB,CAAyBgN,SAAS,CAACzC,UADrC,CAED;;;;;;;;;OAeDuC,iCACEnY,GADF,CAEEC,KAFF,CAGEiY,KAHF,CAIE9M,IAJF,CAKEC,KALF,CAKoD,CAElD,MAAO,IAAI8M,SAAJ,CACLnY,GAAG,EAAI,IAAP,CAAcA,GAAd,CAAoB,KAAKA,GADpB,CAELC,KAAK,EAAI,IAAT,CAAgBA,KAAhB,CAAwB,KAAKA,KAFxB,CAGLiY,KAAK,EAAI,IAAT,CAAgBA,KAAhB,CAAwB,KAAKA,KAHxB,CAIL9M,IAAI,EAAI,IAAR,CAAeA,IAAf,CAAsB,KAAKA,IAJtB,CAKLC,KAAK,EAAI,IAAT,CAAgBA,KAAhB,CAAwB,KAAKA,KALxB,CAAP,CAOD,CAdD;;OAmBA8M,oCACE,MAAO,MAAK/M,IAAL,CAAUkN,KAAV,GAAoB,CAApB,CAAwB,KAAKjN,KAAL,CAAWiN,KAAX,EAA/B,CACD,CAFD;;OAOAH,sCACE,MAAO,MAAP,CACD,CAFD;;;;;;;;OAaAA,6CAAiB7B,MAAjB,CAAgD,CAC9C,MACE,MAAKlL,IAAL,CAAUmN,gBAAV,CAA2BjC,MAA3B,GACA,CAAC,CAACA,MAAM,CAAC,KAAKtW,GAAN,CAAW,KAAKC,KAAhB,CADR,EAEA,KAAKoL,KAAL,CAAWkN,gBAAX,CAA4BjC,MAA5B,CAHF,CAKD,CAND;;;;;;;OAgBA6B,6CAAiB7B,MAAjB,CAA6C,CAC3C,MACE,MAAKjL,KAAL,CAAWmN,gBAAX,CAA4BlC,MAA5B,GACAA,MAAM,CAAC,KAAKtW,GAAN,CAAW,KAAKC,KAAhB,CADN,EAEA,KAAKmL,IAAL,CAAUoN,gBAAV,CAA2BlC,MAA3B,CAHF,CAKD,CAND;;;OAYQ6B,wBAAR,WACE,GAAI,KAAK/M,IAAL,CAAUkK,OAAV,EAAJ,CAAyB,CACvB,MAAO,KAAP,CACD,CAFD,IAEO,CACL,MAAQ,MAAKlK,IAAL,CAA6BqN,IAA7B,EAAR,CACD,CACF,CANO;;OAWRN,qCACE,MAAO,MAAKM,IAAL,GAAYzY,GAAnB,CACD,CAFD;;OAOAmY,qCACE,GAAI,KAAK9M,KAAL,CAAWiK,OAAX,EAAJ,CAA0B,CACxB,MAAO,MAAKtV,GAAZ,CACD,CAFD,IAEO,CACL,MAAO,MAAKqL,KAAL,CAAWqN,MAAX,EAAP,CACD,CACF,CAND;;;;;;OAeAP,mCAAOnY,GAAP,CAAeC,KAAf,CAAyB2X,UAAzB,CAAkD,CAChD,GAAIe,EAAC,CAAmB,IAAxB,CACA,GAAMnN,IAAG,CAAGoM,UAAU,CAAC5X,GAAD,CAAM2Y,CAAC,CAAC3Y,GAAR,CAAtB,CACA,GAAIwL,GAAG,CAAG,CAAV,CAAa,CACXmN,CAAC,CAAGA,CAAC,CAACC,IAAF,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyBD,CAAC,CAACvN,IAAF,CAAOyN,MAAP,CAAc7Y,GAAd,CAAmBC,KAAnB,CAA0B2X,UAA1B,CAAzB,CAAgE,IAAhE,CAAJ,CACD,CAFD,IAEO,IAAIpM,GAAG,GAAK,CAAZ,CAAe,CACpBmN,CAAC,CAAGA,CAAC,CAACC,IAAF,CAAO,IAAP,CAAa3Y,KAAb,CAAoB,IAApB,CAA0B,IAA1B,CAAgC,IAAhC,CAAJ,CACD,CAFM,IAEA,CACL0Y,CAAC,CAAGA,CAAC,CAACC,IAAF,CACF,IADE,CAEF,IAFE,CAGF,IAHE,CAIF,IAJE,CAKFD,CAAC,CAACtN,KAAF,CAAQwN,MAAR,CAAe7Y,GAAf,CAAoBC,KAApB,CAA2B2X,UAA3B,CALE,CAAJ,CAOD,CACD,MAAOe,EAAC,CAACG,MAAF,EAAP,CACD,CAjBD;;;OAuBQX,8BAAR,WACE,GAAI,KAAK/M,IAAL,CAAUkK,OAAV,EAAJ,CAAyB,CACvB,MAAO+C,UAAS,CAACzC,UAAjB,CACD,CACD,GAAI+C,EAAC,CAAmB,IAAxB,CACA,GAAI,CAACA,CAAC,CAACvN,IAAF,CAAO2N,MAAP,EAAD,EAAoB,CAACJ,CAAC,CAACvN,IAAF,CAAOA,IAAP,CAAY2N,MAAZ,EAAzB,CAA+C,CAC7CJ,CAAC,CAAGA,CAAC,CAACK,YAAF,EAAJ,CACD,CACDL,CAAC,CAAGA,CAAC,CAACC,IAAF,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAA0BD,CAAC,CAACvN,IAAF,CAA0B6N,UAA1B,EAA1B,CAAkE,IAAlE,CAAJ,CACA,MAAON,EAAC,CAACG,MAAF,EAAP,CACD,CAVO;;;;OAiBRX,mCACEnY,GADF,CAEE4X,UAFF,CAE2B,CAEzB,GAAIe,EAAJ,CAAOO,QAAP,CACAP,CAAC,CAAG,IAAJ,CACA,GAAIf,UAAU,CAAC5X,GAAD,CAAM2Y,CAAC,CAAC3Y,GAAR,CAAV,CAAyB,CAA7B,CAAgC,CAC9B,GAAI,CAAC2Y,CAAC,CAACvN,IAAF,CAAOkK,OAAP,EAAD,EAAqB,CAACqD,CAAC,CAACvN,IAAF,CAAO2N,MAAP,EAAtB,EAAyC,CAACJ,CAAC,CAACvN,IAAF,CAAOA,IAAP,CAAY2N,MAAZ,EAA9C,CAAoE,CAClEJ,CAAC,CAAGA,CAAC,CAACK,YAAF,EAAJ,CACD,CACDL,CAAC,CAAGA,CAAC,CAACC,IAAF,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyBD,CAAC,CAACvN,IAAF,CAAO3H,MAAP,CAAczD,GAAd,CAAmB4X,UAAnB,CAAzB,CAAyD,IAAzD,CAAJ,CACD,CALD,IAKO,CACL,GAAIe,CAAC,CAACvN,IAAF,CAAO2N,MAAP,EAAJ,CAAqB,CACnBJ,CAAC,CAAGA,CAAC,CAACQ,YAAF,EAAJ,CACD,CACD,GAAI,CAACR,CAAC,CAACtN,KAAF,CAAQiK,OAAR,EAAD,EAAsB,CAACqD,CAAC,CAACtN,KAAF,CAAQ0N,MAAR,EAAvB,EAA2C,CAACJ,CAAC,CAACtN,KAAF,CAAQD,IAAR,CAAa2N,MAAb,EAAhD,CAAuE,CACrEJ,CAAC,CAAGA,CAAC,CAACS,aAAF,EAAJ,CACD,CACD,GAAIxB,UAAU,CAAC5X,GAAD,CAAM2Y,CAAC,CAAC3Y,GAAR,CAAV,GAA2B,CAA/B,CAAkC,CAChC,GAAI2Y,CAAC,CAACtN,KAAF,CAAQiK,OAAR,EAAJ,CAAuB,CACrB,MAAO+C,UAAS,CAACzC,UAAjB,CACD,CAFD,IAEO,CACLsD,QAAQ,CAAIP,CAAC,CAACtN,KAAF,CAA2BoN,IAA3B,EAAZ,CACAE,CAAC,CAAGA,CAAC,CAACC,IAAF,CACFM,QAAQ,CAAClZ,GADP,CAEFkZ,QAAQ,CAACjZ,KAFP,CAGF,IAHE,CAIF,IAJE,CAKD0Y,CAAC,CAACtN,KAAF,CAA2B4N,UAA3B,EALC,CAAJ,CAOD,CACF,CACDN,CAAC,CAAGA,CAAC,CAACC,IAAF,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+BD,CAAC,CAACtN,KAAF,CAAQ5H,MAAR,CAAezD,GAAf,CAAoB4X,UAApB,CAA/B,CAAJ,CACD,CACD,MAAOe,EAAC,CAACG,MAAF,EAAP,CACD,CAnCD;;;OAyCAX,qCACE,MAAO,MAAKD,KAAZ,CACD,CAFD;;;OAQQC,0BAAR,WACE,GAAIQ,EAAC,CAAmB,IAAxB,CACA,GAAIA,CAAC,CAACtN,KAAF,CAAQ0N,MAAR,IAAoB,CAACJ,CAAC,CAACvN,IAAF,CAAO2N,MAAP,EAAzB,CAA0C,CACxCJ,CAAC,CAAGA,CAAC,CAACU,WAAF,EAAJ,CACD,CACD,GAAIV,CAAC,CAACvN,IAAF,CAAO2N,MAAP,IAAmBJ,CAAC,CAACvN,IAAF,CAAOA,IAAP,CAAY2N,MAAZ,EAAvB,CAA6C,CAC3CJ,CAAC,CAAGA,CAAC,CAACQ,YAAF,EAAJ,CACD,CACD,GAAIR,CAAC,CAACvN,IAAF,CAAO2N,MAAP,IAAmBJ,CAAC,CAACtN,KAAF,CAAQ0N,MAAR,EAAvB,CAAyC,CACvCJ,CAAC,CAAGA,CAAC,CAACW,UAAF,EAAJ,CACD,CACD,MAAOX,EAAP,CACD,CAZO;;;OAkBAR,gCAAR,WACE,GAAIQ,EAAC,CAAG,KAAKW,UAAL,EAAR,CACA,GAAIX,CAAC,CAACtN,KAAF,CAAQD,IAAR,CAAa2N,MAAb,EAAJ,CAA2B,CACzBJ,CAAC,CAAGA,CAAC,CAACC,IAAF,CACF,IADE,CAEF,IAFE,CAGF,IAHE,CAIF,IAJE,CAKDD,CAAC,CAACtN,KAAF,CAA2B8N,YAA3B,EALC,CAAJ,CAOAR,CAAC,CAAGA,CAAC,CAACU,WAAF,EAAJ,CACAV,CAAC,CAAGA,CAAC,CAACW,UAAF,EAAJ,CACD,CACD,MAAOX,EAAP,CACD,CAdO;;;OAoBAR,iCAAR,WACE,GAAIQ,EAAC,CAAG,KAAKW,UAAL,EAAR,CACA,GAAIX,CAAC,CAACvN,IAAF,CAAOA,IAAP,CAAY2N,MAAZ,EAAJ,CAA0B,CACxBJ,CAAC,CAAGA,CAAC,CAACQ,YAAF,EAAJ,CACAR,CAAC,CAAGA,CAAC,CAACW,UAAF,EAAJ,CACD,CACD,MAAOX,EAAP,CACD,CAPO;;;OAaAR,+BAAR,WACE,GAAMoB,GAAE,CAAG,KAAKX,IAAL,CAAU,IAAV,CAAgB,IAAhB,CAAsBT,QAAQ,CAACC,GAA/B,CAAoC,IAApC,CAA0C,KAAK/M,KAAL,CAAWD,IAArD,CAAX,CACA,MAAO,MAAKC,KAAL,CAAWuN,IAAX,CAAgB,IAAhB,CAAsB,IAAtB,CAA4B,KAAKV,KAAjC,CAAwCqB,EAAxC,CAA4C,IAA5C,CAAP,CACD,CAHO;;;OASApB,gCAAR,WACE,GAAMqB,GAAE,CAAG,KAAKZ,IAAL,CAAU,IAAV,CAAgB,IAAhB,CAAsBT,QAAQ,CAACC,GAA/B,CAAoC,KAAKhN,IAAL,CAAUC,KAA9C,CAAqD,IAArD,CAAX,CACA,MAAO,MAAKD,IAAL,CAAUwN,IAAV,CAAe,IAAf,CAAqB,IAArB,CAA2B,KAAKV,KAAhC,CAAuC,IAAvC,CAA6CsB,EAA7C,CAAP,CACD,CAHO;;;OASArB,8BAAR,WACE,GAAM/M,KAAI,CAAG,KAAKA,IAAL,CAAUwN,IAAV,CAAe,IAAf,CAAqB,IAArB,CAA2B,CAAC,KAAKxN,IAAL,CAAU8M,KAAtC,CAA6C,IAA7C,CAAmD,IAAnD,CAAb,CACA,GAAM7M,MAAK,CAAG,KAAKA,KAAL,CAAWuN,IAAX,CAAgB,IAAhB,CAAsB,IAAtB,CAA4B,CAAC,KAAKvN,KAAL,CAAW6M,KAAxC,CAA+C,IAA/C,CAAqD,IAArD,CAAd,CACA,MAAO,MAAKU,IAAL,CAAU,IAAV,CAAgB,IAAhB,CAAsB,CAAC,KAAKV,KAA5B,CAAmC9M,IAAnC,CAAyCC,KAAzC,CAAP,CACD,CAJO;;;;;OAYA8M,kCAAR,WACE,GAAMsB,WAAU,CAAG,KAAKC,MAAL,EAAnB,CACA,MAAOtU,KAAI,CAACsC,GAAL,CAAS,GAAT,CAAc+R,UAAd,GAA6B,KAAKnB,KAAL,GAAe,CAAnD,CACD,CAHO;;;OASRH,qCACE,GAAI,KAAKY,MAAL,IAAiB,KAAK3N,IAAL,CAAU2N,MAAV,EAArB,CAAyC,CACvC,KAAM,IAAI/U,MAAJ,CACJ,0BAA4B,KAAKhE,GAAjC,CAAuC,GAAvC,CAA6C,KAAKC,KAAlD,CAA0D,GADtD,CAAN,CAGD,CACD,GAAI,KAAKoL,KAAL,CAAW0N,MAAX,EAAJ,CAAyB,CACvB,KAAM,IAAI/U,MAAJ,CACJ,mBAAqB,KAAKhE,GAA1B,CAAgC,GAAhC,CAAsC,KAAKC,KAA3C,CAAmD,UAD/C,CAAN,CAGD,CACD,GAAMwZ,WAAU,CAAG,KAAKrO,IAAL,CAAUsO,MAAV,EAAnB,CACA,GAAID,UAAU,GAAK,KAAKpO,KAAL,CAAWqO,MAAX,EAAnB,CAAwC,CACtC,KAAM,IAAI1V,MAAJ,CAAU,qBAAV,CAAN,CACD,CAFD,IAEO,CACL,MAAOyV,WAAU,EAAI,KAAKV,MAAL,GAAgB,CAAhB,CAAoB,CAAxB,CAAjB,CACD,CACF,CAjBD,CApSOZ,aAAM,IAAN,CACAA,eAAQ,KAAR,CAqTT,gBAjVA,IAmVA;;GAGA,mEAgHC;;;;OApGCwB,sCACE3Z,GADF,CAEEC,KAFF,CAGEiY,KAHF,CAIE9M,IAJF,CAKEC,KALF,CAKoD,CAElD,MAAO,KAAP,CACD,CARD;;;;;;;OAkBAsO,wCAAO3Z,GAAP,CAAeC,KAAf,CAAyB2X,UAAzB,CAAkD,CAChD,MAAO,IAAIO,SAAJ,CAAanY,GAAb,CAAkBC,KAAlB,CAAyB,IAAzB,CAAP,CACD,CAFD;;;;;;OAWA0Z,wCAAO3Z,GAAP,CAAe4X,UAAf,CAAwC,CACtC,MAAO,KAAP,CACD,CAFD;;OAOA+B,yCACE,MAAO,EAAP,CACD,CAFD;;OAOAA,2CACE,MAAO,KAAP,CACD,CAFD;;;;;;;OAYAA,kDAAiBrD,MAAjB,CAAgD,CAC9C,MAAO,MAAP,CACD,CAFD;;;;;;;OAYAqD,kDAAiBrD,MAAjB,CAA6C,CAC3C,MAAO,MAAP,CACD,CAFD;;OAOAqD,0CACE,MAAO,KAAP,CACD,CAFD;;OAOAA,0CACE,MAAO,KAAP,CACD,CAFD;;;OAQAA,0CACE,MAAO,EAAP,CACD,CAFD;;;OAQAA,0CACE,MAAO,MAAP,CACD,CAFD,CAGF,qBAAC,CAhHD,GAkHA;;;GAIA;;;;OAYE,mBACUC,WADV,CAEUC,KAFV,CAIuE,CAF7D,yBAEkBxB,SAAS,CAACzC,UAF5B,CAE6D,CAH7D,6BACA,iBAGN;;;;;;;OAUJyC,oCAAOrY,GAAP,CAAeC,KAAf,CAAuB,CACrB,MAAO,IAAIoY,UAAJ,CACL,KAAKuB,WADA,CAEL,KAAKC,KAAL,CACGhB,MADH,CACU7Y,GADV,CACeC,KADf,CACsB,KAAK2Z,WAD3B,EAEGhB,IAFH,CAEQ,IAFR,CAEc,IAFd,CAEoBT,QAAQ,CAAC2B,KAF7B,CAEoC,IAFpC,CAE0C,IAF1C,CAFK,CAAP,CAMD,CAPD;;;;;OAeAzB,oCAAOrY,GAAP,CAAa,CACX,MAAO,IAAIqY,UAAJ,CACL,KAAKuB,WADA,CAEL,KAAKC,KAAL,CACGpW,MADH,CACUzD,GADV,CACe,KAAK4Z,WADpB,EAEGhB,IAFH,CAEQ,IAFR,CAEc,IAFd,CAEoBT,QAAQ,CAAC2B,KAF7B,CAEoC,IAFpC,CAE0C,IAF1C,CAFK,CAAP,CAMD,CAPD;;;;;;OAgBAzB,iCAAIrY,GAAJ,CAAU,CACR,GAAIwL,IAAJ,CACA,GAAIwI,KAAI,CAAG,KAAK6F,KAAhB,CACA,MAAO,CAAC7F,IAAI,CAACsB,OAAL,EAAR,CAAwB,CACtB9J,GAAG,CAAG,KAAKoO,WAAL,CAAiB5Z,GAAjB,CAAsBgU,IAAI,CAAChU,GAA3B,CAAN,CACA,GAAIwL,GAAG,GAAK,CAAZ,CAAe,CACb,MAAOwI,KAAI,CAAC/T,KAAZ,CACD,CAFD,IAEO,IAAIuL,GAAG,CAAG,CAAV,CAAa,CAClBwI,IAAI,CAAGA,IAAI,CAAC5I,IAAZ,CACD,CAFM,IAEA,IAAII,GAAG,CAAG,CAAV,CAAa,CAClBwI,IAAI,CAAGA,IAAI,CAAC3I,KAAZ,CACD,CACF,CACD,MAAO,KAAP,CACD,CAdD;;;;OAqBAgN,+CAAkBrY,GAAlB,CAAwB,CACtB,GAAIwL,IAAJ,CACEwI,IAAI,CAAG,KAAK6F,KADd,CAEEE,WAAW,CAAG,IAFhB,CAGA,MAAO,CAAC/F,IAAI,CAACsB,OAAL,EAAR,CAAwB,CACtB9J,GAAG,CAAG,KAAKoO,WAAL,CAAiB5Z,GAAjB,CAAsBgU,IAAI,CAAChU,GAA3B,CAAN,CACA,GAAIwL,GAAG,GAAK,CAAZ,CAAe,CACb,GAAI,CAACwI,IAAI,CAAC5I,IAAL,CAAUkK,OAAV,EAAL,CAA0B,CACxBtB,IAAI,CAAGA,IAAI,CAAC5I,IAAZ,CACA,MAAO,CAAC4I,IAAI,CAAC3I,KAAL,CAAWiK,OAAX,EAAR,CAA8B,CAC5BtB,IAAI,CAAGA,IAAI,CAAC3I,KAAZ,CACD,CACD,MAAO2I,KAAI,CAAChU,GAAZ,CACD,CAND,IAMO,IAAI+Z,WAAJ,CAAiB,CACtB,MAAOA,YAAW,CAAC/Z,GAAnB,CACD,CAFM,IAEA,CACL,MAAO,KAAP,CAAY;AACb,CACF,CAZD,IAYO,IAAIwL,GAAG,CAAG,CAAV,CAAa,CAClBwI,IAAI,CAAGA,IAAI,CAAC5I,IAAZ,CACD,CAFM,IAEA,IAAII,GAAG,CAAG,CAAV,CAAa,CAClBuO,WAAW,CAAG/F,IAAd,CACAA,IAAI,CAAGA,IAAI,CAAC3I,KAAZ,CACD,CACF,CAED,KAAM,IAAIrH,MAAJ,CACJ,uEADI,CAAN,CAGD,CA7BD;;OAkCAqU,uCACE,MAAO,MAAKwB,KAAL,CAAWvE,OAAX,EAAP,CACD,CAFD;;OAOA+C,qCACE,MAAO,MAAKwB,KAAL,CAAWvB,KAAX,EAAP,CACD,CAFD;;OAOAD,sCACE,MAAO,MAAKwB,KAAL,CAAWG,MAAX,EAAP,CACD,CAFD;;OAOA3B,sCACE,MAAO,MAAKwB,KAAL,CAAWnB,MAAX,EAAP,CACD,CAFD;;;;;;;;OAaAL,8CAAiB/B,MAAjB,CAAgD,CAC9C,MAAO,MAAKuD,KAAL,CAAWtB,gBAAX,CAA4BjC,MAA5B,CAAP,CACD,CAFD;;;;;;;OAYA+B,8CAAiB/B,MAAjB,CAA6C,CAC3C,MAAO,MAAKuD,KAAL,CAAWrB,gBAAX,CAA4BlC,MAA5B,CAAP,CACD,CAFD;;;;;OAUA+B,yCACE4B,eADF,CACqC,CAEnC,MAAO,IAAIjC,kBAAJ,CACL,KAAK6B,KADA,CAEL,IAFK,CAGL,KAAKD,WAHA,CAIL,KAJK,CAKLK,eALK,CAAP,CAOD,CAVD,CAYA5B,6CACErY,GADF,CAEEia,eAFF,CAEqC,CAEnC,MAAO,IAAIjC,kBAAJ,CACL,KAAK6B,KADA,CAEL7Z,GAFK,CAGL,KAAK4Z,WAHA,CAIL,KAJK,CAKLK,eALK,CAAP,CAOD,CAXD,CAaA5B,oDACErY,GADF,CAEEia,eAFF,CAEqC,CAEnC,MAAO,IAAIjC,kBAAJ,CACL,KAAK6B,KADA,CAEL7Z,GAFK,CAGL,KAAK4Z,WAHA,CAIL,IAJK,CAKLK,eALK,CAAP,CAOD,CAXD,CAaA5B,gDACE4B,eADF,CACqC,CAEnC,MAAO,IAAIjC,kBAAJ,CACL,KAAK6B,KADA,CAEL,IAFK,CAGL,KAAKD,WAHA,CAIL,IAJK,CAKLK,eALK,CAAP,CAOD,CAVD;;;OA1MO5B,qBAAa,GAAIsB,cAAJ,EAAb,CAqNT,iBA1NA,IC9lBA;;;;;;;;;;;;;;;GAqBA,GAAMO,MAAK,CAAG9U,IAAI,CAAC9B,GAAL,CAAS,CAAT,CAAd,CAEA;;GAGA;;OAQE,mBAAYd,MAAZ,CAA0B,CACxB,GAAM2X,SAAQ,CAAG,SAACC,GAAD,CAAY;AAE3B,eAAQ,CAAEhV,IAAI,CAAC9B,GAAL,CAAS8W,GAAT,EAAgBF,KAAlB,CAAiC,EAAjC,CAAR,CAA4C,CAF9C,CAGA,GAAMG,QAAO,CAAG,SAACvS,IAAD,CAAa,CAAK,eAAQ,CAACpF,KAAK,CAACoF,IAAI,CAAG,CAAR,CAAL,CAAgBE,IAAhB,CAAqB,GAArB,CAAD,CAA4B,CAA5B,CAAR,CAAsC,CAAxE,CACA,KAAKsQ,KAAL,CAAa6B,QAAQ,CAAC3X,MAAM,CAAG,CAAV,CAArB,CACA,KAAK8X,QAAL,CAAgB,KAAKhC,KAAL,CAAa,CAA7B,CACA,GAAMiC,KAAI,CAAGF,OAAO,CAAC,KAAK/B,KAAN,CAApB,CACA,KAAKkC,KAAL,CAAchY,MAAM,CAAG,CAAV,CAAe+X,IAA5B,CACD;;OAKDE;AAEE,GAAMxC,OAAM,CAAG,EAAE,KAAKuC,KAAL,CAAc,KAAO,KAAKF,QAA5B,CAAf,CACA,KAAKA,QAAL,GACA,MAAOrC,OAAP,CACD,CALD,CAMF,iBAAC,CA5BD,GA8BA;;;;;;;;;;;;;;GAeO,GAAMyC,cAAa,CAAG,SAC3BC,SAD2B,CAE3BnP,GAF2B,CAG3BoP,KAH2B,CAI3BC,SAJ2B,CAIO,CAElCF,SAAS,CAACpU,IAAV,CAAeiF,GAAf,EAEA,GAAMsP,kBAAiB,CAAG,SACxBC,GADwB,CAExBC,IAFwB,CAEZ,CAEZ,GAAMxY,OAAM,CAAGwY,IAAI,CAAGD,GAAtB,CACA,GAAIE,UAAJ,CACA,GAAIjb,IAAJ,CACA,GAAIwC,MAAM,GAAK,CAAf,CAAkB,CAChB,MAAO,KAAP,CACD,CAFD,IAEO,IAAIA,MAAM,GAAK,CAAf,CAAkB,CACvByY,SAAS,CAAGN,SAAS,CAACI,GAAD,CAArB,CACA/a,GAAG,CAAG4a,KAAK,CAAGA,KAAK,CAACK,SAAD,CAAR,CAAwBA,SAAnC,CACA,MAAO,IAAI9C,SAAJ,CACLnY,GADK,CAEJib,SAAS,CAACjH,IAFN,CAGLmE,QAAQ,CAAC2B,KAHJ,CAIL,IAJK,CAKL,IALK,CAAP,CAOD,CAVM,IAUA;AAEL,GAAMoB,OAAM,CAAG/S,QAAQ,CAAE3F,MAAM,CAAG,CAAX,CAAsB,EAAtB,CAAR,CAAoCuY,GAAnD,CACA,GAAM3P,KAAI,CAAG0P,iBAAiB,CAACC,GAAD,CAAMG,MAAN,CAA9B,CACA,GAAM7P,MAAK,CAAGyP,iBAAiB,CAACI,MAAM,CAAG,CAAV,CAAaF,IAAb,CAA/B,CACAC,SAAS,CAAGN,SAAS,CAACO,MAAD,CAArB,CACAlb,GAAG,CAAG4a,KAAK,CAAGA,KAAK,CAACK,SAAD,CAAR,CAAwBA,SAAnC,CACA,MAAO,IAAI9C,SAAJ,CACLnY,GADK,CAEJib,SAAS,CAACjH,IAFN,CAGLmE,QAAQ,CAAC2B,KAHJ,CAIL1O,IAJK,CAKLC,KALK,CAAP,CAOD,CACF,CAlCD,CAoCA,GAAM8P,iBAAgB,CAAG,SAAUC,MAAV,CAA2B,CAClD,GAAIpH,KAAI,CAAmB,IAA3B,CACA,GAAIqH,KAAI,CAAG,IAAX,CACA,GAAIhF,MAAK,CAAGsE,SAAS,CAACnY,MAAtB,CAEA,GAAM8Y,aAAY,CAAG,SAAUC,SAAV,CAA6BrD,KAA7B,CAA2C,CAC9D,GAAM6C,IAAG,CAAG1E,KAAK,CAAGkF,SAApB,CACA,GAAMP,KAAI,CAAG3E,KAAb,CACAA,KAAK,EAAIkF,SAAT,CACA,GAAMC,UAAS,CAAGV,iBAAiB,CAACC,GAAG,CAAG,CAAP,CAAUC,IAAV,CAAnC,CACA,GAAMC,UAAS,CAAGN,SAAS,CAACI,GAAD,CAA3B,CACA,GAAM/a,IAAG,CAAM4a,KAAK,CAAGA,KAAK,CAACK,SAAD,CAAR,CAAwBA,SAA5C,CACAQ,aAAa,CACX,GAAItD,SAAJ,CACEnY,GADF,CAEGib,SAAS,CAACjH,IAFb,CAGEkE,KAHF,CAIE,IAJF,CAKEsD,SALF,CADW,CAAb,CASD,CAhBD,CAkBA,GAAMC,cAAa,CAAG,SAAUC,OAAV,CAAiC,CACrD,GAAI1H,IAAJ,CAAU,CACRA,IAAI,CAAC5I,IAAL,CAAYsQ,OAAZ,CACA1H,IAAI,CAAG0H,OAAP,CACD,CAHD,IAGO,CACLL,IAAI,CAAGK,OAAP,CACA1H,IAAI,CAAG0H,OAAP,CACD,CACF,CARD,CAUA,IAAK,GAAInZ,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG6Y,MAAM,CAAC9C,KAA3B,CAAkC,EAAE/V,CAApC,CAAuC,CACrC,GAAMoZ,MAAK,CAAGP,MAAM,CAACQ,YAAP,EAAd;AAEA,GAAML,UAAS,CAAGnW,IAAI,CAACsC,GAAL,CAAS,CAAT,CAAY0T,MAAM,CAAC9C,KAAP,EAAgB/V,CAAC,CAAG,CAApB,CAAZ,CAAlB,CACA,GAAIoZ,KAAJ,CAAW,CACTL,YAAY,CAACC,SAAD,CAAYpD,QAAQ,CAAC2B,KAArB,CAAZ,CACD,CAFD,IAEO;AAELwB,YAAY,CAACC,SAAD,CAAYpD,QAAQ,CAAC2B,KAArB,CAAZ,CACAwB,YAAY,CAACC,SAAD,CAAYpD,QAAQ,CAACC,GAArB,CAAZ,CACD,CACF,CACD,MAAOiD,KAAP,CACD,CA9CD,CAgDA,GAAMD,OAAM,CAAG,GAAIX,UAAJ,CAAcE,SAAS,CAACnY,MAAxB,CAAf,CACA,GAAM6Y,KAAI,CAAGF,gBAAgB,CAACC,MAAD,CAA7B;AAEA,MAAO,IAAI/C,UAAJ,CAAoBwC,SAAS,EAAKrP,GAAlC,CAA+C6P,IAA/C,CAAP,CACD,CAhGM,CCvEP;;;;;;;;;;;;;;;GA0BA,GAAIQ,iBAAJ,CAEA,GAAMC,eAAc,CAAG,EAAvB,CAEA,qCAkBE,kBACUC,QADV,CAIUC,SAJV,CAI2C,CAHjC,uBAGA,yBACN,CAnBJ7R,sBAAW8R,QAAX,CAAW,SAAX,CAAkB;;eAAlB,WACE/Y,MAAM,CACJ4Y,cAAc,EAAIpE,cADd,CAEJ,qCAFI,CAAN,CAIAmE,gBAAgB,CACdA,gBAAgB,EAChB,GAAII,SAAJ,CACE,CAAE,YAAaH,cAAf,CADF,CAEE,CAAE,YAAapE,cAAf,CAFF,CAFF,CAMA,MAAOmE,iBAAP,CACD,CAZiB,oCAAlB,EAqBAI,gCAAIC,QAAJ,CAAoB,CAClB,GAAMC,UAAS,CAAGC,OAAO,CAAC,KAAKL,QAAN,CAAgBG,QAAhB,CAAzB,CACA,GAAI,CAACC,SAAL,CAAgB,CACd,KAAM,IAAInY,MAAJ,CAAU,wBAA0BkY,QAApC,CAAN,CACD,CAED,GAAIC,SAAS,WAAY9D,UAAzB,CAAoC,CAClC,MAAO8D,UAAP,CACD,CAFD,IAEO;;AAGL,MAAO,KAAP,CACD,CACF,CAbD,CAeAF,qCAASI,eAAT,CAA+B,CAC7B,MAAOvb,SAAQ,CAAC,KAAKkb,SAAN,CAAiBK,eAAe,CAAC1b,QAAhB,EAAjB,CAAf,CACD,CAFD,CAIAsb,qCACEI,eADF,CAEEC,gBAFF,CAE2C,CAEzCpZ,MAAM,CACJmZ,eAAe,GAAKtH,SADhB,CAEJ,qEAFI,CAAN,CAIA,GAAM4F,UAAS,CAAG,EAAlB,CACA,GAAI4B,gBAAe,CAAG,KAAtB,CACA,GAAMC,KAAI,CAAGF,gBAAgB,CAACG,WAAjB,CAA6BxI,SAAS,CAACyI,IAAvC,CAAb,CACA,GAAIC,KAAI,CAAGH,IAAI,CAACI,OAAL,EAAX,CACA,MAAOD,IAAP,CAAa,CACXJ,eAAe,CACbA,eAAe,EAAIF,eAAe,CAACQ,WAAhB,CAA4BF,IAAI,CAAC3I,IAAjC,CADrB,CAEA2G,SAAS,CAACrU,IAAV,CAAeqW,IAAf,EACAA,IAAI,CAAGH,IAAI,CAACI,OAAL,EAAP,CACD,CACD,GAAIE,SAAJ,CACA,GAAIP,eAAJ,CAAqB,CACnBO,QAAQ,CAAGpC,aAAa,CAACC,SAAD,CAAY0B,eAAe,CAACU,UAAhB,EAAZ,CAAxB,CACD,CAFD,IAEO,CACLD,QAAQ,CAAGhB,cAAX,CACD,CACD,GAAMkB,UAAS,CAAGX,eAAe,CAAC1b,QAAhB,EAAlB,CACA,GAAMsc,YAAW,aAAQ,KAAKjB,SAAb,CAAjB,CACAiB,WAAW,CAACD,SAAD,CAAX,CAAyBX,eAAzB,CACA,GAAMa,WAAU,aAAQ,KAAKnB,QAAb,CAAhB,CACAmB,UAAU,CAACF,SAAD,CAAV,CAAwBF,QAAxB,CACA,MAAO,IAAIb,SAAJ,CAAaiB,UAAb,CAAyBD,WAAzB,CAAP,CACD,CA9BD;;OAmCAhB,yCACEhB,SADF,CAEEqB,gBAFF,CAE2C,CAF3C,eAIE,GAAMY,WAAU,CAAGC,GAAG,CACpB,KAAKpB,QADe,CAEpB,SAACqB,eAAD,CAA8CJ,SAA9C,CAA+D,CAC7D,GAAM3G,MAAK,CAAG+F,OAAO,CAACiB,KAAI,CAACrB,SAAN,CAAiBgB,SAAjB,CAArB,CACA9Z,MAAM,CAACmT,KAAD,CAAQ,oCAAsC2G,SAA9C,CAAN,CACA,GAAII,eAAe,GAAKtB,cAAxB,CAAwC;AAEtC,GAAIzF,KAAK,CAACwG,WAAN,CAAkB5B,SAAS,CAACjH,IAA5B,CAAJ,CAAuC;AAErC,GAAM2G,UAAS,CAAG,EAAlB,CACA,GAAM6B,KAAI,CAAGF,gBAAgB,CAACG,WAAjB,CAA6BxI,SAAS,CAACyI,IAAvC,CAAb,CACA,GAAIC,KAAI,CAAGH,IAAI,CAACI,OAAL,EAAX,CACA,MAAOD,IAAP,CAAa,CACX,GAAIA,IAAI,CAAClc,IAAL,GAAcwa,SAAS,CAACxa,IAA5B,CAAkC,CAChCka,SAAS,CAACrU,IAAV,CAAeqW,IAAf,EACD,CACDA,IAAI,CAAGH,IAAI,CAACI,OAAL,EAAP,CACD,CACDjC,SAAS,CAACrU,IAAV,CAAe2U,SAAf,EACA,MAAOP,cAAa,CAACC,SAAD,CAAYtE,KAAK,CAAC0G,UAAN,EAAZ,CAApB,CACD,CAbD,IAaO;AAEL,MAAOjB,eAAP,CACD,CACF,CAnBD,IAmBO,CACL,GAAMwB,aAAY,CAAGhB,gBAAgB,CAAC5Y,GAAjB,CAAqBuX,SAAS,CAACxa,IAA/B,CAArB,CACA,GAAI8c,YAAW,CAAGH,eAAlB,CACA,GAAIE,YAAJ,CAAkB,CAChBC,WAAW,CAAGA,WAAW,CAAC9Z,MAAZ,CACZ,GAAIwQ,UAAJ,CAAcgH,SAAS,CAACxa,IAAxB,CAA8B6c,YAA9B,CADY,CAAd,CAGD,CACD,MAAOC,YAAW,CAAC1E,MAAZ,CAAmBoC,SAAnB,CAA8BA,SAAS,CAACjH,IAAxC,CAAP,CACD,CACF,CAlCmB,CAAtB,CAoCA,MAAO,IAAIiI,SAAJ,CAAaiB,UAAb,CAAyB,KAAKlB,SAA9B,CAAP,CACD,CAzCD;;OA8CAC,8CACEhB,SADF,CAEEqB,gBAFF,CAE2C,CAEzC,GAAMY,WAAU,CAAGC,GAAG,CACpB,KAAKpB,QADe,CAEpB,SAACqB,eAAD,CAA4C,CAC1C,GAAIA,eAAe,GAAKtB,cAAxB,CAAwC;AAEtC,MAAOsB,gBAAP,CACD,CAHD,IAGO,CACL,GAAME,aAAY,CAAGhB,gBAAgB,CAAC5Y,GAAjB,CAAqBuX,SAAS,CAACxa,IAA/B,CAArB,CACA,GAAI6c,YAAJ,CAAkB,CAChB,MAAOF,gBAAe,CAAC3Z,MAAhB,CACL,GAAIwQ,UAAJ,CAAcgH,SAAS,CAACxa,IAAxB,CAA8B6c,YAA9B,CADK,CAAP,CAGD,CAJD,IAIO;AAEL,MAAOF,gBAAP,CACD,CACF,CACF,CAjBmB,CAAtB,CAmBA,MAAO,IAAInB,SAAJ,CAAaiB,UAAb,CAAyB,KAAKlB,SAA9B,CAAP,CACD,CAxBD,CAyBF,gBAAC,CAtJD,GC9BA;;;;;;;;;;;;;;;WAoBgBwB,sBAAqBpS,KAAiBC,MAAgB,CACpE,MAAO3F,YAAW,CAAC0F,IAAI,CAAC3K,IAAN,CAAY4K,KAAK,CAAC5K,IAAlB,CAAlB,CACD,SAEegd,iBAAgBrS,KAAcC,MAAa,CACzD,MAAO3F,YAAW,CAAC0F,IAAD,CAAOC,KAAP,CAAlB,CACF,CC1BA;;;;;;;;;;;;;;;IA0CA;AAEA,GAAIuK,WAAJ,CAEA;;;;;;;GAQA;;;;;;OAqBE,sBACmB8H,SADnB,CAEmBhI,aAFnB,CAGUiI,SAHV,CAG6B,CAFV,yBACA,iCACT,yBAvBF,eAA2B,IAA3B;;;;WA8BN,GAAI,KAAKjI,aAAT,CAAwB,CACtBP,oBAAoB,CAAC,KAAKO,aAAN,CAApB,CACD,CAED,GAAI,KAAKgI,SAAL,CAAepI,OAAf,EAAJ,CAA8B,CAC5BpS,MAAM,CACJ,CAAC,KAAKwS,aAAN,EAAuB,KAAKA,aAAL,CAAmBJ,OAAnB,EADnB,CAEJ,sCAFI,CAAN,CAID,CACF,CAtCDnL,sBAAWyT,YAAX,CAAW,YAAX,CAAqB,KAArB,WACE,MACEhI,WAAU,GACTA,UAAU,CAAG,GAAIgI,aAAJ,CACZ,GAAIvF,UAAJ,CAA4BoF,eAA5B,CADY,CAEZ,IAFY,CAGZxB,QAAQ,CAAC4B,OAHG,CADJ,CADZ,CAQD,CAToB,oCAArB,oBAyCAD,6CACE,MAAO,MAAP,CACD,CAFD,mBAKAA,8CACE,MAAO,MAAKlI,aAAL,EAAsBE,UAA7B,CACD,CAFD,mBAKAgI,+CAAe/H,eAAf,CAAoC,CAClC,GAAI,KAAK6H,SAAL,CAAepI,OAAf,EAAJ,CAA8B;AAE5B,MAAO,KAAP,CACD,CAHD,IAGO,CACL,MAAO,IAAIsI,aAAJ,CAAiB,KAAKF,SAAtB,CAAiC7H,eAAjC,CAAkD,KAAK8H,SAAvD,CAAP,CACD,CACF,CAPD,mBAUAC,kDAAkB9H,SAAlB,CAAmC;AAEjC,GAAIA,SAAS,GAAK,WAAlB,CAA+B,CAC7B,MAAO,MAAKP,WAAL,EAAP,CACD,CAFD,IAEO,CACL,GAAMpJ,MAAK,CAAG,KAAKuR,SAAL,CAAeha,GAAf,CAAmBoS,SAAnB,CAAd,CACA,MAAO3J,MAAK,GAAK,IAAV,CAAiByJ,UAAjB,CAA8BzJ,KAArC,CACD,CACF,CARD,mBAWAyR,yCAAS5U,IAAT,CAAmB,CACjB,GAAMmN,MAAK,CAAGnN,IAAI,CAACgC,QAAL,EAAd,CACA,GAAImL,KAAK,GAAK,IAAd,CAAoB,CAClB,MAAO,KAAP,CACD,CAED,MAAO,MAAK2H,iBAAL,CAAuB3H,KAAvB,EAA8B4H,QAA9B,CAAuC/U,IAAI,CAACmC,QAAL,EAAvC,CAAP,CACD,CAPD,mBAUAyS,yCAAS9H,SAAT,CAA0B,CACxB,MAAO,MAAK4H,SAAL,CAAeha,GAAf,CAAmBoS,SAAnB,IAAkC,IAAzC,CACD,CAFD,mBAKA8H,qDAAqB9H,SAArB,CAAwCE,YAAxC,CAA0D,CACxD9S,MAAM,CAAC8S,YAAD,CAAe,4CAAf,CAAN,CACA,GAAIF,SAAS,GAAK,WAAlB,CAA+B,CAC7B,MAAO,MAAKG,cAAL,CAAoBD,YAApB,CAAP,CACD,CAFD,IAEO,CACL,GAAMiF,UAAS,CAAG,GAAIhH,UAAJ,CAAc6B,SAAd,CAAyBE,YAAzB,CAAlB,CACA,GAAIuH,YAAW,OAAf,CAAiBS,WAAW,OAA5B,CACA,GAAIhI,YAAY,CAACV,OAAb,EAAJ,CAA4B,CAC1BiI,WAAW,CAAG,KAAKG,SAAL,CAAeja,MAAf,CAAsBqS,SAAtB,CAAd,CACAkI,WAAW,CAAG,KAAKL,SAAL,CAAeM,iBAAf,CACZhD,SADY,CAEZ,KAAKyC,SAFO,CAAd,CAID,CAND,IAMO,CACLH,WAAW,CAAG,KAAKG,SAAL,CAAe7E,MAAf,CAAsB/C,SAAtB,CAAiCE,YAAjC,CAAd,CACAgI,WAAW,CAAG,KAAKL,SAAL,CAAeO,YAAf,CAA4BjD,SAA5B,CAAuC,KAAKyC,SAA5C,CAAd,CACD,CAED,GAAMS,YAAW,CAAGZ,WAAW,CAACjI,OAAZ,GAChBM,UADgB,CAEhB,KAAKF,aAFT,CAGA,MAAO,IAAIkI,aAAJ,CAAiBL,WAAjB,CAA8BY,WAA9B,CAA2CH,WAA3C,CAAP,CACD,CACF,CAvBD,mBA0BAJ,4CAAY5U,IAAZ,CAAwBgN,YAAxB,CAA0C,CACxC,GAAMG,MAAK,CAAGnN,IAAI,CAACgC,QAAL,EAAd,CACA,GAAImL,KAAK,GAAK,IAAd,CAAoB,CAClB,MAAOH,aAAP,CACD,CAFD,IAEO,CACL9S,MAAM,CACJ8F,IAAI,CAACgC,QAAL,KAAoB,WAApB,EAAmChC,IAAI,CAAC0C,SAAL,KAAqB,CADpD,CAEJ,4CAFI,CAAN,CAIA,GAAM0S,kBAAiB,CAAG,KAAKN,iBAAL,CAAuB3H,KAAvB,EAA8BC,WAA9B,CACxBpN,IAAI,CAACmC,QAAL,EADwB,CAExB6K,YAFwB,CAA1B,CAIA,MAAO,MAAKE,oBAAL,CAA0BC,KAA1B,CAAiCiI,iBAAjC,CAAP,CACD,CACF,CAfD,mBAkBAR,0CACE,MAAO,MAAKF,SAAL,CAAepI,OAAf,EAAP,CACD,CAFD,mBAKAsI,8CACE,MAAO,MAAKF,SAAL,CAAepF,KAAf,EAAP,CACD,CAFD,mBAWAsF,oCAAIrH,YAAJ,CAA0B,CACxB,GAAI,KAAKjB,OAAL,EAAJ,CAAoB,CAClB,MAAO,KAAP,CACD,CAED,GAAMpP,IAAG,CAA6B,EAAtC,CACA,GAAImY,QAAO,CAAG,CAAd,CACE3F,MAAM,CAAG,CADX,CAEE4F,cAAc,CAAG,IAFnB,CAGA,KAAKC,YAAL,CAAkB7G,cAAlB,CAAkC,SAAC1X,GAAD,CAAc+V,SAAd,CAA6B,CAC7D7P,GAAG,CAAClG,GAAD,CAAH,CAAW+V,SAAS,CAACnB,GAAV,CAAc2B,YAAd,CAAX,CAEA8H,OAAO,GACP,GAAIC,cAAc,EAAIV,YAAY,CAAC1U,eAAb,CAA6BX,IAA7B,CAAkCvI,GAAlC,CAAtB,CAA8D,CAC5D0Y,MAAM,CAAGtT,IAAI,CAAC2G,GAAL,CAAS2M,MAAT,CAAiBlU,MAAM,CAACxE,GAAD,CAAvB,CAAT,CACD,CAFD,IAEO,CACLse,cAAc,CAAG,KAAjB,CACD,CACF,CATD,EAWA,GAAI,CAAC/H,YAAD,EAAiB+H,cAAjB,EAAmC5F,MAAM,CAAG,EAAI2F,OAApD,CAA6D;AAE3D,GAAMG,MAAK,CAAc,EAAzB;AAEA,IAAK,GAAMxe,IAAX,GAAkBkG,IAAlB,CAAuB,CACrBsY,KAAK,CAAExe,GAAF,CAAL,CAAoCkG,GAAG,CAAClG,GAAD,CAAvC,CACD,CAED,MAAOwe,MAAP,CACD,CATD,IASO,CACL,GAAIjI,YAAY,EAAI,CAAC,KAAKhB,WAAL,GAAmBD,OAAnB,EAArB,CAAmD,CACjDpP,GAAG,CAAC,WAAD,CAAH,CAAmB,KAAKqP,WAAL,GAAmBX,GAAnB,EAAnB,CACD,CACD,MAAO1O,IAAP,CACD,CACF,CAnCD,mBAsCA0X,uCACE,GAAI,KAAKnH,SAAL,GAAmB,IAAvB,CAA6B,CAC3B,GAAIgI,SAAM,CAAG,EAAb,CACA,GAAI,CAAC,KAAKlJ,WAAL,GAAmBD,OAAnB,EAAL,CAAmC,CACjCmJ,QAAM,EACJ,YACAvJ,gBAAgB,CAAC,KAAKK,WAAL,GAAmBX,GAAnB,EAAD,CADhB,CAEA,GAHF,CAID,CAED,KAAK2J,YAAL,CAAkB7G,cAAlB,CAAkC,SAAC1X,GAAD,CAAM+V,SAAN,CAAe,CAC/C,GAAM2I,UAAS,CAAG3I,SAAS,CAAC4I,IAAV,EAAlB,CACA,GAAID,SAAS,GAAK,EAAlB,CAAsB,CACpBD,QAAM,EAAI,IAAMze,GAAN,CAAY,GAAZ,CAAkB0e,SAA5B,CACD,CACF,CALD,EAOA,KAAKjI,SAAL,CAAiBgI,QAAM,GAAK,EAAX,CAAgB,EAAhB,CAAqB/c,IAAI,CAAC+c,QAAD,CAA1C,CACD,CACD,MAAO,MAAKhI,SAAZ,CACD,CApBD,mBAuBAmH,wDACE9H,SADF,CAEEC,SAFF,CAGEM,KAHF,CAGc,CAEZ,GAAMuI,IAAG,CAAG,KAAKC,aAAL,CAAmBxI,KAAnB,CAAZ,CACA,GAAIuI,GAAJ,CAAS,CACP,GAAME,YAAW,CAAGF,GAAG,CAACG,iBAAJ,CAClB,GAAI9K,UAAJ,CAAc6B,SAAd,CAAyBC,SAAzB,CADkB,CAApB,CAGA,MAAO+I,YAAW,CAAGA,WAAW,CAACre,IAAf,CAAsB,IAAxC,CACD,CALD,IAKO,CACL,MAAO,MAAKid,SAAL,CAAeqB,iBAAf,CAAiCjJ,SAAjC,CAAP,CACD,CACF,CAdD;;;OAoBA8H,kDAAkBvB,eAAlB,CAAwC,CACtC,GAAMuC,IAAG,CAAG,KAAKC,aAAL,CAAmBxC,eAAnB,CAAZ,CACA,GAAIuC,GAAJ,CAAS,CACP,GAAM5E,OAAM,CAAG4E,GAAG,CAAC5E,MAAJ,EAAf,CACA,MAAOA,OAAM,EAAIA,MAAM,CAACvZ,IAAxB,CACD,CAHD,IAGO,CACL,MAAO,MAAKid,SAAL,CAAe1D,MAAf,EAAP,CACD,CACF,CARD;;;OAcA4D,8CAAcvB,eAAd,CAAoC,CAClC,GAAMrC,OAAM,CAAG,KAAKgF,iBAAL,CAAuB3C,eAAvB,CAAf,CACA,GAAIrC,MAAJ,CAAY,CACV,MAAO,IAAI/F,UAAJ,CAAc+F,MAAd,CAAsB,KAAK0D,SAAL,CAAeha,GAAf,CAAmBsW,MAAnB,CAAtB,CAAP,CACD,CAFD,IAEO,CACL,MAAO,KAAP,CACD,CACF,CAPD;;;;OAcA4D,iDAAiBvB,eAAjB,CAAuC,CACrC,GAAMuC,IAAG,CAAG,KAAKC,aAAL,CAAmBxC,eAAnB,CAAZ,CACA,GAAIuC,GAAJ,CAAS,CACP,GAAMlG,OAAM,CAAGkG,GAAG,CAAClG,MAAJ,EAAf,CACA,MAAOA,OAAM,EAAIA,MAAM,CAACjY,IAAxB,CACD,CAHD,IAGO,CACL,MAAO,MAAKid,SAAL,CAAehF,MAAf,EAAP,CACD,CACF,CARD;;;OAcAkF,6CAAavB,eAAb,CAAmC,CACjC,GAAM3D,OAAM,CAAG,KAAKuG,gBAAL,CAAsB5C,eAAtB,CAAf,CACA,GAAI3D,MAAJ,CAAY,CACV,MAAO,IAAIzE,UAAJ,CAAcyE,MAAd,CAAsB,KAAKgF,SAAL,CAAeha,GAAf,CAAmBgV,MAAnB,CAAtB,CAAP,CACD,CAFD,IAEO,CACL,MAAO,KAAP,CACD,CACF,CAPD;;OAYAkF,6CACEvH,KADF,CAEEC,MAFF,CAEqD,CAEnD,GAAMsI,IAAG,CAAG,KAAKC,aAAL,CAAmBxI,KAAnB,CAAZ,CACA,GAAIuI,GAAJ,CAAS,CACP,MAAOA,IAAG,CAACrG,gBAAJ,CAAqB,qBAAW,CACrC,MAAOjC,OAAM,CAAC4I,WAAW,CAACze,IAAb,CAAmBye,WAAW,CAAClL,IAA/B,CAAb,CACD,CAFM,CAAP,CAGD,CAJD,IAIO,CACL,MAAO,MAAK0J,SAAL,CAAenF,gBAAf,CAAgCjC,MAAhC,CAAP,CACD,CACF,CAZD;;;OAkBAsH,4CACEvB,eADF,CACwB,CAEtB,MAAO,MAAK8C,eAAL,CAAqB9C,eAAe,CAAC+C,OAAhB,EAArB,CAAgD/C,eAAhD,CAAP,CACD,CAJD;;;;;OAYAuB,gDACEyB,SADF,CAEEhD,eAFF,CAEwB,CAEtB,GAAMuC,IAAG,CAAG,KAAKC,aAAL,CAAmBxC,eAAnB,CAAZ,CACA,GAAIuC,GAAJ,CAAS,CACP,MAAOA,IAAG,CAACO,eAAJ,CAAoBE,SAApB,CAA+B,aAAG,CAAI,WAAG,CAAzC,CAAP,CACD,CAFD,IAEO,CACL,GAAMC,SAAQ,CAAG,KAAK5B,SAAL,CAAeyB,eAAf,CACfE,SAAS,CAAC5e,IADK,CAEfwT,SAAS,CAACyI,IAFK,CAAjB,CAIA,GAAIC,KAAI,CAAG2C,QAAQ,CAACC,IAAT,EAAX,CACA,MAAO5C,IAAI,EAAI,IAAR,EAAgBN,eAAe,CAAClI,OAAhB,CAAwBwI,IAAxB,CAA8B0C,SAA9B,EAA2C,CAAlE,CAAqE,CACnEC,QAAQ,CAAC1C,OAAT,GACAD,IAAI,CAAG2C,QAAQ,CAACC,IAAT,EAAP,CACD,CACD,MAAOD,SAAP,CACD,CACF,CAnBD;;;OAyBA1B,mDACEvB,eADF,CACwB,CAEtB,MAAO,MAAKmD,sBAAL,CACLnD,eAAe,CAACoD,OAAhB,EADK,CAELpD,eAFK,CAAP,CAID,CAPD;;;;OAcAuB,uDACE8B,OADF,CAEErD,eAFF,CAEwB,CAEtB,GAAMuC,IAAG,CAAG,KAAKC,aAAL,CAAmBxC,eAAnB,CAAZ,CACA,GAAIuC,GAAJ,CAAS,CACP,MAAOA,IAAG,CAACY,sBAAJ,CAA2BE,OAA3B,CAAoC,aAAG,CAC5C,MAAO1f,IAAP,CACD,CAFM,CAAP,CAGD,CAJD,IAIO,CACL,GAAMsf,SAAQ,CAAG,KAAK5B,SAAL,CAAe8B,sBAAf,CACfE,OAAO,CAACjf,IADO,CAEfwT,SAAS,CAACyI,IAFK,CAAjB,CAIA,GAAIC,KAAI,CAAG2C,QAAQ,CAACC,IAAT,EAAX,CACA,MAAO5C,IAAI,EAAI,IAAR,EAAgBN,eAAe,CAAClI,OAAhB,CAAwBwI,IAAxB,CAA8B+C,OAA9B,EAAyC,CAAhE,CAAmE,CACjEJ,QAAQ,CAAC1C,OAAT,GACAD,IAAI,CAAG2C,QAAQ,CAACC,IAAT,EAAP,CACD,CACD,MAAOD,SAAP,CACD,CACF,CArBD;;OA0BA1B,0CAAUnS,KAAV,CAA6B,CAC3B,GAAI,KAAK6J,OAAL,EAAJ,CAAoB,CAClB,GAAI7J,KAAK,CAAC6J,OAAN,EAAJ,CAAqB,CACnB,MAAO,EAAP,CACD,CAFD,IAEO,CACL,MAAO,CAAC,CAAR,CACD,CACF,CAND,IAMO,IAAI7J,KAAK,CAAC4J,UAAN,IAAsB5J,KAAK,CAAC6J,OAAN,EAA1B,CAA2C,CAChD,MAAO,EAAP,CACD,CAFM,IAEA,IAAI7J,KAAK,GAAKuJ,UAAd,CAAwB,CAC7B,MAAO,CAAC,CAAR,CACD,CAFM,IAEA;AAEL,MAAO,EAAP,CACD,CACF,CAfD;;OAoBA4I,0CAAUvB,eAAV,CAAgC,CAC9B,GACEA,eAAe,GAAKtH,SAApB,EACA,KAAK4I,SAAL,CAAegC,QAAf,CAAwBtD,eAAxB,CAFF,CAGE,CACA,MAAO,KAAP,CACD,CALD,IAKO,CACL,GAAM2B,YAAW,CAAG,KAAKL,SAAL,CAAeiC,QAAf,CAClBvD,eADkB,CAElB,KAAKqB,SAFa,CAApB,CAIA,MAAO,IAAIE,aAAJ,CAAiB,KAAKF,SAAtB,CAAiC,KAAKhI,aAAtC,CAAqDsI,WAArD,CAAP,CACD,CACF,CAbD;;OAkBAJ,0CAAUvH,KAAV,CAAsB,CACpB,MAAOA,MAAK,GAAKtB,SAAV,EAAuB,KAAK4I,SAAL,CAAegC,QAAf,CAAwBtJ,KAAxB,CAA9B,CACD,CAFD;;OAOAuH,uCAAOnS,KAAP,CAAkB,CAChB,GAAIA,KAAK,GAAK,IAAd,CAAoB,CAClB,MAAO,KAAP,CACD,CAFD,IAEO,IAAIA,KAAK,CAAC4J,UAAN,EAAJ,CAAwB,CAC7B,MAAO,MAAP,CACD,CAFM,IAEA,CACL,GAAMwK,kBAAiB,CAAGpU,KAA1B,CACA,GAAI,CAAC,KAAK8J,WAAL,GAAmB2B,MAAnB,CAA0B2I,iBAAiB,CAACtK,WAAlB,EAA1B,CAAL,CAAiE,CAC/D,MAAO,MAAP,CACD,CAFD,IAEO,IACL,KAAKmI,SAAL,CAAepF,KAAf,KAA2BuH,iBAAiB,CAACnC,SAAlB,CAA4BpF,KAA5B,EADtB,CAEL,CACA,GAAMwH,SAAQ,CAAG,KAAKrD,WAAL,CAAiB/E,cAAjB,CAAjB,CACA,GAAMqI,UAAS,CAAGF,iBAAiB,CAACpD,WAAlB,CAA8B/E,cAA9B,CAAlB,CACA,GAAIsI,YAAW,CAAGF,QAAQ,CAAClD,OAAT,EAAlB,CACA,GAAIqD,aAAY,CAAGF,SAAS,CAACnD,OAAV,EAAnB,CACA,MAAOoD,WAAW,EAAIC,YAAtB,CAAoC,CAClC,GACED,WAAW,CAACvf,IAAZ,GAAqBwf,YAAY,CAACxf,IAAlC,EACA,CAACuf,WAAW,CAAChM,IAAZ,CAAiBkD,MAAjB,CAAwB+I,YAAY,CAACjM,IAArC,CAFH,CAGE,CACA,MAAO,MAAP,CACD,CACDgM,WAAW,CAAGF,QAAQ,CAAClD,OAAT,EAAd,CACAqD,YAAY,CAAGF,SAAS,CAACnD,OAAV,EAAf,CACD,CACD,MAAOoD,YAAW,GAAK,IAAhB,EAAwBC,YAAY,GAAK,IAAhD,CACD,CAlBM,IAkBA,CACL,MAAO,MAAP,CACD,CACF,CACF,CA/BD;;;;;;;OAyCQrC,qCAAR,SACEvB,eADF,CACwB,CAEtB,GAAIA,eAAe,GAAKtH,SAAxB,CAAmC,CACjC,MAAO,KAAP,CACD,CAFD,IAEO,CACL,MAAO,MAAK4I,SAAL,CAAeja,GAAf,CAAmB2Y,eAAe,CAAC1b,QAAhB,EAAnB,CAAP,CACD,CACF,CARO;;;OA/TOid,6BAAkB,gBAAlB,CAwUjB,oBA3dA,IA6dA;;;;GAKA,0CAA6BlJ,0BAC3B,yBACEwL,kBACE,GAAI7H,UAAJ,CAA4BoF,eAA5B,CADF,CAEEG,YAAY,CAAChI,UAFf,CAGEqG,QAAQ,CAAC4B,OAHX,GAIC,KACF,CAEDsC,qCAAU1U,KAAV,CAAqB,CACnB,GAAIA,KAAK,GAAK,IAAd,CAAoB,CAClB,MAAO,EAAP,CACD,CAFD,IAEO,CACL,MAAO,EAAP,CACD,CACF,CAND,CAQA0U,kCAAO1U,KAAP,CAAkB;AAEhB,MAAOA,MAAK,GAAK,IAAjB,CACD,CAHD,CAKA0U,yCACE,MAAO,KAAP,CACD,CAFD,CAIAA,6CAAkBrK,SAAlB,CAAmC,CACjC,MAAO8H,aAAY,CAAChI,UAApB,CACD,CAFD,CAIAuK,qCACE,MAAO,MAAP,CACD,CAFD,CAGF,eAjCA,EAA6BvC,YAA7B,EAmCA;;;;GAKO,GAAM5I,WAAQ,CAAG,GAAImL,QAAJ,EAAjB,CAYPhW,MAAM,CAACiW,gBAAP,CAAwBnM,SAAxB,CAAmC,CACjCO,GAAG,CAAE,CACHvU,KAAK,CAAE,GAAIgU,UAAJ,CAAczO,QAAd,CAAwBoY,YAAY,CAAChI,UAArC,CADJ,CAD4B,CAIjCyK,GAAG,CAAE,CACHpgB,KAAK,CAAE,GAAIgU,UAAJ,CAAcxO,QAAd,CAAwBuP,UAAxB,CADJ,CAJ4B,CAAnC,EASA;;GAGAL,QAAQ,CAACF,YAAT,CAAwBmJ,YAAY,CAAChI,UAArC,CACAD,QAAQ,CAACH,yBAAT,CAAqCoI,YAArC,CACA3I,UAAU,CAACD,UAAD,CAAV,CACAsL,YAAkB,CAACtL,UAAD,CAAlBsL,CC3lBA;;;;;;;;;;;;;;;GA8BA,GAAMC,UAAS,CAAG,IAAlB,CAEA;;;;;;WAOgBpJ,gBACdqJ,KACAjQ,SAAwB,CAAxB,oCAAwB,CAExB,GAAIiQ,IAAI,GAAK,IAAb,CAAmB,CACjB,MAAO5C,aAAY,CAAChI,UAApB,CACD,CAED,GAAI,MAAO4K,KAAP,GAAgB,QAAhB,EAA4B,aAAeA,KAA/C,CAAqD,CACnDjQ,QAAQ,CAAGiQ,IAAI,CAAC,WAAD,CAAf,CACD,CAEDtd,MAAM,CACJqN,QAAQ,GAAK,IAAb,EACE,MAAOA,SAAP,GAAoB,QADtB,EAEE,MAAOA,SAAP,GAAoB,QAFtB,EAGG,MAAOA,SAAP,GAAoB,QAApB,EAAgC,OAAUA,SAJzC,CAKJ,gCAAkC,MAAOA,SALrC,CAAN,CAQA,GAAI,MAAOiQ,KAAP,GAAgB,QAAhB,EAA4B,UAAYA,KAAxC,EAAgDA,IAAI,CAAC,QAAD,CAAJ,GAAmB,IAAvE,CAA6E,CAC3EA,IAAI,CAAGA,IAAI,CAAC,QAAD,CAAX,CACD;AAGD,GAAI,MAAOA,KAAP,GAAgB,QAAhB,EAA4B,OAASA,KAAzC,CAA+C,CAC7C,GAAMC,SAAQ,CAAGD,IAAjB,CACA,MAAO,IAAI7K,SAAJ,CAAa8K,QAAb,CAAuBtJ,cAAY,CAAC5G,QAAD,CAAnC,CAAP,CACD,CAED,GAAI,EAAEiQ,IAAI,WAAY9d,MAAlB,GAA4B6d,SAAhC,CAA2C,CACzC,GAAMG,WAAQ,CAAgB,EAA9B,CACA,GAAIC,uBAAoB,CAAG,KAA3B,CACA,GAAMC,aAAY,CAAGJ,IAArB,CACA1Z,IAAI,CAAC8Z,YAAD,CAAe,SAAC5gB,GAAD,CAAMmM,KAAN,CAAW,CAC5B,GAAInM,GAAG,CAAC6G,SAAJ,CAAc,CAAd,CAAiB,CAAjB,IAAwB,GAA5B,CAAiC;AAE/B,GAAMkP,UAAS,CAAGoB,cAAY,CAAChL,KAAD,CAA9B,CACA,GAAI,CAAC4J,SAAS,CAACT,OAAV,EAAL,CAA0B,CACxBqL,sBAAoB,CAClBA,sBAAoB,EAAI,CAAC5K,SAAS,CAACR,WAAV,GAAwBD,OAAxB,EAD3B,CAEAoL,UAAQ,CAACpa,IAAT,CAAc,GAAI2N,UAAJ,CAAcjU,GAAd,CAAmB+V,SAAnB,CAAd,EACD,CACF,CACF,CAVG,CAAJ,CAYA,GAAI2K,UAAQ,CAACle,MAAT,GAAoB,CAAxB,CAA2B,CACzB,MAAOob,aAAY,CAAChI,UAApB,CACD,CAED,GAAMiL,SAAQ,CAAGnG,aAAa,CAC5BgG,UAD4B,CAE5BlD,oBAF4B,CAG5B,mBAAS,CAAI,gBAAS,CAAC/c,IAAV,CAAc,CAHC,CAI5Bgd,eAJ4B,CAA9B,CAMA,GAAIkD,sBAAJ,CAA0B,CACxB,GAAMG,eAAc,CAAGpG,aAAa,CAClCgG,UADkC,CAElChJ,cAAc,CAACqF,UAAf,EAFkC,CAApC,CAIA,MAAO,IAAIa,aAAJ,CACLiD,QADK,CAEL1J,cAAY,CAAC5G,QAAD,CAFP,CAGL,GAAI0L,SAAJ,CACE,CAAE,YAAa6E,cAAf,CADF,CAEE,CAAE,YAAapJ,cAAf,CAFF,CAHK,CAAP,CAQD,CAbD,IAaO,CACL,MAAO,IAAIkG,aAAJ,CACLiD,QADK,CAEL1J,cAAY,CAAC5G,QAAD,CAFP,CAGL0L,QAAQ,CAAC4B,OAHJ,CAAP,CAKD,CACF,CA9CD,IA8CO,CACL,GAAIkD,OAAI,CAASnD,YAAY,CAAChI,UAA9B,CACA9O,IAAI,CAAC0Z,IAAD,CAAO,SAACxgB,GAAD,CAAcghB,SAAd,CAAgC,CACzC,GAAIlgB,QAAQ,CAAC0f,IAAD,CAAiBxgB,GAAjB,CAAZ,CAAmC,CACjC,GAAIA,GAAG,CAAC6G,SAAJ,CAAc,CAAd,CAAiB,CAAjB,IAAwB,GAA5B,CAAiC;AAE/B,GAAMkP,UAAS,CAAGoB,cAAY,CAAC6J,SAAD,CAA9B,CACA,GAAIjL,SAAS,CAACV,UAAV,IAA0B,CAACU,SAAS,CAACT,OAAV,EAA/B,CAAoD,CAClDyL,MAAI,CAAGA,MAAI,CAAC7K,oBAAL,CAA0BlW,GAA1B,CAA+B+V,SAA/B,CAAP,CACD,CACF,CACF,CACF,CAVG,CAAJ,CAYA,MAAOgL,OAAI,CAAC9K,cAAL,CAAoBkB,cAAY,CAAC5G,QAAD,CAAhC,CAAP,CACD,CACF,CAED6G,eAAe,CAACD,cAAD,CAAf,CCrIA;;;;;;;;;;;;;;;IAsBA;;;;GAKA,6CAAgCzC,6BAAhC,+EA2DC;;OAvDCuM,sCAAQtb,CAAR,CAAsBC,CAAtB,CAAkC,CAChC,GAAM4R,SAAQ,CAAG7R,CAAC,CAACqO,IAAF,CAAOyD,SAAP,CAAiB7R,CAAC,CAACoO,IAAnB,CAAjB,CACA,GAAIwD,QAAQ,GAAK,CAAjB,CAAoB,CAClB,MAAO9R,YAAW,CAACC,CAAC,CAAClF,IAAH,CAASmF,CAAC,CAACnF,IAAX,CAAlB,CACD,CAFD,IAEO,CACL,MAAO+W,SAAP,CACD,CACF,CAPD;;OAYAyJ,0CAAYjN,IAAZ,CAAsB,CACpB,MAAO,KAAP,CACD,CAFD;;OAOAiN,kDAAoB7M,OAApB,CAAmCC,OAAnC,CAAgD,CAC9C,MAAO,CAACD,OAAO,CAAC8C,MAAR,CAAe7C,OAAf,CAAR,CACD,CAFD;;OAOA4M;AAEE,MAAQhN,UAAiB,CAACO,GAA1B,CACD,CAHD;;OAQAyM;AAEE,MAAQhN,UAAiB,CAACoM,GAA1B,CACD,CAHD;;;;OAUAY,uCAASnM,UAAT,CAA6BrU,IAA7B,CAAyC,CACvC,GAAMygB,UAAS,CAAG/J,cAAY,CAACrC,UAAD,CAA9B,CACA,MAAO,IAAIb,UAAJ,CAAcxT,IAAd,CAAoBygB,SAApB,CAAP,CACD,CAHD;;OAQAD,yCACE,MAAO,QAAP,CACD,CAFD,CAGF,kBA3DA,EAAgC/M,KAAhC,EA6DO,GAAMiN,YAAW,CAAG,GAAIF,WAAJ,EAApB,CCxFP;;;;;;;;;;;;;;;IAyBA;;;;GAKA,4CAA+BvM,4BAC7B,mBAAoB0M,UAApB,CAAoC,CAApC,UACElB,mBAAO,IADT,CAAoB7C,4BAGlBna,MAAM,CACJ,CAACke,UAAU,CAAC9L,OAAX,EAAD,EAAyB8L,UAAU,CAACpW,QAAX,KAA0B,WAD/C,CAEJ,yDAFI,CAAN,cAID;;;;OAOSqW,iCAAV,SAAuBC,IAAvB,CAAiC,CAC/B,MAAOA,KAAI,CAACvD,QAAL,CAAc,KAAKqD,UAAnB,CAAP,CACD,CAFS;;OAOVC,yCAAYrN,IAAZ,CAAsB,CACpB,MAAO,CAACA,IAAI,CAAC+J,QAAL,CAAc,KAAKqD,UAAnB,EAA+B9L,OAA/B,EAAR,CACD,CAFD;;OAOA+L,qCAAQ1b,CAAR,CAAsBC,CAAtB,CAAkC,CAChC,GAAM2b,OAAM,CAAG,KAAKC,YAAL,CAAkB7b,CAAC,CAACqO,IAApB,CAAf,CACA,GAAMyN,OAAM,CAAG,KAAKD,YAAL,CAAkB5b,CAAC,CAACoO,IAApB,CAAf,CACA,GAAMwD,SAAQ,CAAG+J,MAAM,CAAC9J,SAAP,CAAiBgK,MAAjB,CAAjB,CACA,GAAIjK,QAAQ,GAAK,CAAjB,CAAoB,CAClB,MAAO9R,YAAW,CAACC,CAAC,CAAClF,IAAH,CAASmF,CAAC,CAACnF,IAAX,CAAlB,CACD,CAFD,IAEO,CACL,MAAO+W,SAAP,CACD,CACF,CATD;;OAcA6J,sCAASvM,UAAT,CAA6BrU,IAA7B,CAAyC,CACvC,GAAMygB,UAAS,CAAG/J,cAAY,CAACrC,UAAD,CAA9B,CACA,GAAMd,KAAI,CAAG4J,YAAY,CAAChI,UAAb,CAAwBQ,WAAxB,CACX,KAAKgL,UADM,CAEXF,SAFW,CAAb,CAIA,MAAO,IAAIjN,UAAJ,CAAcxT,IAAd,CAAoBuT,IAApB,CAAP,CACD,CAPD;;OAYAqN,uCACE,GAAMrN,KAAI,CAAG4J,YAAY,CAAChI,UAAb,CAAwBQ,WAAxB,CAAoC,KAAKgL,UAAzC,CAAqDpM,UAArD,CAAb,CACA,MAAO,IAAIf,UAAJ,CAAcxO,QAAd,CAAwBuO,IAAxB,CAAP,CACD,CAHD;;OAQAqN,wCACE,MAAO,MAAKD,UAAL,CAAgB3W,KAAhB,GAAwBzC,IAAxB,CAA6B,GAA7B,CAAP,CACD,CAFD,CAGF,iBAlEA,EAA+BkM,KAA/B,EC9BA;;;;;;;;;;;;;;;IA0BA;;;;;;;OAUE,sBACmBwN,KADnB,CAEmBC,IAFnB,CAGmBC,MAHnB,CAGgC,CAFb,iBACA,eACA,mBACf;;;;;OAQJC,sCACEtP,gBAAgB,CAAC,kBAAD,CAAqB,CAArB,CAAwB,CAAxB,CAA2BC,SAAS,CAAChQ,MAArC,CAAhB,CACA,MAAO,MAAKkf,KAAL,CAAW9M,GAAX,EAAP,CACD,CAHD;;;;OAUAiN,4CACEtP,gBAAgB,CAAC,wBAAD,CAA2B,CAA3B,CAA8B,CAA9B,CAAiCC,SAAS,CAAChQ,MAA3C,CAAhB,CACA,MAAO,MAAKkf,KAAL,CAAW9M,GAAX,CAAe,IAAf,CAAP,CACD,CAHD;;AAOAiN;AAEEtP,gBAAgB,CAAC,qBAAD,CAAwB,CAAxB,CAA2B,CAA3B,CAA8BC,SAAS,CAAChQ,MAAxC,CAAhB,CACA,MAAO,MAAKsf,SAAL,EAAP,CACD,CAJD;;;;OAWAD,yCACEtP,gBAAgB,CAAC,qBAAD,CAAwB,CAAxB,CAA2B,CAA3B,CAA8BC,SAAS,CAAChQ,MAAxC,CAAhB,CACA,MAAO,CAAC,KAAKkf,KAAL,CAAWpM,OAAX,EAAR,CACD,CAHD;;;;;OAWAuM,sCAAME,eAAN,CAA6B,CAC3BxP,gBAAgB,CAAC,oBAAD,CAAuB,CAAvB,CAA0B,CAA1B,CAA6BC,SAAS,CAAChQ,MAAvC,CAAhB;AAEAuf,eAAe,CAAGxX,MAAM,CAACwX,eAAD,CAAxB,CACAjQ,kBAAkB,CAAC,oBAAD,CAAuB,CAAvB,CAA0BiQ,eAA1B,CAA2C,KAA3C,CAAlB,CAEA,GAAMC,UAAS,CAAG,GAAI5X,KAAJ,CAAS2X,eAAT,CAAlB,CACA,GAAME,SAAQ,CAAG,KAAKN,IAAL,CAAUxV,KAAV,CAAgB6V,SAAhB,CAAjB,CACA,MAAO,IAAIH,aAAJ,CACL,KAAKH,KAAL,CAAW3D,QAAX,CAAoBiE,SAApB,CADK,CAELC,QAFK,CAGLvK,cAHK,CAAP,CAKD,CAbD;;;;;OAqBAmK,yCAASE,eAAT,CAAgC,CAC9BxP,gBAAgB,CAAC,uBAAD,CAA0B,CAA1B,CAA6B,CAA7B,CAAgCC,SAAS,CAAChQ,MAA1C,CAAhB,CACAsP,kBAAkB,CAAC,uBAAD,CAA0B,CAA1B,CAA6BiQ,eAA7B,CAA8C,KAA9C,CAAlB,CAEA,GAAMC,UAAS,CAAG,GAAI5X,KAAJ,CAAS2X,eAAT,CAAlB,CACA,MAAO,CAAC,KAAKL,KAAL,CAAW3D,QAAX,CAAoBiE,SAApB,EAA+B1M,OAA/B,EAAR,CACD,CAND;;;;OAaAuM,8CACEtP,gBAAgB,CAAC,0BAAD,CAA6B,CAA7B,CAAgC,CAAhC,CAAmCC,SAAS,CAAChQ,MAA7C,CAAhB;AAGA,MAAO,MAAKkf,KAAL,CAAWnM,WAAX,GAAyBX,GAAzB,EAAP,CACD,CALD;;;;;;;OAeAiN,wCAAQvL,MAAR,CAAmD,CAAnD,eACE/D,gBAAgB,CAAC,sBAAD,CAAyB,CAAzB,CAA4B,CAA5B,CAA+BC,SAAS,CAAChQ,MAAzC,CAAhB,CACAiQ,gBAAgB,CAAC,sBAAD,CAAyB,CAAzB,CAA4B6D,MAA5B,CAAoC,KAApC,CAAhB,CAEA,GAAI,KAAKoL,KAAL,CAAWrM,UAAX,EAAJ,CAA6B,CAC3B,MAAO,MAAP,CACD,CAED,GAAM6M,aAAY,CAAG,KAAKR,KAA1B;AAEA,MAAO,CAAC,CAACQ,YAAY,CAAC3D,YAAb,CAA0B,KAAKqD,MAA/B,CAAuC,SAAC5hB,GAAD,CAAMgU,IAAN,CAAU,CACxD,MAAOsC,OAAM,CACX,GAAIuL,aAAJ,CAAiB7N,IAAjB,CAAuBqJ,KAAI,CAACsE,IAAL,CAAUxV,KAAV,CAAgBnM,GAAhB,CAAvB,CAA6C0X,cAA7C,CADW,CAAb,CAGD,CAJQ,CAAT,CAKD,CAfD;;;OAqBAmK,8CACEtP,gBAAgB,CAAC,0BAAD,CAA6B,CAA7B,CAAgC,CAAhC,CAAmCC,SAAS,CAAChQ,MAA7C,CAAhB,CAEA,GAAI,KAAKkf,KAAL,CAAWrM,UAAX,EAAJ,CAA6B,CAC3B,MAAO,MAAP,CACD,CAFD,IAEO,CACL,MAAO,CAAC,KAAKqM,KAAL,CAAWpM,OAAX,EAAR,CACD,CACF,CARD,CAUAnL,sBAAI0X,sBAAJ,CAAI,KAAJ,CAAO,KAAP,WACE,MAAO,MAAKF,IAAL,CAAUQ,MAAV,EAAP,CACD,CAFM,oCAAP;;;OAQAN,8CACEtP,gBAAgB,CAAC,0BAAD,CAA6B,CAA7B,CAAgC,CAAhC,CAAmCC,SAAS,CAAChQ,MAA7C,CAAhB,CAEA,MAAO,MAAKkf,KAAL,CAAWU,WAAX,EAAP,CACD,CAJD;;OASAP,yCACEtP,gBAAgB,CAAC,kBAAD,CAAqB,CAArB,CAAwB,CAAxB,CAA2BC,SAAS,CAAChQ,MAArC,CAAhB,CAEA,MAAO,MAAKmf,IAAZ,CACD,CAJD,CAMAxX,sBAAI0X,sBAAJ,CAAI,KAAJ,CAAO,KAAP,WACE,MAAO,MAAKQ,MAAL,EAAP,CACD,CAFM,oCAAP,EAGF,oBAAC,ICjMD;;;;;;;;;;;;;;;IAuDA;;;GAIA;;;;;OAOE,mBACSzQ,SADT,CAES0Q,iBAFT,CAGSjP,QAHT,CAISkP,QAJT,CAIiC,CAHxB,yBACA,yCACA,uBACA,uBACL;;OAKJC,uCACE,GAAMC,IAAG,CAAG,KAAKpP,QAAL,CAAcgP,MAAd,EAAZ,CACA,GAAI,KAAKzQ,SAAL,GAAmB,OAAvB,CAAgC,CAC9B,MAAO6Q,IAAG,CAACzZ,IAAX,CACD,CAFD,IAEO,CACL,MAAOyZ,IAAG,CAACC,SAAJ,GAAgB1Z,IAAvB,CACD,CACF,CAPD;;OAYAwZ,4CACE,MAAO,MAAK5Q,SAAZ,CACD,CAFD;;OAOA4Q,8CACE,MAAO,MAAKF,iBAAL,CAAuBK,cAAvB,CAAsC,IAAtC,CAAP,CACD,CAFD;;OAOAH,wCACE,MACE,MAAKI,OAAL,GAAejiB,QAAf,GACA,GADA,CAEA,KAAKiR,SAFL,CAGA,GAHA,CAIAvR,SAAS,CAAC,KAAKgT,QAAL,CAAcyO,SAAd,EAAD,CALX,CAOD,CARD,CASF,iBAAC,CApDD,GAsDA;;;;OAME,qBACSQ,iBADT,CAESxe,KAFT,CAGSkF,IAHT,CAGmB,CAFV,yCACA,iBACA,eACL;;OAKJ6Z,yCACE,MAAO,MAAK7Z,IAAZ,CACD,CAFD;;OAOA6Z,8CACE,MAAO,QAAP,CACD,CAFD;;OAOAA,gDACE,MAAO,MAAKP,iBAAL,CAAuBK,cAAvB,CAAsC,IAAtC,CAAP,CACD,CAFD;;OAOAE,0CACE,MAAO,MAAK7Z,IAAL,CAAUrI,QAAV,GAAuB,SAA9B,CACD,CAFD,CAGF,mBAAC,CAvCD,GCjHA;;;;;;;;;;;;;;;IAgFA;;GAGA;;;;OAME,gCACUmiB,SADV,CAEUC,eAFV,CAGUC,QAHV,CAG6B,CAFnB,yBACA,qCACA,uBACN;;OAKJC,qDAAWrR,SAAX,CAA4B,CAC1B,MAAOA,UAAS,GAAK,OAArB,CACD,CAFD;;OAOAqR,sDAAYC,MAAZ,CAA4Bpa,KAA5B,CAAwC,CACtC,GAAMuN,MAAK,CAAGvN,KAAK,CAACqa,cAAN,GAAuBC,QAAvB,EAAd,CACA,MAAO,IAAIZ,UAAJ,CACL,OADK,CAEL,IAFK,CAGL,GAAIX,aAAJ,CAAiBqB,MAAM,CAACG,YAAxB,CAAsCva,KAAK,CAACuZ,MAAN,EAAtC,CAAsDhM,KAAtD,CAHK,CAAP,CAKD,CAPD;;OAYA4M,yDAAeK,SAAf,CAAiD,CAC/C,GAAMC,IAAG,CAAG,KAAKP,QAAjB,CACA,GAAIM,SAAS,CAACE,YAAV,KAA6B,QAAjC,CAA2C,CACzCtgB,MAAM,CACJ,KAAK6f,eADD,CAEJ,8DAFI,CAAN,CAIA,GAAMU,WAAQ,CAAG,KAAKV,eAAtB,CACA,MAAO;AAELU,UAAQ,CAACC,IAAT,CAAcH,GAAd,CAAoBD,SAAyB,CAACxf,KAA9C,EACD,CAHD,CAID,CAVD,IAUO,CACL,GAAM6f,KAAE,CAAG,KAAKb,SAAhB,CACA,MAAO,YACLa,IAAE,CAACD,IAAH,CAAQH,GAAR,CAAcD,SAAuB,CAACjQ,QAAtC,EACD,CAFD,CAGD,CACF,CAlBD;;OAuBA4P,4DAAkBnf,KAAlB,CAAgCkF,IAAhC,CAA0C,CACxC,GAAI,KAAK+Z,eAAT,CAA0B,CACxB,MAAO,IAAIF,YAAJ,CAAgB,IAAhB,CAAsB/e,KAAtB,CAA6BkF,IAA7B,CAAP,CACD,CAFD,IAEO,CACL,MAAO,KAAP,CACD,CACF,CAND;;OAWAia,kDAAQxX,KAAR,CAAgC,CAC9B,GAAI,EAAEA,KAAK,WAAYwX,uBAAnB,CAAJ,CAAgD,CAC9C,MAAO,MAAP,CACD,CAFD,IAEO,IAAI,CAACxX,KAAK,CAACqX,SAAP,EAAoB,CAAC,KAAKA,SAA9B,CAAyC;AAE9C,MAAO,KAAP,CACD,CAHM,IAGA,CACL,MACErX,MAAK,CAACqX,SAAN,GAAoB,KAAKA,SAAzB,EAAsCrX,KAAK,CAACuX,QAAN,GAAmB,KAAKA,QADhE,CAGD,CACF,CAXD;;OAgBAC,2DACE,MAAO,MAAKH,SAAL,GAAmB,IAA1B,CACD,CAFD,CAGF,8BAAC,CAvFD,GAyFA;;;;;;;;GASA;;;;OAME,gCACUc,UADV,CAIUb,eAJV,CAKUC,QALV,CAKuB,CAJb,2BAGA,qCACA,uBACN;;OAKJa,qDAAWjS,SAAX,CAA4B,CAC1B,GAAIkS,aAAY,CACdlS,SAAS,GAAK,gBAAd,CAAiC,aAAjC,CAAiDA,SADnD,CAEAkS,YAAY,CACVA,YAAY,GAAK,kBAAjB,CAAsC,eAAtC,CAAwDA,YAD1D,CAEA,MAAOhjB,SAAQ,CAAC,KAAK8iB,UAAN,CAAkBE,YAAlB,CAAf,CACD,CAND;;OAWAD,4DAAkB/f,KAAlB,CAAgCkF,IAAhC,CAA0C,CACxC,GAAI,KAAK+Z,eAAT,CAA0B,CACxB,MAAO,IAAIF,YAAJ,CAAgB,IAAhB,CAAsB/e,KAAtB,CAA6BkF,IAA7B,CAAP,CACD,CAFD,IAEO,CACL,MAAO,KAAP,CACD,CACF,CAND;;OAWA6a,sDAAYX,MAAZ,CAA4Bpa,KAA5B,CAAwC,CACtC5F,MAAM,CAACggB,MAAM,CAACpN,SAAP,EAAoB,IAArB,CAA2B,uCAA3B,CAAN,CACA,GAAM2M,IAAG,CAAG3Z,KAAK,CAACuZ,MAAN,GAAelW,KAAf,CAAoB,sBAAwB+W,MAAM,CAACpN,SAAnD,CAAZ,CACA,GAAMO,MAAK,CAAGvN,KAAK,CAACqa,cAAN,GAAuBC,QAAvB,EAAd,CACA,MAAO,IAAIZ,UAAJ,CACLU,MAAM,CAAClV,IADF,CAEL,IAFK,CAGL,GAAI6T,aAAJ,CAAiBqB,MAAM,CAACG,YAAxB,CAAsCZ,GAAtC,CAA2CpM,KAA3C,CAHK,CAIL6M,MAAM,CAACX,QAJF,CAAP,CAMD,CAVD;;OAeAsB,yDAAeP,SAAf,CAAiD,CAC/C,GAAMC,IAAG,CAAG,KAAKP,QAAjB,CACA,GAAIM,SAAS,CAACE,YAAV,KAA6B,QAAjC,CAA2C,CACzCtgB,MAAM,CACJ,KAAK6f,eADD,CAEJ,8DAFI,CAAN,CAIA,GAAMgB,WAAQ,CAAG,KAAKhB,eAAtB,CACA,MAAO;AAELgB,UAAQ,CAACL,IAAT,CAAcH,GAAd,CAAoBD,SAAyB,CAACxf,KAA9C,EACD,CAHD,CAID,CAVD,IAUO,CACL,GAAMkgB,KAAE,CAAG,KAAKJ,UAAL,CAAiBN,SAAuB,CAAC1R,SAAzC,CAAX,CACA,MAAO,YACLoS,IAAE,CAACN,IAAH,CACEH,GADF,CAEGD,SAAuB,CAACjQ,QAF3B,CAGGiQ,SAAuB,CAACf,QAH3B,EAKD,CAND,CAOD,CACF,CAtBD;;OA2BAsB,kDAAQpY,KAAR,CAAgC,CAAhC,eACE,GAAIA,KAAK,WAAYoY,uBAArB,CAA6C,CAC3C,GAAI,CAAC,KAAKD,UAAN,EAAoB,CAACnY,KAAK,CAACmY,UAA/B,CAA2C,CACzC,MAAO,KAAP,CACD,CAFD,IAEO,IAAI,KAAKZ,QAAL,GAAkBvX,KAAK,CAACuX,QAA5B,CAAsC,CAC3C,GAAMiB,UAAS,CAAG9Z,MAAM,CAAC/D,IAAP,CAAYqF,KAAK,CAACmY,UAAlB,CAAlB,CACA,GAAMM,SAAQ,CAAG/Z,MAAM,CAAC/D,IAAP,CAAY,KAAKwd,UAAjB,CAAjB,CACA,GAAMO,WAAU,CAAGF,SAAS,CAACzhB,MAA7B,CACA,GAAM4hB,UAAS,CAAGF,QAAQ,CAAC1hB,MAA3B,CACA,GAAI2hB,UAAU,GAAKC,SAAnB,CAA8B;;;AAK5B,GAAID,UAAU,GAAK,CAAnB,CAAsB,CACpB,GAAME,SAAQ,CAAGJ,SAAS,CAAC,CAAD,CAA1B,CACA,GAAMK,QAAO,CAAGJ,QAAQ,CAAC,CAAD,CAAxB,CACA,MACEI,QAAO,GAAKD,QAAZ,GACC,CAAC5Y,KAAK,CAACmY,UAAN,CAAiBS,QAAjB,CAAD,EACC,CAAC,KAAKT,UAAL,CAAgBU,OAAhB,CADF,EAEC7Y,KAAK,CAACmY,UAAN,CAAiBS,QAAjB,IAA+B,KAAKT,UAAL,CAAgBU,OAAhB,CAHjC,CADF,CAMD,CATD,IASO;AAEL,MAAOJ,SAAQ,CAACK,KAAT,CACL,mBAAS,CACP,YAAK,CAACX,UAAN,CAAiBhS,SAAjB,IAAgCyL,KAAI,CAACuG,UAAL,CAAgBhS,SAAhB,CAAhC,CAA0D,CAFvD,CAAP,CAID,CACF,CACF,CACF,CAED,MAAO,MAAP,CACD,CAnCD;;OAwCAiS,2DACE,MAAO,MAAKD,UAAL,GAAoB,IAA3B,CACD,CAFD,CAGF,8BAAC,CA5HD,GCrLA;;;;;;;;;;;;;;;GAkDA,GAAIY,uBAAJ,CAMA;;;;;qCAgBE,eACSC,IADT,CAESzb,IAFT,CAGU0b,YAHV,CAIUC,cAJV,CAIiC,CAHxB,eACA,eACC,+BACA,mCACN,CAdJxa,sBAAWya,KAAX,CAAW,wBAAX,CAAiC,KAIjC,WACE1hB,MAAM,CAACshB,sBAAD,CAAyB,kCAAzB,CAAN,CACA,MAAOA,uBAAP,CACD,CAPgC,KAAjC,SAAkC5P,GAAlC,CAAqC,CACnC4P,sBAAsB,CAAG5P,GAAzB,CACD,CAFgC,oCAAjC;;;;OAqBegQ,8BAAf,SAAuC3W,MAAvC,CAA0D,CACxD,GAAI4W,UAAS,CAAG,IAAhB,CACA,GAAIC,QAAO,CAAG,IAAd,CACA,GAAI7W,MAAM,CAAC8W,QAAP,EAAJ,CAAuB,CACrBF,SAAS,CAAG5W,MAAM,CAAC+W,kBAAP,EAAZ,CACD,CACD,GAAI/W,MAAM,CAACgX,MAAP,EAAJ,CAAqB,CACnBH,OAAO,CAAG7W,MAAM,CAACiX,gBAAP,EAAV,CACD,CAED,GAAIjX,MAAM,CAACmV,QAAP,KAAsBrO,SAA1B,CAAqC,CACnC,GAAMoQ,iBAAgB,CACpB,kEACA,mCAFF,CAGA,GAAMC,kBAAiB,CACrB,0EACA,gCAFF,CAGA,GAAInX,MAAM,CAAC8W,QAAP,EAAJ,CAAuB,CACrB,GAAMM,UAAS,CAAGpX,MAAM,CAACqX,iBAAP,EAAlB,CACA,GAAID,SAAS,GAAK7f,QAAlB,CAA4B,CAC1B,KAAM,IAAIxB,MAAJ,CAAUmhB,gBAAV,CAAN,CACD,CAFD,IAEO,IAAI,MAAON,UAAP,GAAqB,QAAzB,CAAmC,CACxC,KAAM,IAAI7gB,MAAJ,CAAUohB,iBAAV,CAAN,CACD,CACF,CACD,GAAInX,MAAM,CAACgX,MAAP,EAAJ,CAAqB,CACnB,GAAMM,QAAO,CAAGtX,MAAM,CAACuX,eAAP,EAAhB,CACA,GAAID,OAAO,GAAK9f,QAAhB,CAA0B,CACxB,KAAM,IAAIzB,MAAJ,CAAUmhB,gBAAV,CAAN,CACD,CAFD,IAEO,IAAI,MAAOL,QAAP,GAAmB,QAAvB,CAAiC,CACtC,KAAM,IAAI9gB,MAAJ,CAAUohB,iBAAV,CAAN,CACD,CACF,CACF,CAvBD,IAuBO,IAAInX,MAAM,CAACmV,QAAP,KAAsB1L,cAA1B,CAA0C,CAC/C,GACGmN,SAAS,EAAI,IAAb,EAAqB,CAACvU,eAAe,CAACuU,SAAD,CAAtC,EACCC,OAAO,EAAI,IAAX,EAAmB,CAACxU,eAAe,CAACwU,OAAD,CAFtC,CAGE,CACA,KAAM,IAAI9gB,MAAJ,CACJ,6EACE,qFAFE,CAAN,CAID,CACF,CAVM,IAUA,CACLd,MAAM,CACJ+K,MAAM,CAACmV,QAAP,YAA6B/B,UAA7B,EACEpT,MAAM,CAACmV,QAAP,KAAsBjC,WAFpB,CAGJ,qBAHI,CAAN,CAKA,GACG0D,SAAS,EAAI,IAAb,EAAqB,MAAOA,UAAP,GAAqB,QAA3C,EACCC,OAAO,EAAI,IAAX,EAAmB,MAAOA,QAAP,GAAmB,QAFzC,CAGE,CACA,KAAM,IAAI9gB,MAAJ,CACJ,8EACE,YAFE,CAAN,CAID,CACF,CACF,CA3Dc;;;;OAkEA4gB,qBAAf,SAA8B3W,MAA9B,CAAiD,CAC/C,GACEA,MAAM,CAAC8W,QAAP,IACA9W,MAAM,CAACgX,MAAP,EADA,EAEAhX,MAAM,CAACwX,QAAP,EAFA,EAGA,CAACxX,MAAM,CAACyX,gBAAP,EAJH,CAKE,CACA,KAAM,IAAI1hB,MAAJ,CACJ,oGADI,CAAN,CAGD,CACF,CAXc;;;;OAkBP4gB,+CAAR,SAAuCnU,MAAvC,CAAqD,CACnD,GAAI,KAAKkU,cAAL,GAAwB,IAA5B,CAAkC,CAChC,KAAM,IAAI3gB,MAAJ,CAAUyM,MAAM,CAAG,6CAAnB,CAAN,CACD,CACF,CAJO;;OASRmU,0CACE,MAAO,MAAKF,YAAZ,CACD,CAFD;;OAOAE,kCACErS,gBAAgB,CAAC,WAAD,CAAc,CAAd,CAAiB,CAAjB,CAAoBC,SAAS,CAAChQ,MAA9B,CAAhB;;;AAIA,MAAO,IAAIoiB,MAAK,CAACJ,sBAAV,CAAiC,KAAKC,IAAtC,CAA4C,KAAKzb,IAAjD,CAAP,CACD,CAND;;;;;;OAeA4b,4BACEhT,SADF,CAEE+T,QAFF,CAGEC,uBAHF,CAIEC,OAJF,CAIyB,CAEvBtT,gBAAgB,CAAC,UAAD,CAAa,CAAb,CAAgB,CAAhB,CAAmBC,SAAS,CAAChQ,MAA7B,CAAhB,CACAmP,iBAAiB,CAAC,UAAD,CAAa,CAAb,CAAgBC,SAAhB,CAA2B,KAA3B,CAAjB,CACAa,gBAAgB,CAAC,UAAD,CAAa,CAAb,CAAgBkT,QAAhB,CAA0B,KAA1B,CAAhB,CAEA,GAAMG,IAAG,CAAGlB,KAAK,CAACmB,wBAAN,CACV,UADU,CAEVH,uBAFU,CAGVC,OAHU,CAAZ,CAMA,GAAIjU,SAAS,GAAK,OAAlB,CAA2B,CACzB,KAAKoU,YAAL,CAAkBL,QAAlB,CAA4BG,GAAG,CAACG,MAAhC,CAAwCH,GAAG,CAACD,OAA5C,EACD,CAFD,IAEO,CACL,GAAMK,UAAS,CAAqC,EAApD,CACAA,SAAS,CAACtU,SAAD,CAAT,CAAuB+T,QAAvB,CACA,KAAKQ,YAAL,CAAkBD,SAAlB,CAA6BJ,GAAG,CAACG,MAAjC,CAAyCH,GAAG,CAACD,OAA7C,EACD,CACD,MAAOF,SAAP,CACD,CAxBD;;;;;OAgCUf,6BAAV,SACEe,QADF,CAEES,cAFF,CAGEP,OAHF,CAGwB,CAEtB,GAAMQ,UAAS,CAAG,GAAIpD,uBAAJ,CAChB0C,QADgB,CAEhBS,cAAc,EAAI,IAFF,CAGhBP,OAAO,EAAI,IAHK,CAAlB,CAKA,KAAKpB,IAAL,CAAU6B,wBAAV,CAAmC,IAAnC,CAAyCD,SAAzC,EACD,CAXS;;;;;OAmBVzB,sCACEsB,SADF,CAEEE,cAFF,CAGEP,OAHF,CAGwB,CAEtB,GAAMQ,UAAS,CAAG,GAAIxC,uBAAJ,CAChBqC,SADgB,CAEhBE,cAFgB,CAGhBP,OAHgB,CAAlB,CAKA,KAAKpB,IAAL,CAAU6B,wBAAV,CAAmC,IAAnC,CAAyCD,SAAzC,EACD,CAXD;;;;OAkBAzB,6BACEhT,SADF,CAEE+T,QAFF,CAGEE,OAHF,CAGyB,CAEvBtT,gBAAgB,CAAC,WAAD,CAAc,CAAd,CAAiB,CAAjB,CAAoBC,SAAS,CAAChQ,MAA9B,CAAhB,CACAmP,iBAAiB,CAAC,WAAD,CAAc,CAAd,CAAiBC,SAAjB,CAA4B,IAA5B,CAAjB,CACAa,gBAAgB,CAAC,WAAD,CAAc,CAAd,CAAiBkT,QAAjB,CAA2B,IAA3B,CAAhB,CACAY,qBAAqB,CAAC,WAAD,CAAc,CAAd,CAAiBV,OAAjB,CAA0B,IAA1B,CAArB,CAEA,GAAIQ,UAAS,CAA6B,IAA1C,CACA,GAAIH,UAAS,CAA4C,IAAzD,CACA,GAAItU,SAAS,GAAK,OAAlB,CAA2B,CACzB,GAAM4U,cAAa,CAAGb,QAAQ,EAAI,IAAlC,CACAU,SAAS,CAAG,GAAIpD,uBAAJ,CACVuD,aADU,CAEV,IAFU,CAGVX,OAAO,EAAI,IAHD,CAAZ,CAKD,CAPD,IAOO,IAAIjU,SAAJ,CAAe,CACpB,GAAI+T,QAAJ,CAAc,CACZO,SAAS,CAAG,EAAZ,CACAA,SAAS,CAACtU,SAAD,CAAT,CAAuB+T,QAAvB,CACD,CACDU,SAAS,CAAG,GAAIxC,uBAAJ,CAA2BqC,SAA3B,CAAsC,IAAtC,CAA4CL,OAAO,EAAI,IAAvD,CAAZ,CACD,CACD,KAAKpB,IAAL,CAAUgC,2BAAV,CAAsC,IAAtC,CAA4CJ,SAA5C,EACD,CA3BD;;OAgCAzB,+BACE,MAAO,MAAKH,IAAL,CAAUjO,QAAV,CAAmB,IAAnB,CAAP,CACD,CAFD;;;;;;;OAYAoO,8BACEhT,SADF,CAEE8U,YAFF,CAGEC,wBAHF,CAIEd,OAJF,CAIyB,CAJzB,eAMEtT,gBAAgB,CAAC,YAAD,CAAe,CAAf,CAAkB,CAAlB,CAAqBC,SAAS,CAAChQ,MAA/B,CAAhB,CACAmP,iBAAiB,CAAC,YAAD,CAAe,CAAf,CAAkBC,SAAlB,CAA6B,KAA7B,CAAjB,CACAa,gBAAgB,CAAC,YAAD,CAAe,CAAf,CAAkBiU,YAAlB,CAAgC,IAAhC,CAAhB,CAEA,GAAMZ,IAAG,CAAGlB,KAAK,CAACmB,wBAAN,CACV,YADU,CAEVY,wBAFU,CAGVd,OAHU,CAAZ;;;;AAUA,GAAIe,UAAS,CAAG,IAAhB,CACA,GAAMlU,SAAQ,CAAG,GAAIC,SAAJ,EAAjB;AAGAD,QAAQ,CAACI,OAAT,CAAiB+T,KAAjB,CAAuB,WAAQ,CAA/B,EAEA,GAAMC,aAAY,CAAG,SAACzT,QAAD,CAAuB;;AAG1C,GAAIuT,SAAJ,CAAe,CACbA,SAAS,CAAG,KAAZ,CACAvJ,KAAI,CAAC0J,GAAL,CAASnV,SAAT,CAAoBkV,YAApB,EAEA,GAAIJ,YAAJ,CAAkB,CAChBA,YAAY,CAACnjB,IAAb,CAAkBuiB,GAAG,CAACD,OAAtB,EAA+BxS,QAA/B,EACD,CACDX,QAAQ,CAACsU,OAAT,CAAiB3T,QAAjB,EACD,CACF,CAZD,CAcA,KAAK4T,EAAL,CACErV,SADF,CAEEkV,YAFF,YAGc,aAAG,CACbzJ,KAAI,CAAC0J,GAAL,CAASnV,SAAT,CAAoBkV,YAApB,EAEA,GAAIhB,GAAG,CAACG,MAAR,CAAgB,CACdH,GAAG,CAACG,MAAJ,CAAW1iB,IAAX,CAAgBuiB,GAAG,CAACD,OAApB,EAA6BqB,GAA7B,EACD,CACDxU,QAAQ,CAACyU,MAAT,CAAgBD,GAAhB,EACD,CAVH,EAYA,MAAOxU,SAAQ,CAACI,OAAhB,CACD,CArDD;;;;OA4DA8R,sCAAawC,KAAb,CAA0B,CACxB7U,gBAAgB,CAAC,oBAAD,CAAuB,CAAvB,CAA0B,CAA1B,CAA6BC,SAAS,CAAChQ,MAAvC,CAAhB,CACA,GACE,MAAO4kB,MAAP,GAAiB,QAAjB,EACAhiB,IAAI,CAACC,KAAL,CAAW+hB,KAAX,IAAsBA,KADtB,EAEAA,KAAK,EAAI,CAHX,CAIE,CACA,KAAM,IAAIpjB,MAAJ,CACJ,gEADI,CAAN,CAGD,CACD,GAAI,KAAK0gB,YAAL,CAAkBe,QAAlB,EAAJ,CAAkC,CAChC,KAAM,IAAIzhB,MAAJ,CACJ,wEACE,gCAFE,CAAN,CAID,CAED,MAAO,IAAI4gB,MAAJ,CACL,KAAKH,IADA,CAEL,KAAKzb,IAFA,CAGL,KAAK0b,YAAL,CAAkB2C,YAAlB,CAA+BD,KAA/B,CAHK,CAIL,KAAKzC,cAJA,CAAP,CAMD,CAxBD;;;;OA+BAC,qCAAYwC,KAAZ,CAAyB,CACvB7U,gBAAgB,CAAC,mBAAD,CAAsB,CAAtB,CAAyB,CAAzB,CAA4BC,SAAS,CAAChQ,MAAtC,CAAhB,CACA,GACE,MAAO4kB,MAAP,GAAiB,QAAjB,EACAhiB,IAAI,CAACC,KAAL,CAAW+hB,KAAX,IAAsBA,KADtB,EAEAA,KAAK,EAAI,CAHX,CAIE,CACA,KAAM,IAAIpjB,MAAJ,CACJ,+DADI,CAAN,CAGD,CACD,GAAI,KAAK0gB,YAAL,CAAkBe,QAAlB,EAAJ,CAAkC,CAChC,KAAM,IAAIzhB,MAAJ,CACJ,uEACE,gCAFE,CAAN,CAID,CAED,MAAO,IAAI4gB,MAAJ,CACL,KAAKH,IADA,CAEL,KAAKzb,IAFA,CAGL,KAAK0b,YAAL,CAAkB4C,WAAlB,CAA8BF,KAA9B,CAHK,CAIL,KAAKzC,cAJA,CAAP,CAMD,CAxBD;;;;OA+BAC,sCAAa5b,IAAb,CAAyB,CACvBuJ,gBAAgB,CAAC,oBAAD,CAAuB,CAAvB,CAA0B,CAA1B,CAA6BC,SAAS,CAAChQ,MAAvC,CAAhB,CACA,GAAIwG,IAAI,GAAK,MAAb,CAAqB,CACnB,KAAM,IAAIhF,MAAJ,CACJ,yEADI,CAAN,CAGD,CAJD,IAIO,IAAIgF,IAAI,GAAK,WAAb,CAA0B,CAC/B,KAAM,IAAIhF,MAAJ,CACJ,mFADI,CAAN,CAGD,CAJM,IAIA,IAAIgF,IAAI,GAAK,QAAb,CAAuB,CAC5B,KAAM,IAAIhF,MAAJ,CACJ,6EADI,CAAN,CAGD,CACD8N,kBAAkB,CAAC,oBAAD,CAAuB,CAAvB,CAA0B9I,IAA1B,CAAgC,KAAhC,CAAlB,CACA,KAAKue,8BAAL,CAAoC,oBAApC,EACA,GAAMC,WAAU,CAAG,GAAIpd,KAAJ,CAASpB,IAAT,CAAnB,CACA,GAAIwe,UAAU,CAAClS,OAAX,EAAJ,CAA0B,CACxB,KAAM,IAAItR,MAAJ,CACJ,mFADI,CAAN,CAGD,CACD,GAAMqS,MAAK,CAAG,GAAIgL,UAAJ,CAAcmG,UAAd,CAAd,CACA,GAAMC,UAAS,CAAG,KAAK/C,YAAL,CAAkBgD,OAAlB,CAA0BrR,KAA1B,CAAlB,CACAuO,KAAK,CAAC+C,uBAAN,CAA8BF,SAA9B,EAEA,MAAO,IAAI7C,MAAJ,CAAU,KAAKH,IAAf,CAAqB,KAAKzb,IAA1B,CAAgCye,SAAhC,CAAyC,kBAAqB,IAA9D,CAAP,CACD,CA5BD;;;OAkCA7C,sCACErS,gBAAgB,CAAC,kBAAD,CAAqB,CAArB,CAAwB,CAAxB,CAA2BC,SAAS,CAAChQ,MAArC,CAAhB,CACA,KAAK+kB,8BAAL,CAAoC,kBAApC,EACA,GAAME,UAAS,CAAG,KAAK/C,YAAL,CAAkBgD,OAAlB,CAA0B3S,SAA1B,CAAlB,CACA6P,KAAK,CAAC+C,uBAAN,CAA8BF,SAA9B,EACA,MAAO,IAAI7C,MAAJ,CAAU,KAAKH,IAAf,CAAqB,KAAKzb,IAA1B,CAAgCye,SAAhC,CAAyC,kBAAqB,IAA9D,CAAP,CACD,CAND;;;OAYA7C,2CACErS,gBAAgB,CAAC,uBAAD,CAA0B,CAA1B,CAA6B,CAA7B,CAAgCC,SAAS,CAAChQ,MAA1C,CAAhB,CACA,KAAK+kB,8BAAL,CAAoC,uBAApC,EACA,GAAME,UAAS,CAAG,KAAK/C,YAAL,CAAkBgD,OAAlB,CAA0BhQ,cAA1B,CAAlB,CACAkN,KAAK,CAAC+C,uBAAN,CAA8BF,SAA9B,EACA,MAAO,IAAI7C,MAAJ,CAAU,KAAKH,IAAf,CAAqB,KAAKzb,IAA1B,CAAgCye,SAAhC,CAAyC,kBAAqB,IAA9D,CAAP,CACD,CAND;;;OAYA7C,wCACErS,gBAAgB,CAAC,oBAAD,CAAuB,CAAvB,CAA0B,CAA1B,CAA6BC,SAAS,CAAChQ,MAAvC,CAAhB,CACA,KAAK+kB,8BAAL,CAAoC,oBAApC,EACA,GAAME,UAAS,CAAG,KAAK/C,YAAL,CAAkBgD,OAAlB,CAA0BvG,WAA1B,CAAlB,CACAyD,KAAK,CAAC+C,uBAAN,CAA8BF,SAA9B,EACA,MAAO,IAAI7C,MAAJ,CAAU,KAAKH,IAAf,CAAqB,KAAKzb,IAA1B,CAAgCye,SAAhC,CAAyC,kBAAqB,IAA9D,CAAP,CACD,CAND;;;;OAaA7C,iCACE3kB,KADF,CAEEQ,IAFF,CAEsB,CADpB,8BAA8C,CAG9C8R,gBAAgB,CAAC,eAAD,CAAkB,CAAlB,CAAqB,CAArB,CAAwBC,SAAS,CAAChQ,MAAlC,CAAhB,CACAgO,uBAAuB,CAAC,eAAD,CAAkB,CAAlB,CAAqBvQ,KAArB,CAA4B,KAAK+I,IAAjC,CAAuC,IAAvC,CAAvB,CACA6I,WAAW,CAAC,eAAD,CAAkB,CAAlB,CAAqBpR,IAArB,CAA2B,IAA3B,CAAX,CAEA,GAAMgnB,UAAS,CAAG,KAAK/C,YAAL,CAAkBkD,OAAlB,CAA0B3nB,KAA1B,CAAiCQ,IAAjC,CAAlB,CACAmkB,KAAK,CAACiD,cAAN,CAAqBJ,SAArB,EACA7C,KAAK,CAAC+C,uBAAN,CAA8BF,SAA9B,EACA,GAAI,KAAK/C,YAAL,CAAkBK,QAAlB,EAAJ,CAAkC,CAChC,KAAM,IAAI/gB,MAAJ,CACJ,6EACE,cAFE,CAAN,CAID;AAGD,GAAI/D,KAAK,GAAK2Q,SAAd,CAAyB,CACvB3Q,KAAK,CAAG,IAAR,CACAQ,IAAI,CAAG,IAAP,CACD,CACD,MAAO,IAAImkB,MAAJ,CAAU,KAAKH,IAAf,CAAqB,KAAKzb,IAA1B,CAAgCye,SAAhC,CAA2C,KAAK9C,cAAhD,CAAP,CACD,CAxBD;;;;OA+BAC,+BACE3kB,KADF,CAEEQ,IAFF,CAEsB,CADpB,8BAA8C,CAG9C8R,gBAAgB,CAAC,aAAD,CAAgB,CAAhB,CAAmB,CAAnB,CAAsBC,SAAS,CAAChQ,MAAhC,CAAhB,CACAgO,uBAAuB,CAAC,aAAD,CAAgB,CAAhB,CAAmBvQ,KAAnB,CAA0B,KAAK+I,IAA/B,CAAqC,IAArC,CAAvB,CACA6I,WAAW,CAAC,aAAD,CAAgB,CAAhB,CAAmBpR,IAAnB,CAAyB,IAAzB,CAAX,CAEA,GAAMgnB,UAAS,CAAG,KAAK/C,YAAL,CAAkBoD,KAAlB,CAAwB7nB,KAAxB,CAA+BQ,IAA/B,CAAlB,CACAmkB,KAAK,CAACiD,cAAN,CAAqBJ,SAArB,EACA7C,KAAK,CAAC+C,uBAAN,CAA8BF,SAA9B,EACA,GAAI,KAAK/C,YAAL,CAAkBO,MAAlB,EAAJ,CAAgC,CAC9B,KAAM,IAAIjhB,MAAJ,CACJ,0EACE,WAFE,CAAN,CAID,CAED,MAAO,IAAI4gB,MAAJ,CAAU,KAAKH,IAAf,CAAqB,KAAKzb,IAA1B,CAAgCye,SAAhC,CAA2C,KAAK9C,cAAhD,CAAP,CACD,CAnBD;;;;;;OA4BAC,iCAAQ3kB,KAAR,CAAiDQ,IAAjD,CAA8D,CAC5D8R,gBAAgB,CAAC,eAAD,CAAkB,CAAlB,CAAqB,CAArB,CAAwBC,SAAS,CAAChQ,MAAlC,CAAhB,CACAgO,uBAAuB,CAAC,eAAD,CAAkB,CAAlB,CAAqBvQ,KAArB,CAA4B,KAAK+I,IAAjC,CAAuC,KAAvC,CAAvB,CACA6I,WAAW,CAAC,eAAD,CAAkB,CAAlB,CAAqBpR,IAArB,CAA2B,IAA3B,CAAX,CACA,GAAI,KAAKikB,YAAL,CAAkBK,QAAlB,EAAJ,CAAkC,CAChC,KAAM,IAAI/gB,MAAJ,CACJ,gFACE,WAFE,CAAN,CAID,CACD,GAAI,KAAK0gB,YAAL,CAAkBO,MAAlB,EAAJ,CAAgC,CAC9B,KAAM,IAAIjhB,MAAJ,CACJ,4EACE,WAFE,CAAN,CAID,CACD,MAAO,MAAK4jB,OAAL,CAAa3nB,KAAb,CAAoBQ,IAApB,EAA0BqnB,KAA1B,CAAgC7nB,KAAhC,CAAuCQ,IAAvC,CAAP,CACD,CAjBD;;OAsBAmkB,oCACErS,gBAAgB,CAAC,gBAAD,CAAmB,CAAnB,CAAsB,CAAtB,CAAyBC,SAAS,CAAChQ,MAAnC,CAAhB,CAEA,MAAO,MAAKiiB,IAAL,CAAU9jB,QAAV,GAAuB,KAAKqI,IAAL,CAAU+e,kBAAV,EAA9B,CACD,CAJD;;AAQAnD;AAEErS,gBAAgB,CAAC,cAAD,CAAiB,CAAjB,CAAoB,CAApB,CAAuBC,SAAS,CAAChQ,MAAjC,CAAhB,CACA,MAAO,MAAK7B,QAAL,EAAP,CACD,CAJD;;;OAUAikB,uCACE,MAAO,MAAKF,YAAL,CAAkBsD,cAAlB,EAAP,CACD,CAFD;;OAOApD,2CACE,GAAM1e,IAAG,CAAG,KAAK+hB,WAAL,EAAZ,CACA,GAAMxmB,GAAE,CAAG0E,iBAAiB,CAACD,GAAD,CAA5B,CACA,MAAOzE,GAAE,GAAK,IAAP,CAAc,SAAd,CAA0BA,EAAjC,CACD,CAJD;;;;OAWAmjB,iCAAQnZ,KAAR,CAAoB,CAClB8G,gBAAgB,CAAC,eAAD,CAAkB,CAAlB,CAAqB,CAArB,CAAwBC,SAAS,CAAChQ,MAAlC,CAAhB,CACA,GAAI,EAAEiJ,KAAK,WAAYmZ,MAAnB,CAAJ,CAA+B,CAC7B,GAAM9gB,MAAK,CACT,sFADF,CAEA,KAAM,IAAIE,MAAJ,CAAUF,KAAV,CAAN,CACD,CAED,GAAMokB,SAAQ,CAAG,KAAKzD,IAAL,GAAchZ,KAAK,CAACgZ,IAArC,CACA,GAAM0D,SAAQ,CAAG,KAAKnf,IAAL,CAAUkO,MAAV,CAAiBzL,KAAK,CAACzC,IAAvB,CAAjB,CACA,GAAMof,oBAAmB,CACvB,KAAKC,eAAL,KAA2B5c,KAAK,CAAC4c,eAAN,EAD7B,CAGA,MAAOH,SAAQ,EAAIC,QAAZ,EAAwBC,mBAA/B,CACD,CAdD;;;;;;;OAwBexD,+BAAf,SACEnU,MADF,CAEE6X,eAFF,CAGEzC,OAHF,CAGyB,CAEvB,GAAMC,IAAG,CAGL,CAAEG,MAAM,CAAE,IAAV,CAAgBJ,OAAO,CAAE,IAAzB,CAHJ,CAIA,GAAIyC,eAAe,EAAIzC,OAAvB,CAAgC,CAC9BC,GAAG,CAACG,MAAJ,CAAaqC,eAAb,CACA7V,gBAAgB,CAAChC,MAAD,CAAS,CAAT,CAAYqV,GAAG,CAACG,MAAhB,CAAwB,IAAxB,CAAhB,CAEAH,GAAG,CAACD,OAAJ,CAAcA,OAAd,CACAU,qBAAqB,CAAC9V,MAAD,CAAS,CAAT,CAAYqV,GAAG,CAACD,OAAhB,CAAyB,IAAzB,CAArB,CACD,CAND,IAMO,IAAIyC,eAAJ,CAAqB;AAE1B,GAAI,MAAOA,gBAAP,GAA2B,QAA3B,EAAuCA,eAAe,GAAK,IAA/D,CAAqE;AAEnExC,GAAG,CAACD,OAAJ,CAAcyC,eAAd,CACD,CAHD,IAGO,IAAI,MAAOA,gBAAP,GAA2B,UAA/B,CAA2C,CAChDxC,GAAG,CAACG,MAAJ,CAAaqC,eAAb,CACD,CAFM,IAEA,CACL,KAAM,IAAItkB,MAAJ,CACJ+M,WAAW,CAACN,MAAD,CAAS,CAAT,CAAY,IAAZ,CAAX,CACE,wDAFE,CAAN,CAID,CACF,CACD,MAAOqV,IAAP,CACD,CA9Bc,CAgCf3b,sBAAIya,eAAJ,CAAI,KAAJ,CAAO,KAAP,WACE,MAAO,MAAKvC,MAAL,EAAP,CACD,CAFM,oCAAP,EAGF,aAAC,ICzqBD;;;;;;;;;;;;;;;GAwCA,kDACE,+BAAqBX,KAArB,CAAgC,CAAX,iBAAe,CAEpC6G,2DAAkBzS,SAAlB,CAAmC,CACjC,GAAM3J,MAAK,CAAG,KAAKuV,KAAL,CAAW5D,iBAAX,CAA6BhI,SAA7B,CAAd,CACA,MAAO,IAAIyS,sBAAJ,CAA0Bpc,KAA1B,CAAP,CACD,CAHD,CAKAoc,gDACE,MAAO,MAAK7G,KAAZ,CACD,CAFD,CAGF,6BAAC,CAXD,GAaA,kDAIE,+BAAY8G,QAAZ,CAAgCxf,IAAhC,CAA0C,CACxC,KAAKyf,SAAL,CAAiBD,QAAjB,CACA,KAAKxX,KAAL,CAAahI,IAAb,CACD,CAED0f,2DAAkB5S,SAAlB,CAAmC,CACjC,GAAMkM,UAAS,CAAG,KAAKhR,KAAL,CAAW7E,KAAX,CAAiB2J,SAAjB,CAAlB,CACA,MAAO,IAAI4S,sBAAJ,CAA0B,KAAKD,SAA/B,CAA0CzG,SAA1C,CAAP,CACD,CAHD,CAKA0G,gDACE,MAAO,MAAKD,SAAL,CAAeE,sBAAf,CAAsC,KAAK3X,KAA3C,CAAP,CACD,CAFD,CAGF,6BAAC,CAjBD,GAmBA;;;;GAKO,GAAM4X,mBAAkB,CAAG,SAChCC,MADgC,CAGxB,CAERA,MAAM,CAAGA,MAAM,EAAI,EAAnB,CACAA,MAAM,CAAC,WAAD,CAAN,CAAsBA,MAAM,CAAC,WAAD,CAAN,EAAuB,GAAIC,KAAJ,GAAWC,OAAX,EAA7C,CACA,MAAOF,OAAP,CACD,CARM,CAUP;;;;;;GAOO,GAAMG,yBAAwB,CAAG,SACtC/oB,KADsC,CAEtCgpB,WAFsC,CAGtCC,YAHsC,CAGA,CAEtC,GAAI,CAACjpB,KAAD,EAAU,MAAOA,MAAP,GAAiB,QAA/B,CAAyC,CACvC,MAAOA,MAAP,CACD,CACDiD,MAAM,CAAC,OAASjD,MAAV,CAAiB,2CAAjB,CAAN,CAEA,GAAI,MAAOA,MAAK,CAAC,KAAD,CAAZ,GAAwB,QAA5B,CAAsC,CACpC,MAAOkpB,2BAA0B,CAAClpB,KAAK,CAAC,KAAD,CAAN,CAAegpB,WAAf,CAA4BC,YAA5B,CAAjC,CACD,CAFD,IAEO,IAAI,MAAOjpB,MAAK,CAAC,KAAD,CAAZ,GAAwB,QAA5B,CAAsC,CAC3C,MAAOmpB,4BAA2B,CAACnpB,KAAK,CAAC,KAAD,CAAN,CAAegpB,WAAf,CAAlC,CACD,CAFM,IAEA,CACL/lB,MAAM,CAAC,KAAD,CAAQ,4BAA8BmmB,IAAI,CAAChpB,SAAL,CAAeJ,KAAf,CAAsB,IAAtB,CAA4B,CAA5B,CAAtC,CAAN,CACD,CACF,CAjBM,CAmBP,GAAMkpB,2BAA0B,CAAG,SACjCG,EADiC,CAEjCC,QAFiC,CAGjCL,YAHiC,CAGK,CAEtC,OAAQI,EAAR,EACE,IAAK,WAAL,CACE,MAAOJ,aAAY,CAAC,WAAD,CAAnB,CACF,QACEhmB,MAAM,CAAC,KAAD,CAAQ,4BAA8BomB,EAAtC,CAAN,CAJJ,CAMD,CAXD,CAaA,GAAMF,4BAA2B,CAAG,SAClCE,EADkC,CAElCC,QAFkC,CAGlCC,MAHkC,CAGF,CAEhC,GAAI,CAACF,EAAE,CAACviB,cAAH,CAAkB,WAAlB,CAAL,CAAqC,CACnC7D,MAAM,CAAC,KAAD,CAAQ,4BAA8BmmB,IAAI,CAAChpB,SAAL,CAAeipB,EAAf,CAAmB,IAAnB,CAAyB,CAAzB,CAAtC,CAAN,CACD,CACD,GAAMG,MAAK,CAAGH,EAAE,CAAC,WAAD,CAAhB,CACA,GAAI,MAAOG,MAAP,GAAiB,QAArB,CAA+B,CAC7BvmB,MAAM,CAAC,KAAD,CAAQ,+BAAiCumB,KAAzC,CAAN,CACD,CAED,GAAMC,aAAY,CAAGH,QAAQ,CAACvV,IAAT,EAArB,CACA9Q,MAAM,CACJwmB,YAAY,GAAK,IAAjB,EAAyB,MAAOA,aAAP,GAAwB,WAD7C,CAEJ,4CAFI,CAAN;AAMA,GAAI,CAACA,YAAY,CAACrU,UAAb,EAAL,CAAgC,CAC9B,MAAOoU,MAAP,CACD,CAED,GAAME,KAAI,CAAGD,YAAb,CACA,GAAMT,YAAW,CAAGU,IAAI,CAACnT,QAAL,EAApB,CACA,GAAI,MAAOyS,YAAP,GAAuB,QAA3B,CAAqC,CACnC,MAAOQ,MAAP,CACD;AAGD,MAAOR,YAAW,CAAGQ,KAArB,CACD,CAhCD,CAkCA;;;;;;;;GASO,GAAMG,yBAAwB,CAAG,SACtC5gB,IADsC,CAEtCgL,IAFsC,CAGtCwU,QAHsC,CAItCU,YAJsC,CAIf,CAEvB,MAAOW,qBAAoB,CACzB7V,IADyB,CAEzB,GAAI0U,sBAAJ,CAA0BF,QAA1B,CAAoCxf,IAApC,CAFyB,CAGzBkgB,YAHyB,CAA3B,CAKD,CAXM,CAaP;;;;;;;GAQO,GAAMY,6BAA4B,CAAG,SAC1C9V,IAD0C,CAE1CuV,QAF0C,CAG1CL,YAH0C,CAGnB,CAEvB,MAAOW,qBAAoB,CACzB7V,IADyB,CAEzB,GAAIuU,sBAAJ,CAA0BgB,QAA1B,CAFyB,CAGzBL,YAHyB,CAA3B,CAKD,CAVM,CAYP,QAASW,qBAAT,CACE7V,IADF,CAEEiV,WAFF,CAGEC,YAHF,CAGyB,CAEvB,GAAMa,OAAM,CAAG/V,IAAI,CAACuB,WAAL,GAAmBX,GAAnB,EAAf,CAMA,GAAMrE,SAAQ,CAAGyY,wBAAwB,CACvCe,MADuC,CAEvCd,WAAW,CAACnL,iBAAZ,CAA8B,WAA9B,CAFuC,CAGvCoL,YAHuC,CAAzC,CAKA,GAAI7U,QAAJ,CAEA,GAAIL,IAAI,CAACqB,UAAL,EAAJ,CAAuB,CACrB,GAAM2U,SAAQ,CAAGhW,IAAjB,CACA,GAAM/T,MAAK,CAAG+oB,wBAAwB,CACpCgB,QAAQ,CAACxT,QAAT,EADoC,CAEpCyS,WAFoC,CAGpCC,YAHoC,CAAtC,CAKA,GACEjpB,KAAK,GAAK+pB,QAAQ,CAACxT,QAAT,EAAV,EACAjG,QAAQ,GAAKyZ,QAAQ,CAACzU,WAAT,GAAuBX,GAAvB,EAFf,CAGE,CACA,MAAO,IAAIe,SAAJ,CAAa1V,KAAb,CAAoBkX,cAAY,CAAC5G,QAAD,CAAhC,CAAP,CACD,CALD,IAKO,CACL,MAAOyD,KAAP,CACD,CACF,CAfD,IAeO,CACL,GAAMkO,aAAY,CAAGlO,IAArB,CACAK,OAAO,CAAG6N,YAAV,CACA,GAAI3R,QAAQ,GAAK2R,YAAY,CAAC3M,WAAb,GAA2BX,GAA3B,EAAjB,CAAmD,CACjDP,OAAO,CAAGA,OAAO,CAAC4B,cAAR,CAAuB,GAAIN,SAAJ,CAAapF,QAAb,CAAvB,CAAV,CACD,CACD2R,YAAY,CAAC3D,YAAb,CAA0B7G,cAA1B,CAA0C,SAAC5B,SAAD,CAAYC,SAAZ,CAAqB,CAC7D,GAAMC,aAAY,CAAG6T,oBAAoB,CACvC9T,SADuC,CAEvCkT,WAAW,CAACnL,iBAAZ,CAA8BhI,SAA9B,CAFuC,CAGvCoT,YAHuC,CAAzC,CAKA,GAAIlT,YAAY,GAAKD,SAArB,CAAgC,CAC9B1B,OAAO,CAAGA,OAAO,CAAC6B,oBAAR,CAA6BJ,SAA7B,CAAwCE,YAAxC,CAAV,CACD,CACF,CATD,EAUA,MAAO3B,QAAP,CACD,CACH,CC7PA;;;;;;;;;;;;;;;IAqBA;;GAGA,6EACU,WAAqB,IAArB,CAES,cAA4C,GAAI4V,IAAJ,EAA5C,CA0HlB;;;;;OAlHCC,2CAAKlhB,IAAL,CAAe,CACb,GAAI,KAAK/I,KAAL,EAAc,IAAlB,CAAwB,CACtB,MAAO,MAAKA,KAAL,CAAW8d,QAAX,CAAoB/U,IAApB,CAAP,CACD,CAFD,IAEO,IAAI,CAACA,IAAI,CAACsM,OAAL,EAAD,EAAmB,KAAK6U,QAAL,CAAcC,IAAd,CAAqB,CAA5C,CAA+C,CACpD,GAAMC,SAAQ,CAAGrhB,IAAI,CAACgC,QAAL,EAAjB,CACAhC,IAAI,CAAGA,IAAI,CAACmC,QAAL,EAAP,CACA,GAAI,KAAKgf,QAAL,CAAcG,GAAd,CAAkBD,QAAlB,CAAJ,CAAiC,CAC/B,GAAM7O,UAAS,CAAG,KAAK2O,QAAL,CAAczmB,GAAd,CAAkB2mB,QAAlB,CAAlB,CACA,MAAO7O,UAAS,CAAC+O,IAAV,CAAevhB,IAAf,CAAP,CACD,CAHD,IAGO,CACL,MAAO,KAAP,CACD,CACF,CATM,IASA,CACL,MAAO,KAAP,CACD,CACF,CAfD;;;;;;OAwBAkhB,+CAASlhB,IAAT,CAAqBzE,IAArB,CAA+B,CAC7B,GAAIyE,IAAI,CAACsM,OAAL,EAAJ,CAAoB,CAClB,KAAKrV,KAAL,CAAasE,IAAb,CACA,KAAK4lB,QAAL,CAAcK,KAAd,GACD,CAHD,IAGO,IAAI,KAAKvqB,KAAL,GAAe,IAAnB,CAAyB,CAC9B,KAAKA,KAAL,CAAa,KAAKA,KAAL,CAAWmW,WAAX,CAAuBpN,IAAvB,CAA6BzE,IAA7B,CAAb,CACD,CAFM,IAEA,CACL,GAAM8lB,SAAQ,CAAGrhB,IAAI,CAACgC,QAAL,EAAjB,CACA,GAAI,CAAC,KAAKmf,QAAL,CAAcG,GAAd,CAAkBD,QAAlB,CAAL,CAAkC,CAChC,KAAKF,QAAL,CAAc3mB,GAAd,CAAkB6mB,QAAlB,CAA4B,GAAIH,mBAAJ,EAA5B,EACD,CAED,GAAM/d,MAAK,CAAG,KAAKge,QAAL,CAAczmB,GAAd,CAAkB2mB,QAAlB,CAAd,CACArhB,IAAI,CAAGA,IAAI,CAACmC,QAAL,EAAP,CACAgB,KAAK,CAACse,QAAN,CAAezhB,IAAf,CAAqBzE,IAArB,EACD,CACF,CAhBD;;;;;OAwBA2lB,6CAAOlhB,IAAP,CAAiB,CACf,GAAIA,IAAI,CAACsM,OAAL,EAAJ,CAAoB,CAClB,KAAKrV,KAAL,CAAa,IAAb,CACA,KAAKkqB,QAAL,CAAcK,KAAd,GACA,MAAO,KAAP,CACD,CAJD,IAIO,CACL,GAAI,KAAKvqB,KAAL,GAAe,IAAnB,CAAyB,CACvB,GAAI,KAAKA,KAAL,CAAWoV,UAAX,EAAJ,CAA6B;AAE3B,MAAO,MAAP,CACD,CAHD,IAGO,CACL,GAAMpV,MAAK,CAAG,KAAKA,KAAnB,CACA,KAAKA,KAAL,CAAa,IAAb,CAEA,GAAMyqB,OAAI,CAAG,IAAb,CACAzqB,KAAK,CAACse,YAAN,CAAmB7G,cAAnB,CAAmC,SAAC1X,GAAD,CAAM2qB,IAAN,CAAU,CAC3CD,MAAI,CAACD,QAAL,CAAc,GAAIrgB,KAAJ,CAASpK,GAAT,CAAd,CAA6B2qB,IAA7B,EACD,CAFD,EAIA,MAAO,MAAKC,MAAL,CAAY5hB,IAAZ,CAAP,CACD,CACF,CAfD,IAeO,IAAI,KAAKmhB,QAAL,CAAcC,IAAd,CAAqB,CAAzB,CAA4B,CACjC,GAAMC,SAAQ,CAAGrhB,IAAI,CAACgC,QAAL,EAAjB,CACAhC,IAAI,CAAGA,IAAI,CAACmC,QAAL,EAAP,CACA,GAAI,KAAKgf,QAAL,CAAcG,GAAd,CAAkBD,QAAlB,CAAJ,CAAiC,CAC/B,GAAMQ,aAAY,CAAG,KAAKV,QAAL,CAAczmB,GAAd,CAAkB2mB,QAAlB,EAA4BO,MAA5B,CAAmC5hB,IAAnC,CAArB,CACA,GAAI6hB,YAAJ,CAAkB,CAChB,KAAKV,QAAL,CAAcW,MAAd,CAAqBT,QAArB,EACD,CACF,CAED,MAAO,MAAKF,QAAL,CAAcC,IAAd,GAAuB,CAA9B,CACD,CAXM,IAWA,CACL,MAAO,KAAP,CACD,CACF,CACF,CApCD;;;;;;OA6CAF,kDAAYa,UAAZ,CAA8BC,IAA9B,CAAiE,CAC/D,GAAI,KAAK/qB,KAAL,GAAe,IAAnB,CAAyB,CACvB+qB,IAAI,CAACD,UAAD,CAAa,KAAK9qB,KAAlB,CAAJ,CACD,CAFD,IAEO,CACL,KAAKse,YAAL,CAAkB,SAACve,GAAD,CAAM2qB,IAAN,CAAU,CAC1B,GAAM3hB,KAAI,CAAG,GAAIoB,KAAJ,CAAS2gB,UAAU,CAACpqB,QAAX,GAAwB,GAAxB,CAA8BX,GAAvC,CAAb,CACA2qB,IAAI,CAACM,WAAL,CAAiBjiB,IAAjB,CAAuBgiB,IAAvB,EACD,CAHD,EAID,CACF,CATD;;;;OAgBAd,mDAAac,IAAb,CAA6D,CAC3D,KAAKb,QAAL,CAAce,OAAd,CAAsB,SAACP,IAAD,CAAO3qB,GAAP,CAAU,CAC9BgrB,IAAI,CAAChrB,GAAD,CAAM2qB,IAAN,CAAJ,CACD,CAFD,EAGD,CAJD,CAKF,0BAAC,CA7HD,GCxBA;;;;;;;;;;;;;;;IAoBA;;;GAIA,GAAYQ,cAAZ,WAAYA,aAAZ,CAAyB,CACvBA,wDACAA,gDACAA,kEACAA,oEACD,CALD,EAAYA,aAAa,GAAbA,aAAa,IAAzB,EAiCA;;;;;;GAOA,4CACE,yBACSC,QADT,CAESC,UAFT,CAGSC,OAHT,CAISC,MAJT,CAIwB,CAHf,uBACA,2BACA,qBACA,mBAEProB,MAAM,CAAC,CAACqoB,MAAD,EAAWF,UAAZ,CAAwB,qCAAxB,CAAN,CACD;;;OAKMG,qBAAO,GAAIA,gBAAJ,cACE,IADF,CAEZ,KAFY,CAGZ,IAHY,YAIA,KAJA,CAAP;;;OAWAA,uBAAS,GAAIA,gBAAJ,CACd,KADc,gBAEE,IAFF,CAGd,IAHc,YAIF,KAJE,CAAT;;;OAWAA,qCAAuB,SAAUF,OAAV,CAAyB,CACrD,MAAO,IAAIE,gBAAJ,CACL,KADK,gBAEW,IAFX,CAGLF,OAHK,YAIO,IAJP,CAAP,CAMD,CAPM,CAQT,uBA3CA,IChEA;;;;;;;;;;;;;;;GAsBA;;;;;OAaE,wCAC4BtiB,IAD5B,mBAE4ByiB,YAF5B,mBAG4BC,MAH5B,CAG2C,CAFf,eACA,+BACA,qCAd5B,UAAOP,aAAa,CAACQ,cAArB,mBAGA,YAASH,eAAe,CAACI,IAAzB,CAYI;;OAKJC,kDAAkB/V,SAAlB,CAAmC,CACjC,GAAI,CAAC,KAAK9M,IAAL,CAAUsM,OAAV,EAAL,CAA0B,CACxBpS,MAAM,CACJ,KAAK8F,IAAL,CAAUgC,QAAV,KAAyB8K,SADrB,CAEJ,+CAFI,CAAN,CAIA,MAAO,IAAI+V,aAAJ,CACL,KAAK7iB,IAAL,CAAUmC,QAAV,EADK,CAEL,KAAKsgB,YAFA,CAGL,KAAKC,MAHA,CAAP,CAKD,CAVD,IAUO,IAAI,KAAKD,YAAL,CAAkBxrB,KAAlB,EAA2B,IAA/B,CAAqC,CAC1CiD,MAAM,CACJ,KAAKuoB,YAAL,CAAkBtB,QAAlB,CAA2B7U,OAA3B,EADI,CAEJ,0DAFI,CAAN;AAKA,MAAO,KAAP,CACD,CAPM,IAOA,CACL,GAAMkG,UAAS,CAAG,KAAKiQ,YAAL,CAAkBK,OAAlB,CAA0B,GAAI1hB,KAAJ,CAAS0L,SAAT,CAA1B,CAAlB,CACA,MAAO,IAAI+V,aAAJ,CAAiBzhB,IAAI,CAAC2hB,KAAtB,CAA6BvQ,SAA7B,CAAwC,KAAKkQ,MAA7C,CAAP,CACD,CACF,CAtBD,CAuBF,oBAAC,CA7CD,GCtBA;;;;;;;;;;;;;;;GAqBA,GAAIM,uBAAJ,CAEA;;;;;GAMA,GAAMC,cAAa,CAAG,WACpB,GAAI,CAACD,sBAAL,CAA6B,CAC3BA,sBAAsB,CAAG,GAAI3T,UAAJ,CACvBrS,aADuB,CAAzB,CAGD,CACD,MAAOgmB,uBAAP,CACD,CAPD,CASA;;GAGA;;;;OAsBE,uBACkB/rB,KADlB,CAEkBkqB,QAFlB,CAKqB,CAHH,+BAGZ8B,aAAa,EAHD,CAGG,CAJH,iBACA,uBAId;;;;OAnBGC,yBAAP,SAAqBhmB,GAArB,CAA4C,CAC1C,GAAIykB,KAAI,CAAqBuB,aAAa,CAACH,KAA3C,CACAjlB,IAAI,CAACZ,GAAD,CAAM,SAAC8b,SAAD,CAAoBmK,SAApB,CAAgC,CACxCxB,IAAI,CAAGA,IAAI,CAACnnB,GAAL,CAAS,GAAI4G,KAAJ,CAAS4X,SAAT,CAAT,CAA8BmK,SAA9B,CAAP,CACD,CAFG,CAAJ,CAGA,MAAOxB,KAAP,CACD,CANM;;;OAyBPuB,2CACE,MAAO,MAAKjsB,KAAL,GAAe,IAAf,EAAuB,KAAKkqB,QAAL,CAAc7U,OAAd,EAA9B,CACD,CAFD;;;;;;;;;;;OAgBA4W,kEACEhhB,YADF,CAEEkhB,SAFF,CAE8B,CAE5B,GAAI,KAAKnsB,KAAL,EAAc,IAAd,EAAsBmsB,SAAS,CAAC,KAAKnsB,KAAN,CAAnC,CAAiD,CAC/C,MAAO,CAAE+I,IAAI,CAAEoB,IAAI,CAAC2hB,KAAb,CAAoB9rB,KAAK,CAAE,KAAKA,KAAhC,CAAP,CACD,CAFD,IAEO,CACL,GAAIiL,YAAY,CAACoK,OAAb,EAAJ,CAA4B,CAC1B,MAAO,KAAP,CACD,CAFD,IAEO,CACL,GAAMa,MAAK,CAAGjL,YAAY,CAACF,QAAb,EAAd,CACA,GAAMmB,MAAK,CAAG,KAAKge,QAAL,CAAczmB,GAAd,CAAkByS,KAAlB,CAAd,CACA,GAAIhK,KAAK,GAAK,IAAd,CAAoB,CAClB,GAAMkgB,0BAAyB,CAAGlgB,KAAK,CAACmgB,gCAAN,CAChCphB,YAAY,CAACC,QAAb,EADgC,CAEhCihB,SAFgC,CAAlC,CAIA,GAAIC,yBAAyB,EAAI,IAAjC,CAAuC,CACrC,GAAME,SAAQ,CAAG,GAAIniB,KAAJ,CAAS+L,KAAT,EAAgBhK,KAAhB,CACfkgB,yBAAyB,CAACrjB,IADX,CAAjB,CAGA,MAAO,CAAEA,IAAI,CAAEujB,QAAR,CAAkBtsB,KAAK,CAAEosB,yBAAyB,CAACpsB,KAAnD,CAAP,CACD,CALD,IAKO,CACL,MAAO,KAAP,CACD,CACF,CAbD,IAaO,CACL,MAAO,KAAP,CACD,CACF,CACF,CACF,CA9BD;;;;;OAsCAisB,0DACEhhB,YADF,CACoB,CAElB,MAAO,MAAKohB,gCAAL,CAAsCphB,YAAtC,CAAoD,WAAM,YAAI,CAA9D,CAAP,CACD,CAJD;;;OAUAghB,yCAAQhhB,YAAR,CAA0B,CACxB,GAAIA,YAAY,CAACoK,OAAb,EAAJ,CAA4B,CAC1B,MAAO,KAAP,CACD,CAFD,IAEO,CACL,GAAMa,MAAK,CAAGjL,YAAY,CAACF,QAAb,EAAd,CACA,GAAMwQ,UAAS,CAAG,KAAK2O,QAAL,CAAczmB,GAAd,CAAkByS,KAAlB,CAAlB,CACA,GAAIqF,SAAS,GAAK,IAAlB,CAAwB,CACtB,MAAOA,UAAS,CAACsQ,OAAV,CAAkB5gB,YAAY,CAACC,QAAb,EAAlB,CAAP,CACD,CAFD,IAEO,CACL,MAAO+gB,cAAa,CAACH,KAArB,CACD,CACF,CACF,CAZD;;;;;;OAqBAG,qCAAIhhB,YAAJ,CAAwBshB,KAAxB,CAAuC,CACrC,GAAIthB,YAAY,CAACoK,OAAb,EAAJ,CAA4B,CAC1B,MAAO,IAAI4W,cAAJ,CAAkBM,KAAlB,CAAyB,KAAKrC,QAA9B,CAAP,CACD,CAFD,IAEO,CACL,GAAMhU,MAAK,CAAGjL,YAAY,CAACF,QAAb,EAAd,CACA,GAAMmB,MAAK,CAAG,KAAKge,QAAL,CAAczmB,GAAd,CAAkByS,KAAlB,GAA4B+V,aAAa,CAACH,KAAxD,CACA,GAAMU,SAAQ,CAAGtgB,KAAK,CAAC3I,GAAN,CAAU0H,YAAY,CAACC,QAAb,EAAV,CAAmCqhB,KAAnC,CAAjB,CACA,GAAMjP,YAAW,CAAG,KAAK4M,QAAL,CAActR,MAAd,CAAqB1C,KAArB,CAA4BsW,QAA5B,CAApB,CACA,MAAO,IAAIP,cAAJ,CAAkB,KAAKjsB,KAAvB,CAA8Bsd,WAA9B,CAAP,CACD,CACF,CAVD;;;;;OAkBA2O,wCAAOhhB,YAAP,CAAyB,CACvB,GAAIA,YAAY,CAACoK,OAAb,EAAJ,CAA4B,CAC1B,GAAI,KAAK6U,QAAL,CAAc7U,OAAd,EAAJ,CAA6B,CAC3B,MAAO4W,cAAa,CAACH,KAArB,CACD,CAFD,IAEO,CACL,MAAO,IAAIG,cAAJ,CAAkB,IAAlB,CAAwB,KAAK/B,QAA7B,CAAP,CACD,CACF,CAND,IAMO,CACL,GAAMhU,MAAK,CAAGjL,YAAY,CAACF,QAAb,EAAd,CACA,GAAMmB,MAAK,CAAG,KAAKge,QAAL,CAAczmB,GAAd,CAAkByS,KAAlB,CAAd,CACA,GAAIhK,KAAJ,CAAW,CACT,GAAMsgB,SAAQ,CAAGtgB,KAAK,CAAC1I,MAAN,CAAayH,YAAY,CAACC,QAAb,EAAb,CAAjB,CACA,GAAIoS,YAAW,OAAf,CACA,GAAIkP,QAAQ,CAACnX,OAAT,EAAJ,CAAwB,CACtBiI,WAAW,CAAG,KAAK4M,QAAL,CAAc1mB,MAAd,CAAqB0S,KAArB,CAAd,CACD,CAFD,IAEO,CACLoH,WAAW,CAAG,KAAK4M,QAAL,CAActR,MAAd,CAAqB1C,KAArB,CAA4BsW,QAA5B,CAAd,CACD,CACD,GAAI,KAAKxsB,KAAL,GAAe,IAAf,EAAuBsd,WAAW,CAACjI,OAAZ,EAA3B,CAAkD,CAChD,MAAO4W,cAAa,CAACH,KAArB,CACD,CAFD,IAEO,CACL,MAAO,IAAIG,cAAJ,CAAkB,KAAKjsB,KAAvB,CAA8Bsd,WAA9B,CAAP,CACD,CACF,CAbD,IAaO,CACL,MAAO,KAAP,CACD,CACF,CACF,CA3BD;;;;;OAmCA2O,qCAAIhhB,YAAJ,CAAsB,CACpB,GAAIA,YAAY,CAACoK,OAAb,EAAJ,CAA4B,CAC1B,MAAO,MAAKrV,KAAZ,CACD,CAFD,IAEO,CACL,GAAMkW,MAAK,CAAGjL,YAAY,CAACF,QAAb,EAAd,CACA,GAAMmB,MAAK,CAAG,KAAKge,QAAL,CAAczmB,GAAd,CAAkByS,KAAlB,CAAd,CACA,GAAIhK,KAAJ,CAAW,CACT,MAAOA,MAAK,CAACzI,GAAN,CAAUwH,YAAY,CAACC,QAAb,EAAV,CAAP,CACD,CAFD,IAEO,CACL,MAAO,KAAP,CACD,CACF,CACF,CAZD;;;;;;OAqBA+gB,yCAAQhhB,YAAR,CAA4BwhB,OAA5B,CAAqD,CACnD,GAAIxhB,YAAY,CAACoK,OAAb,EAAJ,CAA4B,CAC1B,MAAOoX,QAAP,CACD,CAFD,IAEO,CACL,GAAMvW,MAAK,CAAGjL,YAAY,CAACF,QAAb,EAAd,CACA,GAAMmB,MAAK,CAAG,KAAKge,QAAL,CAAczmB,GAAd,CAAkByS,KAAlB,GAA4B+V,aAAa,CAACH,KAAxD,CACA,GAAMU,SAAQ,CAAGtgB,KAAK,CAACwgB,OAAN,CAAczhB,YAAY,CAACC,QAAb,EAAd,CAAuCuhB,OAAvC,CAAjB,CACA,GAAInP,YAAW,OAAf,CACA,GAAIkP,QAAQ,CAACnX,OAAT,EAAJ,CAAwB,CACtBiI,WAAW,CAAG,KAAK4M,QAAL,CAAc1mB,MAAd,CAAqB0S,KAArB,CAAd,CACD,CAFD,IAEO,CACLoH,WAAW,CAAG,KAAK4M,QAAL,CAActR,MAAd,CAAqB1C,KAArB,CAA4BsW,QAA5B,CAAd,CACD,CACD,MAAO,IAAIP,cAAJ,CAAkB,KAAKjsB,KAAvB,CAA8Bsd,WAA9B,CAAP,CACD,CACF,CAfD;;;;;;;OAyBA2O,sCAAQtnB,EAAR,CAAqE,CACnE,MAAO,MAAKgoB,KAAL,CAAWxiB,IAAI,CAAC2hB,KAAhB,CAAuBnnB,EAAvB,CAAP,CACD,CAFD;;;;;;;OAYQsnB,8BAAR,SACEW,SADF,CAEEjoB,EAFF,CAEsE,CAEpE,GAAMkoB,MAAK,CAAuB,EAAlC,CACA,KAAK3C,QAAL,CAAc5R,gBAAd,CACE,SAAC8R,QAAD,CAAmB7O,SAAnB,CAA8C,CAC5CsR,KAAK,CAACzC,QAAD,CAAL,CAAkB7O,SAAS,CAACoR,KAAV,CAAgBC,SAAS,CAAC1gB,KAAV,CAAgBke,QAAhB,CAAhB,CAA2CzlB,EAA3C,CAAlB,CACD,CAHH,EAKA,MAAOA,GAAE,CAACioB,SAAD,CAAY,KAAK5sB,KAAjB,CAAwB6sB,KAAxB,CAAT,CACD,CAXO;;;;;;OAoBRZ,4CAAcljB,IAAd,CAA0B1B,CAA1B,CAA+D,CAC7D,MAAO,MAAKylB,WAAL,CAAiB/jB,IAAjB,CAAuBoB,IAAI,CAAC2hB,KAA5B,CAAmCzkB,CAAnC,CAAP,CACD,CAFD,CAIQ4kB,oCAAR,SACEc,YADF,CAEEH,SAFF,CAGEvlB,CAHF,CAGuC,CAErC,GAAM2Q,OAAM,CAAG,KAAKhY,KAAL,CAAaqH,CAAC,CAACulB,SAAD,CAAY,KAAK5sB,KAAjB,CAAd,CAAwC,KAAvD,CACA,GAAIgY,MAAJ,CAAY,CACV,MAAOA,OAAP,CACD,CAFD,IAEO,CACL,GAAI+U,YAAY,CAAC1X,OAAb,EAAJ,CAA4B,CAC1B,MAAO,KAAP,CACD,CAFD,IAEO,CACL,GAAMa,MAAK,CAAG6W,YAAY,CAAChiB,QAAb,EAAd,CACA,GAAMiiB,UAAS,CAAG,KAAK9C,QAAL,CAAczmB,GAAd,CAAkByS,KAAlB,CAAlB,CACA,GAAI8W,SAAJ,CAAe,CACb,MAAOA,UAAS,CAACF,WAAV,CACLC,YAAY,CAAC7hB,QAAb,EADK,CAEL0hB,SAAS,CAAC1gB,KAAV,CAAgBgK,KAAhB,CAFK,CAGL7O,CAHK,CAAP,CAKD,CAND,IAMO,CACL,MAAO,KAAP,CACD,CACF,CACF,CACF,CAzBO;;;;;OAiCR4kB,+CACEljB,IADF,CAEE1B,CAFF,CAEmC,CAEjC,MAAO,MAAK4lB,cAAL,CAAoBlkB,IAApB,CAA0BoB,IAAI,CAAC2hB,KAA/B,CAAsCzkB,CAAtC,CAAP,CACD,CALD,CAOQ4kB,uCAAR,SACEc,YADF,CAEEG,mBAFF,CAGE7lB,CAHF,CAGmC,CAEjC,GAAI0lB,YAAY,CAAC1X,OAAb,EAAJ,CAA4B,CAC1B,MAAO,KAAP,CACD,CAFD,IAEO,CACL,GAAI,KAAKrV,KAAT,CAAgB,CACdqH,CAAC,CAAC6lB,mBAAD,CAAsB,KAAKltB,KAA3B,CAAD,CACD,CACD,GAAMkW,MAAK,CAAG6W,YAAY,CAAChiB,QAAb,EAAd,CACA,GAAMiiB,UAAS,CAAG,KAAK9C,QAAL,CAAczmB,GAAd,CAAkByS,KAAlB,CAAlB,CACA,GAAI8W,SAAJ,CAAe,CACb,MAAOA,UAAS,CAACC,cAAV,CACLF,YAAY,CAAC7hB,QAAb,EADK,CAELgiB,mBAAmB,CAAChhB,KAApB,CAA0BgK,KAA1B,CAFK,CAGL7O,CAHK,CAAP,CAKD,CAND,IAMO,CACL,MAAO4kB,cAAa,CAACH,KAArB,CACD,CACF,CACF,CAvBO;;;;;;OAgCRG,yCAAQ5kB,CAAR,CAAyC,CACvC,KAAK8lB,QAAL,CAAchjB,IAAI,CAAC2hB,KAAnB,CAA0BzkB,CAA1B,EACD,CAFD,CAIQ4kB,iCAAR,SACEiB,mBADF,CAEE7lB,CAFF,CAEmC,CAEjC,KAAK6iB,QAAL,CAAc5R,gBAAd,CAA+B,SAACzC,SAAD,CAAY0F,SAAZ,CAAqB,CAClDA,SAAS,CAAC4R,QAAV,CAAmBD,mBAAmB,CAAChhB,KAApB,CAA0B2J,SAA1B,CAAnB,CAAyDxO,CAAzD,EACD,CAFD,EAGA,GAAI,KAAKrH,KAAT,CAAgB,CACdqH,CAAC,CAAC6lB,mBAAD,CAAsB,KAAKltB,KAA3B,CAAD,CACD,CACF,CAVO;;;OAgBRisB,8CAAa5kB,CAAb,CAAgD,CAC9C,KAAK6iB,QAAL,CAAc5R,gBAAd,CACE,SAACzC,SAAD,CAAoB0F,SAApB,CAA+C,CAC7C,GAAIA,SAAS,CAACvb,KAAd,CAAqB,CACnBqH,CAAC,CAACwO,SAAD,CAAY0F,SAAS,CAACvb,KAAtB,CAAD,CACD,CACF,CALH,EAOD,CARD;AAxVOisB,oBAAQ,GAAIA,cAAJ,CAAuB,IAAvB,CAAR,CAiWT,qBAnWA,ICzCA;;;;;;;;;;;;;;;IAoBA;;;;;GAMA,2CAIE,wBAAmBmB,MAAnB,CAAmDrkB,IAAnD,CAA6D,CAA1C,mBAAgC,iCAFnD,UAAOmiB,aAAa,CAACmC,eAArB,CAEiE,CAEjEC,oDAAkBzX,SAAlB,CAAmC,CACjC,GAAI,KAAK9M,IAAL,CAAUsM,OAAV,EAAJ,CAAyB,CACvB,MAAO,IAAIiY,eAAJ,CAAmB,KAAKF,MAAxB,CAAgCjjB,IAAI,CAAC2hB,KAArC,CAAP,CACD,CAFD,IAEO,CACL,MAAO,IAAIwB,eAAJ,CAAmB,KAAKF,MAAxB,CAAgC,KAAKrkB,IAAL,CAAUmC,QAAV,EAAhC,CAAP,CACD,CACF,CAND,CAOF,sBAAC,CAbD,GC1BA;;;;;;;;;;;;;;;IAqBA;;;;;;GAOA,sCAIE,mBACSkiB,MADT,CAESrkB,IAFT,CAGSsY,IAHT,CAGmB,CAFV,mBACA,eACA,iCALT,UAAO6J,aAAa,CAACqC,SAArB,CAMI,CAEJC,+CAAkB3X,SAAlB,CAAmC,CACjC,GAAI,KAAK9M,IAAL,CAAUsM,OAAV,EAAJ,CAAyB,CACvB,MAAO,IAAImY,UAAJ,CACL,KAAKJ,MADA,CAELjjB,IAAI,CAAC2hB,KAFA,CAGL,KAAKzK,IAAL,CAAUxD,iBAAV,CAA4BhI,SAA5B,CAHK,CAAP,CAKD,CAND,IAMO,CACL,MAAO,IAAI2X,UAAJ,CAAc,KAAKJ,MAAnB,CAA2B,KAAKrkB,IAAL,CAAUmC,QAAV,EAA3B,CAAiD,KAAKmW,IAAtD,CAAP,CACD,CACF,CAVD,CAWF,iBAAC,CArBD,GC5BA;;;;;;;;;;;;;;;IAwBA;;;;;;GAOA,kCAIE,iCAC4B+L,MAD5B,mBAE4BrkB,IAF5B,mBAG4BmhB,QAH5B,CAGyD,CAF7B,mBACA,eACA,yCAL5B,UAAOgB,aAAa,CAACuC,KAArB,CAMI;;OAKJC,2CAAkB7X,SAAlB,CAAmC,CACjC,GAAI,KAAK9M,IAAL,CAAUsM,OAAV,EAAJ,CAAyB,CACvB,GAAMkG,UAAS,CAAG,KAAK2O,QAAL,CAAc2B,OAAd,CAAsB,GAAI1hB,KAAJ,CAAS0L,SAAT,CAAtB,CAAlB,CACA,GAAI0F,SAAS,CAAClG,OAAV,EAAJ,CAAyB;AAEvB,MAAO,KAAP,CACD,CAHD,IAGO,IAAIkG,SAAS,CAACvb,KAAd,CAAqB;AAE1B,MAAO,IAAIwtB,UAAJ,CAAc,KAAKJ,MAAnB,CAA2BjjB,IAAI,CAAC2hB,KAAhC,CAAuCvQ,SAAS,CAACvb,KAAjD,CAAP,CACD,CAHM,IAGA;AAEL,MAAO,IAAI0tB,MAAJ,CAAU,KAAKN,MAAf,CAAuBjjB,IAAI,CAAC2hB,KAA5B,CAAmCvQ,SAAnC,CAAP,CACD,CACF,CAZD,IAYO,CACLtY,MAAM,CACJ,KAAK8F,IAAL,CAAUgC,QAAV,KAAyB8K,SADrB,CAEJ,gEAFI,CAAN,CAIA,MAAO,IAAI6X,MAAJ,CAAU,KAAKN,MAAf,CAAuB,KAAKrkB,IAAL,CAAUmC,QAAV,EAAvB,CAA6C,KAAKgf,QAAlD,CAAP,CACD,CACF,CApBD;;OAyBAwD,oCACE,MACE,aACA,KAAK3kB,IADL,CAEA,IAFA,CAGA,KAAKqkB,MAAL,CAAY1sB,QAAZ,EAHA,CAIA,UAJA,CAKA,KAAKwpB,QAAL,CAAcxpB,QAAd,EALA,CAMA,GAPF,CASD,CAVD,CAWF,aAAC,CAjDD,GC/BA;;;;;;;;;;;;;;;IAoBA;;;;;GAMA;;;;OAME,mBACU+gB,KADV,CAEUkM,iBAFV,CAGUC,SAHV,CAG4B,CAFlB,iBACA,yCACA,yBACN;;;OAMJC,kDACE,MAAO,MAAKF,iBAAZ,CACD,CAFD;;;OAQAE,0CACE,MAAO,MAAKD,SAAZ,CACD,CAFD;;;OAQAC,+CAAkB9kB,IAAlB,CAA4B,CAC1B,GAAIA,IAAI,CAACsM,OAAL,EAAJ,CAAoB,CAClB,MAAO,MAAKyY,kBAAL,IAA6B,CAAC,KAAKF,SAA1C,CACD,CAED,GAAMxD,SAAQ,CAAGrhB,IAAI,CAACgC,QAAL,EAAjB,CACA,MAAO,MAAKgjB,kBAAL,CAAwB3D,QAAxB,CAAP,CACD,CAPD;;;OAaAyD,gDAAmB9tB,GAAnB,CAA8B,CAC5B,MACG,MAAK+tB,kBAAL,IAA6B,CAAC,KAAKF,SAApC,EAAkD,KAAKnM,KAAL,CAAWuM,QAAX,CAAoBjuB,GAApB,CADpD,CAGD,CAJD;;OASA8tB,uCACE,MAAO,MAAKpM,KAAZ,CACD,CAFD,CAGF,iBAAC,CAzDD,GC1BA;;;;;;;;;;;;;;;IAqBA;;;;;;GAOA;;;;OAME,mBACmBwM,WADnB,CAEmBC,YAFnB,CAE0C,CADvB,6BACA,+BACf;;;;;OAyBJC,6CACEC,SADF,CAEEC,QAFF,CAGEC,QAHF,CAGmB,CAEjB,MAAO,IAAIH,UAAJ,CACL,GAAIN,UAAJ,CAAcO,SAAd,CAAyBC,QAAzB,CAAmCC,QAAnC,CADK,CAEL,KAAKJ,YAFA,CAAP,CAID,CATD;;;;;OAiBAC,8CACEI,UADF,CAEEF,QAFF,CAGEC,QAHF,CAGmB,CAEjB,MAAO,IAAIH,UAAJ,CACL,KAAKF,WADA,CAEL,GAAIJ,UAAJ,CAAcU,UAAd,CAA0BF,QAA1B,CAAoCC,QAApC,CAFK,CAAP,CAID,CATD;;OAcAH,6CACE,MAAO,MAAKF,WAAZ,CACD,CAFD;;OAOAE,oDACE,MAAO,MAAKF,WAAL,CAAiBH,kBAAjB,GACH,KAAKG,WAAL,CAAiBO,OAAjB,EADG,CAEH,IAFJ,CAGD,CAJD;;OASAL,8CACE,MAAO,MAAKD,YAAZ,CACD,CAFD;;OAOAC,qDACE,MAAO,MAAKD,YAAL,CAAkBJ,kBAAlB,GACH,KAAKI,YAAL,CAAkBM,OAAlB,EADG,CAEH,IAFJ,CAGD,CAJD;;;OAzEOL,gBAAQ,GAAIA,UAAJ,CACb,GAAIN,UAAJ,CACElQ,YAAY,CAAChI,UADf,sBAEwB,KAFxB,cAGgB,KAHhB,CADa,CAMb,GAAIkY,UAAJ,CACElQ,YAAY,CAAChI,UADf,sBAEwB,KAFxB,cAGgB,KAHhB,CANa,CAAR,CA8ET,iBA7FA,IC5BA;;;;;;;;;;;;;;;IAmBA;;;;;;;;GASA,mCACE,gBACS5H,IADT,CAESqV,YAFT,CAGSvN,SAHT,CAIS4Y,OAJT,CAKSnM,QALT,CAKiC,CAJxB,eACA,+BACA,yBACA,qBACA,uBACL;;;OAMGoM,mBAAP,SAAmBtb,QAAnB,CAAiC,CAC/B,MAAO,IAAIsb,OAAJ,CAAWA,MAAM,CAACC,KAAlB,CAAyBvb,QAAzB,CAAP,CACD,CAFM;;;;OASAsb,wBAAP,SAAwBtE,QAAxB,CAA0ChX,QAA1C,CAAwD,CACtD,MAAO,IAAIsb,OAAJ,CAAWA,MAAM,CAACE,WAAlB,CAA+Bxb,QAA/B,CAAyCgX,QAAzC,CAAP,CACD,CAFM;;;;OASAsE,0BAAP,SAA0BtE,QAA1B,CAA4ChX,QAA5C,CAA0D,CACxD,MAAO,IAAIsb,OAAJ,CAAWA,MAAM,CAACG,aAAlB,CAAiCzb,QAAjC,CAA2CgX,QAA3C,CAAP,CACD,CAFM;;;;;OAUAsE,0BAAP,SACEtE,QADF,CAEE0E,WAFF,CAGEC,WAHF,CAGmB,CAEjB,MAAO,IAAIL,OAAJ,CAAWA,MAAM,CAACM,aAAlB,CAAiCF,WAAjC,CAA8C1E,QAA9C,CAAwD2E,WAAxD,CAAP,CACD,CANM;;;;OAaAL,wBAAP,SAAwBtE,QAAxB,CAA0ChX,QAA1C,CAAwD,CACtD,MAAO,IAAIsb,OAAJ,CAAWA,MAAM,CAACO,WAAlB,CAA+B7b,QAA/B,CAAyCgX,QAAzC,CAAP,CACD,CAFM;mCAMAsE,mBAAc,aAAd,sCAGAA,qBAAgB,eAAhB,sCAGAA,qBAAgB,eAAhB,oCAGAA,mBAAc,aAAd,qCAGAA,aAAQ,OAAR,CACT,cAzEA,IC5BA;;;;;;;;;;;;;;;IA4BA;;;;;;GAOA,0CACE,uBAA6B/M,MAA7B,CAA0C,CAAb,mBAAiB,CAE9CuN,6CACE7N,IADF,CAEEthB,GAFF,CAGEysB,QAHF,CAIE2C,YAJF,CAKE/B,MALF,CAMEgC,oBANF,CAMqD,CAEnDnsB,MAAM,CACJoe,IAAI,CAACgO,SAAL,CAAe,KAAK1N,MAApB,CADI,CAEJ,mDAFI,CAAN,CAIA,GAAM2N,SAAQ,CAAGjO,IAAI,CAACxD,iBAAL,CAAuB9d,GAAvB,CAAjB;AAEA,GACEuvB,QAAQ,CAACxR,QAAT,CAAkBqR,YAAlB,EAAgClY,MAAhC,CAAuCuV,QAAQ,CAAC1O,QAAT,CAAkBqR,YAAlB,CAAvC,CADF,CAEE;;;AAIA,GAAIG,QAAQ,CAACja,OAAT,KAAuBmX,QAAQ,CAACnX,OAAT,EAA3B,CAA+C;;;AAK7C,MAAOgM,KAAP,CACD,CACF,CAED,GAAI+N,oBAAoB,EAAI,IAA5B,CAAkC,CAChC,GAAI5C,QAAQ,CAACnX,OAAT,EAAJ,CAAwB,CACtB,GAAIgM,IAAI,CAAC2M,QAAL,CAAcjuB,GAAd,CAAJ,CAAwB,CACtBqvB,oBAAoB,CAACG,gBAArB,CACEb,MAAM,CAACc,kBAAP,CAA0BzvB,GAA1B,CAA+BuvB,QAA/B,CADF,EAGD,CAJD,IAIO,CACLrsB,MAAM,CACJoe,IAAI,CAACjM,UAAL,EADI,CAEJ,qEAFI,CAAN,CAID,CACF,CAXD,IAWO,IAAIka,QAAQ,CAACja,OAAT,EAAJ,CAAwB,CAC7B+Z,oBAAoB,CAACG,gBAArB,CACEb,MAAM,CAACe,gBAAP,CAAwB1vB,GAAxB,CAA6BysB,QAA7B,CADF,EAGD,CAJM,IAIA,CACL4C,oBAAoB,CAACG,gBAArB,CACEb,MAAM,CAACgB,kBAAP,CAA0B3vB,GAA1B,CAA+BysB,QAA/B,CAAyC8C,QAAzC,CADF,EAGD,CACF,CACD,GAAIjO,IAAI,CAACjM,UAAL,IAAqBoX,QAAQ,CAACnX,OAAT,EAAzB,CAA6C,CAC3C,MAAOgM,KAAP,CACD,CAFD,IAEO;AAEL,MAAOA,KAAI,CAACpL,oBAAL,CAA0BlW,GAA1B,CAA+BysB,QAA/B,EAAyCmD,SAAzC,CAAmD,KAAKhO,MAAxD,CAAP,CACD,CACF,CAzDD;;OA8DAuN,gDACET,OADF,CAEEmB,OAFF,CAGER,oBAHF,CAGqD,CAEnD,GAAIA,oBAAoB,EAAI,IAA5B,CAAkC,CAChC,GAAI,CAACX,OAAO,CAACrZ,UAAR,EAAL,CAA2B,CACzBqZ,OAAO,CAACnQ,YAAR,CAAqB7G,cAArB,CAAqC,SAAC1X,GAAD,CAAM+V,SAAN,CAAe,CAClD,GAAI,CAAC8Z,OAAO,CAAC5B,QAAR,CAAiBjuB,GAAjB,CAAL,CAA4B,CAC1BqvB,oBAAoB,CAACG,gBAArB,CACEb,MAAM,CAACc,kBAAP,CAA0BzvB,GAA1B,CAA+B+V,SAA/B,CADF,EAGD,CACF,CAND,EAOD,CACD,GAAI,CAAC8Z,OAAO,CAACxa,UAAR,EAAL,CAA2B,CACzBwa,OAAO,CAACtR,YAAR,CAAqB7G,cAArB,CAAqC,SAAC1X,GAAD,CAAM+V,SAAN,CAAe,CAClD,GAAI2Y,OAAO,CAACT,QAAR,CAAiBjuB,GAAjB,CAAJ,CAA2B,CACzB,GAAMuvB,SAAQ,CAAGb,OAAO,CAAC5Q,iBAAR,CAA0B9d,GAA1B,CAAjB,CACA,GAAI,CAACuvB,QAAQ,CAACrY,MAAT,CAAgBnB,SAAhB,CAAL,CAAiC,CAC/BsZ,oBAAoB,CAACG,gBAArB,CACEb,MAAM,CAACgB,kBAAP,CAA0B3vB,GAA1B,CAA+B+V,SAA/B,CAA0CwZ,QAA1C,CADF,EAGD,CACF,CAPD,IAOO,CACLF,oBAAoB,CAACG,gBAArB,CACEb,MAAM,CAACe,gBAAP,CAAwB1vB,GAAxB,CAA6B+V,SAA7B,CADF,EAGD,CACF,CAbD,EAcD,CACF,CACD,MAAO8Z,QAAO,CAACD,SAAR,CAAkB,KAAKhO,MAAvB,CAAP,CACD,CAjCD;;OAsCAuN,gDAAeT,OAAf,CAA8BvQ,WAA9B,CAA+C,CAC7C,GAAIuQ,OAAO,CAACpZ,OAAR,EAAJ,CAAuB,CACrB,MAAOsI,aAAY,CAAChI,UAApB,CACD,CAFD,IAEO,CACL,MAAO8Y,QAAO,CAACzY,cAAR,CAAuBkI,WAAvB,CAAP,CACD,CACF,CAND;;OAWAgR,gDACE,MAAO,MAAP,CACD,CAFD;;OAOAA,oDACE,MAAO,KAAP,CACD,CAFD;;OAOAA,4CACE,MAAO,MAAKvN,MAAZ,CACD,CAFD,CAGF,qBAAC,CAnID,GCnCA;;;;;;;;;;;;;;;GAoBA,qFACmB,eAAiC,GAAIqI,IAAJ,EAAjC,CA4ElB,CA1EC6F,2DAAiB5M,MAAjB,CAA+B,CAC7B,GAAMlV,KAAI,CAAGkV,MAAM,CAAClV,IAApB,CACA,GAAMqc,SAAQ,CAAGnH,MAAM,CAACpN,SAAxB,CACA5S,MAAM,CACJ8K,IAAI,GAAK2gB,MAAM,CAACE,WAAhB,EACE7gB,IAAI,GAAK2gB,MAAM,CAACM,aADlB,EAEEjhB,IAAI,GAAK2gB,MAAM,CAACG,aAHd,CAIJ,2CAJI,CAAN,CAMA5rB,MAAM,CACJmnB,QAAQ,GAAK,WADT,CAEJ,iDAFI,CAAN,CAIA,GAAM0F,UAAS,CAAG,KAAKC,SAAL,CAAetsB,GAAf,CAAmB2mB,QAAnB,CAAlB,CACA,GAAI0F,SAAJ,CAAe,CACb,GAAME,QAAO,CAAGF,SAAS,CAAC/hB,IAA1B,CACA,GAAIA,IAAI,GAAK2gB,MAAM,CAACE,WAAhB,EAA+BoB,OAAO,GAAKtB,MAAM,CAACG,aAAtD,CAAqE,CACnE,KAAKkB,SAAL,CAAexsB,GAAf,CACE6mB,QADF,CAEEsE,MAAM,CAACgB,kBAAP,CACEtF,QADF,CAEEnH,MAAM,CAACG,YAFT,CAGE0M,SAAS,CAAC1M,YAHZ,CAFF,EAQD,CATD,IASO,IACLrV,IAAI,GAAK2gB,MAAM,CAACG,aAAhB,EACAmB,OAAO,GAAKtB,MAAM,CAACE,WAFd,CAGL,CACA,KAAKmB,SAAL,CAAelF,MAAf,CAAsBT,QAAtB,EACD,CALM,IAKA,IACLrc,IAAI,GAAK2gB,MAAM,CAACG,aAAhB,EACAmB,OAAO,GAAKtB,MAAM,CAACM,aAFd,CAGL,CACA,KAAKe,SAAL,CAAexsB,GAAf,CACE6mB,QADF,CAEEsE,MAAM,CAACc,kBAAP,CAA0BpF,QAA1B,CAAoC0F,SAAS,CAACrB,OAA9C,CAFF,EAID,CARM,IAQA,IACL1gB,IAAI,GAAK2gB,MAAM,CAACM,aAAhB,EACAgB,OAAO,GAAKtB,MAAM,CAACE,WAFd,CAGL,CACA,KAAKmB,SAAL,CAAexsB,GAAf,CACE6mB,QADF,CAEEsE,MAAM,CAACe,gBAAP,CAAwBrF,QAAxB,CAAkCnH,MAAM,CAACG,YAAzC,CAFF,EAID,CARM,IAQA,IACLrV,IAAI,GAAK2gB,MAAM,CAACM,aAAhB,EACAgB,OAAO,GAAKtB,MAAM,CAACM,aAFd,CAGL,CACA,KAAKe,SAAL,CAAexsB,GAAf,CACE6mB,QADF,CAEEsE,MAAM,CAACgB,kBAAP,CACEtF,QADF,CAEEnH,MAAM,CAACG,YAFT,CAGE0M,SAAS,CAACrB,OAHZ,CAFF,EAQD,CAZM,IAYA,CACL,KAAM7Z,eAAc,CAClB,mCACEqO,MADF,CAEE,kBAFF,CAGE6M,SAJgB,CAApB,CAMD,CACF,CApDD,IAoDO,CACL,KAAKC,SAAL,CAAexsB,GAAf,CAAmB6mB,QAAnB,CAA6BnH,MAA7B,EACD,CACF,CArED,CAuEA4M,uDACE,MAAOptB,MAAK,CAACwtB,IAAN,CAAW,KAAKF,SAAL,CAAenH,MAAf,EAAX,CAAP,CACD,CAFD,CAGF,8BAAC,CA7ED,GCpBA;;;;;;;;;;;;;;;IAmDA;;;;;;IAOA;AACA,qFAkBC;;OAdCsH,2DAAiB9F,QAAjB,CAAkC,CAChC,MAAO,KAAP,CACD,CAFD;;OAOA8F,6DACE9Z,KADF,CAEElK,KAFF,CAGEpE,OAHF,CAGmB,CAEjB,MAAO,KAAP,CACD,CAND,CAOF,8BAAC,CAlBD,GAoBA;;;;GAKO,GAAMqoB,yBAAwB,CAAG,GAAID,uBAAJ,EAAjC,CAEP;;;;;;GAOA;;;;OAME,sCACUE,OADV,CAEUC,UAFV,CAGUC,uBAHV,CAGqD,CAA3C,kEAA2C,CAF3C,qBACA,2BACA,qDACN;;OAKJC,iEAAiBnG,QAAjB,CAAiC,CAC/B,GAAMrW,KAAI,CAAG,KAAKsc,UAAL,CAAgBG,aAAhB,EAAb,CACA,GAAIzc,IAAI,CAACga,kBAAL,CAAwB3D,QAAxB,CAAJ,CAAuC,CACrC,MAAOrW,KAAI,CAACya,OAAL,GAAe3Q,iBAAf,CAAiCuM,QAAjC,CAAP,CACD,CAFD,IAEO,CACL,GAAMqG,WAAU,CACd,KAAKH,uBAAL,EAAgC,IAAhC,CACI,GAAIzC,UAAJ,CAAc,KAAKyC,uBAAnB,CAA4C,IAA5C,CAAkD,KAAlD,CADJ,CAEI,KAAKD,UAAL,CAAgBK,cAAhB,EAHN,CAIA,MAAO,MAAKN,OAAL,CAAaO,iBAAb,CAA+BvG,QAA/B,CAAyCqG,UAAzC,CAAP,CACD,CACF,CAXD;;OAgBAF,mEACEna,KADF,CAEElK,KAFF,CAGEpE,OAHF,CAGkB,CAEhB,GAAM8oB,mBAAkB,CACtB,KAAKN,uBAAL,EAAgC,IAAhC,CACI,KAAKA,uBADT,CAEI,KAAKD,UAAL,CAAgBQ,qBAAhB,EAHN,CAIA,GAAMC,MAAK,CAAG,KAAKV,OAAL,CAAaW,gBAAb,CACZH,kBADY,CAEZ1kB,KAFY,CAGZ,CAHY,CAIZpE,OAJY,CAKZsO,KALY,CAAd,CAOA,GAAI0a,KAAK,CAACvuB,MAAN,GAAiB,CAArB,CAAwB,CACtB,MAAO,KAAP,CACD,CAFD,IAEO,CACL,MAAOuuB,MAAK,CAAC,CAAD,CAAZ,CACD,CACF,CArBD,CAsBF,oCAAC,CArDD,GC7FA;;;;;;;;;;;;;;;IAsCA;;;GAIA;;;OAKE,yBACkBE,SADlB,CAEkBC,OAFlB,CAEmC,CADjB,yBACA,qBACd,CACN,uBAAC,CATD,GAWA;;GAGA;;OAIE,uBAA6BC,OAA7B,CAAgD,CAAnB,qBAAuB;;OAKpDC,+CAAcH,SAAd,CAAkC,CAChC/tB,MAAM,CACJ+tB,SAAS,CAACR,aAAV,GAA0BhC,OAA1B,GAAoCa,SAApC,CAA8C,KAAK6B,OAAL,CAAa/N,QAAb,EAA9C,CADI,CAEJ,wBAFI,CAAN,CAIAlgB,MAAM,CACJ+tB,SAAS,CAACN,cAAV,GAA2BlC,OAA3B,GAAqCa,SAArC,CAA+C,KAAK6B,OAAL,CAAa/N,QAAb,EAA/C,CADI,CAEJ,yBAFI,CAAN,CAID,CATD;;;;;;OAkBAgO,gDACEC,YADF,CAEEC,SAFF,CAGEC,WAHF,CAIEC,aAJF,CAI4B,CAE1B,GAAMC,YAAW,CAAG,GAAI3B,uBAAJ,EAApB,CACA,GAAI4B,aAAJ,CAAkBC,gBAAlB,CACA,GAAIL,SAAS,CAACtjB,IAAV,GAAmBmd,aAAa,CAACqC,SAArC,CAAgD,CAC9C,GAAMoE,UAAS,CAAGN,SAAlB,CACA,GAAIM,SAAS,CAACvE,MAAV,CAAiBjC,QAArB,CAA+B,CAC7BsG,YAAY,CAAG,KAAKG,mBAAL,CACbR,YADa,CAEbO,SAAS,CAAC5oB,IAFG,CAGb4oB,SAAS,CAACtQ,IAHG,CAIbiQ,WAJa,CAKbC,aALa,CAMbC,WANa,CAAf,CAQD,CATD,IASO,CACLvuB,MAAM,CAAC0uB,SAAS,CAACvE,MAAV,CAAiBhC,UAAlB,CAA8B,iBAA9B,CAAN;;;AAIAsG,gBAAgB,CACdC,SAAS,CAACvE,MAAV,CAAiB9B,MAAjB,EACC8F,YAAY,CAACV,cAAb,GAA8BmB,UAA9B,IACC,CAACF,SAAS,CAAC5oB,IAAV,CAAesM,OAAf,EAHL,CAIAoc,YAAY,CAAG,KAAKK,qBAAL,CACbV,YADa,CAEbO,SAAS,CAAC5oB,IAFG,CAGb4oB,SAAS,CAACtQ,IAHG,CAIbiQ,WAJa,CAKbC,aALa,CAMbG,gBANa,CAObF,WAPa,CAAf,CASD,CACF,CA9BD,IA8BO,IAAIH,SAAS,CAACtjB,IAAV,GAAmBmd,aAAa,CAACuC,KAArC,CAA4C,CACjD,GAAMsE,MAAK,CAAGV,SAAd,CACA,GAAIU,KAAK,CAAC3E,MAAN,CAAajC,QAAjB,CAA2B,CACzBsG,YAAY,CAAG,KAAKO,eAAL,CACbZ,YADa,CAEbW,KAAK,CAAChpB,IAFO,CAGbgpB,KAAK,CAAC7H,QAHO,CAIboH,WAJa,CAKbC,aALa,CAMbC,WANa,CAAf,CAQD,CATD,IASO,CACLvuB,MAAM,CAAC8uB,KAAK,CAAC3E,MAAN,CAAahC,UAAd,CAA0B,iBAA1B,CAAN;AAEAsG,gBAAgB,CACdK,KAAK,CAAC3E,MAAN,CAAa9B,MAAb,EAAuB8F,YAAY,CAACV,cAAb,GAA8BmB,UAA9B,EADzB,CAEAJ,YAAY,CAAG,KAAKQ,iBAAL,CACbb,YADa,CAEbW,KAAK,CAAChpB,IAFO,CAGbgpB,KAAK,CAAC7H,QAHO,CAIboH,WAJa,CAKbC,aALa,CAMbG,gBANa,CAObF,WAPa,CAAf,CASD,CACF,CA1BM,IA0BA,IAAIH,SAAS,CAACtjB,IAAV,GAAmBmd,aAAa,CAACQ,cAArC,CAAqD,CAC1D,GAAMwG,aAAY,CAAGb,SAArB,CACA,GAAI,CAACa,YAAY,CAACzG,MAAlB,CAA0B,CACxBgG,YAAY,CAAG,KAAKU,aAAL,CACbf,YADa,CAEbc,YAAY,CAACnpB,IAFA,CAGbmpB,YAAY,CAAC1G,YAHA,CAIb8F,WAJa,CAKbC,aALa,CAMbC,WANa,CAAf,CAQD,CATD,IASO,CACLC,YAAY,CAAG,KAAKW,gBAAL,CACbhB,YADa,CAEbc,YAAY,CAACnpB,IAFA,CAGbuoB,WAHa,CAIbC,aAJa,CAKbC,WALa,CAAf,CAOD,CACF,CApBM,IAoBA,IAAIH,SAAS,CAACtjB,IAAV,GAAmBmd,aAAa,CAACmC,eAArC,CAAsD,CAC3DoE,YAAY,CAAG,KAAKY,eAAL,CACbjB,YADa,CAEbC,SAAS,CAACtoB,IAFG,CAGbuoB,WAHa,CAIbE,WAJa,CAAf,CAMD,CAPM,IAOA,CACL,KAAM5c,eAAc,CAAC,2BAA6Byc,SAAS,CAACtjB,IAAxC,CAApB,CACD,CACD,GAAMkjB,QAAO,CAAGO,WAAW,CAACc,UAAZ,EAAhB,CACAnB,aAAa,CAACoB,mBAAd,CAAkCnB,YAAlC,CAAgDK,YAAhD,CAA8DR,OAA9D,EACA,MAAO,IAAIuB,gBAAJ,CAAoBf,YAApB,CAAkCR,OAAlC,CAAP,CACD,CAjGD;;;;;OAyGeE,kCAAf,SACEC,YADF,CAEEK,YAFF,CAGED,WAHF,CAGuB,CAErB,GAAMpD,UAAS,CAAGqD,YAAY,CAACjB,aAAb,EAAlB,CACA,GAAIpC,SAAS,CAACN,kBAAV,EAAJ,CAAoC,CAClC,GAAM2E,cAAa,CACjBrE,SAAS,CAACI,OAAV,GAAoBpZ,UAApB,IAAoCgZ,SAAS,CAACI,OAAV,GAAoBnZ,OAApB,EADtC,CAEA,GAAMqd,gBAAe,CAAGtB,YAAY,CAACuB,oBAAb,EAAxB,CACA,GACEnB,WAAW,CAACjvB,MAAZ,CAAqB,CAArB,EACA,CAAC6uB,YAAY,CAACZ,aAAb,GAA6B1C,kBAA7B,EADD,EAEC2E,aAAa,EACZ,CAACrE,SAAS,CAACI,OAAV,GAAoBvX,MAApB,CAA0B,oBAAsByb,eAAhD,CAHH,EAIA,CAACtE,SAAS,CAACI,OAAV,GAAoBlZ,WAApB,GAAkC2B,MAAlC,CAAyCyb,eAAe,CAACpd,WAAhB,EAAzC,CALH,CAME,CACAkc,WAAW,CAACnrB,IAAZ,CACEqoB,MAAM,CAACkE,WAAP,qBACuBnB,YAAY,CAACkB,oBAAb,EADvB,CADF,EAKD,CACF,CACF,CAxBc;;;;;;;;OAmCPxB,4DAAR,SACEH,SADF,CAEE6B,UAFF,CAGEvB,WAHF,CAIElE,MAJF,CAKEoE,WALF,CAKqC,CAEnC,GAAMsB,aAAY,CAAG9B,SAAS,CAACR,aAAV,EAArB,CACA,GAAIc,WAAW,CAACyB,cAAZ,CAA2BF,UAA3B,GAA0C,IAA9C,CAAoD;AAElD,MAAO7B,UAAP,CACD,CAHD,IAGO,CACL,GAAIgC,cAAa,OAAjB,CAAmBvC,UAAU,OAA7B,CACA,GAAIoC,UAAU,CAACxd,OAAX,EAAJ,CAA0B;AAExBpS,MAAM,CACJ+tB,SAAS,CAACN,cAAV,GAA2B5C,kBAA3B,EADI,CAEJ,4DAFI,CAAN,CAIA,GAAIkD,SAAS,CAACN,cAAV,GAA2BmB,UAA3B,EAAJ,CAA6C;;;AAI3C,GAAMoB,YAAW,CAAGjC,SAAS,CAACH,qBAAV,EAApB,CACA,GAAMqC,iBAAgB,CACpBD,WAAW,WAAYtV,aAAvB,CACIsV,WADJ,CAEItV,YAAY,CAAChI,UAHnB,CAIA,GAAMwd,sBAAqB,CAAG7B,WAAW,CAAC8B,yBAAZ,CAC5BF,gBAD4B,CAA9B,CAGAF,aAAa,CAAG,KAAK9B,OAAL,CAAamC,cAAb,CACdrC,SAAS,CAACR,aAAV,GAA0BhC,OAA1B,EADc,CAEd2E,qBAFc,CAGd3B,WAHc,CAAhB,CAKD,CAjBD,IAiBO,CACL,GAAM8B,aAAY,CAAGhC,WAAW,CAAC5I,sBAAZ,CACnBsI,SAAS,CAACH,qBAAV,EADmB,CAArB,CAGAmC,aAAa,CAAG,KAAK9B,OAAL,CAAamC,cAAb,CACdrC,SAAS,CAACR,aAAV,GAA0BhC,OAA1B,EADc,CAEd8E,YAFc,CAGd9B,WAHc,CAAhB,CAKD,CACF,CAjCD,IAiCO,CACL,GAAMpH,SAAQ,CAAGyI,UAAU,CAAC9nB,QAAX,EAAjB,CACA,GAAIqf,QAAQ,GAAK,WAAjB,CAA8B,CAC5BnnB,MAAM,CACJ4vB,UAAU,CAACpnB,SAAX,KAA2B,CADvB,CAEJ,uDAFI,CAAN,CAIA,GAAM8nB,aAAY,CAAGT,YAAY,CAACtE,OAAb,EAArB,CACAiC,UAAU,CAAGO,SAAS,CAACN,cAAV,GAA2BlC,OAA3B,EAAb;AAEA,GAAMgF,gBAAe,CAAGlC,WAAW,CAACmC,kCAAZ,CACtBZ,UADsB,CAEtBU,YAFsB,CAGtB9C,UAHsB,CAAxB,CAKA,GAAI+C,eAAe,EAAI,IAAvB,CAA6B,CAC3BR,aAAa,CAAG,KAAK9B,OAAL,CAAalb,cAAb,CACdud,YADc,CAEdC,eAFc,CAAhB,CAID,CALD,IAKO;AAELR,aAAa,CAAGF,YAAY,CAACtE,OAAb,EAAhB,CACD,CACF,CAtBD,IAsBO,CACL,GAAMkF,gBAAe,CAAGb,UAAU,CAAC3nB,QAAX,EAAxB;AAEA,GAAIyoB,cAAa,OAAjB,CACA,GAAIb,YAAY,CAAC/E,kBAAb,CAAgC3D,QAAhC,CAAJ,CAA+C,CAC7CqG,UAAU,CAAGO,SAAS,CAACN,cAAV,GAA2BlC,OAA3B,EAAb,CACA,GAAMoF,iBAAgB,CAAGtC,WAAW,CAACmC,kCAAZ,CACvBZ,UADuB,CAEvBC,YAAY,CAACtE,OAAb,EAFuB,CAGvBiC,UAHuB,CAAzB,CAKA,GAAImD,gBAAgB,EAAI,IAAxB,CAA8B,CAC5BD,aAAa,CAAGb,YAAY,CACzBtE,OADa,GAEb3Q,iBAFa,CAEKuM,QAFL,EAGbjU,WAHa,CAGDud,eAHC,CAGgBE,gBAHhB,CAAhB,CAID,CALD,IAKO;AAELD,aAAa,CAAGb,YAAY,CACzBtE,OADa,GAEb3Q,iBAFa,CAEKuM,QAFL,CAAhB,CAGD,CACF,CAlBD,IAkBO,CACLuJ,aAAa,CAAGrC,WAAW,CAACX,iBAAZ,CACdvG,QADc,CAEd4G,SAAS,CAACN,cAAV,EAFc,CAAhB,CAID,CACD,GAAIiD,aAAa,EAAI,IAArB,CAA2B,CACzBX,aAAa,CAAG,KAAK9B,OAAL,CAAa/a,WAAb,CACd2c,YAAY,CAACtE,OAAb,EADc,CAEdpE,QAFc,CAGduJ,aAHc,CAIdD,eAJc,CAKdtG,MALc,CAMdoE,WANc,CAAhB,CAQD,CATD,IASO;AAELwB,aAAa,CAAGF,YAAY,CAACtE,OAAb,EAAhB,CACD,CACF,CACF,CACD,MAAOwC,UAAS,CAAC6C,eAAV,CACLb,aADK,CAELF,YAAY,CAAChF,kBAAb,IAAqC+E,UAAU,CAACxd,OAAX,EAFhC,CAGL,KAAK6b,OAAL,CAAa4C,YAAb,EAHK,CAAP,CAKD,CACF,CAvHO;;;;;;;;;;OAoIR3C,uDACEC,YADF,CAEEyB,UAFF,CAGEkB,WAHF,CAIEzC,WAJF,CAKEC,aALF,CAMEG,gBANF,CAOEF,WAPF,CAOqC,CAEnC,GAAMwC,cAAa,CAAG5C,YAAY,CAACV,cAAb,EAAtB,CACA,GAAIuD,eAAJ,CACA,GAAMC,aAAY,CAAGxC,gBAAgB,CACjC,KAAKR,OAD4B,CAEjC,KAAKA,OAAL,CAAaiD,gBAAb,EAFJ,CAGA,GAAItB,UAAU,CAACxd,OAAX,EAAJ,CAA0B,CACxB4e,cAAc,CAAGC,YAAY,CAACb,cAAb,CACfW,aAAa,CAACxF,OAAd,EADe,CAEfuF,WAFe,CAGf,IAHe,CAAjB,CAKD,CAND,IAMO,IAAIG,YAAY,CAACJ,YAAb,IAA+B,CAACE,aAAa,CAACnC,UAAd,EAApC,CAAgE;AAErE,GAAMuC,cAAa,CAAGJ,aAAa,CAChCxF,OADmB,GAEnBrY,WAFmB,CAEP0c,UAFO,CAEKkB,WAFL,CAAtB,CAGAE,cAAc,CAAGC,YAAY,CAACb,cAAb,CACfW,aAAa,CAACxF,OAAd,EADe,CAEf4F,aAFe,CAGf,IAHe,CAAjB,CAKD,CAVM,IAUA,CACL,GAAMhK,SAAQ,CAAGyI,UAAU,CAAC9nB,QAAX,EAAjB,CACA,GACE,CAACipB,aAAa,CAACK,iBAAd,CAAgCxB,UAAhC,CAAD,EACAA,UAAU,CAACpnB,SAAX,GAAyB,CAF3B,CAGE;AAEA,MAAO2lB,aAAP,CACD,CACD,GAAMsC,gBAAe,CAAGb,UAAU,CAAC3nB,QAAX,EAAxB,CACA,GAAM4K,UAAS,CAAGke,aAAa,CAACxF,OAAd,GAAwB3Q,iBAAxB,CAA0CuM,QAA1C,CAAlB,CACA,GAAMrU,aAAY,CAAGD,SAAS,CAACK,WAAV,CAAsBud,eAAtB,CAAuCK,WAAvC,CAArB,CACA,GAAI3J,QAAQ,GAAK,WAAjB,CAA8B,CAC5B6J,cAAc,CAAGC,YAAY,CAACle,cAAb,CACfge,aAAa,CAACxF,OAAd,EADe,CAEfzY,YAFe,CAAjB,CAID,CALD,IAKO,CACLke,cAAc,CAAGC,YAAY,CAAC/d,WAAb,CACf6d,aAAa,CAACxF,OAAd,EADe,CAEfpE,QAFe,CAGfrU,YAHe,CAIf2d,eAJe,CAKfvD,wBALe,CAMf,IANe,CAAjB,CAQD,CACF,CACD,GAAMsB,aAAY,CAAGL,YAAY,CAACkD,gBAAb,CACnBL,cADmB,CAEnBD,aAAa,CAAClG,kBAAd,IAAsC+E,UAAU,CAACxd,OAAX,EAFnB,CAGnB6e,YAAY,CAACJ,YAAb,EAHmB,CAArB,CAKA,GAAM1G,OAAM,CAAG,GAAImD,6BAAJ,CACbe,WADa,CAEbG,YAFa,CAGbF,aAHa,CAAf,CAKA,MAAO,MAAKgD,mCAAL,CACL9C,YADK,CAELoB,UAFK,CAGLvB,WAHK,CAILlE,MAJK,CAKLoE,WALK,CAAP,CAOD,CA3ED;;;;;;;;;OAuFAL,qDACEC,YADF,CAEEyB,UAFF,CAGEkB,WAHF,CAIEzC,WAJF,CAKEC,aALF,CAMEC,WANF,CAMqC,CAEnC,GAAMsB,aAAY,CAAG1B,YAAY,CAACZ,aAAb,EAArB,CACA,GAAIiB,aAAJ,CAAkBuB,aAAlB,CACA,GAAM5F,OAAM,CAAG,GAAImD,6BAAJ,CACbe,WADa,CAEbF,YAFa,CAGbG,aAHa,CAAf,CAKA,GAAIsB,UAAU,CAACxd,OAAX,EAAJ,CAA0B,CACxB2d,aAAa,CAAG,KAAK9B,OAAL,CAAamC,cAAb,CACdjC,YAAY,CAACZ,aAAb,GAA6BhC,OAA7B,EADc,CAEduF,WAFc,CAGdvC,WAHc,CAAhB,CAKAC,YAAY,CAAGL,YAAY,CAACyC,eAAb,CACbb,aADa,CAEb,IAFa,CAGb,KAAK9B,OAAL,CAAa4C,YAAb,EAHa,CAAf,CAKD,CAXD,IAWO,CACL,GAAM1J,SAAQ,CAAGyI,UAAU,CAAC9nB,QAAX,EAAjB,CACA,GAAIqf,QAAQ,GAAK,WAAjB,CAA8B,CAC5B4I,aAAa,CAAG,KAAK9B,OAAL,CAAalb,cAAb,CACdob,YAAY,CAACZ,aAAb,GAA6BhC,OAA7B,EADc,CAEduF,WAFc,CAAhB,CAIAtC,YAAY,CAAGL,YAAY,CAACyC,eAAb,CACbb,aADa,CAEbF,YAAY,CAAChF,kBAAb,EAFa,CAGbgF,YAAY,CAACjB,UAAb,EAHa,CAAf,CAKD,CAVD,IAUO,CACL,GAAM6B,gBAAe,CAAGb,UAAU,CAAC3nB,QAAX,EAAxB,CACA,GAAMokB,SAAQ,CAAGwD,YAAY,CAACtE,OAAb,GAAuB3Q,iBAAvB,CAAyCuM,QAAzC,CAAjB,CACA,GAAIoC,SAAQ,OAAZ,CACA,GAAIkH,eAAe,CAACre,OAAhB,EAAJ,CAA+B;AAE7BmX,QAAQ,CAAGuH,WAAX,CACD,CAHD,IAGO,CACL,GAAMje,UAAS,CAAGsX,MAAM,CAACoH,gBAAP,CAAwBpK,QAAxB,CAAlB,CACA,GAAItU,SAAS,EAAI,IAAjB,CAAuB,CACrB,GACE4d,eAAe,CAACliB,OAAhB,KAA8B,WAA9B,EACAsE,SAAS,CAACgI,QAAV,CAAmB4V,eAAe,CAACe,MAAhB,EAAnB,EAA6Cpf,OAA7C,EAFF,CAGE;;AAGAmX,QAAQ,CAAG1W,SAAX,CACD,CAPD,IAOO,CACL0W,QAAQ,CAAG1W,SAAS,CAACK,WAAV,CAAsBud,eAAtB,CAAuCK,WAAvC,CAAX,CACD,CACF,CAXD,IAWO;AAELvH,QAAQ,CAAG7O,YAAY,CAAChI,UAAxB,CACD,CACF,CACD,GAAI,CAAC2Z,QAAQ,CAACrY,MAAT,CAAgBuV,QAAhB,CAAL,CAAgC,CAC9B,GAAMkI,aAAY,CAAG,KAAKxD,OAAL,CAAa/a,WAAb,CACnB2c,YAAY,CAACtE,OAAb,EADmB,CAEnBpE,QAFmB,CAGnBoC,QAHmB,CAInBkH,eAJmB,CAKnBtG,MALmB,CAMnBoE,WANmB,CAArB,CAQAC,YAAY,CAAGL,YAAY,CAACyC,eAAb,CACba,YADa,CAEb5B,YAAY,CAAChF,kBAAb,EAFa,CAGb,KAAKoD,OAAL,CAAa4C,YAAb,EAHa,CAAf,CAKD,CAdD,IAcO,CACLrC,YAAY,CAAGL,YAAf,CACD,CACF,CACF,CACD,MAAOK,aAAP,CACD,CAnFD;;;;;OA2FeN,6BAAf,SACEH,SADF,CAEE5G,QAFF,CAEkB,CAEhB,MAAO4G,UAAS,CAACR,aAAV,GAA0BzC,kBAA1B,CAA6C3D,QAA7C,CAAP,CACD,CALc;;;;;;;;;OAiBP+G,wCAAR,SACEH,SADF,CAEEjoB,IAFF,CAGE4rB,eAHF,CAIErD,WAJF,CAKE2B,WALF,CAMEzB,WANF,CAMqC,CANrC;;;;;;AAcE,GAAIoD,aAAY,CAAG5D,SAAnB,CACA2D,eAAe,CAACE,OAAhB,CAAwB,SAAC5pB,YAAD,CAAe6K,SAAf,CAAwB,CAC9C,GAAMgf,UAAS,CAAG/rB,IAAI,CAACmD,KAAL,CAAWjB,YAAX,CAAlB,CACA,GAAIkmB,aAAa,CAAC4D,cAAd,CAA6B/D,SAA7B,CAAwC8D,SAAS,CAAC/pB,QAAV,EAAxC,CAAJ,CAAmE,CACjE6pB,YAAY,CAAGxX,KAAI,CAACwU,mBAAL,CACbgD,YADa,CAEbE,SAFa,CAGbhf,SAHa,CAIbwb,WAJa,CAKb2B,WALa,CAMbzB,WANa,CAAf,CAQD,CACF,CAZD,EAcAmD,eAAe,CAACE,OAAhB,CAAwB,SAAC5pB,YAAD,CAAe6K,SAAf,CAAwB,CAC9C,GAAMgf,UAAS,CAAG/rB,IAAI,CAACmD,KAAL,CAAWjB,YAAX,CAAlB,CACA,GAAI,CAACkmB,aAAa,CAAC4D,cAAd,CAA6B/D,SAA7B,CAAwC8D,SAAS,CAAC/pB,QAAV,EAAxC,CAAL,CAAoE,CAClE6pB,YAAY,CAAGxX,KAAI,CAACwU,mBAAL,CACbgD,YADa,CAEbE,SAFa,CAGbhf,SAHa,CAIbwb,WAJa,CAKb2B,WALa,CAMbzB,WANa,CAAf,CAQD,CACF,CAZD,EAcA,MAAOoD,aAAP,CACD,CA5CO;;;;;OAoDAzD,oCAAR,SAAoBpd,IAApB,CAAgCge,KAAhC,CAA0D,CACxDA,KAAK,CAAC8C,OAAN,CAAc,SAAC5pB,YAAD,CAAe6K,SAAf,CAAwB,CACpC/B,IAAI,CAAGA,IAAI,CAACoC,WAAL,CAAiBlL,YAAjB,CAA+B6K,SAA/B,CAAP,CACD,CAFD,EAGA,MAAO/B,KAAP,CACD,CALO;;;;;;;;;;OAkBAod,0CAAR,SACEH,SADF,CAEEjoB,IAFF,CAGE4rB,eAHF,CAIErD,WAJF,CAKE2B,WALF,CAMEvB,gBANF,CAOEF,WAPF,CAOqC,CAPrC;;AAWE,GACER,SAAS,CAACN,cAAV,GAA2BlC,OAA3B,GAAqCnZ,OAArC,IACA,CAAC2b,SAAS,CAACN,cAAV,GAA2B5C,kBAA3B,EAFH,CAGE,CACA,MAAOkD,UAAP,CACD;;;;;;AAQD,GAAI4D,aAAY,CAAG5D,SAAnB,CACA,GAAIgE,cAAJ,CACA,GAAIjsB,IAAI,CAACsM,OAAL,EAAJ,CAAoB,CAClB2f,aAAa,CAAGL,eAAhB,CACD,CAFD,IAEO,CACLK,aAAa,CAAG/I,aAAa,CAACH,KAAd,CAAoBY,OAApB,CAA4B3jB,IAA5B,CAAkC4rB,eAAlC,CAAhB,CACD,CACD,GAAMlE,WAAU,CAAGO,SAAS,CAACN,cAAV,GAA2BlC,OAA3B,EAAnB,CACAwG,aAAa,CAAC9K,QAAd,CAAuB5R,gBAAvB,CAAwC,SAAC8R,QAAD,CAAW7O,SAAX,CAAoB,CAC1D,GAAIkV,UAAU,CAACzC,QAAX,CAAoB5D,QAApB,CAAJ,CAAmC,CACjC,GAAM6K,YAAW,CAAGjE,SAAS,CAC1BN,cADiB,GAEjBlC,OAFiB,GAGjB3Q,iBAHiB,CAGCuM,QAHD,CAApB,CAIA,GAAMoC,SAAQ,CAAGpP,KAAI,CAAC8X,WAAL,CAAiBD,WAAjB,CAA8B1Z,SAA9B,CAAjB,CACAqZ,YAAY,CAAGxX,KAAI,CAAC0U,qBAAL,CACb8C,YADa,CAEb,GAAIzqB,KAAJ,CAASigB,QAAT,CAFa,CAGboC,QAHa,CAIb8E,WAJa,CAKb2B,WALa,CAMbvB,gBANa,CAObF,WAPa,CAAf,CASD,CACF,CAjBD,EAkBAwD,aAAa,CAAC9K,QAAd,CAAuB5R,gBAAvB,CAAwC,SAAC8R,QAAD,CAAW+K,cAAX,CAAyB,CAC/D,GAAMC,mBAAkB,CACtB,CAACpE,SAAS,CAACN,cAAV,GAA2B3C,kBAA3B,CAA8C3D,QAA9C,CAAD,EACA+K,cAAc,CAACn1B,KAAf,EAAwB,IAF1B,CAGA,GAAI,CAACywB,UAAU,CAACzC,QAAX,CAAoB5D,QAApB,CAAD,EAAkC,CAACgL,kBAAvC,CAA2D,CACzD,GAAMH,YAAW,CAAGjE,SAAS,CAC1BN,cADiB,GAEjBlC,OAFiB,GAGjB3Q,iBAHiB,CAGCuM,QAHD,CAApB,CAIA,GAAMoC,SAAQ,CAAGpP,KAAI,CAAC8X,WAAL,CAAiBD,WAAjB,CAA8BE,cAA9B,CAAjB,CACAP,YAAY,CAAGxX,KAAI,CAAC0U,qBAAL,CACb8C,YADa,CAEb,GAAIzqB,KAAJ,CAASigB,QAAT,CAFa,CAGboC,QAHa,CAIb8E,WAJa,CAKb2B,WALa,CAMbvB,gBANa,CAObF,WAPa,CAAf,CASD,CACF,CApBD,EAsBA,MAAOoD,aAAP,CACD,CAzEO;;;;;;;;;OAqFAzD,sCAAR,SACEH,SADF,CAEEqE,OAFF,CAGE7J,YAHF,CAIE8F,WAJF,CAKEC,aALF,CAMEC,WANF,CAMqC,CAEnC,GAAIF,WAAW,CAACyB,cAAZ,CAA2BsC,OAA3B,GAAuC,IAA3C,CAAiD,CAC/C,MAAOrE,UAAP,CACD;AAGD,GAAMU,iBAAgB,CAAGV,SAAS,CAACN,cAAV,GAA2BmB,UAA3B,EAAzB;;AAIA,GAAMoB,YAAW,CAAGjC,SAAS,CAACN,cAAV,EAApB,CACA,GAAIlF,YAAY,CAACxrB,KAAb,EAAsB,IAA1B,CAAgC;AAE9B,GACGq1B,OAAO,CAAChgB,OAAR,IAAqB4d,WAAW,CAACnF,kBAAZ,EAAtB,EACAmF,WAAW,CAACoB,iBAAZ,CAA8BgB,OAA9B,CAFF,CAGE,CACA,MAAO,MAAKvD,qBAAL,CACLd,SADK,CAELqE,OAFK,CAGLpC,WAAW,CAACzE,OAAZ,GAAsB1Q,QAAtB,CAA+BuX,OAA/B,CAHK,CAIL/D,WAJK,CAKLC,aALK,CAMLG,gBANK,CAOLF,WAPK,CAAP,CASD,CAbD,IAaO,IAAI6D,OAAO,CAAChgB,OAAR,EAAJ,CAAuB;;AAG5B,GAAIigB,kBAAe,CAAGrJ,aAAa,CAACH,KAApC,CACAmH,WAAW,CAACzE,OAAZ,GAAsBlQ,YAAtB,CAAmCxJ,SAAnC,CAA8C,SAACtU,IAAD,CAAOuT,IAAP,CAAW,CACvDuhB,iBAAe,CAAGA,iBAAe,CAAC/xB,GAAhB,CAAoB,GAAI4G,KAAJ,CAAS3J,IAAT,CAApB,CAAoCuT,IAApC,CAAlB,CACD,CAFD,EAGA,MAAO,MAAKke,iBAAL,CACLjB,SADK,CAELqE,OAFK,CAGLC,iBAHK,CAILhE,WAJK,CAKLC,aALK,CAMLG,gBANK,CAOLF,WAPK,CAAP,CASD,CAhBM,IAgBA,CACL,MAAOR,UAAP,CACD,CACF,CAlCD,IAkCO;AAEL,GAAIuE,kBAAe,CAAGtJ,aAAa,CAACH,KAApC,CACAN,YAAY,CAACqJ,OAAb,CAAqB,SAACW,SAAD,CAAYx1B,KAAZ,CAAiB,CACpC,GAAMy1B,gBAAe,CAAGJ,OAAO,CAACnpB,KAAR,CAAcspB,SAAd,CAAxB,CACA,GAAIvC,WAAW,CAACoB,iBAAZ,CAA8BoB,eAA9B,CAAJ,CAAoD,CAClDF,iBAAe,CAAGA,iBAAe,CAAChyB,GAAhB,CAChBiyB,SADgB,CAEhBvC,WAAW,CAACzE,OAAZ,GAAsB1Q,QAAtB,CAA+B2X,eAA/B,CAFgB,CAAlB,CAID,CACF,CARD,EASA,MAAO,MAAKxD,iBAAL,CACLjB,SADK,CAELqE,OAFK,CAGLE,iBAHK,CAILjE,WAJK,CAKLC,aALK,CAMLG,gBANK,CAOLF,WAPK,CAAP,CASD,CACF,CA1EO;;;;;;;OAoFAL,wCAAR,SACEH,SADF,CAEEjoB,IAFF,CAGEuoB,WAHF,CAIEE,WAJF,CAIqC,CAEnC,GAAMkE,cAAa,CAAG1E,SAAS,CAACN,cAAV,EAAtB,CACA,GAAMe,aAAY,CAAGT,SAAS,CAACsD,gBAAV,CACnBoB,aAAa,CAAClH,OAAd,EADmB,CAEnBkH,aAAa,CAAC5H,kBAAd,IAAsC/kB,IAAI,CAACsM,OAAL,EAFnB,CAGnBqgB,aAAa,CAAC7D,UAAd,EAHmB,CAArB,CAKA,MAAO,MAAK0C,mCAAL,CACL9C,YADK,CAEL1oB,IAFK,CAGLuoB,WAHK,CAILnB,wBAJK,CAKLqB,WALK,CAAP,CAOD,CAnBO;;;;;;;;OA8BAL,yCAAR,SACEH,SADF,CAEEjoB,IAFF,CAGEuoB,WAHF,CAIEqE,mBAJF,CAKEnE,WALF,CAKqC,CAEnC,GAAInD,SAAJ,CACA,GAAIiD,WAAW,CAACyB,cAAZ,CAA2BhqB,IAA3B,GAAoC,IAAxC,CAA8C,CAC5C,MAAOioB,UAAP,CACD,CAFD,IAEO,CACL,GAAM5D,OAAM,CAAG,GAAImD,6BAAJ,CACbe,WADa,CAEbN,SAFa,CAGb2E,mBAHa,CAAf,CAKA,GAAMC,cAAa,CAAG5E,SAAS,CAACR,aAAV,GAA0BhC,OAA1B,EAAtB,CACA,GAAIwE,cAAa,OAAjB,CACA,GAAIjqB,IAAI,CAACsM,OAAL,IAAkBtM,IAAI,CAACgC,QAAL,KAAoB,WAA1C,CAAuD,CACrD,GAAIqJ,QAAO,OAAX,CACA,GAAI4c,SAAS,CAACN,cAAV,GAA2B5C,kBAA3B,EAAJ,CAAqD,CACnD1Z,OAAO,CAAGkd,WAAW,CAAC5I,sBAAZ,CACRsI,SAAS,CAACH,qBAAV,EADQ,CAAV,CAGD,CAJD,IAIO,CACL,GAAMgF,eAAc,CAAG7E,SAAS,CAACN,cAAV,GAA2BlC,OAA3B,EAAvB,CACAvrB,MAAM,CACJ4yB,cAAc,WAAYlY,aADtB,CAEJ,+CAFI,CAAN,CAIAvJ,OAAO,CAAGkd,WAAW,CAAC8B,yBAAZ,CACRyC,cADQ,CAAV,CAGD,CACDzhB,OAAO,CAAGA,OAAV,CACA4e,aAAa,CAAG,KAAK9B,OAAL,CAAamC,cAAb,CACduC,aADc,CAEdxhB,OAFc,CAGdod,WAHc,CAAhB,CAKD,CAtBD,IAsBO,CACL,GAAMpH,SAAQ,CAAGrhB,IAAI,CAACgC,QAAL,EAAjB,CACA,GAAIyhB,SAAQ,CAAG8E,WAAW,CAACX,iBAAZ,CACbvG,QADa,CAEb4G,SAAS,CAACN,cAAV,EAFa,CAAf,CAIA,GACElE,QAAQ,EAAI,IAAZ,EACAwE,SAAS,CAACN,cAAV,GAA2B3C,kBAA3B,CAA8C3D,QAA9C,CAFF,CAGE,CACAoC,QAAQ,CAAGoJ,aAAa,CAAC/X,iBAAd,CAAgCuM,QAAhC,CAAX,CACD,CACD,GAAIoC,QAAQ,EAAI,IAAhB,CAAsB,CACpBwG,aAAa,CAAG,KAAK9B,OAAL,CAAa/a,WAAb,CACdyf,aADc,CAEdxL,QAFc,CAGdoC,QAHc,CAIdzjB,IAAI,CAACmC,QAAL,EAJc,CAKdkiB,MALc,CAMdoE,WANc,CAAhB,CAQD,CATD,IASO,IAAIR,SAAS,CAACR,aAAV,GAA0BhC,OAA1B,GAAoCR,QAApC,CAA6C5D,QAA7C,CAAJ,CAA4D;AAEjE4I,aAAa,CAAG,KAAK9B,OAAL,CAAa/a,WAAb,CACdyf,aADc,CAEdxL,QAFc,CAGdzM,YAAY,CAAChI,UAHC,CAId5M,IAAI,CAACmC,QAAL,EAJc,CAKdkiB,MALc,CAMdoE,WANc,CAAhB,CAQD,CAVM,IAUA,CACLwB,aAAa,CAAG4C,aAAhB,CACD,CACD,GACE5C,aAAa,CAAC3d,OAAd,IACA2b,SAAS,CAACN,cAAV,GAA2B5C,kBAA3B,EAFF,CAGE;AAEAO,QAAQ,CAAGiD,WAAW,CAAC5I,sBAAZ,CACTsI,SAAS,CAACH,qBAAV,EADS,CAAX,CAGA,GAAIxC,QAAQ,CAACjZ,UAAT,EAAJ,CAA2B,CACzB4d,aAAa,CAAG,KAAK9B,OAAL,CAAamC,cAAb,CACdL,aADc,CAEd3E,QAFc,CAGdmD,WAHc,CAAhB,CAKD,CACF,CACF,CACDnD,QAAQ,CACN2C,SAAS,CAACN,cAAV,GAA2B5C,kBAA3B,IACAwD,WAAW,CAACyB,cAAZ,CAA2B5oB,IAAI,CAAC2hB,KAAhC,GAA0C,IAF5C,CAGA,MAAOkF,UAAS,CAAC6C,eAAV,CACLb,aADK,CAEL3E,QAFK,CAGL,KAAK6C,OAAL,CAAa4C,YAAb,EAHK,CAAP,CAKD,CACF,CApGO,CAqGV,qBAAC,CAh2BD,GCxDA;;;;;;;;;;;;;;;IAyBA;;;;;;GAOA;;;OAOE,wBAAoBgC,MAApB,CAAiC,CAAb;;;WAKlB,KAAKnU,MAAL,CAAc,KAAKmU,MAAL,CAAY5S,cAAZ,GAA6BC,QAA7B,EAAd,CACD;;;;;;;;;;;;;OAgBD4S,2DACE9E,OADF,CAEE+E,UAFF,CAGEC,kBAHF,CAGyC,CAHzC,eAKE,GAAMC,OAAM,CAAY,EAAxB,CACA,GAAMC,MAAK,CAAa,EAAxB,CAEAlF,OAAO,CAAChG,OAAR,CAAgB,gBAAM,CACpB,GACEhI,MAAM,CAAClV,IAAP,GAAgB2gB,MAAM,CAACM,aAAvB,EACA5R,KAAI,CAACuE,MAAL,CAAYyU,mBAAZ,CACEnT,MAAM,CAACwL,OADT,CAEExL,MAAM,CAACG,YAFT,CAFF,CAME,CACA+S,KAAK,CAAC9vB,IAAN,CACEqoB,MAAM,CAAC2H,gBAAP,CACEpT,MAAM,CAACpN,SADT,CAEEoN,MAAM,CAACG,YAFT,CADF,EAMD,CACF,CAfD,EAiBA,KAAKkT,sBAAL,CACEJ,MADF,CAEExH,MAAM,CAACG,aAFT,CAGEoC,OAHF,CAIEgF,kBAJF,CAKED,UALF,EAOA,KAAKM,sBAAL,CACEJ,MADF,CAEExH,MAAM,CAACE,WAFT,CAGEqC,OAHF,CAIEgF,kBAJF,CAKED,UALF,EAOA,KAAKM,sBAAL,CACEJ,MADF,CAEExH,MAAM,CAACO,WAFT,CAGEkH,KAHF,CAIEF,kBAJF,CAKED,UALF,EAOA,KAAKM,sBAAL,CACEJ,MADF,CAEExH,MAAM,CAACM,aAFT,CAGEiC,OAHF,CAIEgF,kBAJF,CAKED,UALF,EAOA,KAAKM,sBAAL,CACEJ,MADF,CAEExH,MAAM,CAACC,KAFT,CAGEsC,OAHF,CAIEgF,kBAJF,CAKED,UALF,EAQA,MAAOE,OAAP,CACD,CA9DD;;;;;;;;;OA0EQH,gDAAR,SACEG,MADF,CAEEvkB,SAFF,CAGEsf,OAHF,CAIEsF,aAJF,CAKEP,UALF,CAKkB,CALlB,eAOE,GAAMQ,gBAAe,CAAGvF,OAAO,CAACwF,MAAR,CAAe,gBAAM,CAAI,aAAM,CAAC1oB,IAAP,GAAgB4D,SAAhB,CAAyB,CAAlD,CAAxB,CAEA6kB,eAAe,CAAClwB,IAAhB,CAAqB,KAAKowB,eAAL,CAAqBpzB,IAArB,CAA0B,IAA1B,CAArB,EACAkzB,eAAe,CAACvL,OAAhB,CAAwB,gBAAM,CAC5B,GAAM0L,mBAAkB,CAAGvZ,KAAI,CAACwZ,wBAAL,CACzB3T,MADyB,CAEzB+S,UAFyB,CAA3B,CAIAO,aAAa,CAACtL,OAAd,CAAsB,sBAAY,CAChC,GAAI4L,YAAY,CAACC,UAAb,CAAwB7T,MAAM,CAAClV,IAA/B,CAAJ,CAA0C,CACxCmoB,MAAM,CAAC7vB,IAAP,CACEwwB,YAAY,CAACE,WAAb,CAAyBJ,kBAAzB,CAA6CvZ,KAAI,CAAC0Y,MAAlD,CADF,EAGD,CACF,CAND,EAOD,CAZD,EAaD,CAvBO;;;;;OA+BAC,kDAAR,SAAiC9S,MAAjC,CAAiD+S,UAAjD,CAAiE,CAC/D,GAAI/S,MAAM,CAAClV,IAAP,GAAgB,OAAhB,EAA2BkV,MAAM,CAAClV,IAAP,GAAgB,eAA/C,CAAgE,CAC9D,MAAOkV,OAAP,CACD,CAFD,IAEO,CACLA,MAAM,CAACX,QAAP,CAAkB0T,UAAU,CAACgB,uBAAX,uBAEhB/T,MAAM,CAACpN,SAFS,CAGhBoN,MAAM,CAACG,YAHS,CAIhB,KAAKzB,MAJW,CAAlB,CAMA,MAAOsB,OAAP,CACD,CACF,CAZO;;;;;OAoBA8S,yCAAR,SAAwBrwB,CAAxB,CAAmCC,CAAnC,CAA4C,CAC1C,GAAID,CAAC,CAACmQ,SAAF,EAAe,IAAf,EAAuBlQ,CAAC,CAACkQ,SAAF,EAAe,IAA1C,CAAgD,CAC9C,KAAMjB,eAAc,CAAC,oCAAD,CAApB,CACD,CACD,GAAMqiB,SAAQ,CAAG,GAAIjjB,UAAJ,CAActO,CAAC,CAACmQ,SAAhB,CAA2BnQ,CAAC,CAAC0d,YAA7B,CAAjB,CACA,GAAM8T,SAAQ,CAAG,GAAIljB,UAAJ,CAAcrO,CAAC,CAACkQ,SAAhB,CAA2BlQ,CAAC,CAACyd,YAA7B,CAAjB,CACA,MAAO,MAAKzB,MAAL,CAAYzN,OAAZ,CAAoB+iB,QAApB,CAA8BC,QAA9B,CAAP,CACD,CAPO,CAQV,sBAAC,CAlKD,GChCA;;;;;;;;;;;;;;;IAkCA;;;;;;;;;GAUA;;;;OAWE,cAAoBpB,MAApB,CAAmCqB,gBAAnC,CAA8D,CAA1C,mBARZ,yBAA2C,EAA3C,CASN,GAAMnpB,OAAM,CAAG,KAAK8nB,MAAL,CAAY5S,cAAZ,EAAf,CAEA,GAAMkU,YAAW,CAAG,GAAIlI,cAAJ,CAAkBlhB,MAAM,CAACmV,QAAP,EAAlB,CAApB,CACA,GAAMsT,OAAM,CAAGzoB,MAAM,CAACqpB,aAAP,EAAf;;;WAMA,KAAKC,UAAL,CAAkB,GAAInG,cAAJ,CAAkBsF,MAAlB,CAAlB,CAEA,GAAMc,mBAAkB,CAAGJ,gBAAgB,CAACzG,cAAjB,EAA3B,CACA,GAAM8G,kBAAiB,CAAGL,gBAAgB,CAAC3G,aAAjB,EAA1B;AAGA,GAAMjC,WAAU,CAAG6I,WAAW,CAAC/D,cAAZ,CACjB1V,YAAY,CAAChI,UADI,CAEjB4hB,kBAAkB,CAAC/I,OAAnB,EAFiB,CAGjB,IAHiB,CAAnB,CAKA,GAAMJ,UAAS,CAAGqI,MAAM,CAACpD,cAAP,CAChB1V,YAAY,CAAChI,UADG,CAEhB6hB,iBAAiB,CAAChJ,OAAlB,EAFgB,CAGhB,IAHgB,CAAlB,CAKA,GAAMyF,eAAc,CAAG,GAAIpG,UAAJ,CACrBU,UADqB,CAErBgJ,kBAAkB,CAACzJ,kBAAnB,EAFqB,CAGrBsJ,WAAW,CAACtD,YAAZ,EAHqB,CAAvB,CAKA,GAAMd,cAAa,CAAG,GAAInF,UAAJ,CACpBO,SADoB,CAEpBoJ,iBAAiB,CAAC1J,kBAAlB,EAFoB,CAGpB2I,MAAM,CAAC3C,YAAP,EAHoB,CAAtB;;;WAUA,KAAKzD,UAAL,CAAkB,GAAIlC,UAAJ,CAAc6E,aAAd,CAA6BiB,cAA7B,CAAlB;;;WAMA,KAAKwD,eAAL,CAAuB,GAAI1B,eAAJ,CAAmB,KAAKD,MAAxB,CAAvB,CACD;;OAKD4B,mCACE,MAAO,MAAK5B,MAAZ,CACD,CAFD;;OAOA4B,yCACE,MAAO,MAAKrH,UAAL,CAAgBK,cAAhB,GAAiClC,OAAjC,EAAP,CACD,CAFD;;;OAQAkJ,+CAAuB3uB,IAAvB,CAAiC,CAC/B,GAAM4uB,MAAK,CAAG,KAAKtH,UAAL,CAAgBQ,qBAAhB,EAAd,CACA,GAAI8G,KAAJ,CAAW;;AAGT,GACE,KAAK7B,MAAL,CAAY5S,cAAZ,GAA6B0U,YAA7B,IACC,CAAC7uB,IAAI,CAACsM,OAAL,EAAD,EAAmB,CAACsiB,KAAK,CAAC9Z,iBAAN,CAAwB9U,IAAI,CAACgC,QAAL,EAAxB,EAAyCsK,OAAzC,EAFvB,CAGE,CACA,MAAOsiB,MAAK,CAAC7Z,QAAN,CAAe/U,IAAf,CAAP,CACD,CACF,CACD,MAAO,KAAP,CACD,CAbD;;OAkBA2uB,kCACE,MAAO,MAAKG,mBAAL,CAAyBt1B,MAAzB,GAAoC,CAA3C,CACD,CAFD;;OAOAm1B,6CAAqBrV,iBAArB,CAAyD,CACvD,KAAKwV,mBAAL,CAAyBxxB,IAAzB,CAA8Bgc,iBAA9B,EACD,CAFD;;;;OASAqV,gDACErV,iBADF,CAEEyV,WAFF,CAEqB,CAEnB,GAAMC,aAAY,CAAkB,EAApC,CACA,GAAID,WAAJ,CAAiB,CACf70B,MAAM,CACJof,iBAAiB,EAAI,IADjB,CAEJ,iDAFI,CAAN,CAIA,GAAM2V,OAAI,CAAG,KAAKlC,MAAL,CAAY/sB,IAAzB,CACA,KAAK8uB,mBAAL,CAAyB5M,OAAzB,CAAiC,sBAAY,CAC3C6M,WAAW,sBAAyBA,WAApC,CACA,GAAMG,WAAU,CAAGpB,YAAY,CAACqB,iBAAb,CAA+BJ,WAA/B,CAA4CE,MAA5C,CAAnB,CACA,GAAIC,UAAJ,CAAgB,CACdF,YAAY,CAAC1xB,IAAb,CAAkB4xB,UAAlB,EACD,CACF,CAND,EAOD,CAED,GAAI5V,iBAAJ,CAAuB,CACrB,GAAI8V,UAAS,CAAG,EAAhB,CACA,IAAK,GAAI71B,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAKu1B,mBAAL,CAAyBt1B,MAA7C,CAAqD,EAAED,CAAvD,CAA0D,CACxD,GAAMgnB,SAAQ,CAAG,KAAKuO,mBAAL,CAAyBv1B,CAAzB,CAAjB,CACA,GAAI,CAACgnB,QAAQ,CAAC8O,OAAT,CAAiB/V,iBAAjB,CAAL,CAA0C,CACxC8V,SAAS,CAAC9xB,IAAV,CAAeijB,QAAf,EACD,CAFD,IAEO,IAAIjH,iBAAiB,CAACgW,cAAlB,EAAJ,CAAwC;AAE7CF,SAAS,CAAGA,SAAS,CAACG,MAAV,CAAiB,KAAKT,mBAAL,CAAyBrtB,KAAzB,CAA+BlI,CAAC,CAAG,CAAnC,CAAjB,CAAZ,CACA,MACD,CACF,CACD,KAAKu1B,mBAAL,CAA2BM,SAA3B,CACD,CAbD,IAaO,CACL,KAAKN,mBAAL,CAA2B,EAA3B,CACD,CACD,MAAOE,aAAP,CACD,CArCD;;;;;;;OA+CAL,uCACErG,SADF,CAEEC,WAFF,CAGEqE,mBAHF,CAGkC,CAEhC,GACEtE,SAAS,CAACtjB,IAAV,GAAmBmd,aAAa,CAACuC,KAAjC,EACA4D,SAAS,CAACjE,MAAV,CAAiB/B,OAAjB,GAA6B,IAF/B,CAGE,CACApoB,MAAM,CACJ,KAAKotB,UAAL,CAAgBQ,qBAAhB,EADI,CAEJ,2DAFI,CAAN,CAIA5tB,MAAM,CACJ,KAAKotB,UAAL,CAAgBsC,oBAAhB,EADI,CAEJ,yDAFI,CAAN,CAID,CAED,GAAMvB,aAAY,CAAG,KAAKf,UAA1B,CACA,GAAMrY,OAAM,CAAG,KAAKsf,UAAL,CAAgBiB,cAAhB,CACbnH,YADa,CAEbC,SAFa,CAGbC,WAHa,CAIbqE,mBAJa,CAAf,CAMA,KAAK2B,UAAL,CAAgBkB,aAAhB,CAA8BxgB,MAAM,CAACgZ,SAArC,EAEA/tB,MAAM,CACJ+U,MAAM,CAACgZ,SAAP,CAAiBN,cAAjB,GAAkC5C,kBAAlC,IACE,CAACsD,YAAY,CAACV,cAAb,GAA8B5C,kBAA9B,EAFC,CAGJ,yDAHI,CAAN,CAMA,KAAKuC,UAAL,CAAkBrY,MAAM,CAACgZ,SAAzB,CAEA,MAAO,MAAKyH,yBAAL,CACLzgB,MAAM,CAACiZ,OADF,CAELjZ,MAAM,CAACgZ,SAAP,CAAiBR,aAAjB,GAAiChC,OAAjC,EAFK,CAGL,IAHK,CAAP,CAKD,CAzCD;;;OA+CAkJ,yCAAiBb,YAAjB,CAAgD,CAC9C,GAAMzI,UAAS,CAAG,KAAKiC,UAAL,CAAgBG,aAAhB,EAAlB,CACA,GAAMkI,eAAc,CAAa,EAAjC,CACA,GAAI,CAACtK,SAAS,CAACI,OAAV,GAAoBpZ,UAApB,EAAL,CAAuC,CACrC,GAAMujB,UAAS,CAAGvK,SAAS,CAACI,OAAV,EAAlB,CACAmK,SAAS,CAACra,YAAV,CAAuB7G,cAAvB,CAAuC,SAAC1X,GAAD,CAAM+V,SAAN,CAAe,CACpD4iB,cAAc,CAACryB,IAAf,CAAoBqoB,MAAM,CAACe,gBAAP,CAAwB1vB,GAAxB,CAA6B+V,SAA7B,CAApB,EACD,CAFD,EAGD,CACD,GAAIsY,SAAS,CAACN,kBAAV,EAAJ,CAAoC,CAClC4K,cAAc,CAACryB,IAAf,CAAoBqoB,MAAM,CAACkE,WAAP,CAAmBxE,SAAS,CAACI,OAAV,EAAnB,CAApB,EACD,CACD,MAAO,MAAKiK,yBAAL,CACLC,cADK,CAELtK,SAAS,CAACI,OAAV,EAFK,CAGLqI,YAHK,CAAP,CAKD,CAjBD;;;;;;OA0BAa,kDACEzG,OADF,CAEE+E,UAFF,CAGE3T,iBAHF,CAGuC,CAErC,GAAMkU,cAAa,CAAGlU,iBAAiB,CACnC,CAACA,iBAAD,CADmC,CAEnC,KAAKwV,mBAFT,CAGA,MAAO,MAAKJ,eAAL,CAAqBmB,wBAArB,CACL3H,OADK,CAEL+E,UAFK,CAGLO,aAHK,CAAP,CAKD,CAbD,CAcF,YAAC,CAvPD,GC5CA;;;;;;;;;;;;;;;GA+BA,GAAIhS,yBAAJ,CAEA;;;;;;;;;GAUA;;;;;WAoBmB,WAA2B,GAAIyF,IAAJ,EAA3B,CAuMlB,CA1NC9f,sBAAW2uB,SAAX,CAAW,wBAAX,CAAiC,KAQjC,WACE51B,MAAM,CAACshB,wBAAD,CAAyB,kCAAzB,CAAN,CACA,MAAOA,yBAAP,CACD,CAXgC,KAAjC,SAAkC5P,GAAlC,CAA2D,CACzD1R,MAAM,CACJ,CAACshB,wBADG,CAEJ,iDAFI,CAAN,CAIAA,wBAAsB,CAAG5P,GAAzB4P,CACD,CANgC,oCAAjC,EAqBAsU,uCACE,MAAO,MAAKC,KAAL,CAAW3O,IAAX,GAAoB,CAA3B,CACD,CAFD,CAIA0O,4CACExH,SADF,CAEEC,WAFF,CAGEyH,sBAHF,CAGqC,YAEnC,GAAM1N,QAAO,CAAGgG,SAAS,CAACjE,MAAV,CAAiB/B,OAAjC,CACA,GAAIA,OAAO,GAAK,IAAhB,CAAsB,CACpB,GAAM2N,KAAI,CAAG,KAAKF,KAAL,CAAWr1B,GAAX,CAAe4nB,OAAf,CAAb,CACApoB,MAAM,CAAC+1B,IAAI,EAAI,IAAT,CAAe,8CAAf,CAAN,CACA,MAAOA,KAAI,CAACT,cAAL,CACLlH,SADK,CAELC,WAFK,CAGLyH,sBAHK,CAAP,CAKD,CARD,IAQO,CACL,GAAI7C,OAAM,CAAY,EAAtB,KAEA,IAAmB,qBAAK4C,KAAL,CAAWlQ,MAAX,IAAmB9Z,YAAtC,CAAsC,QAAtC,CAAsCA,YAAtC,CAAwC,CAAnC,GAAMkqB,KAAI,SAAV,CACH9C,MAAM,CAAGA,MAAM,CAACoC,MAAP,CACPU,IAAI,CAACT,cAAL,CAAoBlH,SAApB,CAA+BC,WAA/B,CAA4CyH,sBAA5C,CADO,CAAT,CAGD,4HAED,MAAO7C,OAAP,CACD,CACF,CAzBD;;;;;;;;;OAqCA2C,kDACEhwB,KADF,CAEEwZ,iBAFF,CAGEiP,WAHF,CAIE2B,WAJF,CAKEgG,mBALF,CAK8B,CAE5B,GAAM5N,QAAO,CAAGxiB,KAAK,CAACuf,eAAN,EAAhB,CACA,GAAI4Q,KAAI,CAAG,KAAKF,KAAL,CAAWr1B,GAAX,CAAe4nB,OAAf,CAAX,CACA,GAAI,CAAC2N,IAAL,CAAW;AAET,GAAIhD,WAAU,CAAG1E,WAAW,CAAC5I,sBAAZ,CACfuQ,mBAAmB,CAAGhG,WAAH,CAAiB,IADrB,CAAjB,CAGA,GAAIiG,mBAAkB,CAAG,KAAzB,CACA,GAAIlD,UAAJ,CAAgB,CACdkD,kBAAkB,CAAG,IAArB,CACD,CAFD,IAEO,IAAIjG,WAAW,WAAYtV,aAA3B,CAAyC,CAC9CqY,UAAU,CAAG1E,WAAW,CAAC8B,yBAAZ,CAAsCH,WAAtC,CAAb,CACAiG,kBAAkB,CAAG,KAArB,CACD,CAHM,IAGA,CACLlD,UAAU,CAAGrY,YAAY,CAAChI,UAA1B,CACAujB,kBAAkB,CAAG,KAArB,CACD,CACD,GAAMlI,UAAS,CAAG,GAAI7C,UAAJ,CAChB,GAAIN,UAAJ,qBACuBmI,UADvB,CAEEkD,kBAFF,CAGE,KAHF,CADgB,CAMhB,GAAIrL,UAAJ,qBACuBoF,WADvB,CAEEgG,mBAFF,CAGE,KAHF,CANgB,CAAlB,CAYAD,IAAI,CAAG,GAAItB,KAAJ,CAAS7uB,KAAT,CAAgBmoB,SAAhB,CAAP,CACA,KAAK8H,KAAL,CAAWv1B,GAAX,CAAe8nB,OAAf,CAAwB2N,IAAxB,EACD;AAGDA,IAAI,CAACG,oBAAL,CAA0B9W,iBAA1B,EACA,MAAO2W,KAAI,CAACI,gBAAL,CAAsB/W,iBAAtB,CAAP,CACD,CA3CD;;;;;;;;;;OAwDAwW,qDACEhwB,KADF,CAEEwZ,iBAFF,CAGEyV,WAHF,CAGqB,YAEnB,GAAMzM,QAAO,CAAGxiB,KAAK,CAACuf,eAAN,EAAhB,CACA,GAAMiR,QAAO,CAAY,EAAzB,CACA,GAAItB,aAAY,CAAY,EAA5B,CACA,GAAMuB,gBAAe,CAAG,KAAKC,eAAL,EAAxB,CACA,GAAIlO,OAAO,GAAK,SAAhB,CAA2B;AAEzB,IAAkC,qBAAKyN,KAAL,CAAWU,OAAX,IAAoB1qB,YAAtD,CAAsD,QAAtD,CAAsDA,YAAtD,CAAwD,CAA7C,0BAAC2qB,WAAW,MAAZ,CAAcT,IAAI,MAAlB,CACTjB,YAAY,CAAGA,YAAY,CAACO,MAAb,CACbU,IAAI,CAACU,uBAAL,CAA6BrX,iBAA7B,CAAgDyV,WAAhD,CADa,CAAf,CAGA,GAAIkB,IAAI,CAAC3jB,OAAL,EAAJ,CAAoB,CAClB,KAAKyjB,KAAL,CAAWjO,MAAX,CAAkB4O,WAAlB;AAGA,GAAI,CAACT,IAAI,CAACW,QAAL,GAAgBzW,cAAhB,GAAiC0U,YAAjC,EAAL,CAAsD,CACpDyB,OAAO,CAAChzB,IAAR,CAAa2yB,IAAI,CAACW,QAAL,EAAb,EACD,CACF,CACF,4HACF,CAfD,IAeO;AAEL,GAAMX,KAAI,CAAG,KAAKF,KAAL,CAAWr1B,GAAX,CAAe4nB,OAAf,CAAb,CACA,GAAI2N,IAAJ,CAAU,CACRjB,YAAY,CAAGA,YAAY,CAACO,MAAb,CACbU,IAAI,CAACU,uBAAL,CAA6BrX,iBAA7B,CAAgDyV,WAAhD,CADa,CAAf,CAGA,GAAIkB,IAAI,CAAC3jB,OAAL,EAAJ,CAAoB,CAClB,KAAKyjB,KAAL,CAAWjO,MAAX,CAAkBQ,OAAlB;AAGA,GAAI,CAAC2N,IAAI,CAACW,QAAL,GAAgBzW,cAAhB,GAAiC0U,YAAjC,EAAL,CAAsD,CACpDyB,OAAO,CAAChzB,IAAR,CAAa2yB,IAAI,CAACW,QAAL,EAAb,EACD,CACF,CACF,CACF,CAED,GAAIL,eAAe,EAAI,CAAC,KAAKC,eAAL,EAAxB,CAAgD;AAE9CF,OAAO,CAAChzB,IAAR,CACE,GAAIwyB,UAAS,CAACtU,sBAAd,CAAqC1b,KAAK,CAAC2b,IAA3C,CAAiD3b,KAAK,CAACE,IAAvD,CADF,EAGD,CAED,MAAO,CAAEswB,OAAO,QAAT,CAAWnD,MAAM,CAAE6B,YAAnB,CAAP,CACD,CAlDD,CAoDAc,wDACE,GAAM7gB,OAAM,CAAG,EAAf,KACA,IAAmB,qBAAK8gB,KAAL,CAAWlQ,MAAX,IAAmB9Z,YAAtC,CAAsC,QAAtC,CAAsCA,YAAtC,CAAwC,CAAnC,GAAMkqB,KAAI,SAAV,CACH,GAAI,CAACA,IAAI,CAACW,QAAL,GAAgBzW,cAAhB,GAAiC0U,YAAjC,EAAL,CAAsD,CACpD5f,MAAM,CAAC3R,IAAP,CAAY2yB,IAAZ,EACD,CACF,4HACD,MAAOhhB,OAAP,CACD,CARD;;;OAcA6gB,oDAAuB9vB,IAAvB,CAAiC,YAC/B,GAAIkqB,YAAW,CAAgB,IAA/B,KACA,IAAmB,qBAAK6F,KAAL,CAAWlQ,MAAX,IAAmB9Z,YAAtC,CAAsC,QAAtC,CAAsCA,YAAtC,CAAwC,CAAnC,GAAMkqB,KAAI,SAAV,CACH/F,WAAW,CAAGA,WAAW,EAAI+F,IAAI,CAACY,sBAAL,CAA4B7wB,IAA5B,CAA7B,CACD,4HACD,MAAOkqB,YAAP,CACD,CAND,CAQA4F,0CAAahwB,KAAb,CAAyB,CACvB,GAAMmF,OAAM,CAAGnF,KAAK,CAACqa,cAAN,EAAf,CACA,GAAIlV,MAAM,CAAC4pB,YAAP,EAAJ,CAA2B,CACzB,MAAO,MAAKiC,eAAL,EAAP,CACD,CAFD,IAEO,CACL,GAAMxO,QAAO,CAAGxiB,KAAK,CAACuf,eAAN,EAAhB,CACA,MAAO,MAAK0Q,KAAL,CAAWr1B,GAAX,CAAe4nB,OAAf,CAAP,CACD,CACF,CARD,CAUAwN,gDAAmBhwB,KAAnB,CAA+B,CAC7B,MAAO,MAAKixB,YAAL,CAAkBjxB,KAAlB,GAA4B,IAAnC,CACD,CAFD,CAIAgwB,+CACE,MAAO,MAAKgB,eAAL,IAA0B,IAAjC,CACD,CAFD,CAIAhB,8DACE,IAAmB,qBAAKC,KAAL,CAAWlQ,MAAX,IAAmB9Z,YAAtC,CAAsC,QAAtC,CAAsCA,YAAtC,CAAwC,CAAnC,GAAMkqB,KAAI,SAAV,CACH,GAAIA,IAAI,CAACW,QAAL,GAAgBzW,cAAhB,GAAiC0U,YAAjC,EAAJ,CAAqD,CACnD,MAAOoB,KAAP,CACD,CACF,4HACD,MAAO,KAAP,CACD,CAPD,CAQF,iBAAC,CA3ND,GC3CA;;;;;;;;;;;;;;;IAyBA;;;;;GAMA,0CACE,uBAAoBe,UAApB,CAAmD,CAA/B,2BAAmC,CAIvDC,0CAASjxB,IAAT,CAAqBgL,IAArB,CAA+B,CAC7B,GAAIhL,IAAI,CAACsM,OAAL,EAAJ,CAAoB,CAClB,MAAO,IAAI2kB,cAAJ,CAAkB,GAAI/N,cAAJ,CAAkBlY,IAAlB,CAAlB,CAAP,CACD,CAFD,IAEO,CACL,GAAMkmB,SAAQ,CAAG,KAAKF,UAAL,CAAgBG,wBAAhB,CAAyCnxB,IAAzC,CAAjB,CACA,GAAIkxB,QAAQ,EAAI,IAAhB,CAAsB,CACpB,GAAME,aAAY,CAAGF,QAAQ,CAAClxB,IAA9B,CACA,GAAI/I,MAAK,CAAGi6B,QAAQ,CAACj6B,KAArB,CACA,GAAMiL,aAAY,CAAGd,IAAI,CAACc,YAAL,CAAkBkvB,YAAlB,CAAgCpxB,IAAhC,CAArB,CACA/I,KAAK,CAAGA,KAAK,CAACmW,WAAN,CAAkBlL,YAAlB,CAAgC8I,IAAhC,CAAR,CACA,MAAO,IAAIimB,cAAJ,CAAkB,KAAKD,UAAL,CAAgBx2B,GAAhB,CAAoB42B,YAApB,CAAkCn6B,KAAlC,CAAlB,CAAP,CACD,CAND,IAMO,CACL,GAAM6rB,QAAO,CAAG,GAAII,cAAJ,CAAkBlY,IAAlB,CAAhB,CACA,GAAMqmB,aAAY,CAAG,KAAKL,UAAL,CAAgBrN,OAAhB,CAAwB3jB,IAAxB,CAA8B8iB,OAA9B,CAArB,CACA,MAAO,IAAImO,cAAJ,CAAkBI,YAAlB,CAAP,CACD,CACF,CACF,CAjBD,CAmBAJ,2CAAUjxB,IAAV,CAAsBsxB,OAAtB,CAAuD,CACrD,GAAIC,SAAQ,CAAG,IAAf,CACAzzB,IAAI,CAACwzB,OAAD,CAAU,SAACjQ,QAAD,CAAmBrW,IAAnB,CAA6B,CACzCumB,QAAQ,CAAGA,QAAQ,CAACC,QAAT,CAAkBxxB,IAAI,CAACmD,KAAL,CAAWke,QAAX,CAAlB,CAAwCrW,IAAxC,CAAX,CACD,CAFG,CAAJ,CAGA,MAAOumB,SAAP,CACD,CAND;;;;;;OAeAN,6CAAYjxB,IAAZ,CAAsB,CACpB,GAAIA,IAAI,CAACsM,OAAL,EAAJ,CAAoB,CAClB,MAAO2kB,cAAa,CAAClO,KAArB,CACD,CAFD,IAEO,CACL,GAAMsO,aAAY,CAAG,KAAKL,UAAL,CAAgBrN,OAAhB,CAAwB3jB,IAAxB,CAA8BkjB,aAAa,CAACH,KAA5C,CAArB,CACA,MAAO,IAAIkO,cAAJ,CAAkBI,YAAlB,CAAP,CACD,CACF,CAPD;;;;;;OAgBAJ,kDAAiBjxB,IAAjB,CAA2B,CACzB,MAAO,MAAKyxB,eAAL,CAAqBzxB,IAArB,GAA8B,IAArC,CACD,CAFD;;;;;;OAWAixB,iDAAgBjxB,IAAhB,CAA0B,CACxB,GAAMkxB,SAAQ,CAAG,KAAKF,UAAL,CAAgBG,wBAAhB,CAAyCnxB,IAAzC,CAAjB,CACA,GAAIkxB,QAAQ,EAAI,IAAhB,CAAsB,CACpB,MAAO,MAAKF,UAAL,CACJt2B,GADI,CACAw2B,QAAQ,CAAClxB,IADT,EAEJ+U,QAFI,CAEK3T,IAAI,CAACc,YAAL,CAAkBgvB,QAAQ,CAAClxB,IAA3B,CAAiCA,IAAjC,CAFL,CAAP,CAGD,CAJD,IAIO,CACL,MAAO,KAAP,CACD,CACF,CATD;;;;OAgBAixB,uDACE,GAAM9P,SAAQ,CAAgB,EAA9B,CACA,GAAMnW,KAAI,CAAG,KAAKgmB,UAAL,CAAgB/5B,KAA7B,CACA,GAAI+T,IAAI,EAAI,IAAZ,CAAkB;AAEhB,GAAI,CAACA,IAAI,CAACqB,UAAL,EAAL,CAAwB,CACrBrB,IAAqB,CAACuK,YAAtB,CACC7G,cADD,CAEC,SAAC5B,SAAD,CAAYC,SAAZ,CAAqB,CACnBoU,QAAQ,CAAC7jB,IAAT,CAAc,GAAI2N,UAAJ,CAAc6B,SAAd,CAAyBC,SAAzB,CAAd,EACD,CAJF,EAMF,CACF,CAVD,IAUO,CACL,KAAKikB,UAAL,CAAgB7P,QAAhB,CAAyB5R,gBAAzB,CAA0C,SAACzC,SAAD,CAAY0F,SAAZ,CAAqB,CAC7D,GAAIA,SAAS,CAACvb,KAAV,EAAmB,IAAvB,CAA6B,CAC3BkqB,QAAQ,CAAC7jB,IAAT,CAAc,GAAI2N,UAAJ,CAAc6B,SAAd,CAAyB0F,SAAS,CAACvb,KAAnC,CAAd,EACD,CACF,CAJD,EAKD,CACD,MAAOkqB,SAAP,CACD,CArBD,CAuBA8P,oDAAmBjxB,IAAnB,CAA6B,CAC3B,GAAIA,IAAI,CAACsM,OAAL,EAAJ,CAAoB,CAClB,MAAO,KAAP,CACD,CAFD,IAEO,CACL,GAAMolB,cAAa,CAAG,KAAKD,eAAL,CAAqBzxB,IAArB,CAAtB,CACA,GAAI0xB,aAAa,EAAI,IAArB,CAA2B,CACzB,MAAO,IAAIT,cAAJ,CAAkB,GAAI/N,cAAJ,CAAkBwO,aAAlB,CAAlB,CAAP,CACD,CAFD,IAEO,CACL,MAAO,IAAIT,cAAJ,CAAkB,KAAKD,UAAL,CAAgBlO,OAAhB,CAAwB9iB,IAAxB,CAAlB,CAAP,CACD,CACF,CACF,CAXD;;;OAiBAixB,2CACE,MAAO,MAAKD,UAAL,CAAgB1kB,OAAhB,EAAP,CACD,CAFD;;;;;OAUA2kB,uCAAMjmB,IAAN,CAAgB,CACd,MAAO2mB,kBAAiB,CAACvwB,IAAI,CAAC2hB,KAAN,CAAa,KAAKiO,UAAlB,CAA8BhmB,IAA9B,CAAxB,CACD,CAFD,CAjIOimB,oBAAQ,GAAIA,cAAJ,CAAkB,GAAI/N,cAAJ,CAAkB,IAAlB,CAAlB,CAAR,CAoIT,qBAvIA,IAyIA,QAASyO,kBAAT,CACEzvB,YADF,CAEE0vB,SAFF,CAGE5mB,IAHF,CAGY,CAEV,GAAI4mB,SAAS,CAAC36B,KAAV,EAAmB,IAAvB,CAA6B;AAE3B,MAAO+T,KAAI,CAACoC,WAAL,CAAiBlL,YAAjB,CAA+B0vB,SAAS,CAAC36B,KAAzC,CAAP,CACD,CAHD,IAGO,CACL,GAAI46B,gBAAa,CAAG,IAApB,CACAD,SAAS,CAACzQ,QAAV,CAAmB5R,gBAAnB,CAAoC,SAAC8R,QAAD,CAAW7O,SAAX,CAAoB,CACtD,GAAI6O,QAAQ,GAAK,WAAjB,CAA8B;;AAG5BnnB,MAAM,CACJsY,SAAS,CAACvb,KAAV,GAAoB,IADhB,CAEJ,2CAFI,CAAN,CAIA46B,eAAa,CAAGrf,SAAS,CAACvb,KAA1B,CACD,CARD,IAQO,CACL+T,IAAI,CAAG2mB,iBAAiB,CAACzvB,YAAY,CAACiB,KAAb,CAAmBke,QAAnB,CAAD,CAA+B7O,SAA/B,CAA0CxH,IAA1C,CAAxB,CACD,CACF,CAZD;AAcA,GAAI,CAACA,IAAI,CAAC+J,QAAL,CAAc7S,YAAd,EAA4BoK,OAA5B,EAAD,EAA0CulB,eAAa,GAAK,IAAhE,CAAsE,CACpE7mB,IAAI,CAAGA,IAAI,CAACoC,WAAL,CAAiBlL,YAAY,CAACiB,KAAb,CAAmB,WAAnB,CAAjB,CAAkD0uB,eAAlD,CAAP,CACD,CACD,MAAO7mB,KAAP,CACD,CACH,CCrMA;;;;;;;;;;;;;;;IAwCA;;;;;;GAOA;;;;;;WAQU,oBAAgCimB,aAAa,CAAClO,KAA9C;;;;;;;WAUA,gBAA4B,EAA5B,CAEA,kBAAe,CAAC,CAAhB,CAghBT;;;;;OAxgBC+O,yCAAY9xB,IAAZ,CAAsB,CACpB,MAAO,IAAI+xB,aAAJ,CAAiB/xB,IAAjB,CAAuB,IAAvB,CAAP,CACD,CAFD;;;;;;;OAYA8xB,0CAAa9xB,IAAb,CAAyBsY,IAAzB,CAAqC0Z,OAArC,CAAsDC,OAAtD,CAAuE,CACrE/3B,MAAM,CACJ83B,OAAO,CAAG,KAAKE,YADX,CAEJ,8CAFI,CAAN,CAIA,GAAID,OAAO,GAAKrqB,SAAhB,CAA2B,CACzBqqB,OAAO,CAAG,IAAV,CACD,CACD,KAAKE,UAAL,CAAgB70B,IAAhB,CAAqB,CACnB0C,IAAI,KADe,CAEnBsY,IAAI,KAFe,CAGnB0Z,OAAO,QAHY,CAInBC,OAAO,QAJY,CAArB,EAOA,GAAIA,OAAJ,CAAa,CACX,KAAKG,cAAL,CAAsB,KAAKA,cAAL,CAAoBZ,QAApB,CAA6BxxB,IAA7B,CAAmCsY,IAAnC,CAAtB,CACD,CACD,KAAK4Z,YAAL,CAAoBF,OAApB,CACD,CAnBD;;;;;;OA4BAF,sCACE9xB,IADF,CAEE4rB,eAFF,CAGEoG,OAHF,CAGiB,CAEf93B,MAAM,CACJ83B,OAAO,CAAG,KAAKE,YADX,CAEJ,8CAFI,CAAN,CAIA,KAAKC,UAAL,CAAgB70B,IAAhB,CAAqB,CACnB0C,IAAI,KADe,CAEnBmhB,QAAQ,CAAEyK,eAFS,CAGnBoG,OAAO,QAHY,CAInBC,OAAO,CAAE,IAJU,CAArB,EAOA,KAAKG,cAAL,CAAsB,KAAKA,cAAL,CAAoBC,SAApB,CAA8BryB,IAA9B,CAAoC4rB,eAApC,CAAtB,CACA,KAAKsG,YAAL,CAAoBF,OAApB,CACD,CAlBD;;;OAwBAF,sCAASE,OAAT,CAAwB,CACtB,IAAK,GAAIz4B,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAK44B,UAAL,CAAgB34B,MAApC,CAA4CD,CAAC,EAA7C,CAAiD,CAC/C,GAAM+4B,OAAM,CAAG,KAAKH,UAAL,CAAgB54B,CAAhB,CAAf,CACA,GAAI+4B,MAAM,CAACN,OAAP,GAAmBA,OAAvB,CAAgC,CAC9B,MAAOM,OAAP,CACD,CACF,CACD,MAAO,KAAP,CACD,CARD;;;;;;;OAkBAR,yCAAYE,OAAZ,CAA2B;;;;AAA3B,eAME,GAAMpc,IAAG,CAAG,KAAKuc,UAAL,CAAgBI,SAAhB,CAA0B,WAAC,CACrC,MAAOl0B,EAAC,CAAC2zB,OAAF,GAAcA,OAArB,CACD,CAFW,CAAZ,CAGA93B,MAAM,CAAC0b,GAAG,EAAI,CAAR,CAAW,8CAAX,CAAN,CACA,GAAM4c,cAAa,CAAG,KAAKL,UAAL,CAAgBvc,GAAhB,CAAtB,CACA,KAAKuc,UAAL,CAAgBM,MAAhB,CAAuB7c,GAAvB,CAA4B,CAA5B,EAEA,GAAI8c,uBAAsB,CAAGF,aAAa,CAACP,OAA3C,CACA,GAAIU,oCAAmC,CAAG,KAA1C,CAEA,GAAIp5B,EAAC,CAAG,KAAK44B,UAAL,CAAgB34B,MAAhB,CAAyB,CAAjC,CAEA,MAAOk5B,sBAAsB,EAAIn5B,CAAC,EAAI,CAAtC,CAAyC,CACvC,GAAMq5B,aAAY,CAAG,KAAKT,UAAL,CAAgB54B,CAAhB,CAArB,CACA,GAAIq5B,YAAY,CAACX,OAAjB,CAA0B,CACxB,GACE14B,CAAC,EAAIqc,GAAL,EACA,KAAKid,mBAAL,CAAyBD,YAAzB,CAAuCJ,aAAa,CAACxyB,IAArD,CAFF,CAGE;AAEA0yB,sBAAsB,CAAG,KAAzB,CACD,CAND,IAMO,IAAIF,aAAa,CAACxyB,IAAd,CAAmBlI,QAAnB,CAA4B86B,YAAY,CAAC5yB,IAAzC,CAAJ,CAAoD;AAEzD2yB,mCAAmC,CAAG,IAAtC,CACD,CACF,CACDp5B,CAAC,GACF,CAED,GAAI,CAACm5B,sBAAL,CAA6B,CAC3B,MAAO,MAAP,CACD,CAFD,IAEO,IAAIC,mCAAJ,CAAyC;AAE9C,KAAKG,UAAL,GACA,MAAO,KAAP,CACD,CAJM,IAIA;AAEL,GAAIN,aAAa,CAACla,IAAlB,CAAwB,CACtB,KAAK8Z,cAAL,CAAsB,KAAKA,cAAL,CAAoBW,WAApB,CACpBP,aAAa,CAACxyB,IADM,CAAtB,CAGD,CAJD,IAIO,CACL,GAAMmhB,SAAQ,CAAGqR,aAAa,CAACrR,QAA/B,CACArjB,IAAI,CAACqjB,QAAD,CAAW,SAACrU,SAAD,CAAkB,CAC/BuH,KAAI,CAAC+d,cAAL,CAAsB/d,KAAI,CAAC+d,cAAL,CAAoBW,WAApB,CACpBP,aAAa,CAACxyB,IAAd,CAAmBmD,KAAnB,CAAyB2J,SAAzB,CADoB,CAAtB,CAGD,CAJG,CAAJ,CAKD,CACD,MAAO,KAAP,CACD,CACF,CAzDD;;;;;;OAkEAglB,kDAAqB9xB,IAArB,CAA+B,CAC7B,MAAO,MAAKoyB,cAAL,CAAoBX,eAApB,CAAoCzxB,IAApC,CAAP,CACD,CAFD;;;;;;;;;OAcA8xB,oDACEkB,QADF,CAEEpG,mBAFF,CAGEqG,iBAHF,CAIEC,mBAJF,CAI+B,CAE7B,GAAI,CAACD,iBAAD,EAAsB,CAACC,mBAA3B,CAAgD,CAC9C,GAAMxB,cAAa,CAAG,KAAKU,cAAL,CAAoBX,eAApB,CAAoCuB,QAApC,CAAtB,CACA,GAAItB,aAAa,EAAI,IAArB,CAA2B,CACzB,MAAOA,cAAP,CACD,CAFD,IAEO,CACL,GAAMyB,SAAQ,CAAG,KAAKf,cAAL,CAAoBgB,kBAApB,CAAuCJ,QAAvC,CAAjB,CACA,GAAIG,QAAQ,CAAC7mB,OAAT,EAAJ,CAAwB,CACtB,MAAOsgB,oBAAP,CACD,CAFD,IAEO,IACLA,mBAAmB,EAAI,IAAvB,EACA,CAACuG,QAAQ,CAACE,gBAAT,CAA0BjyB,IAAI,CAAC2hB,KAA/B,CAFI,CAGL;AAEA,MAAO,KAAP,CACD,CANM,IAMA,CACL,GAAMuQ,aAAY,CAAG1G,mBAAmB,EAAIhY,YAAY,CAAChI,UAAzD,CACA,MAAOumB,SAAQ,CAACv5B,KAAT,CAAe05B,YAAf,CAAP,CACD,CACF,CACF,CAnBD,IAmBO,CACL,GAAMtK,MAAK,CAAG,KAAKoJ,cAAL,CAAoBgB,kBAApB,CAAuCJ,QAAvC,CAAd,CACA,GAAI,CAACE,mBAAD,EAAwBlK,KAAK,CAAC1c,OAAN,EAA5B,CAA6C,CAC3C,MAAOsgB,oBAAP,CACD,CAFD,IAEO;AAEL,GACE,CAACsG,mBAAD,EACAtG,mBAAmB,EAAI,IADvB,EAEA,CAAC5D,KAAK,CAACqK,gBAAN,CAAuBjyB,IAAI,CAAC2hB,KAA5B,CAHH,CAIE,CACA,MAAO,KAAP,CACD,CAND,IAMO,CACL,GAAM2K,OAAM,CAAG,SAAU6F,KAAV,CAA4B,CACzC,MACE,CAACA,KAAK,CAACtB,OAAN,EAAiBiB,mBAAlB,IACC,CAACD,iBAAD,EACC,CAAC,CAACA,iBAAiB,CAAC53B,OAAlB,CAA0Bk4B,KAAK,CAACvB,OAAhC,CAFJ,IAGCuB,KAAK,CAACvzB,IAAN,CAAWlI,QAAX,CAAoBk7B,QAApB,GAAiCA,QAAQ,CAACl7B,QAAT,CAAkBy7B,KAAK,CAACvzB,IAAxB,CAHlC,CADF,CAMD,CAPD,CAQA,GAAMwzB,YAAW,CAAG1B,SAAS,CAAC2B,UAAV,CAClB,KAAKtB,UADa,CAElBzE,MAFkB,CAGlBsF,QAHkB,CAApB,CAKA,GAAMM,aAAY,CAAG1G,mBAAmB,EAAIhY,YAAY,CAAChI,UAAzD,CACA,MAAO4mB,YAAW,CAAC55B,KAAZ,CAAkB05B,YAAlB,CAAP,CACD,CACF,CACF,CACF,CAxDD;;;;;;;OAkEAxB,uDACEkB,QADF,CAEEU,sBAFF,CAE6C,CAE3C,GAAIvJ,iBAAgB,CAAGvV,YAAY,CAAChI,UAApC,CACA,GAAM+mB,YAAW,CAAG,KAAKvB,cAAL,CAAoBX,eAApB,CAAoCuB,QAApC,CAApB,CACA,GAAIW,WAAJ,CAAiB,CACf,GAAI,CAACA,WAAW,CAACtnB,UAAZ,EAAL,CAA+B;AAE7BsnB,WAAW,CAACpe,YAAZ,CAAyB7G,cAAzB,CAAyC,SAAC5B,SAAD,CAAYqW,SAAZ,CAAqB,CAC5DgH,gBAAgB,CAAGA,gBAAgB,CAACjd,oBAAjB,CACjBJ,SADiB,CAEjBqW,SAFiB,CAAnB,CAID,CALD,EAMD,CACD,MAAOgH,iBAAP,CACD,CAXD,IAWO,IAAIuJ,sBAAJ,CAA4B;;AAGjC,GAAME,QAAK,CAAG,KAAKxB,cAAL,CAAoBgB,kBAApB,CAAuCJ,QAAvC,CAAd,CACAU,sBAAsB,CAACne,YAAvB,CACE7G,cADF,CAEE,SAAC5B,SAAD,CAAYC,SAAZ,CAAqB,CACnB,GAAM/B,KAAI,CAAG4oB,OAAK,CACfR,kBADU,CACS,GAAIhyB,KAAJ,CAAS0L,SAAT,CADT,EAEVlT,KAFU,CAEJmT,SAFI,CAAb,CAGAod,gBAAgB,CAAGA,gBAAgB,CAACjd,oBAAjB,CACjBJ,SADiB,CAEjB9B,IAFiB,CAAnB,CAID,CAVH;AAaA4oB,OAAK,CAACC,mBAAN,GAA4B3R,OAA5B,CAAoC,mBAAS,CAC3CiI,gBAAgB,CAAGA,gBAAgB,CAACjd,oBAAjB,CACjB+E,SAAS,CAACxa,IADO,CAEjBwa,SAAS,CAACjH,IAFO,CAAnB,CAID,CALD,EAMA,MAAOmf,iBAAP,CACD,CAxBM,IAwBA;;AAGL,GAAMnB,MAAK,CAAG,KAAKoJ,cAAL,CAAoBgB,kBAApB,CAAuCJ,QAAvC,CAAd,CACAhK,KAAK,CAAC6K,mBAAN,GAA4B3R,OAA5B,CAAoC,mBAAS,CAC3CiI,gBAAgB,CAAGA,gBAAgB,CAACjd,oBAAjB,CACjB+E,SAAS,CAACxa,IADO,CAEjBwa,SAAS,CAACjH,IAFO,CAAnB,CAID,CALD,EAMA,MAAOmf,iBAAP,CACD,CACF,CArDD;;;;;;;;;;;;;;;;;;;OA2EA2H,gEACEkB,QADF,CAEEha,SAFF,CAGE8a,iBAHF,CAIEC,kBAJF,CAIiC,CAE/B75B,MAAM,CACJ45B,iBAAiB,EAAIC,kBADjB,CAEJ,2DAFI,CAAN,CAIA,GAAM/zB,KAAI,CAAGgzB,QAAQ,CAAC7vB,KAAT,CAAe6V,SAAf,CAAb,CACA,GAAI,KAAKoZ,cAAL,CAAoBiB,gBAApB,CAAqCrzB,IAArC,CAAJ,CAAgD;;AAG9C,MAAO,KAAP,CACD,CAJD,IAIO;AAEL,GAAMg0B,WAAU,CAAG,KAAK5B,cAAL,CAAoBgB,kBAApB,CAAuCpzB,IAAvC,CAAnB,CACA,GAAIg0B,UAAU,CAAC1nB,OAAX,EAAJ,CAA0B;AAExB,MAAOynB,mBAAkB,CAAChf,QAAnB,CAA4BiE,SAA5B,CAAP,CACD,CAHD,IAGO;;;;;;AAOL,MAAOgb,WAAU,CAACp6B,KAAX,CAAiBm6B,kBAAkB,CAAChf,QAAnB,CAA4BiE,SAA5B,CAAjB,CAAP,CACD,CACF,CACF,CA/BD;;;;;;;;OA0CA8Y,+CACEkB,QADF,CAEE3R,QAFF,CAGE0S,kBAHF,CAG+B,CAE7B,GAAM/zB,KAAI,CAAGgzB,QAAQ,CAAC7vB,KAAT,CAAeke,QAAf,CAAb,CACA,GAAMqQ,cAAa,CAAG,KAAKU,cAAL,CAAoBX,eAApB,CAAoCzxB,IAApC,CAAtB,CACA,GAAI0xB,aAAa,EAAI,IAArB,CAA2B,CACzB,MAAOA,cAAP,CACD,CAFD,IAEO,CACL,GAAIqC,kBAAkB,CAAC/O,kBAAnB,CAAsC3D,QAAtC,CAAJ,CAAqD,CACnD,GAAM2S,WAAU,CAAG,KAAK5B,cAAL,CAAoBgB,kBAApB,CAAuCpzB,IAAvC,CAAnB,CACA,MAAOg0B,WAAU,CAACp6B,KAAX,CACLm6B,kBAAkB,CAACtO,OAAnB,GAA6B3Q,iBAA7B,CAA+CuM,QAA/C,CADK,CAAP,CAGD,CALD,IAKO,CACL,MAAO,KAAP,CACD,CACF,CACF,CAnBD;;;;OA0BAyQ,4CAAe9xB,IAAf,CAAyB,CACvB,MAAO,MAAKoyB,cAAL,CAAoBX,eAApB,CAAoCzxB,IAApC,CAAP,CACD,CAFD;;;OAQA8xB,8CACEkB,QADF,CAEEnL,kBAFF,CAGExR,SAHF,CAIE/G,KAJF,CAKEvQ,OALF,CAMEsO,KANF,CAMc,CAEZ,GAAI4mB,UAAJ,CACA,GAAMjL,MAAK,CAAG,KAAKoJ,cAAL,CAAoBgB,kBAApB,CAAuCJ,QAAvC,CAAd,CACA,GAAMtB,cAAa,CAAG1I,KAAK,CAACyI,eAAN,CAAsBrwB,IAAI,CAAC2hB,KAA3B,CAAtB,CACA,GAAI2O,aAAa,EAAI,IAArB,CAA2B,CACzBuC,SAAS,CAAGvC,aAAZ,CACD,CAFD,IAEO,IAAI7J,kBAAkB,EAAI,IAA1B,CAAgC,CACrCoM,SAAS,CAAGjL,KAAK,CAACpvB,KAAN,CAAYiuB,kBAAZ,CAAZ,CACD,CAFM,IAEA;AAEL,MAAO,EAAP,CACD,CACDoM,SAAS,CAAGA,SAAS,CAACrN,SAAV,CAAoBvZ,KAApB,CAAZ,CACA,GAAI,CAAC4mB,SAAS,CAAC3nB,OAAV,EAAD,EAAwB,CAAC2nB,SAAS,CAAC5nB,UAAV,EAA7B,CAAqD,CACnD,GAAM0b,MAAK,CAAG,EAAd,CACA,GAAMvlB,IAAG,CAAG6K,KAAK,CAAC0G,UAAN,EAAZ,CACA,GAAMP,KAAI,CAAGzU,OAAO,CACfk1B,SAA0B,CAACzd,sBAA3B,CAAkDH,SAAlD,CAA6DhJ,KAA7D,CADe,CAEf4mB,SAA0B,CAAC9d,eAA3B,CAA2CE,SAA3C,CAAsDhJ,KAAtD,CAFL,CAGA,GAAIsG,KAAI,CAAGH,IAAI,CAACI,OAAL,EAAX,CACA,MAAOD,IAAI,EAAIoU,KAAK,CAACvuB,MAAN,CAAe8V,KAA9B,CAAqC,CACnC,GAAI9M,GAAG,CAACmR,IAAD,CAAO0C,SAAP,CAAH,GAAyB,CAA7B,CAAgC,CAC9B0R,KAAK,CAACzqB,IAAN,CAAWqW,IAAX,EACD,CACDA,IAAI,CAAGH,IAAI,CAACI,OAAL,EAAP,CACD,CACD,MAAOmU,MAAP,CACD,CAdD,IAcO,CACL,MAAO,EAAP,CACD,CACF,CArCD,CAuCQ+J,wCAAR,SAA4BoC,WAA5B,CAAsDl0B,IAAtD,CAAgE,CAC9D,GAAIk0B,WAAW,CAAC5b,IAAhB,CAAsB,CACpB,MAAO4b,YAAW,CAACl0B,IAAZ,CAAiBlI,QAAjB,CAA0BkI,IAA1B,CAAP,CACD,CAFD,IAEO,CACL,IAAK,GAAM8M,UAAX,GAAwBonB,YAAW,CAAC/S,QAApC,CAA8C,CAC5C,GACE+S,WAAW,CAAC/S,QAAZ,CAAqBpjB,cAArB,CAAoC+O,SAApC,GACAonB,WAAW,CAACl0B,IAAZ,CAAiBmD,KAAjB,CAAuB2J,SAAvB,EAAkChV,QAAlC,CAA2CkI,IAA3C,CAFF,CAGE,CACA,MAAO,KAAP,CACD,CACF,CACD,MAAO,MAAP,CACD,CACF,CAdO;;OAmBA8xB,+BAAR,WACE,KAAKM,cAAL,CAAsBN,SAAS,CAAC2B,UAAV,CACpB,KAAKtB,UADe,CAEpBL,SAAS,CAACqC,cAFU,CAGpB/yB,IAAI,CAAC2hB,KAHe,CAAtB,CAKA,GAAI,KAAKoP,UAAL,CAAgB34B,MAAhB,CAAyB,CAA7B,CAAgC,CAC9B,KAAK04B,YAAL,CAAoB,KAAKC,UAAL,CAAgB,KAAKA,UAAL,CAAgB34B,MAAhB,CAAyB,CAAzC,EAA4Cw4B,OAAhE,CACD,CAFD,IAEO,CACL,KAAKE,YAAL,CAAoB,CAAC,CAArB,CACD,CACF,CAXO;;OAgBOJ,yBAAf,SAA8ByB,KAA9B,CAAgD,CAC9C,MAAOA,MAAK,CAACtB,OAAb,CACD,CAFc;;;OAQAH,qBAAf,SACEsC,MADF,CAEE1G,MAFF,CAGE2G,QAHF,CAGgB,CAEd,GAAIC,cAAa,CAAGrD,aAAa,CAAClO,KAAlC,CACA,IAAK,GAAIxpB,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG66B,MAAM,CAAC56B,MAA3B,CAAmC,EAAED,CAArC,CAAwC,CACtC,GAAMg6B,MAAK,CAAGa,MAAM,CAAC76B,CAAD,CAApB;;;AAIA,GAAIm0B,MAAM,CAAC6F,KAAD,CAAV,CAAmB,CACjB,GAAMxH,UAAS,CAAGwH,KAAK,CAACvzB,IAAxB,CACA,GAAIkC,aAAY,OAAhB,CACA,GAAIqxB,KAAK,CAACjb,IAAV,CAAgB,CACd,GAAI+b,QAAQ,CAACv8B,QAAT,CAAkBi0B,SAAlB,CAAJ,CAAkC,CAChC7pB,YAAY,CAAGd,IAAI,CAACc,YAAL,CAAkBmyB,QAAlB,CAA4BtI,SAA5B,CAAf,CACAuI,aAAa,CAAGA,aAAa,CAAC9C,QAAd,CAAuBtvB,YAAvB,CAAqCqxB,KAAK,CAACjb,IAA3C,CAAhB,CACD,CAHD,IAGO,IAAIyT,SAAS,CAACj0B,QAAV,CAAmBu8B,QAAnB,CAAJ,CAAkC,CACvCnyB,YAAY,CAAGd,IAAI,CAACc,YAAL,CAAkB6pB,SAAlB,CAA6BsI,QAA7B,CAAf,CACAC,aAAa,CAAGA,aAAa,CAAC9C,QAAd,CACdpwB,IAAI,CAAC2hB,KADS,CAEdwQ,KAAK,CAACjb,IAAN,CAAWvD,QAAX,CAAoB7S,YAApB,CAFc,CAAhB,CAID,CANM,IAMA,CAGR,CAbD,IAaO,IAAIqxB,KAAK,CAACpS,QAAV,CAAoB,CACzB,GAAIkT,QAAQ,CAACv8B,QAAT,CAAkBi0B,SAAlB,CAAJ,CAAkC,CAChC7pB,YAAY,CAAGd,IAAI,CAACc,YAAL,CAAkBmyB,QAAlB,CAA4BtI,SAA5B,CAAf,CACAuI,aAAa,CAAGA,aAAa,CAACjC,SAAd,CACdnwB,YADc,CAEdqxB,KAAK,CAACpS,QAFQ,CAAhB,CAID,CAND,IAMO,IAAI4K,SAAS,CAACj0B,QAAV,CAAmBu8B,QAAnB,CAAJ,CAAkC,CACvCnyB,YAAY,CAAGd,IAAI,CAACc,YAAL,CAAkB6pB,SAAlB,CAA6BsI,QAA7B,CAAf,CACA,GAAInyB,YAAY,CAACoK,OAAb,EAAJ,CAA4B,CAC1BgoB,aAAa,CAAGA,aAAa,CAACjC,SAAd,CACdjxB,IAAI,CAAC2hB,KADS,CAEdwQ,KAAK,CAACpS,QAFQ,CAAhB,CAID,CALD,IAKO,CACL,GAAMhe,MAAK,CAAGiQ,OAAO,CAACmgB,KAAK,CAACpS,QAAP,CAAiBjf,YAAY,CAACF,QAAb,EAAjB,CAArB,CACA,GAAImB,KAAJ,CAAW;AAET,GAAMoxB,SAAQ,CAAGpxB,KAAK,CAAC4R,QAAN,CAAe7S,YAAY,CAACC,QAAb,EAAf,CAAjB,CACAmyB,aAAa,CAAGA,aAAa,CAAC9C,QAAd,CAAuBpwB,IAAI,CAAC2hB,KAA5B,CAAmCwR,QAAnC,CAAhB,CACD,CACF,CACF,CAfM,IAeA,CAGR,CAzBM,IAyBA,CACL,KAAM1oB,eAAc,CAAC,4CAAD,CAApB,CACD,CACF,CACF,CACD,MAAOyoB,cAAP,CACD,CA1Dc,CA2DjB,iBAAC,CApiBD,GAsiBA;;;;;GAMA;;;OA4BE,sBAAYt0B,IAAZ,CAAwB4xB,SAAxB,CAA4C,CAC1C,KAAK4C,SAAL,CAAiBx0B,IAAjB,CACA,KAAKgxB,UAAL,CAAkBY,SAAlB,CACD;;;;;;;;;OAYDG,uDACEnF,mBADF,CAEEqG,iBAFF,CAGEC,mBAHF,CAG+B,CAE7B,MAAO,MAAKlC,UAAL,CAAgBrR,sBAAhB,CACL,KAAK6U,SADA,CAEL5H,mBAFK,CAGLqG,iBAHK,CAILC,mBAJK,CAAP,CAMD,CAXD;;;;;;OAoBAnB,0DACE2B,sBADF,CAC6C,CAE3C,MAAO,MAAK1C,UAAL,CAAgB3G,yBAAhB,CACL,KAAKmK,SADA,CAELd,sBAFK,CAAP,CAID,CAPD;;;;;;;;;;;;;;;;;;OA4BA3B,mEACE/xB,IADF,CAEE8zB,iBAFF,CAGEC,kBAHF,CAGiC,CAE/B,MAAO,MAAK/C,UAAL,CAAgBtG,kCAAhB,CACL,KAAK8J,SADA,CAELx0B,IAFK,CAGL8zB,iBAHK,CAILC,kBAJK,CAAP,CAMD,CAXD;;;;;;;OAqBAhC,+CAAe/xB,IAAf,CAAyB,CACvB,MAAO,MAAKgxB,UAAL,CAAgBhH,cAAhB,CAA+B,KAAKwK,SAAL,CAAerxB,KAAf,CAAqBnD,IAArB,CAA/B,CAAP,CACD,CAFD;;;;;;;;;;OAeA+xB,iDACElK,kBADF,CAEExR,SAFF,CAGE/G,KAHF,CAIEvQ,OAJF,CAKEsO,KALF,CAKc,CAEZ,MAAO,MAAK2jB,UAAL,CAAgBhJ,gBAAhB,CACL,KAAKwM,SADA,CAEL3M,kBAFK,CAGLxR,SAHK,CAIL/G,KAJK,CAKLvQ,OALK,CAMLsO,KANK,CAAP,CAQD,CAfD;;;;;;;OAyBA0kB,kDACE1Q,QADF,CAEEoT,mBAFF,CAEgC,CAE9B,MAAO,MAAKzD,UAAL,CAAgBpJ,iBAAhB,CACL,KAAK4M,SADA,CAELnT,QAFK,CAGLoT,mBAHK,CAAP,CAKD,CATD;;;;;OAiBA1C,sCAAMjlB,SAAN,CAAuB,CACrB,MAAO,IAAIilB,aAAJ,CAAiB,KAAKyC,SAAL,CAAerxB,KAAf,CAAqB2J,SAArB,CAAjB,CAAkD,KAAKkkB,UAAvD,CAAP,CACD,CAFD,CAGF,oBAAC,CA5KD,GC3lBA;;;;;;;;;;;;;;;IA0DA;;;;;;;;;;;;;;;;;;;;;GAsBA;;;OAkBE,kBAAoB0D,eAApB,CAAmD,CAA/B;;WAdZ,oBAA2CxR,aAAa,CAACH,KAAzD;;WAKA,uBAAoB,GAAI+O,UAAJ,EAApB,CAES,mBAAqC,GAAI7Q,IAAJ,EAArC,CACA,mBAAqC,GAAIA,IAAJ,EAArC,CAMsC;;;;OAOvD0T,+CACE30B,IADF,CAEE40B,OAFF,CAGE5C,OAHF,CAIEC,OAJF,CAImB;AAGjB,KAAK4C,iBAAL,CAAuBC,YAAvB,CAAoC90B,IAApC,CAA0C40B,OAA1C,CAAmD5C,OAAnD,CAA4DC,OAA5D,EAEA,GAAI,CAACA,OAAL,CAAc,CACZ,MAAO,EAAP,CACD,CAFD,IAEO,CACL,MAAO,MAAK8C,2BAAL,CACL,GAAItQ,UAAJ,CAAcjC,eAAe,CAACI,IAA9B,CAAoC5iB,IAApC,CAA0C40B,OAA1C,CADK,CAAP,CAGD,CACF,CAhBD;;;;OAuBAD,2CACE30B,IADF,CAEE4rB,eAFF,CAGEoG,OAHF,CAGiB;AAGf,KAAK6C,iBAAL,CAAuBG,QAAvB,CAAgCh1B,IAAhC,CAAsC4rB,eAAtC,CAAuDoG,OAAvD,EAEA,GAAMiD,WAAU,CAAG/R,aAAa,CAACgS,UAAd,CAAyBtJ,eAAzB,CAAnB,CAEA,MAAO,MAAKmJ,2BAAL,CACL,GAAIpQ,MAAJ,CAAUnC,eAAe,CAACI,IAA1B,CAAgC5iB,IAAhC,CAAsCi1B,UAAtC,CADK,CAAP,CAGD,CAbD;;;;;OAqBAN,yCAAa3C,OAAb,CAA8BtP,MAA9B,CAAqD,CAAvB,iCAAuB,CACnD,GAAM6Q,MAAK,CAAG,KAAKsB,iBAAL,CAAuBM,QAAvB,CAAgCnD,OAAhC,CAAd,CACA,GAAMoD,iBAAgB,CAAG,KAAKP,iBAAL,CAAuB9B,WAAvB,CAAmCf,OAAnC,CAAzB,CACA,GAAI,CAACoD,gBAAL,CAAuB,CACrB,MAAO,EAAP,CACD,CAFD,IAEO,CACL,GAAIC,eAAY,CAAGnS,aAAa,CAACH,KAAjC,CACA,GAAIwQ,KAAK,CAACjb,IAAN,EAAc,IAAlB,CAAwB;AAEtB+c,cAAY,CAAGA,cAAY,CAAC76B,GAAb,CAAiB4G,IAAI,CAAC2hB,KAAtB,CAA6B,IAA7B,CAAf,CACD,CAHD,IAGO,CACLjlB,IAAI,CAACy1B,KAAK,CAACpS,QAAP,CAAiB,SAAC9f,UAAD,CAAqB2J,IAArB,CAA+B,CAClDqqB,cAAY,CAAGA,cAAY,CAAC76B,GAAb,CAAiB,GAAI4G,KAAJ,CAASC,UAAT,CAAjB,CAAuC2J,IAAvC,CAAf,CACD,CAFG,CAAJ,CAGD,CACD,MAAO,MAAK+pB,2BAAL,CACL,GAAIlS,aAAJ,CAAiB0Q,KAAK,CAACvzB,IAAvB,CAA6Bq1B,cAA7B,CAA2C3S,MAA3C,CADK,CAAP,CAGD,CACF,CAnBD;;;;OA0BAiS,iDAAqB30B,IAArB,CAAiC40B,OAAjC,CAA8C,CAC5C,MAAO,MAAKG,2BAAL,CACL,GAAItQ,UAAJ,CAAcjC,eAAe,CAAC8S,MAA9B,CAAsCt1B,IAAtC,CAA4C40B,OAA5C,CADK,CAAP,CAGD,CAJD;;;;OAWAD,6CACE30B,IADF,CAEE4rB,eAFF,CAEwC,CAEtC,GAAMqJ,WAAU,CAAG/R,aAAa,CAACgS,UAAd,CAAyBtJ,eAAzB,CAAnB,CAEA,MAAO,MAAKmJ,2BAAL,CACL,GAAIpQ,MAAJ,CAAUnC,eAAe,CAAC8S,MAA1B,CAAkCt1B,IAAlC,CAAwCi1B,UAAxC,CADK,CAAP,CAGD,CATD;;;;OAgBAN,gDAAoB30B,IAApB,CAA8B,CAC5B,MAAO,MAAK+0B,2BAAL,CACL,GAAIxQ,eAAJ,CAAmB/B,eAAe,CAAC8S,MAAnC,CAA2Ct1B,IAA3C,CADK,CAAP,CAGD,CAJD;;;;OAWA20B,sDAA0B30B,IAA1B,CAAsCsY,IAAtC,CAAkDid,GAAlD,CAA6D,CAC3D,GAAMC,SAAQ,CAAG,KAAKC,eAAL,CAAqBF,GAArB,CAAjB,CACA,GAAIC,QAAQ,EAAI,IAAhB,CAAsB,CACpB,GAAME,EAAC,CAAGf,QAAQ,CAACgB,cAAT,CAAwBH,QAAxB,CAAV,CACA,GAAMI,UAAS,CAAGF,CAAC,CAAC11B,IAApB,CACEsiB,OAAO,CAAGoT,CAAC,CAACpT,OADd,CAEA,GAAMpgB,aAAY,CAAGd,IAAI,CAACc,YAAL,CAAkB0zB,SAAlB,CAA6B51B,IAA7B,CAArB,CACA,GAAMsgB,GAAE,CAAG,GAAImE,UAAJ,CACTjC,eAAe,CAACqT,oBAAhB,CAAqCvT,OAArC,CADS,CAETpgB,YAFS,CAGToW,IAHS,CAAX,CAKA,MAAO,MAAKwd,qBAAL,CAA2BF,SAA3B,CAAsCtV,EAAtC,CAAP,CACD,CAXD,IAWO;AAEL,MAAO,EAAP,CACD,CACF,CAjBD;;;;OAwBAqU,kDACE30B,IADF,CAEE4rB,eAFF,CAGE2J,GAHF,CAGa,CAEX,GAAMC,SAAQ,CAAG,KAAKC,eAAL,CAAqBF,GAArB,CAAjB,CACA,GAAIC,QAAJ,CAAc,CACZ,GAAME,EAAC,CAAGf,QAAQ,CAACgB,cAAT,CAAwBH,QAAxB,CAAV,CACA,GAAMI,UAAS,CAAGF,CAAC,CAAC11B,IAApB,CACEsiB,OAAO,CAAGoT,CAAC,CAACpT,OADd,CAEA,GAAMpgB,aAAY,CAAGd,IAAI,CAACc,YAAL,CAAkB0zB,SAAlB,CAA6B51B,IAA7B,CAArB,CACA,GAAMi1B,WAAU,CAAG/R,aAAa,CAACgS,UAAd,CAAyBtJ,eAAzB,CAAnB,CACA,GAAMtL,GAAE,CAAG,GAAIqE,MAAJ,CACTnC,eAAe,CAACqT,oBAAhB,CAAqCvT,OAArC,CADS,CAETpgB,YAFS,CAGT+yB,UAHS,CAAX,CAKA,MAAO,MAAKa,qBAAL,CAA2BF,SAA3B,CAAsCtV,EAAtC,CAAP,CACD,CAZD,IAYO;AAEL,MAAO,EAAP,CACD,CACF,CAtBD;;;;OA6BAqU,sDAA0B30B,IAA1B,CAAsCu1B,GAAtC,CAAiD,CAC/C,GAAMC,SAAQ,CAAG,KAAKC,eAAL,CAAqBF,GAArB,CAAjB,CACA,GAAIC,QAAJ,CAAc,CACZ,GAAME,EAAC,CAAGf,QAAQ,CAACgB,cAAT,CAAwBH,QAAxB,CAAV,CACA,GAAMI,UAAS,CAAGF,CAAC,CAAC11B,IAApB,CACEsiB,OAAO,CAAGoT,CAAC,CAACpT,OADd,CAEA,GAAMpgB,aAAY,CAAGd,IAAI,CAACc,YAAL,CAAkB0zB,SAAlB,CAA6B51B,IAA7B,CAArB,CACA,GAAMsgB,GAAE,CAAG,GAAIiE,eAAJ,CACT/B,eAAe,CAACqT,oBAAhB,CAAqCvT,OAArC,CADS,CAETpgB,YAFS,CAAX,CAIA,MAAO,MAAK4zB,qBAAL,CAA2BF,SAA3B,CAAsCtV,EAAtC,CAAP,CACD,CAVD,IAUO;AAEL,MAAO,EAAP,CACD,CACF,CAhBD;;;;OAuBAqU,iDACE70B,KADF,CAEEwZ,iBAFF,CAEsC,CAEpC,GAAMtZ,KAAI,CAAGF,KAAK,CAACE,IAAnB,CAEA,GAAIkqB,YAAW,CAAgB,IAA/B,CACA,GAAI6L,yBAAwB,CAAG,KAA/B;;AAGA,KAAKC,cAAL,CAAoBC,aAApB,CAAkCj2B,IAAlC,CAAwC,SAACk2B,eAAD,CAAkBC,EAAlB,CAAoB,CAC1D,GAAMj0B,aAAY,CAAGd,IAAI,CAACc,YAAL,CAAkBg0B,eAAlB,CAAmCl2B,IAAnC,CAArB,CACAkqB,WAAW,CAAGA,WAAW,EAAIiM,EAAE,CAACtF,sBAAH,CAA0B3uB,YAA1B,CAA7B,CACA6zB,wBAAwB,CACtBA,wBAAwB,EAAII,EAAE,CAAC3F,eAAH,EAD9B,CAED,CALD,EAMA,GAAI4F,UAAS,CAAG,KAAKJ,cAAL,CAAoBt7B,GAApB,CAAwBsF,IAAxB,CAAhB,CACA,GAAI,CAACo2B,SAAL,CAAgB,CACdA,SAAS,CAAG,GAAItG,UAAJ,EAAZ,CACA,KAAKkG,cAAL,CAAsB,KAAKA,cAAL,CAAoBx7B,GAApB,CAAwBwF,IAAxB,CAA8Bo2B,SAA9B,CAAtB,CACD,CAHD,IAGO,CACLL,wBAAwB,CACtBA,wBAAwB,EAAIK,SAAS,CAAC5F,eAAV,EAD9B,CAEAtG,WAAW,CAAGA,WAAW,EAAIkM,SAAS,CAACvF,sBAAV,CAAiCzvB,IAAI,CAAC2hB,KAAtC,CAA7B,CACD,CAED,GAAImN,oBAAJ,CACA,GAAIhG,WAAW,EAAI,IAAnB,CAAyB,CACvBgG,mBAAmB,CAAG,IAAtB,CACD,CAFD,IAEO,CACLA,mBAAmB,CAAG,KAAtB,CACAhG,WAAW,CAAGtV,YAAY,CAAChI,UAA3B,CACA,GAAMkW,QAAO,CAAG,KAAKkT,cAAL,CAAoBlT,OAApB,CAA4B9iB,IAA5B,CAAhB,CACA8iB,OAAO,CAACuT,YAAR,CAAqB,SAACvpB,SAAD,CAAYwpB,cAAZ,CAA0B,CAC7C,GAAM9N,cAAa,CAAG8N,cAAc,CAACzF,sBAAf,CAAsCzvB,IAAI,CAAC2hB,KAA3C,CAAtB,CACA,GAAIyF,aAAJ,CAAmB,CACjB0B,WAAW,CAAGA,WAAW,CAAChd,oBAAZ,CACZJ,SADY,CAEZ0b,aAFY,CAAd,CAID,CACF,CARD,EASD,CAED,GAAM+N,kBAAiB,CAAGH,SAAS,CAACI,kBAAV,CAA6B12B,KAA7B,CAA1B,CACA,GAAI,CAACy2B,iBAAD,EAAsB,CAACz2B,KAAK,CAACqa,cAAN,GAAuB0U,YAAvB,EAA3B,CAAkE;AAEhE,GAAM2G,SAAQ,CAAGb,QAAQ,CAAC8B,aAAT,CAAuB32B,KAAvB,CAAjB,CACA5F,MAAM,CACJ,CAAC,KAAKw8B,aAAL,CAAmBpV,GAAnB,CAAuBkU,QAAvB,CADG,CAEJ,wCAFI,CAAN,CAIA,GAAMD,IAAG,CAAGZ,QAAQ,CAACgC,gBAAT,EAAZ,CACA,KAAKD,aAAL,CAAmBl8B,GAAnB,CAAuBg7B,QAAvB,CAAiCD,GAAjC,EACA,KAAKqB,aAAL,CAAmBp8B,GAAnB,CAAuB+6B,GAAvB,CAA4BC,QAA5B,EACD,CACD,GAAMjN,YAAW,CAAG,KAAKsM,iBAAL,CAAuBgC,WAAvB,CAAmC72B,IAAnC,CAApB,CACA,GAAImtB,OAAM,CAAGiJ,SAAS,CAAChG,oBAAV,CACXtwB,KADW,CAEXwZ,iBAFW,CAGXiP,WAHW,CAIX2B,WAJW,CAKXgG,mBALW,CAAb,CAOA,GAAI,CAACqG,iBAAD,EAAsB,CAACR,wBAA3B,CAAqD,CACnD,GAAM9F,KAAI,mBAAsBmG,SAAS,CAACrF,YAAV,CAAuBjxB,KAAvB,CAAhC,CACAqtB,MAAM,CAAGA,MAAM,CAACoC,MAAP,CAAc,KAAKuH,cAAL,CAAoBh3B,KAApB,CAA2BmwB,IAA3B,CAAd,CAAT,CACD,CACD,MAAO9C,OAAP,CACD,CArED;;;;;;;;;OAiFAwH,oDACE70B,KADF,CAEEwZ,iBAFF,CAGEyV,WAHF,CAGqB,CAHrB;AAME,GAAM/uB,KAAI,CAAGF,KAAK,CAACE,IAAnB,CACA,GAAM+2B,eAAc,CAAG,KAAKf,cAAL,CAAoBt7B,GAApB,CAAwBsF,IAAxB,CAAvB,CACA,GAAIgvB,aAAY,CAAY,EAA5B;;;AAIA,GACE+H,cAAc,GACbj3B,KAAK,CAACuf,eAAN,KAA4B,SAA5B,EACC0X,cAAc,CAACP,kBAAf,CAAkC12B,KAAlC,CAFY,CADhB,CAIE;;eAIA,GAAMk3B,iBAAgB,CAAGD,cAAc,CAACpG,uBAAf,CACvB7wB,KADuB,CAEvBwZ,iBAFuB,CAGvByV,WAHuB,CAAzB,CAKA,GAAIgI,cAAc,CAACzqB,OAAf,EAAJ,CAA8B,CAC5B,KAAK0pB,cAAL,CAAsB,KAAKA,cAAL,CAAoBv7B,MAApB,CAA2BuF,IAA3B,CAAtB,CACD,CACD,GAAMswB,QAAO,CAAG0G,gBAAgB,CAAC1G,OAAjC,CACAtB,YAAY,CAAGgI,gBAAgB,CAAC7J,MAAhC;;;;;;AAOA,GAAM8J,gBAAe,CACnB,CAAC,CAAD,GACA3G,OAAO,CAACiC,SAAR,CAAkB,eAAK,CACrB,MAAOzyB,MAAK,CAACqa,cAAN,GAAuB0U,YAAvB,EAAP,CACD,CAFD,CAFF,CAKA,GAAMqI,QAAO,CAAG,KAAKlB,cAAL,CAAoBmB,UAApB,CACdn3B,IADc,CAEd,SAACkC,YAAD,CAAek1B,eAAf,CAA8B,CAC5B,MAAOA,gBAAe,CAAC5G,eAAhB,EAAP,CACD,CAJa,CAAhB,CAOA,GAAIyG,eAAe,EAAI,CAACC,OAAxB,CAAiC,CAC/B,GAAMpU,QAAO,CAAG,KAAKkT,cAAL,CAAoBlT,OAApB,CAA4B9iB,IAA5B,CAAhB;;AAGA,GAAI,CAAC8iB,OAAO,CAACxW,OAAR,EAAL,CAAwB;AAEtB,GAAM+qB,SAAQ,CAAG,KAAKC,+BAAL,CAAqCxU,OAArC,CAAjB;AAGA,IAAK,GAAIvpB,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG89B,QAAQ,CAAC79B,MAA7B,CAAqC,EAAED,CAAvC,CAA0C,CACxC,GAAM02B,KAAI,CAAGoH,QAAQ,CAAC99B,CAAD,CAArB,CACEg+B,QAAQ,CAAGtH,IAAI,CAACW,QAAL,EADb,CAEA,GAAM4G,SAAQ,CAAG,KAAKC,sBAAL,CAA4BxH,IAA5B,CAAjB,CACA,KAAKyE,eAAL,CAAqBgD,cAArB,CACE/C,QAAQ,CAACgD,kBAAT,CAA4BJ,QAA5B,CADF,CAEE,KAAKK,YAAL,CAAkBL,QAAlB,CAFF,CAGEC,QAAQ,CAACK,MAHX,CAIEL,QAAQ,CAACluB,UAJX,EAMD,CAGF,CACF;;;AAID,GAAI,CAAC4tB,OAAD,EAAY5G,OAAO,CAAC92B,MAAR,CAAiB,CAA7B,EAAkC,CAACu1B,WAAvC,CAAoD;;AAGlD,GAAIkI,eAAJ,CAAqB;AAEnB,GAAMa,WAAU,CAAkB,IAAlC,CACA,KAAKpD,eAAL,CAAqBqD,aAArB,CACEpD,QAAQ,CAACgD,kBAAT,CAA4B73B,KAA5B,CADF,CAEEg4B,UAFF,EAID,CAPD,IAOO,CACLxH,OAAO,CAACpO,OAAR,CAAgB,SAAC8V,aAAD,CAAqB,CACnC,GAAMC,YAAW,CAAG5jB,KAAI,CAACqiB,aAAL,CAAmBh8B,GAAnB,CAClBi6B,QAAQ,CAAC8B,aAAT,CAAuBuB,aAAvB,CADkB,CAApB,CAGA3jB,KAAI,CAACqgB,eAAL,CAAqBqD,aAArB,CACEpD,QAAQ,CAACgD,kBAAT,CAA4BK,aAA5B,CADF,CAEEC,WAFF,EAID,CARD,EASD,CACF;AAED,KAAKC,WAAL,CAAiB5H,OAAjB,EAGD,CACD,MAAOtB,aAAP,CACD,CAvGD;;;;;;;;;;OAoHA2F,mDAAuB30B,IAAvB,CAAmCizB,iBAAnC,CAA+D,CAC7D,GAAMkF,kBAAiB,CAAG,IAA1B,CACA,GAAMvG,UAAS,CAAG,KAAKiD,iBAAvB,CACA,GAAM3K,YAAW,CAAG,KAAK8L,cAAL,CAAoBmB,UAApB,CAClBn3B,IADkB,CAElB,SAAC6jB,SAAD,CAAYuS,SAAZ,CAAqB,CACnB,GAAMl0B,aAAY,CAAGd,IAAI,CAACc,YAAL,CAAkB2hB,SAAlB,CAA6B7jB,IAA7B,CAArB,CACA,GAAMkqB,YAAW,CAAGkM,SAAS,CAACvF,sBAAV,CAAiC3uB,YAAjC,CAApB,CACA,GAAIgoB,WAAJ,CAAiB,CACf,MAAOA,YAAP,CACD,CACF,CARiB,CAApB,CAUA,MAAO0H,UAAS,CAACjS,sBAAV,CACL3f,IADK,CAELkqB,WAFK,CAGL+I,iBAHK,CAILkF,iBAJK,CAAP,CAMD,CAnBD;;;OAyBQxD,mDAAR,SACE7R,OADF,CACmC,CAEjC,MAAOA,QAAO,CAACsV,IAAR,CACL,SAACl2B,YAAD,CAAem2B,mBAAf,CAAoCC,QAApC,CAA4C,CAC1C,GAAID,mBAAmB,EAAIA,mBAAmB,CAAC7H,eAApB,EAA3B,CAAkE,CAChE,GAAM+H,aAAY,CAAGF,mBAAmB,CAACvH,eAApB,EAArB,CACA,MAAO,CAACyH,YAAD,CAAP,CACD,CAHD,IAGO;AAEL,GAAIC,QAAK,CAAW,EAApB,CACA,GAAIH,mBAAJ,CAAyB,CACvBG,OAAK,CAAGH,mBAAmB,CAACI,aAApB,EAAR,CACD,CACD36B,IAAI,CAACw6B,QAAD,CAAW,SAACI,IAAD,CAAeC,UAAf,CAAiC,CAC9CH,OAAK,CAAGA,OAAK,CAACjJ,MAAN,CAAaoJ,UAAb,CAAR,CACD,CAFG,CAAJ,CAGA,MAAOH,QAAP,CACD,CACF,CAhBI,CAAP,CAkBD,CArBO,CAuBA7D,+BAAR,SAAoBiE,OAApB,CAAoC,CAClC,IAAK,GAAIj2B,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGi2B,OAAO,CAACp/B,MAA5B,CAAoC,EAAEmJ,CAAtC,CAAyC,CACvC,GAAMk2B,aAAY,CAAGD,OAAO,CAACj2B,CAAD,CAA5B,CACA,GAAI,CAACk2B,YAAY,CAAC1e,cAAb,GAA8B0U,YAA9B,EAAL,CAAmD;AAEjD,GAAMiK,gBAAe,CAAGnE,QAAQ,CAAC8B,aAAT,CAAuBoC,YAAvB,CAAxB,CACA,GAAME,gBAAe,CAAG,KAAKrC,aAAL,CAAmBh8B,GAAnB,CAAuBo+B,eAAvB,CAAxB,CACA,KAAKpC,aAAL,CAAmB5U,MAAnB,CAA0BgX,eAA1B,EACA,KAAKlC,aAAL,CAAmB9U,MAAnB,CAA0BiX,eAA1B,EACD,CACF,CACF,CAXO;;;;OAkBOpE,4BAAf,SAAkC70B,KAAlC,CAA8C,CAC5C,GACEA,KAAK,CAACqa,cAAN,GAAuB0U,YAAvB,IACA,CAAC/uB,KAAK,CAACqa,cAAN,GAAuB6e,SAAvB,EAFH,CAGE;;;AAIA,MAAOl5B,MAAK,CAACuZ,MAAN,EAAP,CACD,CARD,IAQO,CACL,MAAOvZ,MAAP,CACD,CACF,CAZc;;;;OAmBP60B,kCAAR,SAAuB70B,KAAvB,CAAqCmwB,IAArC,CAA+C,CAC7C,GAAMjwB,KAAI,CAAGF,KAAK,CAACE,IAAnB,CACA,GAAMu1B,IAAG,CAAG,KAAKqC,YAAL,CAAkB93B,KAAlB,CAAZ,CACA,GAAM03B,SAAQ,CAAG,KAAKC,sBAAL,CAA4BxH,IAA5B,CAAjB,CAEA,GAAM9C,OAAM,CAAG,KAAKuH,eAAL,CAAqBgD,cAArB,CACb/C,QAAQ,CAACgD,kBAAT,CAA4B73B,KAA5B,CADa,CAEby1B,GAFa,CAGbiC,QAAQ,CAACK,MAHI,CAIbL,QAAQ,CAACluB,UAJI,CAAf,CAOA,GAAMwZ,QAAO,CAAG,KAAKkT,cAAL,CAAoBlT,OAApB,CAA4B9iB,IAA5B,CAAhB;;AAGA,GAAIu1B,GAAJ,CAAS,CACPr7B,MAAM,CACJ,CAAC4oB,OAAO,CAAC7rB,KAAR,CAAcu5B,eAAd,EADG,CAEJ,mDAFI,CAAN,CAID,CALD,IAKO;AAEL,GAAMyI,cAAa,CAAGnW,OAAO,CAACsV,IAAR,CACpB,SAACl2B,YAAD,CAAem2B,mBAAf,CAAoCC,QAApC,CAA4C,CAC1C,GACE,CAACp2B,YAAY,CAACoK,OAAb,EAAD,EACA+rB,mBADA,EAEAA,mBAAmB,CAAC7H,eAApB,EAHF,CAIE,CACA,MAAO,CAAC6H,mBAAmB,CAACvH,eAApB,GAAsCF,QAAtC,EAAD,CAAP,CACD,CAND,IAMO;AAEL,GAAIsI,UAAO,CAAY,EAAvB,CACA,GAAIb,mBAAJ,CAAyB,CACvBa,SAAO,CAAGA,SAAO,CAAC3J,MAAR,CACR8I,mBAAmB,CAACI,aAApB,GAAoCtkB,GAApC,CAAwC,cAAI,CAAI,WAAI,CAACyc,QAAL,GAAe,CAA/D,CADQ,CAAV,CAGD,CACD9yB,IAAI,CAACw6B,QAAD,CAAW,SAACI,IAAD,CAAeS,YAAf,CAAoC,CACjDD,SAAO,CAAGA,SAAO,CAAC3J,MAAR,CAAe4J,YAAf,CAAV,CACD,CAFG,CAAJ,CAGA,MAAOD,UAAP,CACD,CACF,CArBmB,CAAtB,CAuBA,IAAK,GAAI3/B,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG0/B,aAAa,CAACz/B,MAAlC,CAA0C,EAAED,CAA5C,CAA+C,CAC7C,GAAM6/B,YAAW,CAAGH,aAAa,CAAC1/B,CAAD,CAAjC,CACA,KAAKm7B,eAAL,CAAqBqD,aAArB,CACEpD,QAAQ,CAACgD,kBAAT,CAA4ByB,WAA5B,CADF,CAEE,KAAKxB,YAAL,CAAkBwB,WAAlB,CAFF,EAID,CACF,CACD,MAAOjM,OAAP,CACD,CAtDO,CAwDAwH,0CAAR,SACE1E,IADF,CACY,CADZ,eAGE,GAAMnwB,MAAK,CAAGmwB,IAAI,CAACW,QAAL,EAAd,CACA,GAAM2E,IAAG,CAAG,KAAKqC,YAAL,CAAkB93B,KAAlB,CAAZ,CAEA,MAAO,CACL+3B,MAAM,CAAE,WACN,GAAMjJ,MAAK,CAAGqB,IAAI,CAACtI,cAAL,IAAyB/S,YAAY,CAAChI,UAApD,CACA,MAAOgiB,MAAK,CAACjZ,IAAN,EAAP,CACD,CAJI,CAKLrM,UAAU,CAAE,SAAC+vB,MAAD,CAAe,CACzB,GAAIA,MAAM,GAAK,IAAf,CAAqB,CACnB,GAAI9D,GAAJ,CAAS,CACP,MAAOlhB,MAAI,CAACilB,yBAAL,CAA+Bx5B,KAAK,CAACE,IAArC,CAA2Cu1B,GAA3C,CAAP,CACD,CAFD,IAEO,CACL,MAAOlhB,MAAI,CAACklB,mBAAL,CAAyBz5B,KAAK,CAACE,IAA/B,CAAP,CACD,CACF,CAND,IAMO;;AAGL,GAAMlF,MAAK,CAAG8E,kBAAkB,CAACy5B,MAAD,CAASv5B,KAAT,CAAhC,CACA,MAAOuU,MAAI,CAACsc,uBAAL,CACL7wB,KADK,sBAEiB,IAFjB,CAGLhF,KAHK,CAAP,CAKD,CACF,CAtBI,CAAP,CAwBD,CA9BO;;OAmCO65B,uBAAf,SAA6B70B,KAA7B,CAAyC,CACvC,MAAOA,MAAK,CAACE,IAAN,CAAWrI,QAAX,GAAwB,GAAxB,CAA8BmI,KAAK,CAACuf,eAAN,EAArC,CACD,CAFc;;OAOAsV,wBAAf,SACEa,QADF,CACkB,CAEhB,GAAMgE,WAAU,CAAGhE,QAAQ,CAACn6B,OAAT,CAAiB,GAAjB,CAAnB,CACAnB,MAAM,CACJs/B,UAAU,GAAK,CAAC,CAAhB,EAAqBA,UAAU,CAAGhE,QAAQ,CAACh8B,MAAT,CAAkB,CADhD,CAEJ,eAFI,CAAN,CAIA,MAAO,CACL8oB,OAAO,CAAEkT,QAAQ,CAACp2B,MAAT,CAAgBo6B,UAAU,CAAG,CAA7B,CADJ,CAELx5B,IAAI,CAAE,GAAIoB,KAAJ,CAASo0B,QAAQ,CAACp2B,MAAT,CAAgB,CAAhB,CAAmBo6B,UAAnB,CAAT,CAFD,CAAP,CAID,CAZc;;OAiBP7E,mCAAR,SAAwBY,GAAxB,CAAmC,CACjC,MAAO,MAAKqB,aAAL,CAAmBl8B,GAAnB,CAAuB66B,GAAvB,CAAP,CACD,CAFO;;OAOAZ,gCAAR,SAAqB70B,KAArB,CAAiC,CAC/B,GAAM01B,SAAQ,CAAGb,QAAQ,CAAC8B,aAAT,CAAuB32B,KAAvB,CAAjB,CACA,MAAO,MAAK42B,aAAL,CAAmBh8B,GAAnB,CAAuB86B,QAAvB,CAAP,CACD,CAHO;;OAaOb,0BAAf,WACE,MAAOA,SAAQ,CAAC8E,aAAT,EAAP,CACD,CAFc;;OAOP9E,yCAAR,SACEiB,SADF,CAEEtN,SAFF,CAEsB,CAEpB,GAAM8N,UAAS,CAAG,KAAKJ,cAAL,CAAoBt7B,GAApB,CAAwBk7B,SAAxB,CAAlB,CACA17B,MAAM,CAACk8B,SAAD,CAAY,sDAAZ,CAAN,CACA,GAAM7N,YAAW,CAAG,KAAKsM,iBAAL,CAAuBgC,WAAvB,CAAmCjB,SAAnC,CAApB,CACA,MAAOQ,UAAS,CAAC5G,cAAV,CACLlH,SADK,CAELC,WAFK,iBAGY,IAHZ,CAAP,CAKD,CAZO;;;;;;;;;;;;OA2BAoM,+CAAR,SAAoCrM,SAApC,CAAwD,CACtD,MAAO,MAAKoR,qBAAL,CACLpR,SADK,CAEL,KAAK0N,cAFA,iBAGY,IAHZ,CAIL,KAAKnB,iBAAL,CAAuBgC,WAAvB,CAAmCz1B,IAAI,CAAC2hB,KAAxC,CAJK,CAAP,CAMD,CAPO;;OAYA4R,yCAAR,SACErM,SADF,CAEEqR,aAFF,CAGEzP,WAHF,CAIE3B,WAJF,CAI2B,CAEzB,GAAID,SAAS,CAACtoB,IAAV,CAAesM,OAAf,EAAJ,CAA8B,CAC5B,MAAO,MAAKstB,gCAAL,CACLtR,SADK,CAELqR,aAFK,CAGLzP,WAHK,CAIL3B,WAJK,CAAP,CAMD,CAPD,IAOO,CACL,GAAM6N,UAAS,CAAGuD,aAAa,CAACj/B,GAAd,CAAkB0G,IAAI,CAAC2hB,KAAvB,CAAlB;AAGA,GAAImH,WAAW,EAAI,IAAf,EAAuBkM,SAAS,EAAI,IAAxC,CAA8C,CAC5ClM,WAAW,CAAGkM,SAAS,CAACvF,sBAAV,CAAiCzvB,IAAI,CAAC2hB,KAAtC,CAAd,CACD,CAED,GAAIoK,OAAM,CAAY,EAAtB,CACA,GAAMrgB,UAAS,CAAGwb,SAAS,CAACtoB,IAAV,CAAegC,QAAf,EAAlB,CACA,GAAM63B,eAAc,CAAGvR,SAAS,CAACwR,iBAAV,CAA4BhtB,SAA5B,CAAvB,CACA,GAAM0F,UAAS,CAAGmnB,aAAa,CAACxY,QAAd,CAAuBzmB,GAAvB,CAA2BoS,SAA3B,CAAlB,CACA,GAAI0F,SAAS,EAAIqnB,cAAjB,CAAiC,CAC/B,GAAME,iBAAgB,CAAG7P,WAAW,CAChCA,WAAW,CAACpV,iBAAZ,CAA8BhI,SAA9B,CADgC,CAEhC,IAFJ,CAGA,GAAMktB,iBAAgB,CAAGzR,WAAW,CAACplB,KAAZ,CAAkB2J,SAAlB,CAAzB,CACAqgB,MAAM,CAAGA,MAAM,CAACoC,MAAP,CACP,KAAKmK,qBAAL,CACEG,cADF,CAEErnB,SAFF,CAGEunB,gBAHF,CAIEC,gBAJF,CADO,CAAT,CAQD,CAED,GAAI5D,SAAJ,CAAe,CACbjJ,MAAM,CAAGA,MAAM,CAACoC,MAAP,CACP6G,SAAS,CAAC5G,cAAV,CAAyBlH,SAAzB,CAAoCC,WAApC,CAAiD2B,WAAjD,CADO,CAAT,CAGD,CAED,MAAOiD,OAAP,CACD,CACF,CAhDO;;OAqDAwH,oDAAR,SACErM,SADF,CAEEqR,aAFF,CAGEzP,WAHF,CAIE3B,WAJF,CAI2B,CAJ3B,eAME,GAAM6N,UAAS,CAAGuD,aAAa,CAACj/B,GAAd,CAAkB0G,IAAI,CAAC2hB,KAAvB,CAAlB;AAGA,GAAImH,WAAW,EAAI,IAAf,EAAuBkM,SAAS,EAAI,IAAxC,CAA8C,CAC5ClM,WAAW,CAAGkM,SAAS,CAACvF,sBAAV,CAAiCzvB,IAAI,CAAC2hB,KAAtC,CAAd,CACD,CAED,GAAIoK,OAAM,CAAY,EAAtB,CACAwM,aAAa,CAACxY,QAAd,CAAuB5R,gBAAvB,CAAwC,SAACzC,SAAD,CAAY0F,SAAZ,CAAqB,CAC3D,GAAMunB,iBAAgB,CAAG7P,WAAW,CAChCA,WAAW,CAACpV,iBAAZ,CAA8BhI,SAA9B,CADgC,CAEhC,IAFJ,CAGA,GAAMktB,iBAAgB,CAAGzR,WAAW,CAACplB,KAAZ,CAAkB2J,SAAlB,CAAzB,CACA,GAAM+sB,eAAc,CAAGvR,SAAS,CAACwR,iBAAV,CAA4BhtB,SAA5B,CAAvB,CACA,GAAI+sB,cAAJ,CAAoB,CAClB1M,MAAM,CAAGA,MAAM,CAACoC,MAAP,CACPlb,KAAI,CAACulB,gCAAL,CACEC,cADF,CAEErnB,SAFF,CAGEunB,gBAHF,CAIEC,gBAJF,CADO,CAAT,CAQD,CACF,CAhBD,EAkBA,GAAI5D,SAAJ,CAAe,CACbjJ,MAAM,CAAGA,MAAM,CAACoC,MAAP,CACP6G,SAAS,CAAC5G,cAAV,CAAyBlH,SAAzB,CAAoCC,WAApC,CAAiD2B,WAAjD,CADO,CAAT,CAGD,CAED,MAAOiD,OAAP,CACD,CAvCO;;OAxGOwH,uBAAgB,CAAhB,CAgJjB,gBA7vBA,IChFA;;;;;;;;;;;;;;;IAqBA;;;;GAKA,qEACU,eAAkB/f,YAAY,CAAChI,UAA/B,CAST,CAPCqtB,0CAAQj6B,IAAR,CAAkB,CAChB,MAAO,MAAKk6B,SAAL,CAAenlB,QAAf,CAAwB/U,IAAxB,CAAP,CACD,CAFD,CAIAi6B,iDAAej6B,IAAf,CAA2Bm6B,eAA3B,CAAgD,CAC9C,KAAKD,SAAL,CAAiB,KAAKA,SAAL,CAAe9sB,WAAf,CAA2BpN,IAA3B,CAAiCm6B,eAAjC,CAAjB,CACD,CAFD,CAGF,sBAAC,CAVD,GC1BA;;;;;;;;;;;;;;;IAmBA;;;;GAKA,uEACU,eAAqC,EAArC,CAaT,CAXCC,oDAAiB3iC,IAAjB,CAA+B4iC,MAA/B,CAAiD,CAAlB,6BAAkB,CAC/C,GAAI,CAACviC,QAAQ,CAAC,KAAKwiC,SAAN,CAAiB7iC,IAAjB,CAAb,CAAqC,CACnC,KAAK6iC,SAAL,CAAe7iC,IAAf,EAAuB,CAAvB,CACD,CAED,KAAK6iC,SAAL,CAAe7iC,IAAf,GAAwB4iC,MAAxB,CACD,CAND,CAQAD,yCACE,MAAOG,SAAQ,CAAC,KAAKD,SAAN,CAAf,CACD,CAFD,CAGF,uBAAC,CAdD,GCxBA;;;;;;;;;;;;;;;GAoBA,iEA0BC,CAtBQE,2BAAP,SAAqBj0B,QAArB,CAAuC,CACrC,GAAMk0B,WAAU,CAAGl0B,QAAQ,CAAC5O,QAAT,EAAnB,CAEA,GAAI,CAAC,KAAK+iC,YAAL,CAAkBD,UAAlB,CAAL,CAAoC,CAClC,KAAKC,YAAL,CAAkBD,UAAlB,EAAgC,GAAIL,gBAAJ,EAAhC,CACD,CAED,MAAO,MAAKM,YAAL,CAAkBD,UAAlB,CAAP,CACD,CARM,CAUAD,iCAAP,SACEj0B,QADF,CAEEo0B,eAFF,CAE0B,CAExB,GAAMF,WAAU,CAAGl0B,QAAQ,CAAC5O,QAAT,EAAnB,CAEA,GAAI,CAAC,KAAKijC,UAAL,CAAgBH,UAAhB,CAAL,CAAkC,CAChC,KAAKG,UAAL,CAAgBH,UAAhB,EAA8BE,eAAe,EAA7C,CACD,CAED,MAAO,MAAKC,UAAL,CAAgBH,UAAhB,CAAP,CACD,CAXM,CAbQD,0BAAiD,EAAjD,CACAA,wBAAuC,EAAvC,CAwBjB,oBA1BA,ICpBA;;;;;;;;;;;;;;;IAoBA;;;;;GAMA,0CAGE,uBAAoBK,WAApB,CAAgD,CAA5B,6BAFZ,WAAwC,IAAxC,CAE4C,CAEpDC,uCACE,GAAMC,SAAQ,CAAG,KAAKF,WAAL,CAAiBngC,GAAjB,EAAjB,CAEA,GAAM+lB,MAAK,aAAQsa,QAAR,CAAX,CACA,GAAI,KAAKC,KAAT,CAAgB,CACdl9B,IAAI,CAAC,KAAKk9B,KAAN,CAAa,SAACC,IAAD,CAAehkC,KAAf,CAA4B,CAC3CwpB,KAAK,CAACwa,IAAD,CAAL,CAAcxa,KAAK,CAACwa,IAAD,CAAL,CAAchkC,KAA5B,CACD,CAFG,CAAJ,CAGD,CACD,KAAK+jC,KAAL,CAAaD,QAAb,CAEA,MAAOta,MAAP,CACD,CAZD,CAaF,qBAAC,CAlBD,GC1BA;;;;;;;;;;;;;;;IAuBA;AACA;AACA;AACA,GAAMya,qBAAoB,CAAG,GAAK,IAAlC,CACA,GAAMC,qBAAoB,CAAG,GAAK,IAAlC,CAEA;AACA,GAAMC,sBAAqB,CAAG,EAAI,EAAJ,CAAS,IAAvC,CAEA;;GAGA;;;OAQE,uBAAYC,UAAZ,CAAiDC,OAAjD,CAAuE,CAAtB,qBANzC,oBAA2C,EAA3C,CAON,KAAKC,cAAL,CAAsB,GAAIT,cAAJ,CAAkBO,UAAlB,CAAtB,CAEA,GAAMz6B,QAAO,CACXs6B,oBAAoB,CACpB,CAACC,oBAAoB,CAAGD,oBAAxB,EAAgD9+B,IAAI,CAAC2O,MAAL,EAFlD,CAGArK,qBAAqB,CAAC,KAAK86B,YAAL,CAAkBjhC,IAAlB,CAAuB,IAAvB,CAAD,CAA+B6B,IAAI,CAACC,KAAL,CAAWuE,OAAX,CAA/B,CAArB,CACD,CAED66B,6CAAYR,IAAZ,CAAwB,CACtB,KAAKS,cAAL,CAAoBT,IAApB,EAA4B,IAA5B,CACD,CAFD,CAIQQ,qCAAR,0BACE,GAAME,MAAK,CAAG,KAAKJ,cAAL,CAAoB7gC,GAApB,EAAd,CACA,GAAMkhC,cAAa,CAAiB,EAApC,CACA,GAAIC,kBAAiB,CAAG,KAAxB,CAEA/9B,IAAI,CAAC69B,KAAD,CAAQ,SAACV,IAAD,CAAehkC,KAAf,CAA4B,CACtC,GAAIA,KAAK,CAAG,CAAR,EAAaa,QAAQ,CAACuc,KAAI,CAACqnB,cAAN,CAAsBT,IAAtB,CAAzB,CAAsD,CACpDW,aAAa,CAACX,IAAD,CAAb,CAAsBhkC,KAAtB,CACA4kC,iBAAiB,CAAG,IAApB,CACD,CACF,CALG,CAAJ,CAOA,GAAIA,iBAAJ,CAAuB,CACrB,KAAKP,OAAL,CAAaQ,WAAb,CAAyBF,aAAzB,EACD;AAGDl7B,qBAAqB,CACnB,KAAK86B,YAAL,CAAkBjhC,IAAlB,CAAuB,IAAvB,CADmB,CAEnB6B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC2O,MAAL,GAAgB,CAAhB,CAAoBqwB,qBAA/B,CAFmB,CAArB,CAID,CArBO,CAsBV,qBAAC,CA3CD,GCnCA;;;;;;;;;;;;;;;IAqBA;;;;;;;;;;;;;GAcA;;;WAKU,iBAA2B,EAA3B;;;;WAOA,qBAAkB,CAAlB,CAyFT;;OApFCW,0CAAYC,aAAZ,CAAkC;AAEhC,GAAIC,SAAQ,CAAG,IAAf,CACA,IAAK,GAAI1iC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGyiC,aAAa,CAACxiC,MAAlC,CAA0CD,CAAC,EAA3C,CAA+C,CAC7C,GAAM+gB,UAAS,CAAG0hB,aAAa,CAACziC,CAAD,CAA/B,CACA,GAAM2iC,UAAS,CAAG5hB,SAAS,CAACV,OAAV,EAAlB,CACA,GAAIqiB,QAAQ,GAAK,IAAb,EAAqB,CAACC,SAAS,CAAChuB,MAAV,CAAiB+tB,QAAQ,CAACriB,OAAT,EAAjB,CAA1B,CAAgE,CAC9D,KAAKuiB,WAAL,CAAiB7+B,IAAjB,CAAsB2+B,QAAtB,EACAA,QAAQ,CAAG,IAAX,CACD,CAED,GAAIA,QAAQ,GAAK,IAAjB,CAAuB,CACrBA,QAAQ,CAAG,GAAIG,UAAJ,CAAcF,SAAd,CAAX,CACD,CAEDD,QAAQ,CAACI,GAAT,CAAa/hB,SAAb,EACD,CACD,GAAI2hB,QAAJ,CAAc,CACZ,KAAKE,WAAL,CAAiB7+B,IAAjB,CAAsB2+B,QAAtB,EACD,CACF,CApBD;;;;;;;;OA+BAF,gDAAkB/7B,IAAlB,CAA8Bg8B,aAA9B,CAAoD,CAClD,KAAKM,WAAL,CAAiBN,aAAjB,EACA,KAAKO,mCAAL,CAAyC,SAACL,SAAD,CAAgB,CACvD,gBAAS,CAAChuB,MAAV,CAAiBlO,IAAjB,EAAsB,CADxB,EAGD,CALD;;;;;;;;OAgBA+7B,wDAA0BS,WAA1B,CAA6CR,aAA7C,CAAmE,CACjE,KAAKM,WAAL,CAAiBN,aAAjB,EAEA,KAAKO,mCAAL,CAAyC,SAACL,SAAD,CAAgB,CACvD,MAAOA,UAAS,CAACpkC,QAAV,CAAmB0kC,WAAnB,GAAmCA,WAAW,CAAC1kC,QAAZ,CAAqBokC,SAArB,CAA1C,CACD,CAFD,EAGD,CAND;;;OAYQH,yDAAR,SACE3Y,SADF,CACoC,CAElC,KAAKqZ,eAAL,GAEA,GAAIC,QAAO,CAAG,IAAd,CACA,IAAK,GAAInjC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAK4iC,WAAL,CAAiB3iC,MAArC,CAA6CD,CAAC,EAA9C,CAAkD,CAChD,GAAMojC,UAAS,CAAG,KAAKR,WAAL,CAAiB5iC,CAAjB,CAAlB,CACA,GAAIojC,SAAJ,CAAe,CACb,GAAMT,UAAS,CAAGS,SAAS,CAAC/iB,OAAV,EAAlB,CACA,GAAIwJ,SAAS,CAAC8Y,SAAD,CAAb,CAA0B,CACxB,KAAKC,WAAL,CAAiB5iC,CAAjB,EAAoBqjC,KAApB,GACA,KAAKT,WAAL,CAAiB5iC,CAAjB,EAAsB,IAAtB,CACD,CAHD,IAGO,CACLmjC,OAAO,CAAG,KAAV,CACD,CACF,CACF,CAED,GAAIA,OAAJ,CAAa,CACX,KAAKP,WAAL,CAAmB,EAAnB,CACD,CAED,KAAKM,eAAL,GACD,CAxBO,CAyBV,kBAAC,CArGD,GAuGA;;;GAIA,sCAOE,mBAA6Bz0B,KAA7B,CAAwC,CAAX;;;WAFrB,aAAmB,EAAnB,CAEoC;;OAK5Co0B,iCAAI9hB,SAAJ,CAAoB,CAClB,KAAKuiB,OAAL,CAAav/B,IAAb,CAAkBgd,SAAlB,EACD,CAFD;;OAOA8hB,qCACE,IAAK,GAAI7iC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAKsjC,OAAL,CAAarjC,MAAjC,CAAyCD,CAAC,EAA1C,CAA8C,CAC5C,GAAM+gB,UAAS,CAAG,KAAKuiB,OAAL,CAAatjC,CAAb,CAAlB,CACA,GAAI+gB,SAAS,GAAK,IAAlB,CAAwB,CACtB,KAAKuiB,OAAL,CAAatjC,CAAb,EAAkB,IAAlB,CACA,GAAMujC,QAAO,CAAGxiB,SAAS,CAACX,cAAV,EAAhB,CACA,GAAI9f,MAAJ,CAAY,CACVS,GAAG,CAAC,UAAYggB,SAAS,CAAC3iB,QAAV,EAAb,CAAH,CACD,CACD0I,cAAc,CAACy8B,OAAD,CAAd,CACD,CACF,CACF,CAZD;;OAiBAV,uCACE,MAAO,MAAKp0B,KAAZ,CACD,CAFD,CAGF,iBAAC,CAvCD,GC9IA;;;;;;;;;;;;;;;IAmBA;;;GAIA;;OAWE,sBAAoB+0B,cAApB,CAA4C,CAAxB,mCAVZ,gBAKJ,EALI,CAWN7iC,MAAM,CACJR,KAAK,CAACC,OAAN,CAAcojC,cAAd,GAAiCA,cAAc,CAACvjC,MAAf,CAAwB,CADrD,CAEJ,4BAFI,CAAN,CAID;;;;OAgBSwjC,+BAAV,SAAkBp0B,SAAlB,CAAmC,CAAE,qDAAqB,CAArBvP,6BACnC,GAAIK,KAAK,CAACC,OAAN,CAAc,KAAKsjC,UAAL,CAAgBr0B,SAAhB,CAAd,CAAJ,CAA+C;AAE7C,GAAMs0B,UAAS,UAAO,KAAKD,UAAL,CAAgBr0B,SAAhB,CAAP,CAAf,CAEA,IAAK,GAAIrP,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG2jC,SAAS,CAAC1jC,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACzC2jC,SAAS,CAAC3jC,CAAD,CAAT,CAAaojB,QAAb,CAAsB/iB,KAAtB,CAA4BsjC,SAAS,CAAC3jC,CAAD,CAAT,CAAasjB,OAAzC,CAAkDxjB,OAAlD,EACD,CACF,CACF,CATS,CAWV2jC,mCAAGp0B,SAAH,CAAsB+T,QAAtB,CAAsDE,OAAtD,CAAsE,CACpE,KAAKsgB,kBAAL,CAAwBv0B,SAAxB,EACA,KAAKq0B,UAAL,CAAgBr0B,SAAhB,EAA6B,KAAKq0B,UAAL,CAAgBr0B,SAAhB,GAA8B,EAA3D,CACA,KAAKq0B,UAAL,CAAgBr0B,SAAhB,EAA2BtL,IAA3B,CAAgC,CAAEqf,QAAQ,SAAV,CAAYE,OAAO,QAAnB,CAAhC,EAEA,GAAMvC,UAAS,CAAG,KAAK8iB,eAAL,CAAqBx0B,SAArB,CAAlB,CACA,GAAI0R,SAAJ,CAAe,CACbqC,QAAQ,CAAC/iB,KAAT,CAAeijB,OAAf,CAAwBvC,SAAxB,EACD,CACF,CATD,CAWA0iB,oCAAIp0B,SAAJ,CAAuB+T,QAAvB,CAAuDE,OAAvD,CAAuE,CACrE,KAAKsgB,kBAAL,CAAwBv0B,SAAxB,EACA,GAAMs0B,UAAS,CAAG,KAAKD,UAAL,CAAgBr0B,SAAhB,GAA8B,EAAhD,CACA,IAAK,GAAIrP,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG2jC,SAAS,CAAC1jC,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACzC,GACE2jC,SAAS,CAAC3jC,CAAD,CAAT,CAAaojB,QAAb,GAA0BA,QAA1B,GACC,CAACE,OAAD,EAAYA,OAAO,GAAKqgB,SAAS,CAAC3jC,CAAD,CAAT,CAAasjB,OADtC,CADF,CAGE,CACAqgB,SAAS,CAACzK,MAAV,CAAiBl5B,CAAjB,CAAoB,CAApB,EACA,OACD,CACF,CACF,CAZD,CAcQyjC,0CAAR,SAA2Bp0B,SAA3B,CAA4C,CAC1C1O,MAAM,CACJ,KAAK6iC,cAAL,CAAoBxb,IAApB,CAAyB,YAAE,CACzB,MAAO8b,GAAE,GAAKz0B,SAAd,CACD,CAFD,CADI,CAIJ,kBAAoBA,SAJhB,CAAN,CAMD,CAPO,CAQV,oBAAC,CA5ED,GCvBA;;;;;;;;;;;;;;;IAsBA;;GAGA,oDAAuC8C,oCAOrC,uCACEwL,iBAAM,CAAC,SAAD,CAAN,GAAkB,IADpB,CAEE,GAAIomB,OAAJ,CACA,GAAIC,iBAAJ,CACA,GACE,MAAOzhC,SAAP,GAAoB,WAApB,EACA,MAAOA,SAAQ,CAACQ,gBAAhB,GAAqC,WAFvC,CAGE,CACA,GAAI,MAAOR,SAAQ,CAAC,QAAD,CAAf,GAA8B,WAAlC,CAA+C;AAE7CyhC,gBAAgB,CAAG,kBAAnB,CACAD,MAAM,CAAG,QAAT,CACD,CAJD,IAIO,IAAI,MAAOxhC,SAAQ,CAAC,WAAD,CAAf,GAAiC,WAArC,CAAkD,CACvDyhC,gBAAgB,CAAG,qBAAnB,CACAD,MAAM,CAAG,WAAT,CACD,CAHM,IAGA,IAAI,MAAOxhC,SAAQ,CAAC,UAAD,CAAf,GAAgC,WAApC,CAAiD,CACtDyhC,gBAAgB,CAAG,oBAAnB,CACAD,MAAM,CAAG,UAAT,CACD,CAHM,IAGA,IAAI,MAAOxhC,SAAQ,CAAC,cAAD,CAAf,GAAoC,WAAxC,CAAqD,CAC1DyhC,gBAAgB,CAAG,wBAAnB,CACAD,MAAM,CAAG,cAAT,CACD,CACF;;;;AAMDjpB,KAAI,CAACmpB,QAAL,CAAgB,IAAhB,CAEA,GAAID,gBAAJ,CAAsB,CACpBzhC,QAAQ,CAACQ,gBAAT,CACEihC,gBADF,CAEE,WACE,GAAMtL,QAAO,CAAG,CAACn2B,QAAQ,CAACwhC,MAAD,CAAzB,CACA,GAAIrL,OAAO,GAAK5d,KAAI,CAACmpB,QAArB,CAA+B,CAC7BnpB,KAAI,CAACmpB,QAAL,CAAgBvL,OAAhB,CACA5d,KAAI,CAACopB,OAAL,CAAa,SAAb,CAAwBxL,OAAxB,EACD,CACF,CARH,CASE,KATF,EAWD,cACF,CA/CMyL,8BAAP,WACE,MAAO,IAAIA,kBAAJ,EAAP,CACD,CAFM;;;OAqDPA,qDAAgB90B,SAAhB,CAAiC,CAC/B1O,MAAM,CAAC0O,SAAS,GAAK,SAAf,CAA0B,uBAAyBA,SAAnD,CAAN,CACA,MAAO,CAAC,KAAK40B,QAAN,CAAP,CACD,CAHD,CAIF,yBA5DA,EAAuCR,YAAvC,ECzBA;;;;;;;;;;;;;;;IAoBA;;;;;;;;GASA,gDAAmCtxB,gCAOjC,mCACEwL,iBAAM,CAAC,QAAD,CAAN,GAAiB,IADnB,CANQ7C,cAAU,IAAV;;;;AAaN,GACE,MAAOpc,OAAP,GAAkB,WAAlB,EACA,MAAOA,OAAM,CAACqE,gBAAd,GAAmC,WADnC,EAEA,CAACqhC,eAAe,EAHlB,CAIE,CACA1lC,MAAM,CAACqE,gBAAP,CACE,QADF,CAEE,WACE,GAAI,CAAC+X,KAAI,CAACupB,OAAV,CAAmB,CACjBvpB,KAAI,CAACupB,OAAL,CAAe,IAAf,CACAvpB,KAAI,CAACopB,OAAL,CAAa,QAAb,CAAuB,IAAvB,EACD,CACF,CAPH,CAQE,KARF,EAWAxlC,MAAM,CAACqE,gBAAP,CACE,SADF,CAEE,WACE,GAAI+X,KAAI,CAACupB,OAAT,CAAkB,CAChBvpB,KAAI,CAACupB,OAAL,CAAe,KAAf,CACAvpB,KAAI,CAACopB,OAAL,CAAa,QAAb,CAAuB,KAAvB,EACD,CACF,CAPH,CAQE,KARF,EAUD,cACF,CAtCMI,0BAAP,WACE,MAAO,IAAIA,cAAJ,EAAP,CACD,CAFM;;;OA4CPA,iDAAgBj1B,SAAhB,CAAiC,CAC/B1O,MAAM,CAAC0O,SAAS,GAAK,QAAf,CAAyB,uBAAyBA,SAAlD,CAAN,CACA,MAAO,CAAC,KAAKg1B,OAAN,CAAP,CACD,CAHD;;OAQAC,mDACE,MAAO,MAAKD,OAAZ,CACD,CAFD,CAGF,qBA1DA,EAAmCZ,YAAnC,EC7BA;;;;;;;;;;;;;;;IAmBA;;;;GAKA;;OASE,wBAAoBc,UAApB,CAA+C,CAA3B,2BARpB,sBAA8B,EAA9B,CACA,wBAAqB,CAArB,CACA,wBAAqB,CAAC,CAAtB,CACA,aAA+B,IAA/B,CAKmD,CAEnDC,6CAAWC,WAAX,CAAgCrhB,QAAhC,CAAoD,CAClD,KAAKshB,kBAAL,CAA0BD,WAA1B,CACA,KAAKE,OAAL,CAAevhB,QAAf,CACA,GAAI,KAAKshB,kBAAL,CAA0B,KAAKE,kBAAnC,CAAuD,CACrD,KAAKD,OAAL,GACA,KAAKA,OAAL,CAAe,IAAf,CACD,CACF,CAPD;;;;;;OAgBAH,iDAAeK,UAAf,CAAmC7iC,IAAnC,CAAkD,CAAlD,eACE,KAAK8iC,gBAAL,CAAsBD,UAAtB,EAAoC7iC,IAApC,wBAEE,GAAM+iC,UAAS,CAAGC,OAAKF,gBAAL,CAChBE,OAAKJ,kBADW,CAAlB,CAGA,MAAOI,QAAKF,gBAAL,CAAsBE,OAAKJ,kBAA3B,CAAP,sBACS5kC,EAAC,CACR,GAAI+kC,SAAS,CAAC/kC,CAAD,CAAb,CAAkB,CAChB8G,cAAc,CAAC,WACbgU,KAAI,CAACypB,UAAL,CAAgBQ,SAAS,CAAC/kC,CAAD,CAAzB,EACD,CAFa,CAAd,CAGD,GALH,IAAK,GAAIA,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG+kC,SAAS,CAAC9kC,MAA9B,CAAsC,EAAED,CAAxC,CAAyC,SAAhCA,GAMR,CACD,GAAIglC,OAAKJ,kBAAL,GAA4BI,OAAKN,kBAArC,CAAyD,CACvD,GAAIM,OAAKL,OAAT,CAAkB,CAChBK,OAAKL,OAAL,GACAK,OAAKL,OAAL,CAAe,IAAf,CACD,eAEF,CACDK,OAAKJ,kBAAL,qBAnBF,MAAO,KAAKE,gBAAL,CAAsB,KAAKF,kBAA3B,CAAP,CAAqD,kDAoBpD,CACF,CAvBD,CAwBF,sBAAC,CAnDD,GCxBA;;;;;;;;;;;;;;;IA6CA;AACO,GAAMK,8BAA6B,CAAG,OAAtC,CACA,GAAMC,gCAA+B,CAAG,OAAxC,CACA,GAAMC,kCAAiC,CAAG,YAA1C,CACA,GAAMC,+BAA8B,CAAG,SAAvC,CACA,GAAMC,2BAA0B,CAAG,IAAnC,CACA,GAAMC,2BAA0B,CAAG,IAAnC,CACA,GAAMC,+BAA8B,CAAG,KAAvC,CACA,GAAMC,oCAAmC,CAAG,IAA5C,CACA,GAAMC,oCAAmC,CAAG,KAA5C,CACA,GAAMC,qCAAoC,CAAG,IAA7C,CACA,GAAMC,6BAA4B,CAAG,GAArC,CAEA,GAAMC,8CAA6C,CAAG,QAAtD,CAEP;AACA;AACA;AACA,GAAMC,kBAAiB,CAAG,IAA1B,CACA,GAAMC,gBAAe,CAAG,EAAxB,CAA2B;AAC3B,GAAMC,iBAAgB,CAAGF,iBAAiB,CAAGC,eAA7C,CAEA;;;;;;GAOA,GAAME,2BAA0B,CAAG,KAAnC,CAEA;;;;GAKA,GAAMC,mBAAkB,CAAG,KAA3B,CAEA;;;;;GAMA;;;;;;;;OA0BE,+BACSC,MADT,CAESl5B,QAFT,CAGUm5B,aAHV,CAISC,kBAJT,CAKSC,aALT,CAK+B,CAJtB,mBACA,uBACC,iCACD,2CACA,iCA9BT,eAAY,CAAZ,CACA,mBAAgB,CAAhB,CAUQ,oBAAiB,KAAjB,CAqBN,KAAKC,IAAL,CAAYllC,UAAU,CAAC8kC,MAAD,CAAtB,CACA,KAAKK,MAAL,CAActF,YAAY,CAACuF,aAAb,CAA2Bx5B,QAA3B,CAAd,CACA,KAAKy5B,KAAL,CAAa,SAAC/6B,MAAD,CAAgC,CAC3C,eAAQ,CAACg7B,aAAT,CAAuB/7B,YAAvB,CAAqCe,MAArC,EAA4C,CAD9C,CAED;;;;OAODi7B,8CAAKC,SAAL,CAAmCC,YAAnC,CAAsE,CAAtE,eACE,KAAKC,aAAL,CAAqB,CAArB,CACA,KAAKC,aAAL,CAAqBF,YAArB,CACA,KAAKG,eAAL,CAAuB,GAAIxC,eAAJ,CAAmBoC,SAAnB,CAAvB,CACA,KAAKK,SAAL,CAAiB,KAAjB,CAEA,KAAKC,oBAAL,CAA4BtkC,UAAU,CAAC,WACrCkY,KAAI,CAACwrB,IAAL,CAAU,8BAAV;AAEAxrB,KAAI,CAACqsB,SAAL,GACArsB,KAAI,CAACosB,oBAAL,CAA4B,IAA5B;AAED,CANqC,CAMnCrkC,IAAI,CAACC,KAAL,CAAWmjC,kBAAX,CANmC,CAAtC;AASA7jC,mBAAmB,CAAC,WAClB,GAAI0Y,KAAI,CAACmsB,SAAT,CAAoB,CAClB,OACD;AAGDnsB,KAAI,CAACssB,eAAL,CAAuB,GAAIC,2BAAJ,CACrB,WAAC,kDAAO,CAAPC,wBACO,cAAoCA,IAApC,CAAwC,CAAxC,EAACC,OAAO,MAAR,CAAUC,IAAI,MAAd,CAAgBC,IAAI,MAApB,CAAsBC,IAAI,MAA1B,CAA4BC,IAAI,MAAhC,CACN7sB,KAAI,CAAC8sB,uBAAL,CAA6BN,IAA7B,EACA,GAAI,CAACxsB,KAAI,CAACssB,eAAV,CAA2B,CACzB,OAAO;AACR,CAED,GAAItsB,KAAI,CAACosB,oBAAT,CAA+B,CAC7BW,YAAY,CAAC/sB,KAAI,CAACosB,oBAAN,CAAZ,CACApsB,KAAI,CAACosB,oBAAL,CAA4B,IAA5B,CACD,CACDpsB,KAAI,CAACgtB,cAAL,CAAsB,IAAtB,CACA,GAAIP,OAAO,GAAKtC,6BAAhB,CAA+C,CAC7CnqB,KAAI,CAAC5b,EAAL,CAAUsoC,IAAV,CACA1sB,KAAI,CAACitB,QAAL,CAAgBN,IAAhB,CACD,CAHD,IAGO,IAAIF,OAAO,GAAKrC,+BAAhB,CAAiD;AAEtD,GAAIsC,IAAJ,CAAU;;AAGR1sB,KAAI,CAACssB,eAAL,CAAqBY,YAArB,CAAoC,KAApC;;AAIAltB,KAAI,CAACksB,eAAL,CAAqBiB,UAArB,CAAgCT,IAAhC,CAAgD,WAC9C1sB,KAAI,CAACqsB,SAAL,GACD,CAFD,EAGD,CAVD,IAUO,CACLrsB,KAAI,CAACqsB,SAAL,GACD,CACF,CAfM,IAeA,CACL,KAAM,IAAI1lC,MAAJ,CAAU,kCAAoC8lC,OAA9C,CAAN,CACD,CACF,CAlCoB,CAmCrB,WAAC,kDAAO,CAAPD,wBACO,cAAaA,IAAb,CAAiB,CAAjB,EAACY,EAAE,MAAH,CAAKlmC,IAAI,MAAT,CACN8Y,KAAI,CAAC8sB,uBAAL,CAA6BN,IAA7B,EACAxsB,KAAI,CAACksB,eAAL,CAAqBmB,cAArB,CAAoCD,EAApC,CAAkDlmC,IAAlD,EACD,CAvCoB,CAwCrB,WACE8Y,KAAI,CAACqsB,SAAL,GACD,CA1CoB,CA2CrBrsB,KAAI,CAAC2rB,KA3CgB,CAAvB;;AAgDA,GAAM2B,UAAS,CAAqC,EAApD,CACAA,SAAS,CAACnD,6BAAD,CAAT,CAA2C,GAA3C,CACAmD,SAAS,CAAC7C,8BAAD,CAAT,CAA4C1iC,IAAI,CAACC,KAAL,CAC1CD,IAAI,CAAC2O,MAAL,GAAgB,SAD0B,CAA5C,CAGA,GAAIsJ,KAAI,CAACssB,eAAL,CAAqBiB,wBAAzB,CAAmD,CACjDD,SAAS,CACP5C,mCADO,CAAT,CAEI1qB,KAAI,CAACssB,eAAL,CAAqBiB,wBAFzB,CAGD,CACDD,SAAS,CAACj+B,aAAD,CAAT,CAA2BD,gBAA3B,CACA,GAAI4Q,KAAI,CAACsrB,kBAAT,CAA6B,CAC3BgC,SAAS,CAACh+B,uBAAD,CAAT,CAAqC0Q,KAAI,CAACsrB,kBAA1C,CACD,CACD,GAAItrB,KAAI,CAACurB,aAAT,CAAwB,CACtB+B,SAAS,CAAC59B,kBAAD,CAAT,CAAgCsQ,KAAI,CAACurB,aAArC,CACD,CACD,GAAIvrB,KAAI,CAACqrB,aAAT,CAAwB,CACtBiC,SAAS,CAAC39B,oBAAD,CAAT,CAAkCqQ,KAAI,CAACqrB,aAAvC,CACD,CACD,GACE,MAAOvkC,SAAP,GAAoB,WAApB,EACAA,QAAQ,CAACqE,IADT,EAEArE,QAAQ,CAACqE,IAAT,CAAcnE,OAAd,CAAsByI,YAAtB,IAAwC,CAAC,CAH3C,CAIE,CACA69B,SAAS,CAAC/9B,aAAD,CAAT,CAA2BC,SAA3B,CACD,CACD,GAAMg+B,WAAU,CAAGxtB,KAAI,CAAC2rB,KAAL,CAAW2B,SAAX,CAAnB,CACAttB,KAAI,CAACwrB,IAAL,CAAU,+BAAiCgC,UAA3C,EACAxtB,KAAI,CAACssB,eAAL,CAAqBmB,MAArB,CAA4BD,UAA5B,CAAwC,2BAEvC,CAFD,EAGD,CAtFkB,CAAnB,CAuFD,CAtGD;;OA2GA3B,iDACE,KAAKS,eAAL,CAAqBoB,aAArB,CAAmC,KAAKtpC,EAAxC,CAA4C,KAAK6oC,QAAjD,EACA,KAAKU,sBAAL,CAA4B,KAAKvpC,EAAjC,CAAqC,KAAK6oC,QAA1C,EACD,CAHD;;OAUOpB,iCAAP,WACEA,qBAAqB,CAAC+B,WAAtB,CAAoC,IAApC,CACD,CAFM;;OASA/B,oCAAP,WACEA,qBAAqB,CAACgC,cAAtB,CAAuC,IAAvC,CACD,CAFM;AAKAhC,kCAAP,WACE,GAAIrkC,SAAS,EAAb,CAAiB,CACf,MAAO,MAAP,CACD,CAFD,IAEO,IAAIqkC,qBAAqB,CAAC+B,WAA1B,CAAuC,CAC5C,MAAO,KAAP,CACD,CAFM,IAEA;;AAGL,MACE,CAAC/B,qBAAqB,CAACgC,cAAvB,EACA,MAAOpmC,SAAP,GAAoB,WADpB,EAEAA,QAAQ,CAACqmC,aAAT,EAA0B,IAF1B,EAGA,CAAC7iC,8BAA8B,EAH/B,EAIA,CAACG,iBAAiB,EALpB,CAOD,CACF,CAhBM;;OAqBPygC,iEAA0B,CAA1B;;;OAMQA,0CAAR,WACE,KAAKM,SAAL,CAAiB,IAAjB,CAEA,GAAI,KAAKG,eAAT,CAA0B,CACxB,KAAKA,eAAL,CAAqByB,KAArB,GACA,KAAKzB,eAAL,CAAuB,IAAvB,CACD;AAGD,GAAI,KAAK0B,cAAT,CAAyB,CACvBvmC,QAAQ,CAACI,IAAT,CAAcomC,WAAd,CAA0B,KAAKD,cAA/B,EACA,KAAKA,cAAL,CAAsB,IAAtB,CACD,CAED,GAAI,KAAK5B,oBAAT,CAA+B,CAC7BW,YAAY,CAAC,KAAKX,oBAAN,CAAZ,CACA,KAAKA,oBAAL,CAA4B,IAA5B,CACD,CACF,CAlBO;;;OAwBAP,0CAAR,WACE,GAAI,CAAC,KAAKM,SAAV,CAAqB,CACnB,KAAKX,IAAL,CAAU,4BAAV,EACA,KAAK0C,SAAL,GAEA,GAAI,KAAKjC,aAAT,CAAwB,CACtB,KAAKA,aAAL,CAAmB,KAAKe,cAAxB,EACA,KAAKf,aAAL,CAAqB,IAArB,CACD,CACF,CACF,CAVO;;;OAgBRJ,iDACE,GAAI,CAAC,KAAKM,SAAV,CAAqB,CACnB,KAAKX,IAAL,CAAU,2BAAV,EACA,KAAK0C,SAAL,GACD,CACF,CALD;;;;OAYArC,8CAAK3kC,IAAL,CAAa,CACX,GAAMinC,QAAO,CAAGnrC,SAAS,CAACkE,IAAD,CAAzB,CACA,KAAKknC,SAAL,EAAkBD,OAAO,CAAChpC,MAA1B,CACA,KAAKsmC,MAAL,CAAY4C,gBAAZ,CAA6B,YAA7B,CAA2CF,OAAO,CAAChpC,MAAnD;AAGA,GAAMmpC,WAAU,CAAGC,YAAY,CAACJ,OAAD,CAA/B;;AAIA,GAAM7kC,SAAQ,CAAGH,iBAAiB,CAACmlC,UAAD,CAAarD,gBAAb,CAAlC;;AAIA,IAAK,GAAI/lC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGoE,QAAQ,CAACnE,MAA7B,CAAqCD,CAAC,EAAtC,CAA0C,CACxC,KAAKonC,eAAL,CAAqBkC,cAArB,CACE,KAAKxC,aADP,CAEE1iC,QAAQ,CAACnE,MAFX,CAGEmE,QAAQ,CAACpE,CAAD,CAHV,EAKA,KAAK8mC,aAAL,GACD,CACF,CAtBD;;;;;;OA+BAH,gEAAuBznC,EAAvB,CAAmCqqC,EAAnC,CAA6C,CAC3C,GAAIjnC,SAAS,EAAb,CAAiB,CACf,OACD,CACD,KAAKwmC,cAAL,CAAsBvmC,QAAQ,CAACqmC,aAAT,CAAuB,QAAvB,CAAtB,CACA,GAAMR,UAAS,CAA4B,EAA3C,CACAA,SAAS,CAACxC,6CAAD,CAAT,CAA2D,GAA3D,CACAwC,SAAS,CAAC/C,0BAAD,CAAT,CAAwCnmC,EAAxC,CACAkpC,SAAS,CAAC9C,0BAAD,CAAT,CAAwCiE,EAAxC,CACA,KAAKT,cAAL,CAAoBU,GAApB,CAA0B,KAAK/C,KAAL,CAAW2B,SAAX,CAA1B,CACA,KAAKU,cAAL,CAAoBW,KAApB,CAA0BC,OAA1B,CAAoC,MAApC,CAEAnnC,QAAQ,CAACI,IAAT,CAAcgnC,WAAd,CAA0B,KAAKb,cAA/B,EACD,CAbD;;;;OAoBQnC,wDAAR,SAAgCW,IAAhC,CAA6C;AAE3C,GAAMsC,cAAa,CAAG9rC,SAAS,CAACwpC,IAAD,CAAT,CAAgBrnC,MAAtC,CACA,KAAK2pC,aAAL,EAAsBA,aAAtB,CACA,KAAKrD,MAAL,CAAY4C,gBAAZ,CAA6B,gBAA7B,CAA+CS,aAA/C,EACD,CALO,CAMV,6BAAC,CAvTD,GA8TA;;;+FAIA;;;;;OAiCE,oCACEC,SADF,CAEEC,WAFF,CAGSjD,YAHT,CAISJ,KAJT,CAIqC,CAD5B,+BACA;;AAlCT,yBAAsB,GAAIsD,IAAJ,EAAtB;AAGA,iBAA8D,EAA9D;;;;;AAOA,mBAAgBlnC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC2O,MAAL,GAAgB,SAA3B,CAAhB;;AAIA,kBAAe,IAAf,CAsBE,GAAI,CAAClP,SAAS,EAAd,CAAkB;;;;AAKhB,KAAK+lC,wBAAL,CAAgCppC,aAAa,EAA7C,CACAP,MAAM,CACJymC,iCAAiC,CAAG,KAAKkD,wBADrC,CAAN,CAEIwB,SAFJ,CAGAnrC,MAAM,CACJ0mC,8BAA8B,CAAG,KAAKiD,wBADlC,CAAN,CAEIyB,WAFJ;AAKA,KAAKE,QAAL,CAAgB3C,0BAA0B,CAAC4C,aAA3B,EAAhB;AAGA,GAAIC,OAAM,CAAG,EAAb;;AAGA,GACE,KAAKF,QAAL,CAAcR,GAAd,EACA,KAAKQ,QAAL,CAAcR,GAAd,CAAkB3jC,MAAlB,CAAyB,CAAzB,CAA4B,cAAc5F,MAA1C,IAAsD,aAFxD,CAGE,CACA,GAAMkqC,cAAa,CAAG5nC,QAAQ,CAAC4I,MAA/B,CACA++B,MAAM,CAAG,4BAA8BC,aAA9B,CAA8C,aAAvD,CACD,CACD,GAAMC,eAAc,CAAG,eAAiBF,MAAjB,CAA0B,gBAAjD,CACA,GAAI,CACF,KAAKF,QAAL,CAAcK,GAAd,CAAkBC,IAAlB,GACA,KAAKN,QAAL,CAAcK,GAAd,CAAkBrQ,KAAlB,CAAwBoQ,cAAxB,EACA,KAAKJ,QAAL,CAAcK,GAAd,CAAkBxB,KAAlB,GACD,CAAC,MAAOjqC,CAAP,CAAU,CACVmC,GAAG,CAAC,yBAAD,CAAH,CACA,GAAInC,CAAC,CAACmI,KAAN,CAAa,CACXhG,GAAG,CAACnC,CAAC,CAACmI,KAAH,CAAH,CACD,CACDhG,GAAG,CAACnC,CAAD,CAAH,CACD,CACF,CAvCD,IAuCO,CACL,KAAKirC,SAAL,CAAiBA,SAAjB,CACA,KAAKC,WAAL,CAAmBA,WAAnB,CACD,CACF;;;;;OAQczC,yCAAf,WACE,GAAMkD,OAAM,CAAGhoC,QAAQ,CAACqmC,aAAT,CAAuB,QAAvB,CAAf,CACA2B,MAAM,CAACd,KAAP,CAAaC,OAAb,CAAuB,MAAvB;AAGA,GAAInnC,QAAQ,CAACI,IAAb,CAAmB,CACjBJ,QAAQ,CAACI,IAAT,CAAcgnC,WAAd,CAA0BY,MAA1B,EACA,GAAI;;;AAIF,GAAMnnC,EAAC,CAAGmnC,MAAM,CAACC,aAAP,CAAqBjoC,QAA/B,CACA,GAAI,CAACa,CAAL,CAAQ;AAENrC,GAAG,CAAC,+BAAD,CAAH,CACD,CACF,CAAC,MAAOnC,CAAP,CAAU,CACV,GAAMuM,OAAM,CAAG5I,QAAQ,CAAC4I,MAAxB,CACAo/B,MAAM,CAACf,GAAP,CACE,gEACAr+B,MADA,CAEA,0BAHF,CAID,CACF,CAlBD,IAkBO;;AAGL,KAAM,mGAAN,CACD;AAGD,GAAIo/B,MAAM,CAACE,eAAX,CAA4B,CAC1BF,MAAM,CAACF,GAAP,CAAaE,MAAM,CAACE,eAApB,CAAoC;AACrC,CAFD,IAEO,IAAIF,MAAM,CAACC,aAAX,CAA0B,CAC/BD,MAAM,CAACF,GAAP,CAAaE,MAAM,CAACC,aAAP,CAAqBjoC,QAAlC,CAA2C;;AAE5C,CAHM,IAGA,IAAKgoC,MAAc,CAAChoC,QAApB,CAA8B;AAEnCgoC,MAAM,CAACF,GAAP,CAAcE,MAAc,CAAChoC,QAA7B,CAAsC;AACvC,CAED,MAAOgoC,OAAP,CACD,CAzCc;;OA8CflD;AAEE,KAAKqD,KAAL,CAAa,KAAb,CAEA,GAAI,KAAKV,QAAT,CAAmB;;;AAIjB,KAAKA,QAAL,CAAcK,GAAd,CAAkB1nC,IAAlB,CAAuBgoC,SAAvB,CAAmC,EAAnC,CACA/nC,UAAU,CAAC,WACT,GAAIkY,KAAI,CAACkvB,QAAL,GAAkB,IAAtB,CAA4B,CAC1BznC,QAAQ,CAACI,IAAT,CAAcomC,WAAd,CAA0BjuB,KAAI,CAACkvB,QAA/B,EACAlvB,KAAI,CAACkvB,QAAL,CAAgB,IAAhB,CACD,CACF,CALS,CAKPnnC,IAAI,CAACC,KAAL,CAAW,CAAX,CALO,CAAV,CAMD;AAGD,GAAM+jC,aAAY,CAAG,KAAKA,YAA1B,CACA,GAAIA,YAAJ,CAAkB,CAChB,KAAKA,YAAL,CAAoB,IAApB,CACAA,YAAY,GACb,CACF,CAvBD;;;;OA8BAQ,4DAAcnoC,EAAd,CAA0BqqC,EAA1B,CAAoC,CAClC,KAAKqB,IAAL,CAAY1rC,EAAZ,CACA,KAAK2rC,IAAL,CAAYtB,EAAZ,CACA,KAAKmB,KAAL,CAAa,IAAb;AAGA,MAAO,KAAKI,WAAL,EAAP,CAA2B,CAAE,CAC9B,CAPD;;;;;;OAgBQzD,iDAAR;;;AAIE,GACE,KAAKqD,KAAL,EACA,KAAK1C,YADL,EAEA,KAAK+C,mBAAL,CAAyBljB,IAAzB,EAAiC,KAAKmjB,WAAL,CAAiB/qC,MAAjB,CAA0B,CAA1B,CAA8B,CAA9B,CAAkC,CAAnE,CAHF,CAIE;AAEA,KAAKgrC,aAAL,GACA,GAAM7C,UAAS,CAAqC,EAApD,CACAA,SAAS,CAAC/C,0BAAD,CAAT,CAAwC,KAAKuF,IAA7C,CACAxC,SAAS,CAAC9C,0BAAD,CAAT,CAAwC,KAAKuF,IAA7C,CACAzC,SAAS,CAAC7C,8BAAD,CAAT,CAA4C,KAAK0F,aAAjD,CACA,GAAIC,OAAM,CAAG,KAAKzE,KAAL,CAAW2B,SAAX,CAAb;AAEA,GAAI+C,cAAa,CAAG,EAApB,CACA,GAAInrC,EAAC,CAAG,CAAR,CAEA,MAAO,KAAKgrC,WAAL,CAAiB/qC,MAAjB,CAA0B,CAAjC,CAAoC;AAElC,GAAMmrC,QAAO,CAAG,KAAKJ,WAAL,CAAiB,CAAjB,CAAhB,CACA,GACGI,OAAO,CAACC,CAAR,CAAwBprC,MAAxB,CACC6lC,eADD,CAECqF,aAAa,CAAClrC,MAFf,EAGD4lC,iBAJF,CAKE;AAEA,GAAMyF,OAAM,CAAG,KAAKN,WAAL,CAAiBO,KAAjB,EAAf,CACAJ,aAAa,CACXA,aAAa,CACb,GADA,CAEA1F,mCAFA,CAGAzlC,CAHA,CAIA,GAJA,CAKAsrC,MAAM,CAACE,GALP,CAMA,GANA,CAOA9F,oCAPA,CAQA1lC,CARA,CASA,GATA,CAUAsrC,MAAM,CAACG,EAVP,CAWA,GAXA,CAYA9F,4BAZA,CAaA3lC,CAbA,CAcA,GAdA,CAeAsrC,MAAM,CAACD,CAhBT,CAiBArrC,CAAC,GACF,CA1BD,IA0BO,CACL,MACD,CACF,CAEDkrC,MAAM,CAAGA,MAAM,CAAGC,aAAlB,CACA,KAAKO,eAAL,CAAqBR,MAArB,CAA6B,KAAKD,aAAlC,EAEA,MAAO,KAAP,CACD,CAtDD,IAsDO,CACL,MAAO,MAAP,CACD,CACF,CA7DO;;;;;OAqER5D,6DAAesE,MAAf,CAA+BC,SAA/B,CAAkD5pC,IAAlD,CAA+D;AAE7D,KAAKgpC,WAAL,CAAiBjnC,IAAjB,CAAsB,CAAEynC,GAAG,CAAEG,MAAP,CAAeF,EAAE,CAAEG,SAAnB,CAA8BP,CAAC,CAAErpC,IAAjC,CAAtB;;AAIA,GAAI,KAAK0oC,KAAT,CAAgB,CACd,KAAKI,WAAL,GACD,CACF,CATD;;;;;OAiBQzD,qDAAR,SAAwBwE,GAAxB,CAAqCC,MAArC,CAAmD,CAAnD;AAEE,KAAKf,mBAAL,CAAyBjI,GAAzB,CAA6BgJ,MAA7B,EAEA,GAAMC,aAAY,CAAG,WACnBjxB,KAAI,CAACiwB,mBAAL,CAAyBxiB,MAAzB,CAAgCujB,MAAhC,EACAhxB,KAAI,CAACgwB,WAAL,GACD,CAHD;;AAOA,GAAMkB,iBAAgB,CAAGppC,UAAU,CACjCmpC,YADiC,CAEjClpC,IAAI,CAACC,KAAL,CAAWkjC,0BAAX,CAFiC,CAAnC,CAKA,GAAMiG,aAAY,CAAG;AAEnBpE,YAAY,CAACmE,gBAAD,CAAZ;AAGAD,YAAY,GACb,CAND,CAQA,KAAKxD,MAAL,CAAYsD,GAAZ,CAAiBI,YAAjB,EACD,CAzBO;;;;OAgCR5E,qDAAOwE,GAAP,CAAoBK,MAApB,CAAsC,CAAtC,eACE,GAAI5pC,SAAS,EAAb,CAAiB;AAEd,KAAa6pC,cAAb,CAA4BN,GAA5B,CAAiCK,MAAjC,EACF,CAHD,IAGO,CACLtpC,UAAU,CAAC,WACT,GAAI;AAEF,GAAI,CAACkY,KAAI,CAACktB,YAAV,CAAwB,CACtB,OACD,CACD,GAAMoE,YAAS,CAAGtxB,KAAI,CAACkvB,QAAL,CAAcK,GAAd,CAAkBzB,aAAlB,CAAgC,QAAhC,CAAlB,CACAwD,WAAS,CAAC3gC,IAAV,CAAiB,iBAAjB,CACA2gC,WAAS,CAACC,KAAV,CAAkB,IAAlB,CACAD,WAAS,CAAC5C,GAAV,CAAgBqC,GAAhB;AAEAO,WAAS,CAACE,MAAV,CAAoBF,WAAiB,CAACG,kBAAlB,CAAuC;AAEzD,GAAMC,OAAM,CAAIJ,WAAiB,CAAC5pC,UAAlC,CACA,GAAI,CAACgqC,MAAD,EAAWA,MAAM,GAAK,QAAtB,EAAkCA,MAAM,GAAK,UAAjD,CAA6D;AAE3DJ,WAAS,CAACE,MAAV,CAAoBF,WAAiB,CAACG,kBAAlB,CAAuC,IAA3D,CACA,GAAIH,WAAS,CAACK,UAAd,CAA0B,CACxBL,WAAS,CAACK,UAAV,CAAqB1D,WAArB,CAAiCqD,WAAjC,EACD,CACDF,MAAM,GACP,CACF,CAXD,CAYAE,WAAS,CAACM,OAAV,CAAoB,WAClB3rC,GAAG,CAAC,oCAAsC8qC,GAAvC,CAAH,CACA/wB,KAAI,CAACktB,YAAL,CAAoB,KAApB,CACAltB,KAAI,CAAC+tB,KAAL,GACD,CAJD,CAKA/tB,KAAI,CAACkvB,QAAL,CAAcK,GAAd,CAAkB1nC,IAAlB,CAAuBgnC,WAAvB,CAAmCyC,WAAnC,EACD,CAAC,MAAOxtC,CAAP,CAAU;AAEX,CACF,CAhCS,CAgCPiE,IAAI,CAACC,KAAL,CAAW,CAAX,CAhCO,CAAV,CAiCD,CACF,CAvCD,CAwCF,kCAAC,CApVD,GC3ZA;;;;;;;;;;;;;;;IAiBA,sDACO,GAAI6pC,YAAW,CAAG,EAAlB,CAEP;QACgBC,eAAcC,QAAe,CAC3CF,WAAW,CAAGE,OAAd,CACF,CCvBA;;;;;;;;;;;;;;;GA6CA,GAAMC,yBAAwB,CAAG,KAAjC,CACA,GAAMC,6BAA4B,CAAG,KAArC,CAEA,GAAIC,cAAa,CAAG,IAApB,CACA,GAAI,MAAOC,aAAP,GAAwB,WAA5B,CAAyC,CACvCD,aAAa,CAAGC,YAAhB,CACD,CAFD,IAEO,IAAI,MAAOC,UAAP,GAAqB,WAAzB,CAAsC,CAC3CF,aAAa,CAAGE,SAAhB,CACD,CAMD;;;;GAKA;;;;;;;OAwBE,6BACShH,MADT,CAEEl5B,QAFF,CAGUm5B,aAHV,CAIEC,kBAJF,CAKEC,aALF,CAKwB,CAJf,mBAEC,iCA1BV,oBAAgC,IAAhC,CACA,YAA0B,IAA1B,CACA,iBAAc,CAAd,CACA,eAAY,CAAZ,CACA,mBAAgB,CAAhB,CA0BE,KAAKC,IAAL,CAAYllC,UAAU,CAAC,KAAK8kC,MAAN,CAAtB,CACA,KAAKK,MAAL,CAActF,YAAY,CAACuF,aAAb,CAA2Bx5B,QAA3B,CAAd,CACA,KAAKrB,OAAL,CAAewhC,mBAAmB,CAACC,cAApB,CACbpgC,QADa,CAEbo5B,kBAFa,CAGbC,aAHa,CAAf,CAKA,KAAKr7B,SAAL,CAAiBgC,QAAQ,CAAChC,SAA1B,CACD;;;;;;;OAUcmiC,mCAAf,SACEngC,QADF,CAEEo5B,kBAFF,CAGEC,aAHF,CAGwB,CAEtB,GAAM+B,UAAS,CAA4B,EAA3C,CACAA,SAAS,CAACj+B,aAAD,CAAT,CAA2BD,gBAA3B,CAEA,GACE,CAAC5H,SAAS,EAAV,EACA,MAAOV,SAAP,GAAoB,WADpB,EAEAA,QAAQ,CAACqE,IAFT,EAGArE,QAAQ,CAACqE,IAAT,CAAcnE,OAAd,CAAsByI,YAAtB,IAAwC,CAAC,CAJ3C,CAKE,CACA69B,SAAS,CAAC/9B,aAAD,CAAT,CAA2BC,SAA3B,CACD,CACD,GAAI87B,kBAAJ,CAAwB,CACtBgC,SAAS,CAACh+B,uBAAD,CAAT,CAAqCg8B,kBAArC,CACD,CACD,GAAIC,aAAJ,CAAmB,CACjB+B,SAAS,CAAC59B,kBAAD,CAAT,CAAgC67B,aAAhC,CACD,CACD,MAAOr5B,SAAQ,CAAC05B,aAAT,CAAuBh8B,SAAvB,CAAkC09B,SAAlC,CAAP,CACD,CAvBc;;;;OA8Bf+E,4CAAKvG,SAAL,CAAmCC,YAAnC,CAAsE,CAAtE,eACE,KAAKA,YAAL,CAAoBA,YAApB,CACA,KAAKD,SAAL,CAAiBA,SAAjB,CAEA,KAAKN,IAAL,CAAU,2BAA6B,KAAK36B,OAA5C,EAEA,KAAKm8B,cAAL,CAAsB,KAAtB;AAEAjpC,iBAAiB,CAACoC,GAAlB,CAAsB,4BAAtB,CAAoD,IAApD,EAEA,GAAI,CACF,GAAIqB,SAAS,EAAb,CAAiB,CACf,GAAM+qC,OAAM,CAAG,KAAKriC,SAAL,CAAiB,WAAjB,CAA+B,MAA9C;AAEA,GAAMsiC,QAAO,CAA4B,CACvCC,OAAO,CAAE,CACP,aAAc,YAAYrjC,gBAAZ,CAA4B,GAA5B,CAAgCyiC,WAAhC,CAA2C,GAA3C,CAA+Ca,OAAO,CAACC,QAAvD,CAA+D,GAA/D,CAAmEJ,MAD1E,CAEP,mBAAoB,KAAKlH,aAAL,EAAsB,EAFnC,CAD8B,CAAzC;AAQA,GAAMuH,IAAG,CAAGF,OAAO,CAAC,KAAD,CAAnB,CACA,GAAMG,MAAK,CACT,KAAKhiC,OAAL,CAAa7J,OAAb,CAAqB,QAArB,IAAmC,CAAnC,CACI4rC,GAAG,CAAC,aAAD,CAAH,EAAsBA,GAAG,CAAC,aAAD,CAD7B,CAEIA,GAAG,CAAC,YAAD,CAAH,EAAqBA,GAAG,CAAC,YAAD,CAH9B,CAKA,GAAIC,KAAJ,CAAW,CACTL,OAAO,CAAC,OAAD,CAAP,CAAmB,CAAEM,MAAM,CAAED,KAAV,CAAnB,CACD,CAED,KAAKE,MAAL,CAAc,GAAIb,cAAJ,CAAkB,KAAKrhC,OAAvB,CAAgC,EAAhC,CAAoC2hC,OAApC,CAAd,CACD,CAtBD,IAsBO,CACL,GAAMA,QAAO,CAA4B,CACvCC,OAAO,CAAE,CACP,mBAAoB,KAAKpH,aAAL,EAAsB,EADnC,CAD8B,CAAzC,CAKA,KAAK0H,MAAL,CAAc,GAAIb,cAAJ,CAAkB,KAAKrhC,OAAvB,CAAgC,EAAhC,CAAoC2hC,OAApC,CAAd,CACD,CACF,CAAC,MAAO1uC,CAAP,CAAU,CACV,KAAK0nC,IAAL,CAAU,gCAAV,EACA,GAAM/kC,MAAK,CAAG3C,CAAC,CAACmB,OAAF,EAAanB,CAAC,CAACoD,IAA7B,CACA,GAAIT,KAAJ,CAAW,CACT,KAAK+kC,IAAL,CAAU/kC,KAAV,EACD,CACD,KAAK4lC,SAAL,GACA,OACD,CAED,KAAK0G,MAAL,CAAYC,MAAZ,CAAqB,WACnBhzB,KAAI,CAACwrB,IAAL,CAAU,sBAAV,EACAxrB,KAAI,CAACgtB,cAAL,CAAsB,IAAtB,CACD,CAHD,CAKA,KAAK+F,MAAL,CAAYE,OAAZ,CAAsB,WACpBjzB,KAAI,CAACwrB,IAAL,CAAU,wCAAV,EACAxrB,KAAI,CAAC+yB,MAAL,CAAc,IAAd,CACA/yB,KAAI,CAACqsB,SAAL,GACD,CAJD,CAMA,KAAK0G,MAAL,CAAYG,SAAZ,CAAwB,WAAC,CACvBlzB,KAAI,CAACmzB,mBAAL,CAAyBC,CAAzB,EACD,CAFD,CAIA,KAAKL,MAAL,CAAYnB,OAAZ,CAAsB,WAAC,CACrB5xB,KAAI,CAACwrB,IAAL,CAAU,uCAAV;AAEA,GAAM/kC,MAAK,CAAI3C,CAAS,CAACmB,OAAV,EAAsBnB,CAAS,CAACoD,IAA/C,CACA,GAAIT,KAAJ,CAAW,CACTuZ,KAAI,CAACwrB,IAAL,CAAU/kC,KAAV,EACD,CACDuZ,KAAI,CAACqsB,SAAL,GACD,CARD,CASD,CA3ED;;OAgFAgG,+CAAU,CAAV,CAIOA,kCAAP,WACEA,mBAAmB,CAACxE,cAApB,CAAqC,IAArC,CACD,CAFM,CAIAwE,gCAAP,WACE,GAAIgB,aAAY,CAAG,KAAnB,CACA,GAAI,MAAOC,UAAP,GAAqB,WAArB,EAAoCA,SAAS,CAACnnC,SAAlD,CAA6D,CAC3D,GAAMonC,gBAAe,CAAG,gCAAxB,CACA,GAAMC,gBAAe,CAAGF,SAAS,CAACnnC,SAAV,CAAoBsnC,KAApB,CAA0BF,eAA1B,CAAxB,CACA,GAAIC,eAAe,EAAIA,eAAe,CAACruC,MAAhB,CAAyB,CAAhD,CAAmD,CACjD,GAAIuuC,UAAU,CAACF,eAAe,CAAC,CAAD,CAAhB,CAAV,CAAiC,GAArC,CAA0C,CACxCH,YAAY,CAAG,IAAf,CACD,CACF,CACF,CAED,MACE,CAACA,YAAD,EACAnB,aAAa,GAAK,IADlB,EAEA,CAACG,mBAAmB,CAACxE,cAHvB,CAKD,CAjBM;;;OAmCAwE,qCAAP;;AAGE,MACEtuC,kBAAiB,CAAC4vC,iBAAlB,EACA5vC,iBAAiB,CAACsC,GAAlB,CAAsB,4BAAtB,IAAwD,IAF1D,CAID,CAPM,CASPgsC,+DACEtuC,iBAAiB,CAACqC,MAAlB,CAAyB,4BAAzB,EACD,CAFD,CAIQisC,2CAAR,SAAqBnrC,IAArB,CAAiC,CAC/B,KAAK0sC,MAAL,CAAY3qC,IAAZ,CAAiB/B,IAAjB,EACA,GAAI,KAAK0sC,MAAL,CAAYzuC,MAAZ,GAAuB,KAAK0uC,WAAhC,CAA6C,CAC3C,GAAMC,SAAQ,CAAG,KAAKF,MAAL,CAAYjpC,IAAZ,CAAiB,EAAjB,CAAjB,CACA,KAAKipC,MAAL,CAAc,IAAd,CACA,GAAMG,SAAQ,CAAG5wC,QAAQ,CAAC2wC,QAAD,CAAzB;AAGA,KAAKhI,SAAL,CAAeiI,QAAf,EACD,CACF,CAVO;;;OAgBA1B,mDAAR,SAA6B2B,UAA7B,CAA+C,CAC7C,KAAKH,WAAL,CAAmBG,UAAnB,CACA,KAAKJ,MAAL,CAAc,EAAd,CACD,CAHO;;;;;OAWAvB,iDAAR,SAA2BnrC,IAA3B,CAAuC,CACrCrB,MAAM,CAAC,KAAK+tC,MAAL,GAAgB,IAAjB,CAAuB,gCAAvB,CAAN;;AAGA,GAAI1sC,IAAI,CAAC/B,MAAL,EAAe,CAAnB,CAAsB,CACpB,GAAM6uC,WAAU,CAAG7sC,MAAM,CAACD,IAAD,CAAzB,CACA,GAAI,CAAC+sC,KAAK,CAACD,UAAD,CAAV,CAAwB,CACtB,KAAKE,oBAAL,CAA0BF,UAA1B,EACA,MAAO,KAAP,CACD,CACF,CACD,KAAKE,oBAAL,CAA0B,CAA1B,EACA,MAAOhtC,KAAP,CACD,CAbO;;;OAmBRmrC,2DAAoB8B,IAApB,CAAkD,CAChD,GAAI,KAAKpB,MAAL,GAAgB,IAApB,CAA0B,CACxB,OAAO;AACR,CACD,GAAM7rC,KAAI,CAAGitC,IAAI,CAAC,MAAD,CAAjB,CACA,KAAKrF,aAAL,EAAsB5nC,IAAI,CAAC/B,MAA3B,CACA,KAAKsmC,MAAL,CAAY4C,gBAAZ,CAA6B,gBAA7B,CAA+CnnC,IAAI,CAAC/B,MAApD,EAEA,KAAKivC,cAAL,GAEA,GAAI,KAAKR,MAAL,GAAgB,IAApB,CAA0B;AAExB,KAAKS,YAAL,CAAkBntC,IAAlB,EACD,CAHD,IAGO;AAEL,GAAMotC,cAAa,CAAG,KAAKC,kBAAL,CAAwBrtC,IAAxB,CAAtB,CACA,GAAIotC,aAAa,GAAK,IAAtB,CAA4B,CAC1B,KAAKD,YAAL,CAAkBC,aAAlB,EACD,CACF,CACF,CApBD;;;OA0BAjC,4CAAKnrC,IAAL,CAAa,CACX,KAAKktC,cAAL,GAEA,GAAMjG,QAAO,CAAGnrC,SAAS,CAACkE,IAAD,CAAzB,CACA,KAAKknC,SAAL,EAAkBD,OAAO,CAAChpC,MAA1B,CACA,KAAKsmC,MAAL,CAAY4C,gBAAZ,CAA6B,YAA7B,CAA2CF,OAAO,CAAChpC,MAAnD;;AAKA,GAAMmE,SAAQ,CAAGH,iBAAiB,CAACglC,OAAD,CAAU6D,wBAAV,CAAlC;AAGA,GAAI1oC,QAAQ,CAACnE,MAAT,CAAkB,CAAtB,CAAyB,CACvB,KAAKqvC,WAAL,CAAiBtnC,MAAM,CAAC5D,QAAQ,CAACnE,MAAV,CAAvB,EACD;AAGD,IAAK,GAAID,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGoE,QAAQ,CAACnE,MAA7B,CAAqCD,CAAC,EAAtC,CAA0C,CACxC,KAAKsvC,WAAL,CAAiBlrC,QAAQ,CAACpE,CAAD,CAAzB,EACD,CACF,CArBD,CAuBQmtC,wCAAR,WACE,KAAKlG,SAAL,CAAiB,IAAjB,CACA,GAAI,KAAKsI,cAAT,CAAyB,CACvBC,aAAa,CAAC,KAAKD,cAAN,CAAb,CACA,KAAKA,cAAL,CAAsB,IAAtB,CACD,CAED,GAAI,KAAK1B,MAAT,CAAiB,CACf,KAAKA,MAAL,CAAYhF,KAAZ,GACA,KAAKgF,MAAL,CAAc,IAAd,CACD,CACF,CAXO,CAaAV,wCAAR,WACE,GAAI,CAAC,KAAKlG,SAAV,CAAqB,CACnB,KAAKX,IAAL,CAAU,6BAAV,EACA,KAAK0C,SAAL;AAGA,GAAI,KAAKnC,YAAT,CAAuB,CACrB,KAAKA,YAAL,CAAkB,KAAKiB,cAAvB,EACA,KAAKjB,YAAL,CAAoB,IAApB,CACD,CACF,CACF,CAXO;;;OAiBRsG,+CACE,GAAI,CAAC,KAAKlG,SAAV,CAAqB,CACnB,KAAKX,IAAL,CAAU,2BAAV,EACA,KAAK0C,SAAL,GACD,CACF,CALD;;;OAWAmE,uEACEqC,aAAa,CAAC,KAAKD,cAAN,CAAb,CACA,KAAKA,cAAL,CAAsBE,WAAW,CAAC;AAEhC,GAAI30B,KAAI,CAAC+yB,MAAT,CAAiB,CACf/yB,KAAI,CAACw0B,WAAL,CAAiB,GAAjB,EACD,CACDx0B,KAAI,CAACo0B,cAAL;AAED,CAPgC,CAO9BrsC,IAAI,CAACC,KAAL,CAAWiqC,4BAAX,CAP8B,CAAjC,CAQD,CAVD;;;;;OAkBQI,0CAAR,SAAoB/tC,GAApB,CAA+B;;;AAI7B,GAAI,CACF,KAAKyuC,MAAL,CAAY6B,IAAZ,CAAiBtwC,GAAjB,EACD,CAAC,MAAOR,CAAP,CAAU,CACV,KAAK0nC,IAAL,CACE,yCADF,CAEE1nC,CAAC,CAACmB,OAAF,EAAanB,CAAC,CAACoD,IAFjB,CAGE,qBAHF,EAKAY,UAAU,CAAC,KAAKukC,SAAL,CAAenmC,IAAf,CAAoB,IAApB,CAAD,CAA4B,CAA5B,CAAV,CACD,CACF,CAdO;;;OAnLDmsC,iDAA+B,CAA/B;;;OAMAA,mCAAiB,KAAjB,CA4LT,2BAhYA,IChEA;;;;;;;;;;;;;;;IAuBA;;;;;;;GAQA;;OAcE,0BAAYngC,QAAZ,CAA8B,CAC5B,KAAK2iC,eAAL,CAAqB3iC,QAArB,EACD,CATDpF,sBAAWgoC,gBAAX,CAAW,gBAAX,CAAyB;;;eAAzB,WACE,MAAO,CAACjJ,qBAAD,CAAwBwG,mBAAxB,CAAP,CACD,CAFwB,oCAAzB;;;OAeQyC,2CAAR,SAAwB5iC,QAAxB,CAA0C,YACxC,GAAM6iC,sBAAqB,CACzB1C,mBAAmB,EAAIA,mBAAmB,CAAC,aAAD,CAAnB,EADzB,CAEA,GAAI2C,qBAAoB,CACtBD,qBAAqB,EAAI,CAAC1C,mBAAmB,CAAC4C,gBAApB,EAD5B,CAGA,GAAI/iC,QAAQ,CAACjC,aAAb,CAA4B,CAC1B,GAAI,CAAC8kC,qBAAL,CAA4B,CAC1BnuC,IAAI,CACF,iFADE,CAAJ,CAGD,CAEDouC,oBAAoB,CAAG,IAAvB,CACD,CAED,GAAIA,oBAAJ,CAA0B,CACxB,KAAKE,WAAL,CAAmB,CAAC7C,mBAAD,CAAnB,CACD,CAFD,IAEO,CACL,GAAM8C,WAAU,CAAI,KAAKD,WAAL,CAAmB,EAAvC,KACA,IAAwB,gCAAgB,CAACE,cAAjB,EAA+B1jC,YAAvD,CAAuD,QAAvD,CAAuDA,YAAvD,CAAyD,CAApD,GAAM2jC,UAAS,SAAf,CACH,GAAIA,SAAS,EAAIA,SAAS,CAAC,aAAD,CAAT,EAAjB,CAA6C,CAC3CF,UAAU,CAAClsC,IAAX,CAAgBosC,SAAhB,EACD,CACF,4HACF,CACF,CA1BO;;;OAgCRP,uDACE,GAAI,KAAKI,WAAL,CAAiB/vC,MAAjB,CAA0B,CAA9B,CAAiC,CAC/B,MAAO,MAAK+vC,WAAL,CAAiB,CAAjB,CAAP,CACD,CAFD,IAEO,CACL,KAAM,IAAIvuC,MAAJ,CAAU,yBAAV,CAAN,CACD,CACF,CAND;;;OAYAmuC,uDACE,GAAI,KAAKI,WAAL,CAAiB/vC,MAAjB,CAA0B,CAA9B,CAAiC,CAC/B,MAAO,MAAK+vC,WAAL,CAAiB,CAAjB,CAAP,CACD,CAFD,IAEO,CACL,MAAO,KAAP,CACD,CACF,CAND,CAOF,wBAAC,CAzED,GC/BA;;;;;;;;;;;;;;;IA+BA;AACA,GAAMI,gBAAe,CAAG,KAAxB,CAEA;AACA;AACA,GAAMC,oCAAmC,CAAG,IAA5C,CAEA;AACA;AACA;AACA,GAAMC,4BAA2B,CAAG,GAAK,IAAzC,CACA,GAAMC,gCAA+B,CAAG,IAAM,IAA9C,CAQA,GAAMC,aAAY,CAAG,GAArB,CACA,GAAMC,aAAY,CAAG,GAArB,CACA,GAAMC,iBAAgB,CAAG,GAAzB,CACA,GAAMC,cAAa,CAAG,GAAtB,CACA,GAAMC,cAAa,CAAG,GAAtB,CACA,GAAMC,aAAY,CAAG,GAArB,CACA,GAAMC,WAAU,CAAG,GAAnB,CACA,GAAMC,iBAAgB,CAAG,GAAzB,CACA,GAAMC,KAAI,CAAG,GAAb,CAEA,GAAMC,aAAY,CAAG,GAArB,CAEA;;;;;GAMA;;;;;;;;;OA2BE,oBACS/xC,EADT,CAEUgyC,SAFV,CAGUC,cAHV,CAIU5M,UAJV,CAKU6M,QALV,CAMUrK,aANV,CAOUsK,OAPV,CAQShL,aART,CAQ+B,CAPtB,WACC,yBACA,mCACA,2BACA,uBACA,iCACA,qBACD,iCAlCT,qBAAkB,CAAlB,CACA,yBAAiC,EAAjC,CAWQ,YAAM,iBAAN,CAwBN,KAAKC,IAAL,CAAYllC,UAAU,CAAC,KAAO,KAAKlC,EAAZ,CAAiB,GAAlB,CAAtB,CACA,KAAKoyC,iBAAL,CAAyB,GAAI1B,iBAAJ,CAAqBsB,SAArB,CAAzB,CACA,KAAK5K,IAAL,CAAU,oBAAV,EACA,KAAKiL,MAAL,GACD;;;OAMOC,4BAAR,0BACE,GAAMC,KAAI,CAAG,KAAKH,iBAAL,CAAuBI,gBAAvB,EAAb,CACA,KAAKC,KAAL,CAAa,GAAIF,KAAJ,CACX,KAAKG,gBAAL,EADW,CAEX,KAAKV,SAFM,CAGX,KAAKC,cAHM,CAIX9iC,SAJW,CAKX,KAAKg4B,aALM,CAAb;;AAUA,KAAKwL,yBAAL,CAAiCJ,IAAI,CAAC,8BAAD,CAAJ,EAAwC,CAAzE,CAEA,GAAMK,kBAAiB,CAAG,KAAKC,aAAL,CAAmB,KAAKJ,KAAxB,CAA1B,CACA,GAAMK,iBAAgB,CAAG,KAAKC,gBAAL,CAAsB,KAAKN,KAA3B,CAAzB,CACA,KAAKO,GAAL,CAAW,KAAKP,KAAhB,CACA,KAAKQ,GAAL,CAAW,KAAKR,KAAhB,CACA,KAAKS,cAAL,CAAsB,IAAtB,CACA,KAAKC,UAAL,CAAkB,KAAlB;;;;;WAQAzvC,UAAU,CAAC;AAETkY,KAAI,CAAC62B,KAAL,EAAc72B,KAAI,CAAC62B,KAAL,CAAWrH,IAAX,CAAgBwH,iBAAhB,CAAmCE,gBAAnC,CAAd,CACD,CAHS,CAGPnvC,IAAI,CAACC,KAAL,CAAW,CAAX,CAHO,CAAV,CAKA,GAAMwvC,iBAAgB,CAAGb,IAAI,CAAC,gBAAD,CAAJ,EAA0B,CAAnD,CACA,GAAIa,gBAAgB,CAAG,CAAvB,CAA0B,CACxB,KAAKC,eAAL,CAAuBprC,qBAAqB,CAAC,WAC3C2T,KAAI,CAACy3B,eAAL,CAAuB,IAAvB,CACA,GAAI,CAACz3B,KAAI,CAACu3B,UAAV,CAAsB,CACpB,GACEv3B,KAAI,CAAC62B,KAAL,EACA72B,KAAI,CAAC62B,KAAL,CAAW/H,aAAX,CAA2B2G,+BAF7B,CAGE,CACAz1B,KAAI,CAACwrB,IAAL,CACE,wDACExrB,KAAI,CAAC62B,KAAL,CAAW/H,aADb,CAEE,sCAHJ,EAKA9uB,KAAI,CAACu3B,UAAL,CAAkB,IAAlB,CACAv3B,KAAI,CAAC62B,KAAL,CAAWa,qBAAX,GACD,CAXD,IAWO,IACL13B,KAAI,CAAC62B,KAAL,EACA72B,KAAI,CAAC62B,KAAL,CAAWzI,SAAX,CAAuBoH,2BAFlB,CAGL,CACAx1B,KAAI,CAACwrB,IAAL,CACE,oDACExrB,KAAI,CAAC62B,KAAL,CAAWzI,SADb,CAEE,oCAHJ;;AAOD,CAXM,IAWA,CACLpuB,KAAI,CAACwrB,IAAL,CAAU,6CAAV,EACAxrB,KAAI,CAAC+tB,KAAL,GACD,CACF;AAEF,CA/B2C,CA+BzChmC,IAAI,CAACC,KAAL,CAAWwvC,gBAAX,CA/ByC,CAA5C,CAgCD,CACF,CAnEO;;;OAyEAd,sCAAR,WACE,MAAO,KAAO,KAAKtyC,EAAZ,CAAiB,GAAjB,CAAuB,KAAKuzC,eAAL,EAA9B,CACD,CAFO,CAIAjB,sCAAR,SAAyBC,IAAzB,CAA6B,CAA7B,eACE,MAAO,wBAAa,CAClB,GAAIA,IAAI,GAAK32B,KAAI,CAAC62B,KAAlB,CAAyB,CACvB72B,KAAI,CAAC43B,iBAAL,CAAuBC,aAAvB,EACD,CAFD,IAEO,IAAIlB,IAAI,GAAK32B,KAAI,CAACs3B,cAAlB,CAAkC,CACvCt3B,KAAI,CAACwrB,IAAL,CAAU,4BAAV,EACAxrB,KAAI,CAAC83B,0BAAL,GACD,CAHM,IAGA,CACL93B,KAAI,CAACwrB,IAAL,CAAU,2BAAV,EACD,CACF,CATD,CAUD,CAXO,CAaAkL,mCAAR,SAAsBC,IAAtB,CAAqC,CAArC,eACE,MAAO,UAAC1xC,OAAD,CAAmB,CACxB,GAAI+a,KAAI,CAAC+3B,MAAL,GAAW,mBAAf,CAAgD,CAC9C,GAAIpB,IAAI,GAAK32B,KAAI,CAACq3B,GAAlB,CAAuB,CACrBr3B,KAAI,CAACg4B,yBAAL,CAA+B/yC,OAA/B,EACD,CAFD,IAEO,IAAI0xC,IAAI,GAAK32B,KAAI,CAACs3B,cAAlB,CAAkC,CACvCt3B,KAAI,CAACi4B,2BAAL,CAAiChzC,OAAjC,EACD,CAFM,IAEA,CACL+a,KAAI,CAACwrB,IAAL,CAAU,2BAAV,EACD,CACF,CACF,CAVD,CAWD,CAZO;;;OAkBRkL,0CAAYwB,OAAZ,CAA2B;AAEzB,GAAMC,IAAG,CAAG,CAAEC,CAAC,CAAE,GAAL,CAAU7H,CAAC,CAAE2H,OAAb,CAAZ,CACA,KAAKG,SAAL,CAAeF,GAAf,EACD,CAJD,CAMAzB,qDACE,GAAI,KAAKU,GAAL,GAAa,KAAKE,cAAlB,EAAoC,KAAKD,GAAL,GAAa,KAAKC,cAA1D,CAA0E,CACxE,KAAK9L,IAAL,CACE,2CAA6C,KAAK8L,cAAL,CAAoBlM,MADnE,EAGA,KAAKyL,KAAL,CAAa,KAAKS,cAAlB,CACA,KAAKA,cAAL,CAAsB,IAAtB;AAED,CACF,CATD,CAWQZ,yCAAR,SAA4B4B,WAA5B,CAAiE,CAC/D,GAAI5C,YAAY,GAAI4C,YAApB,CAAiC,CAC/B,GAAMC,IAAG,CAAGD,WAAW,CAAC5C,YAAD,CAAvB,CACA,GAAI6C,GAAG,GAAKvC,UAAZ,CAAwB,CACtB,KAAKwC,0BAAL,GACD,CAFD,IAEO,IAAID,GAAG,GAAK1C,aAAZ,CAA2B;AAEhC,KAAKrK,IAAL,CAAU,sCAAV,EACA,KAAK8L,cAAL,CAAoBvJ,KAApB;AAEA,GACE,KAAKqJ,GAAL,GAAa,KAAKE,cAAlB,EACA,KAAKD,GAAL,GAAa,KAAKC,cAFpB,CAGE,CACA,KAAKvJ,KAAL,GACD,CACF,CAXM,IAWA,IAAIwK,GAAG,GAAKxC,YAAZ,CAA0B,CAC/B,KAAKvK,IAAL,CAAU,wBAAV,EACA,KAAKiN,2BAAL,GACA,KAAKD,0BAAL,GACD,CACF,CACF,CAtBO,CAwBA9B,iDAAR,SAAoCgC,UAApC,CAAyD,CACvD,GAAMC,MAAK,CAAW/vC,UAAU,CAAC,GAAD,CAAM8vC,UAAN,CAAhC,CACA,GAAMxxC,KAAI,CAAY0B,UAAU,CAAC,GAAD,CAAM8vC,UAAN,CAAhC,CACA,GAAIC,KAAK,GAAK,GAAd,CAAmB,CACjB,KAAKC,mBAAL,CAAyB1xC,IAAzB,EACD,CAFD,IAEO,IAAIyxC,KAAK,GAAK,GAAd,CAAmB;AAExB,KAAKE,mBAAL,CAAyB5vC,IAAzB,CAA8B/B,IAA9B,EACD,CAHM,IAGA,CACL,KAAM,IAAIP,MAAJ,CAAU,2BAA6BgyC,KAAvC,CAAN,CACD,CACF,CAXO,CAaAjC,gDAAR,WACE,GAAI,KAAK+B,2BAAL,EAAoC,CAAxC,CAA2C,CACzC,KAAKjN,IAAL,CAAU,kCAAV,EACA,KAAK+L,UAAL,CAAkB,IAAlB,CACA,KAAKD,cAAL,CAAoBI,qBAApB,GACA,KAAKoB,mBAAL,GACD,CALD,IAKO;AAEL,KAAKtN,IAAL,CAAU,4BAAV,EACA,KAAK8L,cAAL,CAAoB1C,IAApB,CAAyB,CAAEwD,CAAC,CAAE,GAAL,CAAU7H,CAAC,CAAE,CAAE6H,CAAC,CAAElC,IAAL,CAAW3F,CAAC,CAAE,EAAd,CAAb,CAAzB,EACD,CACF,CAXO,CAaAmG,yCAAR;AAEE,KAAKY,cAAL,CAAoByB,KAApB;AAEA,KAAKvN,IAAL,CAAU,iCAAV,EACA,KAAK8L,cAAL,CAAoB1C,IAApB,CAAyB,CAAEwD,CAAC,CAAE,GAAL,CAAU7H,CAAC,CAAE,CAAE6H,CAAC,CAAEpC,UAAL,CAAiBzF,CAAC,CAAE,EAApB,CAAb,CAAzB;;AAIA,KAAK/E,IAAL,CAAU,gCAAV,EACA,KAAKqL,KAAL,CAAWjC,IAAX,CAAgB,CAAEwD,CAAC,CAAE,GAAL,CAAU7H,CAAC,CAAE,CAAE6H,CAAC,CAAEnC,gBAAL,CAAuB1F,CAAC,CAAE,EAA1B,CAAb,CAAhB,EACA,KAAK6G,GAAL,CAAW,KAAKE,cAAhB,CAEA,KAAK0B,oBAAL,GACD,CAdO,CAgBAtC,+CAAR,SAAkCgC,UAAlC,CAAsE;AAEpE,GAAMC,MAAK,CAAW/vC,UAAU,CAAC,GAAD,CAAM8vC,UAAN,CAAhC,CACA,GAAMxxC,KAAI,CAAY0B,UAAU,CAAC,GAAD,CAAM8vC,UAAN,CAAhC,CACA,GAAIC,KAAK,GAAK,GAAd,CAAmB,CACjB,KAAKM,UAAL,CAAgB/xC,IAAhB,EACD,CAFD,IAEO,IAAIyxC,KAAK,GAAK,GAAd,CAAmB,CACxB,KAAKO,cAAL,CAAoBhyC,IAApB,EACD,CACF,CATO,CAWAwvC,oCAAR,SAAuBzxC,OAAvB,CAAuC,CACrC,KAAKk0C,kBAAL;AAGA,KAAK1P,UAAL,CAAgBxkC,OAAhB,EACD,CALO,CAOAyxC,wCAAR,WACE,GAAI,CAAC,KAAKa,UAAV,CAAsB,CACpB,KAAKR,yBAAL,GACA,GAAI,KAAKA,yBAAL,EAAkC,CAAtC,CAAyC,CACvC,KAAKvL,IAAL,CAAU,gCAAV,EACA,KAAK+L,UAAL,CAAkB,IAAlB,CACA,KAAKV,KAAL,CAAWa,qBAAX,GACD,CACF,CACF,CATO,CAWAhB,gCAAR,SAAmB4B,WAAnB,CAAwD,CACtD,GAAMC,IAAG,CAAW3vC,UAAU,CAAC8sC,YAAD,CAAe4C,WAAf,CAA9B,CACA,GAAI3C,YAAY,GAAI2C,YAApB,CAAiC,CAC/B,GAAMc,QAAO,CAAGd,WAAW,CAAC3C,YAAD,CAA3B,CACA,GAAI4C,GAAG,GAAKpC,YAAZ,CAA0B,CACxB,KAAKkD,YAAL,CACED,OADF,EAQD,CATD,IASO,IAAIb,GAAG,GAAKtC,gBAAZ,CAA8B,CACnC,KAAKzK,IAAL,CAAU,mCAAV,EACA,KAAK6L,GAAL,CAAW,KAAKC,cAAhB,CACA,IAAK,GAAIpyC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAK2zC,mBAAL,CAAyB1zC,MAA7C,CAAqD,EAAED,CAAvD,CAA0D,CACxD,KAAKg0C,cAAL,CAAoB,KAAKL,mBAAL,CAAyB3zC,CAAzB,CAApB,EACD,CACD,KAAK2zC,mBAAL,CAA2B,EAA3B,CACA,KAAKG,oBAAL,GACD,CARM,IAQA,IAAIT,GAAG,GAAK3C,gBAAZ,CAA8B;;AAGnC,KAAK0D,qBAAL,CAA2BF,OAA3B,EACD,CAJM,IAIA,IAAIb,GAAG,GAAK1C,aAAZ,CAA2B;AAEhC,KAAK0D,QAAL,CAAcH,OAAd,EACD,CAHM,IAGA,IAAIb,GAAG,GAAKzC,aAAZ,CAA2B,CAChCrvC,KAAK,CAAC,iBAAmB2yC,OAApB,CAAL,CACD,CAFM,IAEA,IAAIb,GAAG,GAAKxC,YAAZ,CAA0B,CAC/B,KAAKvK,IAAL,CAAU,sBAAV,EACA,KAAK2N,kBAAL,GACA,KAAKK,6BAAL,GACD,CAJM,IAIA,CACL/yC,KAAK,CAAC,mCAAqC8xC,GAAtC,CAAL,CACD,CACF,CACF,CAtCO;;;;OA6CA7B,kCAAR,SAAqB+C,SAArB,CAKC,CACC,GAAMC,UAAS,CAAGD,SAAS,CAAC9I,EAA5B,CACA,GAAMoB,QAAO,CAAG0H,SAAS,CAAC7vC,CAA1B,CACA,GAAMkG,KAAI,CAAG2pC,SAAS,CAACE,CAAvB,CACA,KAAKC,SAAL,CAAiBH,SAAS,CAACzvC,CAA3B,CACA,KAAKosC,SAAL,CAAeyD,UAAf,CAA0B/pC,IAA1B;AAEA,GAAI,KAAKioC,MAAL,GAAW,iBAAf,CAA8C,CAC5C,KAAKlB,KAAL,CAAWkC,KAAX,GACA,KAAKe,wBAAL,CAA8B,KAAKjD,KAAnC,CAA0C6C,SAA1C,EACA,GAAItqC,gBAAgB,GAAK2iC,OAAzB,CAAkC,CAChCnrC,IAAI,CAAC,oCAAD,CAAJ,CACD;AAED,KAAKmzC,gBAAL,GACD,CACF,CArBO,CAuBArD,sCAAR,WACE,GAAMC,KAAI,CAAG,KAAKH,iBAAL,CAAuBwD,gBAAvB,EAAb,CACA,GAAIrD,IAAJ,CAAU,CACR,KAAKsD,aAAL,CAAmBtD,IAAnB,EACD,CACF,CALO,CAOAD,mCAAR,SAAsBC,IAAtB,CAAgD,CAAhD,eACE,KAAKW,cAAL,CAAsB,GAAIX,KAAJ,CACpB,KAAKG,gBAAL,EADoB,CAEpB,KAAKV,SAFe,CAGpB,KAAKC,cAHe,CAIpB,KAAKuD,SAJe,CAAtB;;AAQA,KAAKnB,2BAAL,CACE9B,IAAI,CAAC,8BAAD,CAAJ,EAAwC,CAD1C,CAGA,GAAM7K,UAAS,CAAG,KAAKmL,aAAL,CAAmB,KAAKK,cAAxB,CAAlB,CACA,GAAMvL,aAAY,CAAG,KAAKoL,gBAAL,CAAsB,KAAKG,cAA3B,CAArB,CACA,KAAKA,cAAL,CAAoB9H,IAApB,CAAyB1D,SAAzB,CAAoCC,YAApC;AAGA1/B,qBAAqB,CAAC,WACpB,GAAI2T,KAAI,CAACs3B,cAAT,CAAyB,CACvBt3B,KAAI,CAACwrB,IAAL,CAAU,8BAAV,EACAxrB,KAAI,CAACs3B,cAAL,CAAoBvJ,KAApB,GACD,CACF,CALoB,CAKlBhmC,IAAI,CAACC,KAAL,CAAWstC,eAAX,CALkB,CAArB,CAMD,CAvBO,CAyBAoB,8BAAR,SAAiB5mC,IAAjB,CAA6B,CAC3B,KAAK07B,IAAL,CAAU,qCAAuC17B,IAAjD,EACA,KAAKsmC,SAAL,CAAeyD,UAAf,CAA0B/pC,IAA1B;;AAGA,GAAI,KAAKioC,MAAL,GAAW,gBAAf,CAA6C,CAC3C,KAAKhK,KAAL,GACD,CAFD,IAEO;AAEL,KAAKmM,iBAAL,GACA,KAAKzD,MAAL,GACD,CACF,CAZO,CAcAC,8CAAR,SAAiCC,IAAjC,CAAkD+C,SAAlD,CAAmE,CAAnE,eACE,KAAKlO,IAAL,CAAU,kCAAV,EACA,KAAKqL,KAAL,CAAaF,IAAb,CACA,KAAKoB,MAAL,CAAW,gBAAX,CAEA,GAAI,KAAKzB,QAAT,CAAmB,CACjB,KAAKA,QAAL,CAAcoD,SAAd,CAAyB,KAAKE,SAA9B,EACA,KAAKtD,QAAL,CAAgB,IAAhB,CACD;;AAID,GAAI,KAAKS,yBAAL,GAAmC,CAAvC,CAA0C,CACxC,KAAKvL,IAAL,CAAU,gCAAV,EACA,KAAK+L,UAAL,CAAkB,IAAlB,CACD,CAHD,IAGO,CACLlrC,qBAAqB,CAAC,WACpB2T,KAAI,CAACw5B,6BAAL,GACD,CAFoB,CAElBzxC,IAAI,CAACC,KAAL,CAAWutC,mCAAX,CAFkB,CAArB,CAGD,CACF,CApBO,CAsBAmB,mDAAR;AAEE,GAAI,CAAC,KAAKa,UAAN,EAAoB,KAAKQ,MAAL,GAAW,gBAAnC,CAAiE,CAC/D,KAAKvM,IAAL,CAAU,0BAAV,EACA,KAAK6M,SAAL,CAAe,CAAED,CAAC,CAAE,GAAL,CAAU7H,CAAC,CAAE,CAAE6H,CAAC,CAAElC,IAAL,CAAW3F,CAAC,CAAE,EAAd,CAAb,CAAf,EACD,CACF,CANO,CAQAmG,gDAAR,WACE,GAAMC,KAAI,CAAG,KAAKW,cAAlB,CACA,KAAKA,cAAL,CAAsB,IAAtB,CACA,GAAI,KAAKF,GAAL,GAAaT,IAAb,EAAqB,KAAKU,GAAL,GAAaV,IAAtC,CAA4C;AAE1C,KAAK5I,KAAL,GACD,CACF,CAPO;;;;;OAeA2I,uCAAR,SAA0BmB,aAA1B,CAAgD,CAC9C,KAAKhB,KAAL,CAAa,IAAb;;AAIA,GAAI,CAACgB,aAAD,EAAkB,KAAKE,MAAL,GAAW,iBAAjC,CAAgE,CAC9D,KAAKvM,IAAL,CAAU,6BAAV;AAEA,GAAI,KAAK4K,SAAL,CAAe1lC,eAAf,EAAJ,CAAsC,CACpC3M,iBAAiB,CAACqC,MAAlB,CAAyB,QAAU,KAAKgwC,SAAL,CAAetmC,IAAlD;AAEA,KAAKsmC,SAAL,CAAe9lC,YAAf,CAA8B,KAAK8lC,SAAL,CAAetmC,IAA7C,CACD,CACF,CARD,IAQO,IAAI,KAAKioC,MAAL,GAAW,gBAAf,CAA6C,CAClD,KAAKvM,IAAL,CAAU,2BAAV,EACD,CAED,KAAKuC,KAAL,GACD,CAlBO;;;;OAyBA2I,2CAAR,SAA8BhrC,MAA9B,CAA4C,CAC1C,KAAK8/B,IAAL,CAAU,wDAAV,EAEA,GAAI,KAAK+K,OAAT,CAAkB,CAChB,KAAKA,OAAL,CAAa7qC,MAAb,EACA,KAAK6qC,OAAL,CAAe,IAAf,CACD;;AAID,KAAKtK,aAAL,CAAqB,IAArB,CAEA,KAAK8B,KAAL,GACD,CAbO,CAeA2I,+BAAR,SAAkBxvC,IAAlB,CAA8B,CAC5B,GAAI,KAAK6wC,MAAL,GAAW,gBAAf,CAA6C,CAC3C,KAAM,6BAAN,CACD,CAFD,IAEO,CACL,KAAKX,GAAL,CAASxC,IAAT,CAAc1tC,IAAd,EACD,CACF,CANO;;OAWRwvC,sCACE,GAAI,KAAKqB,MAAL,GAAW,mBAAf,CAAgD,CAC9C,KAAKvM,IAAL,CAAU,8BAAV,EACA,KAAKuM,MAAL,CAAW,mBAAX,CAEA,KAAKmC,iBAAL,GAEA,GAAI,KAAKjO,aAAT,CAAwB,CACtB,KAAKA,aAAL,GACA,KAAKA,aAAL,CAAqB,IAArB,CACD,CACF,CACF,CAZD;;;OAkBQyK,uCAAR,WACE,KAAKlL,IAAL,CAAU,+BAAV,EACA,GAAI,KAAKqL,KAAT,CAAgB,CACd,KAAKA,KAAL,CAAW9I,KAAX,GACA,KAAK8I,KAAL,CAAa,IAAb,CACD,CAED,GAAI,KAAKS,cAAT,CAAyB,CACvB,KAAKA,cAAL,CAAoBvJ,KAApB,GACA,KAAKuJ,cAAL,CAAsB,IAAtB,CACD,CAED,GAAI,KAAKG,eAAT,CAA0B,CACxB1K,YAAY,CAAC,KAAK0K,eAAN,CAAZ,CACA,KAAKA,eAAL,CAAuB,IAAvB,CACD,CACF,CAhBO,CAiBV,kBAAC,CAhgBD,GCpEA;;;;;;;;;;;;;;;IAmBA;;;;;GAMA,mEA8FC;;;;;OA7DC0C,qCACEntC,UADF,CAEE9F,IAFF,CAGE+N,UAHF,CAIEqM,IAJF,CAIe,CACX,CALJ;;;;;OAaA64B,uCACEntC,UADF,CAEE9F,IAFF,CAGE+N,UAHF,CAIEqM,IAJF,CAIe,CACX,CALJ;;;OAWA64B,kDAAiBC,KAAjB,CAA8B,CAAI,CAAlC;;;;OAOAD,iDACEntC,UADF,CAEE9F,IAFF,CAGE+N,UAHF,CAG6C,CACzC,CAJJ;;;;OAWAklC,mDACEntC,UADF,CAEE9F,IAFF,CAGE+N,UAHF,CAG6C,CACzC,CAJJ;;;OAUAklC,oDACEntC,UADF,CAEEiI,UAFF,CAE6C,CACzC,CAHJ;;OAQAklC,6CAAY7S,KAAZ,CAA2C,CAAI,CAA/C,CACF,qBAAC,CA9FD,GCzBA;;;;;;;;;;;;;;;GA6CA,GAAM+S,oBAAmB,CAAG,IAA5B,CACA,GAAMC,4BAA2B,CAAG,GAAK,CAAL,CAAS,IAA7C,CAAkD;AAClD,GAAMC,oBAAmB,CAAG,EAAI,IAAhC,CACA,GAAMC,+BAA8B,CAAG,GAAK,IAA5C,CAAiD;AACjD,GAAMC,2BAA0B,CAAG,GAAnC,CACA,GAAMC,8BAA6B,CAAG,KAAtC,CAA4C;AAC5C,GAAMC,6BAA4B,CAAG,aAArC,CAEA;AACA,GAAMC,6BAA4B,CAAG,CAArC,CA8BA;;;;;GAMA,uDAA0CvjC;;;;;OAwDxC,8BACU++B,SADV,CAEUC,cAFV,CAGUwE,aAHV,CASUC,gBATV,CAUUC,mBAVV,CAWUC,kBAXV,CAYUC,aAZV,CAYuC,CAZvC,UAcEp4B,mBAAO,IAdT,CACU7C,0BACAA,oCACAA,kCAMAA,wCACAA,8CACAA,4CACAA;AAlEVA,SAAKk7B,oBAAoB,CAACC,2BAArB,EAAL,CACQn7B,WAAO1Z,UAAU,CAAC,KAAO0Z,KAAI,CAAC5b,EAAZ,CAAiB,GAAlB,CAAjB,CAEA4b,wBAAmD,EAAnD,2CAESA,cAGb,GAAI4M,IAAJ,EAHa,CAIT5M,uBAAqC,EAArC,CACAA,uBAAqC,EAArC,CACAA,2BAAuB,CAAvB,CACAA,2BAAuB,CAAvB,CACAA,gCAAmD,EAAnD,CACAA,iBAAa,KAAb,CACAA,sBAAkBq6B,mBAAlB,CACAr6B,yBAAqBs6B,2BAArB,CACAt6B,6BAAuD,IAAvD,CACRA,oBAA+B,IAA/B,CAEQA,gCAA2C,IAA3C,CAEAA,eAAoB,KAApB;AAGAA,qBAAwD,EAAxD,CACAA,qBAAiB,CAAjB,CAEAA,gBAGG,IAHH,CAKAA,iBAA4B,IAA5B,CACAA,yBAAqB,KAArB,CACAA,6BAAyB,CAAzB,CAEAA,uBAAmB,IAAnB,CACAA,iCAA4C,IAA5C,CACAA,qCAAgD,IAAhD,CA+BN,GAAIi7B,aAAa,EAAI,CAACzzC,SAAS,EAA/B,CAAmC,CACjC,KAAM,IAAIb,MAAJ,CACJ,gFADI,CAAN,CAGD,CACDqZ,KAAI,CAACo7B,gBAAL,CAAsB,CAAtB,EAEA/R,iBAAiB,CAACgS,WAAlB,GAAgCzxB,EAAhC,CAAmC,SAAnC,CAA8C5J,KAAI,CAACs7B,UAAnD,CAA+Dt7B,KAA/D,EAEA,GAAIo2B,SAAS,CAACtmC,IAAV,CAAe9I,OAAf,CAAuB,SAAvB,IAAsC,CAAC,CAA3C,CAA8C,CAC5CwiC,aAAa,CAAC6R,WAAd,GAA4BzxB,EAA5B,CAA+B,QAA/B,CAAyC5J,KAAI,CAACu7B,SAA9C,CAAyDv7B,KAAzD,EACD,cACF,CAESk7B,2CAAV,SACEjiC,MADF,CAEEpR,IAFF,CAGE2zC,UAHF,CAGmC,CAEjC,GAAMC,UAAS,CAAG,EAAE,KAAKC,cAAzB,CAEA,GAAMvD,IAAG,CAAG,CAAE9W,CAAC,CAAEoa,SAAL,CAAgBnzC,CAAC,CAAE2Q,MAAnB,CAA2B1Q,CAAC,CAAEV,IAA9B,CAAZ,CACA,KAAK2jC,IAAL,CAAUxoC,SAAS,CAACm1C,GAAD,CAAnB,EACAtyC,MAAM,CACJ,KAAK81C,UADD,CAEJ,wDAFI,CAAN,CAIA,KAAKC,SAAL,CAAeC,WAAf,CAA2B1D,GAA3B,EACA,GAAIqD,UAAJ,CAAgB,CACd,KAAKM,cAAL,CAAoBL,SAApB,EAAiCD,UAAjC,CACD,CACF,CAjBS,CAmBVN,4CAAIzvC,KAAJ,CAAgB,CAAhB,eACE,GAAM4J,SAAQ,CAAG,GAAIC,SAAJ,EAAjB,CACA,GAAMymC,QAAO,CAAG,CACdC,CAAC,CAAEvwC,KAAK,CAACE,IAAN,CAAWrI,QAAX,EADW,CAEd24C,CAAC,CAAExwC,KAAK,CAACmf,WAAN,EAFW,CAAhB,CAIA,GAAMsxB,eAAc,CAAG,CACrBjjC,MAAM,CAAE,GADa,CAErB8iC,OAAO,QAFc,CAGrB9mC,UAAU,CAAE,SAAChQ,OAAD,CAAkC,CAC5C,GAAMm0C,QAAO,CAAGn0C,OAAO,CAAC,GAAD,CAAvB,CACA,GAAIA,OAAO,CAAC,GAAD,CAAP,GAAiB,IAArB,CAA2B,CACzB+a,KAAI,CAAC66B,aAAL,CACEkB,OAAO,CAAC,GAAD,CADT,CAEE3C,OAFF,YAGc,KAHd,QAIU,IAJV,EAMA/jC,QAAQ,CAACsU,OAAT,CAAiByvB,OAAjB,EACD,CARD,IAQO,CACL/jC,QAAQ,CAACyU,MAAT,CAAgBsvB,OAAhB,EACD,CACF,CAhBoB,CAAvB,CAkBA,KAAK+C,gBAAL,CAAsBlzC,IAAtB,CAA2BizC,cAA3B,EACA,KAAKE,oBAAL,GACA,GAAMpjC,MAAK,CAAG,KAAKmjC,gBAAL,CAAsBh3C,MAAtB,CAA+B,CAA7C,CAEA,GAAI,CAAC,KAAKw2C,UAAV,CAAsB,CACpB7zC,UAAU,CAAC,WACT,GAAMzB,IAAG,CAAG2Z,KAAI,CAACm8B,gBAAL,CAAsBnjC,KAAtB,CAAZ,CACA,GAAI3S,GAAG,GAAKkN,SAAR,EAAqB2oC,cAAc,GAAK71C,GAA5C,CAAiD,CAC/C,OACD,CACD,MAAO2Z,MAAI,CAACm8B,gBAAL,CAAsBnjC,KAAtB,CAAP,CACAgH,KAAI,CAACo8B,oBAAL,GACA,GAAIp8B,KAAI,CAACo8B,oBAAL,GAA8B,CAAlC,CAAqC,CACnCp8B,KAAI,CAACm8B,gBAAL,CAAwB,EAAxB,CACD,CACDn8B,KAAI,CAACwrB,IAAL,CAAU,OAASxyB,KAAT,CAAiB,0BAA3B,EACA3D,QAAQ,CAACyU,MAAT,CAAgB,GAAInjB,MAAJ,CAAU,oBAAV,CAAhB,EACD,CAZS,CAYP4zC,mBAZO,CAAV,CAaD,CAED,GAAI,KAAKoB,UAAT,CAAqB,CACnB,KAAKU,QAAL,CAAcrjC,KAAd,EACD,CAED,MAAO3D,SAAQ,CAACI,OAAhB,CACD,CAjDD;;OAsDAylC,+CACEzvC,KADF,CAEE6wC,aAFF,CAGEpb,GAHF,CAIEjsB,UAJF,CAI6C,CAE3C,GAAMgZ,QAAO,CAAGxiB,KAAK,CAACuf,eAAN,EAAhB,CACA,GAAMhe,WAAU,CAAGvB,KAAK,CAACE,IAAN,CAAWrI,QAAX,EAAnB,CACA,KAAKkoC,IAAL,CAAU,qBAAuBx+B,UAAvB,CAAoC,GAApC,CAA0CihB,OAApD,EACA,GAAI,CAAC,KAAKsuB,OAAL,CAAatvB,GAAb,CAAiBjgB,UAAjB,CAAL,CAAmC,CACjC,KAAKuvC,OAAL,CAAap2C,GAAb,CAAiB6G,UAAjB,CAA6B,GAAI4f,IAAJ,EAA7B,EACD,CACD/mB,MAAM,CACJ4F,KAAK,CAACqa,cAAN,GAAuB6e,SAAvB,IACE,CAACl5B,KAAK,CAACqa,cAAN,GAAuB0U,YAAvB,EAFC,CAGJ,oDAHI,CAAN,CAKA30B,MAAM,CACJ,CAAC,KAAK02C,OAAL,CAAal2C,GAAb,CAAiB2G,UAAjB,EAA8BigB,GAA9B,CAAkCgB,OAAlC,CADG,CAEJ,8CAFI,CAAN,CAIA,GAAMuuB,WAAU,CAAe,CAC7BvnC,UAAU,WADmB,CAE7BuuB,MAAM,CAAE8Y,aAFqB,CAG7B7wC,KAAK,MAHwB,CAI7By1B,GAAG,IAJ0B,CAA/B,CAMA,KAAKqb,OAAL,CAAal2C,GAAb,CAAiB2G,UAAjB,EAA8B7G,GAA9B,CAAkC8nB,OAAlC,CAA2CuuB,UAA3C,EAEA,GAAI,KAAKb,UAAT,CAAqB,CACnB,KAAKc,WAAL,CAAiBD,UAAjB,EACD,CACF,CAhCD,CAkCQtB,wCAAR,SAAiBliC,KAAjB,CAA8B,CAA9B,eACE,GAAM3S,IAAG,CAAG,KAAK81C,gBAAL,CAAsBnjC,KAAtB,CAAZ,CACA,KAAK6iC,WAAL,CAAiB,GAAjB,CAAsBx1C,GAAG,CAAC01C,OAA1B,CAAmC,SAAC92C,OAAD,CAAkC,CACnE,MAAO+a,MAAI,CAACm8B,gBAAL,CAAsBnjC,KAAtB,CAAP,CACAgH,KAAI,CAACo8B,oBAAL,GACA,GAAIp8B,KAAI,CAACo8B,oBAAL,GAA8B,CAAlC,CAAqC,CACnCp8B,KAAI,CAACm8B,gBAAL,CAAwB,EAAxB,CACD,CACD,GAAI91C,GAAG,CAAC4O,UAAR,CAAoB,CAClB5O,GAAG,CAAC4O,UAAJ,CAAehQ,OAAf,EACD,CACF,CATD,EAUD,CAZO,CAcAi2C,2CAAR,SAAoBsB,UAApB,CAA0C,CAA1C,eACE,GAAM/wC,MAAK,CAAG+wC,UAAU,CAAC/wC,KAAzB,CACA,GAAMuB,WAAU,CAAGvB,KAAK,CAACE,IAAN,CAAWrI,QAAX,EAAnB,CACA,GAAM2qB,QAAO,CAAGxiB,KAAK,CAACuf,eAAN,EAAhB,CACA,KAAKwgB,IAAL,CAAU,aAAex+B,UAAf,CAA4B,OAA5B,CAAsCihB,OAAhD,EACA,GAAMyuB,IAAG,CAA6B,SAAWV,CAAC,CAAEhvC,UAAd,CAAtC,CAEA,GAAMiM,OAAM,CAAG,GAAf;AAGA,GAAIujC,UAAU,CAACtb,GAAf,CAAoB,CAClBwb,GAAG,CAAC,GAAD,CAAH,CAAWjxC,KAAK,CAACmf,WAAN,EAAX,CACA8xB,GAAG,CAAC,GAAD,CAAH,CAAWF,UAAU,CAACtb,GAAtB,CACD,CAEDwb,GAAG,SAAU,GAAV,CAAH,CAAoBF,UAAU,CAAChZ,MAAX,EAApB,CAEA,KAAKqY,WAAL,CAAiB5iC,MAAjB,CAAyByjC,GAAzB,CAA8B,SAACz3C,OAAD,CAAkC,CAC9D,GAAMm0C,QAAO,CAAYn0C,OAAO,SAAU,GAAV,CAAhC,CACA,GAAM+/B,OAAM,CAAG//B,OAAO,WAAY,GAAZ,CAAtB;AAGAi2C,oBAAoB,CAACyB,qBAArB,CAA2CvD,OAA3C,CAAoD3tC,KAApD,EAEA,GAAMmxC,kBAAiB,CACrB58B,KAAI,CAACu8B,OAAL,CAAal2C,GAAb,CAAiB2G,UAAjB,GACAgT,KAAI,CAACu8B,OAAL,CAAal2C,GAAb,CAAiB2G,UAAjB,EAA8B3G,GAA9B,CAAkC4nB,OAAlC,CAFF;AAIA,GAAI2uB,iBAAiB,GAAKJ,UAA1B,CAAsC,CACpCx8B,KAAI,CAACwrB,IAAL,CAAU,iBAAV,CAA6BvmC,OAA7B,EAEA,GAAI+/B,MAAM,GAAK,IAAf,CAAqB,CACnBhlB,KAAI,CAAC68B,aAAL,CAAmB7vC,UAAnB,CAA+BihB,OAA/B,EACD,CAED,GAAIuuB,UAAU,CAACvnC,UAAf,CAA2B,CACzBunC,UAAU,CAACvnC,UAAX,CAAsB+vB,MAAtB,CAA8BoU,OAA9B,EACD,CACF,CACF,CAtBD,EAuBD,CAxCO,CA0CO8B,2CAAf,SAAqC9B,OAArC,CAAuD3tC,KAAvD,CAAmE,CACjE,GAAI2tC,OAAO,EAAI,MAAOA,QAAP,GAAmB,QAA9B,EAA0C31C,QAAQ,CAAC21C,OAAD,CAAU,GAAV,CAAtD,CAAsE;AAEpE,GAAM0D,SAAQ,CAAG/9B,OAAO,CAACq6B,OAAD,CAAiB,GAAjB,CAAxB,CACA,GAAI/zC,KAAK,CAACC,OAAN,CAAcw3C,QAAd,GAA2B,CAACA,QAAQ,CAAC91C,OAAT,CAAiB,UAAjB,CAAhC,CAA8D,CAC5D,GAAM+1C,UAAS,CACb,gBAAkBtxC,KAAK,CAACqa,cAAN,GAAuBC,QAAvB,GAAkCziB,QAAlC,EAAlB,CAAiE,GADnE,CAEA,GAAM05C,UAAS,CAAGvxC,KAAK,CAACE,IAAN,CAAWrI,QAAX,EAAlB,CACAsD,IAAI,CACF,iEACE,2CAA2Cm2C,SAA3C,CAAoD,MADtD,GAEKC,SAAS,kDAFd,CADE,CAAJ,CAKD,CACF,CACF,CAfc;;OAoBf9B,yDAAiBd,KAAjB,CAA8B,CAC5B,KAAK6C,UAAL,CAAkB7C,KAAlB,CACA,KAAK5O,IAAL,CAAU,sBAAV,EACA,GAAI,KAAKyR,UAAT,CAAqB,CACnB,KAAKC,OAAL,GACD,CAFD,IAEO;;AAGL,GAAI,KAAKvB,UAAT,CAAqB,CACnB,KAAKE,WAAL,CAAiB,QAAjB,CAA2B,EAA3B,CAA+B,WAAQ,CAAvC,EACD,CACF,CAED,KAAKsB,sCAAL,CAA4C/C,KAA5C,EACD,CAdD,CAgBQc,sEAAR,SAA+CkC,UAA/C,CAAiE;;AAG/D,GAAMC,iBAAgB,CAAGD,UAAU,EAAIA,UAAU,CAACj4C,MAAX,GAAsB,EAA7D,CACA,GAAIk4C,gBAAgB,EAAIC,OAAO,CAACF,UAAD,CAA/B,CAA6C,CAC3C,KAAK5R,IAAL,CACE,+DADF,EAGA,KAAK+R,kBAAL,CAA0B/C,8BAA1B,CACD,CACF,CAVO;;;OAgBRU,iEACE,GAAI,KAAKS,UAAL,EAAmB,KAAKsB,UAA5B,CAAwC,CACtC,GAAMO,QAAK,CAAG,KAAKP,UAAnB,CACA,GAAMQ,WAAU,CAAGC,aAAa,CAACF,OAAD,CAAb,CAAuB,MAAvB,CAAgC,OAAnD,CACA,GAAMG,YAAW,CAA6B,CAAEC,IAAI,CAAEJ,OAAR,CAA9C,CACA,GAAI,KAAKvC,aAAL,GAAuB,IAA3B,CAAiC,CAC/B0C,WAAW,CAAC,QAAD,CAAX,CAAwB,IAAxB,CACD,CAFD,IAEO,IAAI,MAAO,MAAK1C,aAAZ,GAA8B,QAAlC,CAA4C,CACjD0C,WAAW,CAAC,SAAD,CAAX,CAAyB,KAAK1C,aAA9B,CACD,CACD,KAAKY,WAAL,CACE4B,UADF,CAEEE,WAFF,CAGE,SAACE,GAAD,CAA8B,CAC5B,GAAM7Y,OAAM,CAAG6Y,GAAG,WAAY,GAAZ,CAAlB,CACA,GAAM32C,KAAI,CAAI22C,GAAG,SAAU,GAAV,CAAH,EAAgC,OAA9C,CAEA,GAAI79B,KAAI,CAACi9B,UAAL,GAAoBO,OAAxB,CAA+B,CAC7B,GAAIxY,MAAM,GAAK,IAAf,CAAqB,CACnBhlB,KAAI,CAAC89B,sBAAL,CAA8B,CAA9B,CACD,CAFD,IAEO;AAEL99B,KAAI,CAAC+9B,cAAL,CAAoB/Y,MAApB,CAA4B99B,IAA5B,EACD,CACF,CACF,CAfH,EAiBD,CACF,CA5BD;;OAiCAg0C,iDAASzvC,KAAT,CAAuBy1B,GAAvB,CAAyC,CACvC,GAAMl0B,WAAU,CAAGvB,KAAK,CAACE,IAAN,CAAWrI,QAAX,EAAnB,CACA,GAAM2qB,QAAO,CAAGxiB,KAAK,CAACuf,eAAN,EAAhB,CAEA,KAAKwgB,IAAL,CAAU,uBAAyBx+B,UAAzB,CAAsC,GAAtC,CAA4CihB,OAAtD,EAEApoB,MAAM,CACJ4F,KAAK,CAACqa,cAAN,GAAuB6e,SAAvB,IACE,CAACl5B,KAAK,CAACqa,cAAN,GAAuB0U,YAAvB,EAFC,CAGJ,sDAHI,CAAN,CAKA,GAAMwjB,OAAM,CAAG,KAAKnB,aAAL,CAAmB7vC,UAAnB,CAA+BihB,OAA/B,CAAf,CACA,GAAI+vB,MAAM,EAAI,KAAKrC,UAAnB,CAA+B,CAC7B,KAAKsC,aAAL,CAAmBjxC,UAAnB,CAA+BihB,OAA/B,CAAwCxiB,KAAK,CAACmf,WAAN,EAAxC,CAA6DsW,GAA7D,EACD,CACF,CAfD,CAiBQga,6CAAR,SACEluC,UADF,CAEEihB,OAFF,CAGEiwB,QAHF,CAIEhd,GAJF,CAIoB,CAElB,KAAKsK,IAAL,CAAU,eAAiBx+B,UAAjB,CAA8B,OAA9B,CAAwCihB,OAAlD,EAEA,GAAMyuB,IAAG,CAA6B,SAAWV,CAAC,CAAEhvC,UAAd,CAAtC,CACA,GAAMiM,OAAM,CAAG,GAAf;AAEA,GAAIioB,GAAJ,CAAS,CACPwb,GAAG,CAAC,GAAD,CAAH,CAAWwB,QAAX,CACAxB,GAAG,CAAC,GAAD,CAAH,CAAWxb,GAAX,CACD,CAED,KAAK2a,WAAL,CAAiB5iC,MAAjB,CAAyByjC,GAAzB,EACD,CAjBO;;OAsBRxB,wDACEluC,UADF,CAEE9F,IAFF,CAGE+N,UAHF,CAG6C,CAE3C,GAAI,KAAK0mC,UAAT,CAAqB,CACnB,KAAKwC,iBAAL,CAAuB,GAAvB,CAA4BnxC,UAA5B,CAAwC9F,IAAxC,CAA8C+N,UAA9C,EACD,CAFD,IAEO,CACL,KAAKmpC,yBAAL,CAA+Bn1C,IAA/B,CAAoC,CAClC+D,UAAU,WADwB,CAElCiM,MAAM,CAAE,GAF0B,CAGlC/R,IAAI,KAH8B,CAIlC+N,UAAU,WAJwB,CAApC,EAMD,CACF,CAfD;;OAoBAimC,0DACEluC,UADF,CAEE9F,IAFF,CAGE+N,UAHF,CAG6C,CAE3C,GAAI,KAAK0mC,UAAT,CAAqB,CACnB,KAAKwC,iBAAL,CAAuB,IAAvB,CAA6BnxC,UAA7B,CAAyC9F,IAAzC,CAA+C+N,UAA/C,EACD,CAFD,IAEO,CACL,KAAKmpC,yBAAL,CAA+Bn1C,IAA/B,CAAoC,CAClC+D,UAAU,WADwB,CAElCiM,MAAM,CAAE,IAF0B,CAGlC/R,IAAI,KAH8B,CAIlC+N,UAAU,WAJwB,CAApC,EAMD,CACF,CAfD;;OAoBAimC,2DACEluC,UADF,CAEEiI,UAFF,CAE6C,CAE3C,GAAI,KAAK0mC,UAAT,CAAqB,CACnB,KAAKwC,iBAAL,CAAuB,IAAvB,CAA6BnxC,UAA7B,CAAyC,IAAzC,CAA+CiI,UAA/C,EACD,CAFD,IAEO,CACL,KAAKmpC,yBAAL,CAA+Bn1C,IAA/B,CAAoC,CAClC+D,UAAU,WADwB,CAElCiM,MAAM,CAAE,IAF0B,CAGlC/R,IAAI,CAAE,IAH4B,CAIlC+N,UAAU,WAJwB,CAApC,EAMD,CACF,CAdD,CAgBQimC,iDAAR,SACEjiC,MADF,CAEEjM,UAFF,CAGE9F,IAHF,CAIE+N,UAJF,CAI4C,CAE1C,GAAM8mC,QAAO,CAAG,SAAWC,CAAC,CAAEhvC,UAAd,CAAwB,QAAWujC,CAAC,CAAErpC,IAAtC,CAAhB,CACA,KAAKskC,IAAL,CAAU,gBAAkBvyB,MAA5B,CAAoC8iC,OAApC,EACA,KAAKF,WAAL,CAAiB5iC,MAAjB,CAAyB8iC,OAAzB,CAAkC,SAACsC,QAAD,CAAmC,CACnE,GAAIppC,UAAJ,CAAgB,CACdnN,UAAU,CAAC,WACTmN,UAAU,CACRopC,QAAQ,WAAY,GAAZ,CADA,CAERA,QAAQ,WAAY,GAAZ,CAFA,CAAV,CAID,CALS,CAKPt2C,IAAI,CAACC,KAAL,CAAW,CAAX,CALO,CAAV,CAMD,CACF,CATD,EAUD,CAlBO;;OAuBRkzC,4CACEluC,UADF,CAEE9F,IAFF,CAGE+N,UAHF,CAIEqM,IAJF,CAIe,CAEb,KAAKg9B,WAAL,CAAiB,GAAjB,CAAsBtxC,UAAtB,CAAkC9F,IAAlC,CAAwC+N,UAAxC,CAAoDqM,IAApD,EACD,CAPD;;OAYA45B,8CACEluC,UADF,CAEE9F,IAFF,CAGE+N,UAHF,CAIEqM,IAJF,CAIe,CAEb,KAAKg9B,WAAL,CAAiB,GAAjB,CAAsBtxC,UAAtB,CAAkC9F,IAAlC,CAAwC+N,UAAxC,CAAoDqM,IAApD,EACD,CAPD,CASA45B,oDACEjiC,MADF,CAEEjM,UAFF,CAGE9F,IAHF,CAIE+N,UAJF,CAKEqM,IALF,CAKe,CAEb,GAAMy6B,QAAO,CAA6B,SAC/BC,CAAC,CAAEhvC,UAD4B,SAE/BujC,CAAC,CAAErpC,IAF4B,CAA1C,CAKA,GAAIoa,IAAI,GAAK/N,SAAb,CAAwB,CACtBwoC,OAAO,SAAU,GAAV,CAAP,CAAwBz6B,IAAxB,CACD;AAGD,KAAKi9B,gBAAL,CAAsBt1C,IAAtB,CAA2B,CACzBgQ,MAAM,OADmB,CAEzB8iC,OAAO,QAFkB,CAGzB9mC,UAAU,WAHe,CAA3B,EAMA,KAAKupC,oBAAL,GACA,GAAMxlC,MAAK,CAAG,KAAKulC,gBAAL,CAAsBp5C,MAAtB,CAA+B,CAA7C,CAEA,GAAI,KAAKw2C,UAAT,CAAqB,CACnB,KAAK8C,QAAL,CAAczlC,KAAd,EACD,CAFD,IAEO,CACL,KAAKwyB,IAAL,CAAU,kBAAoBx+B,UAA9B,EACD,CACF,CA/BD,CAiCQkuC,wCAAR,SAAiBliC,KAAjB,CAA8B,CAA9B,eACE,GAAMC,OAAM,CAAG,KAAKslC,gBAAL,CAAsBvlC,KAAtB,EAA6BC,MAA5C,CACA,GAAM8iC,QAAO,CAAG,KAAKwC,gBAAL,CAAsBvlC,KAAtB,EAA6B+iC,OAA7C,CACA,GAAM9mC,WAAU,CAAG,KAAKspC,gBAAL,CAAsBvlC,KAAtB,EAA6B/D,UAAhD,CACA,KAAKspC,gBAAL,CAAsBvlC,KAAtB,EAA6B0lC,MAA7B,CAAsC,KAAK/C,UAA3C,CAEA,KAAKE,WAAL,CAAiB5iC,MAAjB,CAAyB8iC,OAAzB,CAAkC,SAAC92C,OAAD,CAAkC,CAClE+a,KAAI,CAACwrB,IAAL,CAAUvyB,MAAM,CAAG,WAAnB,CAAgChU,OAAhC,EAEA,MAAO+a,MAAI,CAACu+B,gBAAL,CAAsBvlC,KAAtB,CAAP,CACAgH,KAAI,CAACw+B,oBAAL;AAGA,GAAIx+B,KAAI,CAACw+B,oBAAL,GAA8B,CAAlC,CAAqC,CACnCx+B,KAAI,CAACu+B,gBAAL,CAAwB,EAAxB,CACD,CAED,GAAItpC,UAAJ,CAAgB,CACdA,UAAU,CACRhQ,OAAO,WAAY,GAAZ,CADC,CAERA,OAAO,WAAY,GAAZ,CAFC,CAAV,CAID,CACF,CAjBD,EAkBD,CAxBO;;OA6BRi2C,oDAAY5T,KAAZ,CAA2C,CAA3C;AAEE,GAAI,KAAKqU,UAAT,CAAqB,CACnB,GAAMI,QAAO,CAAG,aAAexyC,CAAC,CAAE+9B,KAAlB,CAAhB,CACA,KAAKkE,IAAL,CAAU,aAAV,CAAyBuQ,OAAzB,EAEA,KAAKF,WAAL,CAAgB,SAAW,GAA3B,CAAgCE,OAAhC,CAAyC,gBAAM,CAC7C,GAAM/W,OAAM,CAAGpqB,MAAM,WAAY,GAAZ,CAArB,CACA,GAAIoqB,MAAM,GAAK,IAAf,CAAqB,CACnB,GAAM2Z,YAAW,CAAG/jC,MAAM,WAAY,GAAZ,CAA1B,CACAoF,KAAI,CAACwrB,IAAL,CAAU,aAAV,CAAyB,wBAA0BmT,WAAnD,EACD,CACF,CAND,EAOD,CACF,CAdD,CAgBQzD,8CAAR,SAAuBj2C,OAAvB,CAAwD,CACtD,GAAI,KAAOA,QAAX,CAAoB;AAElB,KAAKumC,IAAL,CAAU,gBAAkBxoC,SAAS,CAACiC,OAAD,CAArC,EACA,GAAM25C,OAAM,CAAG35C,OAAO,CAAC,GAAD,CAAtB,CACA,GAAMu2C,WAAU,CAAG,KAAKM,cAAL,CAAoB8C,MAApB,CAAnB,CACA,GAAIpD,UAAJ,CAAgB,CACd,MAAO,MAAKM,cAAL,CAAoB8C,MAApB,CAAP,CACApD,UAAU,CAACv2C,OAAO,SAAU,GAAV,CAAR,CAAV,CACD,CACF,CATD,IASO,IAAI,SAAWA,QAAf,CAAwB,CAC7B,KAAM,qCAAuCA,OAAO,CAAC,OAAD,CAApD,CACD,CAFM,IAEA,IAAI,KAAOA,QAAX,CAAoB;AAEzB,KAAK45C,WAAL,CAAiB55C,OAAO,CAAC,GAAD,CAAxB,CAAyCA,OAAO,CAAC,GAAD,CAAhD,EACD,CACF,CAhBO,CAkBAi2C,2CAAR,SAAoBjiC,MAApB,CAAoCpR,IAApC,CAAkE,CAChE,KAAK2jC,IAAL,CAAU,qBAAV,CAAiCvyB,MAAjC,CAAyCpR,IAAzC,EACA,GAAIoR,MAAM,GAAK,GAAf,CAAoB,CAClB,KAAK4hC,aAAL,CACEhzC,IAAI,SAAU,GAAV,CADN,CAEEA,IAAI,SAAU,GAAV,CAFN,YAGc,KAHd,CAIEA,IAAI,CAAC,GAAD,CAJN,EAMD,CAPD,IAOO,IAAIoR,MAAM,GAAK,GAAf,CAAoB,CACzB,KAAK4hC,aAAL,CACEhzC,IAAI,SAAU,GAAV,CADN,CAEEA,IAAI,SAAU,GAAV,CAFN,aAGe,IAHf,CAIEA,IAAI,CAAC,GAAD,CAJN,EAMD,CAPM,IAOA,IAAIoR,MAAM,GAAK,GAAf,CAAoB,CACzB,KAAK6lC,gBAAL,CACEj3C,IAAI,SAAU,GAAV,CADN,CAEEA,IAAI,UAAW,GAAX,CAFN,EAID,CALM,IAKA,IAAIoR,MAAM,GAAK,IAAf,CAAqB,CAC1B,KAAK8kC,cAAL,CACEl2C,IAAI,gBAAiB,GAAjB,CADN,CAEEA,IAAI,kBAAmB,GAAnB,CAFN,EAID,CALM,IAKA,IAAIoR,MAAM,GAAK,IAAf,CAAqB,CAC1B,KAAK8lC,sBAAL,CAA4Bl3C,IAA5B,EACD,CAFM,IAEA,CACLpB,KAAK,CACH,6CACEzD,SAAS,CAACiW,MAAD,CADX,CAEE,oCAHC,CAAL,CAKD,CACF,CAnCO,CAqCAiiC,wCAAR,SAAiBxB,SAAjB,CAAoCE,SAApC,CAAqD,CACnD,KAAKpO,IAAL,CAAU,kBAAV,EACA,KAAKmQ,UAAL,CAAkB,IAAlB,CACA,KAAKqD,8BAAL,CAAsC,GAAIvzB,KAAJ,GAAWC,OAAX,EAAtC,CACA,KAAKuzB,gBAAL,CAAsBvF,SAAtB,EACA,KAAKnO,aAAL,CAAqBqO,SAArB,CACA,GAAI,KAAKsF,gBAAT,CAA2B,CACzB,KAAKC,iBAAL,GACD,CACD,KAAKC,aAAL,GACA,KAAKF,gBAAL,CAAwB,KAAxB,CACA,KAAKpE,gBAAL,CAAsB,IAAtB,EACD,CAZO,CAcAI,gDAAR,SAAyB3uC,OAAzB,CAAwC,CAAxC,eACE1G,MAAM,CACJ,CAAC,KAAK+1C,SADF,CAEJ,wDAFI,CAAN,CAKA,GAAI,KAAKyD,yBAAT,CAAoC,CAClCtS,YAAY,CAAC,KAAKsS,yBAAN,CAAZ,CACD;;AAKD,KAAKA,yBAAL,CAAiCv3C,UAAU,CAAC,WAC1CkY,KAAI,CAACq/B,yBAAL,CAAiC,IAAjC,CACAr/B,KAAI,CAACs/B,oBAAL;AAED,CAJ0C,CAIxCv3C,IAAI,CAACC,KAAL,CAAWuE,OAAX,CAJwC,CAA3C,CAKD,CAlBO,CAoBA2uC,0CAAR,SAAmBtd,OAAnB,CAAmC;AAEjC,GACEA,OAAO,EACP,CAAC,KAAKuL,QADN,EAEA,KAAKoW,eAAL,GAAyB,KAAKhC,kBAHhC,CAIE,CACA,KAAK/R,IAAL,CAAU,yCAAV,EACA,KAAK+T,eAAL,CAAuBlF,mBAAvB,CAEA,GAAI,CAAC,KAAKuB,SAAV,CAAqB,CACnB,KAAKR,gBAAL,CAAsB,CAAtB,EACD,CACF,CACD,KAAKjS,QAAL,CAAgBvL,OAAhB,CACD,CAfO,CAiBAsd,yCAAR,SAAkBsE,MAAlB,CAAiC,CAC/B,GAAIA,MAAJ,CAAY,CACV,KAAKhU,IAAL,CAAU,sBAAV,EACA,KAAK+T,eAAL,CAAuBlF,mBAAvB,CACA,GAAI,CAAC,KAAKuB,SAAV,CAAqB,CACnB,KAAKR,gBAAL,CAAsB,CAAtB,EACD,CACF,CAND,IAMO,CACL,KAAK5P,IAAL,CAAU,4CAAV,EACA,GAAI,KAAKoQ,SAAT,CAAoB,CAClB,KAAKA,SAAL,CAAe7N,KAAf,GACD,CACF,CACF,CAbO,CAeAmN,qDAAR,WACE,KAAK1P,IAAL,CAAU,0BAAV,EACA,KAAKmQ,UAAL,CAAkB,KAAlB,CACA,KAAKC,SAAL,CAAiB,IAAjB;AAGA,KAAK6D,uBAAL;AAGA,KAAK3D,cAAL,CAAsB,EAAtB,CAEA,GAAI,KAAK4D,gBAAL,EAAJ,CAA6B,CAC3B,GAAI,CAAC,KAAKvW,QAAV,CAAoB,CAClB,KAAKqC,IAAL,CAAU,4CAAV,EACA,KAAK+T,eAAL,CAAuB,KAAKhC,kBAA5B,CACA,KAAKoC,0BAAL,CAAkC,GAAIl0B,KAAJ,GAAWC,OAAX,EAAlC,CACD,CAJD,IAIO,IAAI,KAAKszB,8BAAT,CAAyC;AAE9C,GAAMY,8BAA6B,CACjC,GAAIn0B,KAAJ,GAAWC,OAAX,GAAuB,KAAKszB,8BAD9B,CAEA,GAAIY,6BAA6B,CAAGlF,6BAApC,CAAmE,CACjE,KAAK6E,eAAL,CAAuBlF,mBAAvB,CACD,CACD,KAAK2E,8BAAL,CAAsC,IAAtC,CACD,CAED,GAAMa,4BAA2B,CAC/B,GAAIp0B,KAAJ,GAAWC,OAAX,GAAuB,KAAKi0B,0BAD9B,CAEA,GAAIG,eAAc,CAAG/3C,IAAI,CAAC2G,GAAL,CACnB,CADmB,CAEnB,KAAK6wC,eAAL,CAAuBM,2BAFJ,CAArB,CAIAC,cAAc,CAAG/3C,IAAI,CAAC2O,MAAL,GAAgBopC,cAAjC,CAEA,KAAKtU,IAAL,CAAU,0BAA4BsU,cAA5B,CAA6C,IAAvD,EACA,KAAK1E,gBAAL,CAAsB0E,cAAtB;AAGA,KAAKP,eAAL,CAAuBx3C,IAAI,CAACuC,GAAL,CACrB,KAAKizC,kBADgB,CAErB,KAAKgC,eAAL,CAAuB9E,0BAFF,CAAvB,CAID,CACD,KAAKK,gBAAL,CAAsB,KAAtB,EACD,CA5CO,CA8CAI,oDAAR,0BACE,GAAI,KAAKwE,gBAAL,EAAJ,CAA6B,CAC3B,KAAKlU,IAAL,CAAU,6BAAV,EACA,KAAKmU,0BAAL,CAAkC,GAAIl0B,KAAJ,GAAWC,OAAX,EAAlC,CACA,KAAKszB,8BAAL,CAAsC,IAAtC,CACA,GAAMe,gBAAa,CAAG,KAAK7G,cAAL,CAAoBhzC,IAApB,CAAyB,IAAzB,CAAtB,CACA,GAAM85C,UAAO,CAAG,KAAK1J,QAAL,CAAcpwC,IAAd,CAAmB,IAAnB,CAAhB,CACA,GAAM+5C,eAAY,CAAG,KAAKC,qBAAL,CAA2Bh6C,IAA3B,CAAgC,IAAhC,CAArB,CACA,GAAMi6C,SAAM,CAAG,KAAK/7C,EAAL,CAAU,GAAV,CAAgB82C,oBAAoB,CAACkF,iBAArB,EAA/B,CACA,GAAM/yB,OAAI,CAAG,IAAb,CACA,GAAMgzB,gBAAa,CAAG,KAAK9U,aAA3B,CACA,GAAI+U,WAAQ,CAAG,KAAf,CACA,GAAIC,aAAU,CAAsB,IAApC,CACA,GAAMC,UAAO,CAAG,WACd,GAAID,YAAJ,CAAgB,CACdA,YAAU,CAACxS,KAAX,GACD,CAFD,IAEO,CACLuS,UAAQ,CAAG,IAAX,CACAL,cAAY,GACb,CACF,CAPD,CAQA,GAAMQ,cAAa,CAAG,SAAUtI,GAAV,CAAqB,CACzCtyC,MAAM,CACJ06C,YADI,CAEJ,wDAFI,CAAN,CAIAA,YAAU,CAAC1E,WAAX,CAAuB1D,GAAvB,EACD,CAND,CAQA,KAAKyD,SAAL,CAAiB,CACf7N,KAAK,CAAEyS,SADQ,CAEf3E,WAAW,CAAE4E,aAFE,CAAjB,CAKA,GAAMC,aAAY,CAAG,KAAKC,kBAA1B,CACA,KAAKA,kBAAL,CAA0B,KAA1B;AAGA,KAAK3F,kBAAL,CACG4F,QADH,CACYF,YADZ,EAEGG,IAFH,CAEQ,gBAAM,CACV,GAAI,CAACP,UAAL,CAAe,CACbr6C,GAAG,CAAC,4CAAD,CAAH,CACAonB,MAAI,CAAC4vB,UAAL,CAAkBriC,MAAM,EAAIA,MAAM,CAACkmC,WAAnC,CACAP,YAAU,CAAG,GAAI7J,WAAJ,CACXyJ,QADW,CAEX9yB,MAAI,CAAC+oB,SAFM,CAGX/oB,MAAI,CAACgpB,cAHM,CAIX0J,eAJW,CAKXC,SALW,CAMXC,cANW,cAOG,gBAAM,CAClBr5C,IAAI,CAAC8E,MAAM,CAAG,IAAT,CAAgB2hB,MAAI,CAAC+oB,SAAL,CAAe9yC,QAAf,EAAhB,CAA4C,GAA7C,CAAJ,CACA+pB,MAAI,CAAC0zB,SAAL,CAAepG,4BAAf,EACD,CAVU,CAWX0F,eAXW,CAAb,CAaD,CAhBD,IAgBO,CACLp6C,GAAG,CAAC,uCAAD,CAAH,CACD,CACF,CAtBH,EAuBG46C,IAvBH,CAuBQ,IAvBR,CAuBc,eAAK,CACfxzB,MAAI,CAACme,IAAL,CAAU,wBAA0B/kC,KAApC,EACA,GAAI,CAAC65C,UAAL,CAAe,CACb,GAAItgC,KAAI,CAACo2B,SAAL,CAAelmC,SAAnB,CAA8B;;;AAI5BtJ,IAAI,CAACH,KAAD,CAAJ,CACD,CACD+5C,SAAO,GACR,CACF,CAlCH,EAmCD,CACF,CA1EO,CA4ERtF,kDAAUxvC,MAAV,CAAwB,CACtBzF,GAAG,CAAC,uCAAyCyF,MAA1C,CAAH,CACA,KAAKs1C,iBAAL,CAAuBt1C,MAAvB,EAAiC,IAAjC,CACA,GAAI,KAAKkwC,SAAT,CAAoB,CAClB,KAAKA,SAAL,CAAe7N,KAAf,GACD,CAFD,IAEO,CACL,GAAI,KAAKsR,yBAAT,CAAoC,CAClCtS,YAAY,CAAC,KAAKsS,yBAAN,CAAZ,CACA,KAAKA,yBAAL,CAAiC,IAAjC,CACD,CACD,GAAI,KAAK1D,UAAT,CAAqB,CACnB,KAAKuE,qBAAL,GACD,CACF,CACF,CAdD,CAgBAhF,+CAAOxvC,MAAP,CAAqB,CACnBzF,GAAG,CAAC,mCAAqCyF,MAAtC,CAAH,CACA,MAAO,MAAKs1C,iBAAL,CAAuBt1C,MAAvB,CAAP,CACA,GAAIuM,OAAO,CAAC,KAAK+oC,iBAAN,CAAX,CAAqC,CACnC,KAAKzB,eAAL,CAAuBlF,mBAAvB,CACA,GAAI,CAAC,KAAKuB,SAAV,CAAqB,CACnB,KAAKR,gBAAL,CAAsB,CAAtB,EACD,CACF,CACF,CATD,CAWQF,gDAAR,SAAyBxB,SAAzB,CAA0C,CACxC,GAAMttB,MAAK,CAAGstB,SAAS,CAAG,GAAIjuB,KAAJ,GAAWC,OAAX,EAA1B,CACA,KAAKqvB,mBAAL,CAAyB,CAAEkG,gBAAgB,CAAE70B,KAApB,CAAzB,EACD,CAHO,CAKA8uB,uDAAR,WACE,IAAK,GAAIh2C,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAKq5C,gBAAL,CAAsBp5C,MAA1C,CAAkDD,CAAC,EAAnD,CAAuD,CACrD,GAAMg8C,IAAG,CAAG,KAAK3C,gBAAL,CAAsBr5C,CAAtB,CAAZ,CACA,GAAIg8C,GAAG,UAAa,KAAOA,IAAG,CAACnF,OAA3B,EAAsCmF,GAAG,CAACxC,MAA9C,CAAsD,CACpD,GAAIwC,GAAG,CAACjsC,UAAR,CAAoB,CAClBisC,GAAG,CAACjsC,UAAJ,CAAe,YAAf,EACD,CAED,MAAO,MAAKspC,gBAAL,CAAsBr5C,CAAtB,CAAP,CACA,KAAKs5C,oBAAL,GACD,CACF;AAGD,GAAI,KAAKA,oBAAL,GAA8B,CAAlC,CAAqC,CACnC,KAAKD,gBAAL,CAAwB,EAAxB,CACD,CACF,CAjBO,CAmBArD,gDAAR,SAAyBluC,UAAzB,CAA6CvB,KAA7C,CAA8D;AAE5D,GAAIwiB,QAAJ,CACA,GAAI,CAACxiB,KAAL,CAAY,CACVwiB,OAAO,CAAG,SAAV,CACD,CAFD,IAEO,CACLA,OAAO,CAAGxiB,KAAK,CAACqU,GAAN,CAAU,WAAC,CAAI,wBAAiB,CAACm8B,CAAD,CAAjB,CAAoB,CAAnC,EAAqCtxC,IAArC,CAA0C,GAA1C,CAAV,CACD,CACD,GAAMqzC,OAAM,CAAG,KAAKnB,aAAL,CAAmB7vC,UAAnB,CAA+BihB,OAA/B,CAAf,CACA,GAAI+vB,MAAM,EAAIA,MAAM,CAAC/oC,UAArB,CAAiC,CAC/B+oC,MAAM,CAAC/oC,UAAP,CAAkB,mBAAlB,EACD,CACF,CAZO,CAcAimC,6CAAR,SAAsBluC,UAAtB,CAA0CihB,OAA1C,CAAyD,CACvD,GAAMkzB,qBAAoB,CAAG,GAAIp0C,KAAJ,CAASC,UAAT,EAAqB1J,QAArB,EAA7B,CAA6D;AAC7D,GAAI06C,OAAJ,CACA,GAAI,KAAKzB,OAAL,CAAatvB,GAAb,CAAiBk0B,oBAAjB,CAAJ,CAA4C,CAC1C,GAAMrhC,IAAG,CAAG,KAAKy8B,OAAL,CAAal2C,GAAb,CAAiB86C,oBAAjB,CAAZ,CACAnD,MAAM,CAAGl+B,GAAG,CAACzZ,GAAJ,CAAQ4nB,OAAR,CAAT,CACAnO,GAAG,CAAC2N,MAAJ,CAAWQ,OAAX,EACA,GAAInO,GAAG,CAACiN,IAAJ,GAAa,CAAjB,CAAoB,CAClB,KAAKwvB,OAAL,CAAa9uB,MAAb,CAAoB0zB,oBAApB,EACD,CACF,CAPD,IAOO;AAELnD,MAAM,CAAGzqC,SAAT,CACD,CACD,MAAOyqC,OAAP,CACD,CAfO,CAiBA9C,8CAAR,SAAuBkG,UAAvB,CAA2CC,WAA3C,CAA8D,CAC5Dp7C,GAAG,CAAC,uBAAyBm7C,UAAzB,CAAsC,GAAtC,CAA4CC,WAA7C,CAAH,CACA,KAAKpE,UAAL,CAAkB,IAAlB,CACA,KAAK0D,kBAAL,CAA0B,IAA1B,CACA,KAAK/E,SAAL,CAAe7N,KAAf,GACA,GAAIqT,UAAU,GAAK,eAAf,EAAkCA,UAAU,GAAK,mBAArD,CAA0E;;;AAIxE,KAAKtD,sBAAL,GACA,GAAI,KAAKA,sBAAL,EAA+BlD,4BAAnC,CAAiE;AAE/D,KAAK2E,eAAL,CAAuB/E,8BAAvB;;AAIA,KAAKQ,kBAAL,CAAwBsG,qBAAxB,GACD,CACF,CACF,CAnBO,CAqBApG,sDAAR,SAA+BrzC,IAA/B,CAA6D,CAC3D,GAAI,KAAK05C,sBAAT,CAAiC,CAC/B,KAAKA,sBAAL,CAA4B15C,IAA5B,EACD,CAFD,IAEO,CACL,GAAI,OAASA,KAAb,CAAmB,CACjB25C,OAAO,CAACv7C,GAAR,CACE,aAAgB4B,IAAI,CAAC,KAAD,CAAJ,CAAuBwJ,OAAvB,CAA+B,IAA/B,CAAqC,cAArC,CADlB,EAGD,CACF,CACF,CAVO,CAYA6pC,6CAAR;AAEE,KAAKgC,OAAL;;AAIA,IAAsB,qBAAKX,OAAL,CAAa/wB,MAAb,IAAqBi2B,YAA3C,CAA2C,QAA3C,CAA2CA,YAA3C,CAA6C,CAAxC,GAAMld,QAAO,SAAb,KACH,IAAyB,mCAAO,CAAC/Y,MAAR,KAAgBk2B,YAAzC,CAAyC,QAAzC,CAAyCA,YAAzC,CAA2C,CAAtC,GAAMlF,WAAU,SAAhB,CACH,KAAKC,WAAL,CAAiBD,UAAjB,EACD,4HACF,4HAED,IAAK,GAAIt3C,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAKq5C,gBAAL,CAAsBp5C,MAA1C,CAAkDD,CAAC,EAAnD,CAAuD,CACrD,GAAI,KAAKq5C,gBAAL,CAAsBr5C,CAAtB,CAAJ,CAA8B,CAC5B,KAAKu5C,QAAL,CAAcv5C,CAAd,EACD,CACF,CAED,MAAO,KAAKk5C,yBAAL,CAA+Bj5C,MAAtC,CAA8C,CAC5C,GAAM42C,QAAO,CAAG,KAAKqC,yBAAL,CAA+B3N,KAA/B,EAAhB,CACA,KAAK0N,iBAAL,CACEpC,OAAO,CAAC9iC,MADV,CAEE8iC,OAAO,CAAC/uC,UAFV,CAGE+uC,OAAO,CAAC70C,IAHV,CAIE60C,OAAO,CAAC9mC,UAJV,EAMD,CAED,IAAK,GAAI/P,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAKi3C,gBAAL,CAAsBh3C,MAA1C,CAAkDD,CAAC,EAAnD,CAAuD,CACrD,GAAI,KAAKi3C,gBAAL,CAAsBj3C,CAAtB,CAAJ,CAA8B,CAC5B,KAAKm3C,QAAL,CAAcn3C,CAAd,EACD,CACF,CACF,CAjCO;;OAsCAg2C,iDAAR,WACE,GAAM5T,MAAK,CAA4B,EAAvC,CAEA,GAAIqa,WAAU,CAAG,IAAjB,CACA,GAAIn6C,SAAS,EAAb,CAAiB,CACf,GAAI,KAAK4uC,SAAL,CAAelmC,SAAnB,CAA8B,CAC5ByxC,UAAU,CAAG,YAAb,CACD,CAFD,IAEO,CACLA,UAAU,CAAG,MAAb,CACD,CACF,CAEDra,KAAK,CAAC,OAASqa,UAAT,CAAsB,GAAtB,CAA4B9P,WAAW,CAACxgC,OAAZ,CAAoB,KAApB,CAA2B,GAA3B,CAA7B,CAAL,CAAqE,CAArE,CAEA,GAAIi4B,eAAe,EAAnB,CAAuB,CACrBhC,KAAK,CAAC,mBAAD,CAAL,CAA6B,CAA7B,CACD,CAFD,IAEO,IAAIsa,aAAa,EAAjB,CAAqB,CAC1Bta,KAAK,CAAC,uBAAD,CAAL,CAAiC,CAAjC,CACD,CACD,KAAKG,WAAL,CAAiBH,KAAjB,EACD,CApBO,CAsBA4T,gDAAR,WACE,GAAMsE,OAAM,CAAGhW,aAAa,CAAC6R,WAAd,GAA4BwG,eAA5B,EAAf,CACA,MAAO5pC,QAAO,CAAC,KAAK+oC,iBAAN,CAAP,EAAmCxB,MAA1C,CACD,CAHO,CA95BOtE,iDAA8B,CAA9B;;OAKAA,uCAAoB,CAApB,CA65BjB,4BAAC,CA78BD,CAA0Cf,aAA1C,EC1FA;;;;;;;;;;;;;;;IA+BA;;;;GAKA,qDAAwC9iC;;;;;OAwCtC,4BACU++B,SADV,CAEUyE,aAFV,CAQUG,kBARV,CAQ+C,CAR/C,UAUEn4B,mBAAO,IAVT,CACU7C,0BACAA,kCAMAA,8EA1CFA,WAAqC1Z,UAAU,CAAC,SAAD,CAA/C;;;;;WAQA0Z,eAAoC,EAApC,cAqCP,CAlDD8hC,kDAAYxa,KAAZ,CAA2C,CACzC,KAAM,IAAI3gC,MAAJ,CAAU,yBAAV,CAAN,CACD,CAFD;;;;;OAqBOm7C,gCAAP,SAAoBr2C,KAApB,CAAkCy1B,GAAlC,CAAqD,CACnD,GAAIA,GAAG,GAAK3tB,SAAZ,CAAuB,CACrB,MAAO,OAAS2tB,GAAhB,CACD,CAFD,IAEO,CACLr7B,MAAM,CACJ4F,KAAK,CAACqa,cAAN,GAAuB6e,SAAvB,EADI,CAEJ,gDAFI,CAAN,CAIA,MAAOl5B,MAAK,CAACE,IAAN,CAAWrI,QAAX,EAAP,CACD,CACF,CAVM,mBAgCPw+C,6CACEr2C,KADF,CAEE6wC,aAFF,CAGEpb,GAHF,CAIEjsB,UAJF,CAI6C,CAJ7C,eAME,GAAMjI,WAAU,CAAGvB,KAAK,CAACE,IAAN,CAAWrI,QAAX,EAAnB,CACA,KAAKkoC,IAAL,CACE,qBAAuBx+B,UAAvB,CAAoC,GAApC,CAA0CvB,KAAK,CAACuf,eAAN,EAD5C;AAKA,GAAM+2B,SAAQ,CAAGD,kBAAkB,CAACE,YAAnB,CAAgCv2C,KAAhC,CAAuCy1B,GAAvC,CAAjB,CACA,GAAM+gB,WAAU,CAAG,EAAnB,CACA,KAAKC,QAAL,CAAcH,QAAd,EAA0BE,UAA1B,CAEA,GAAME,sBAAqB,CAAG12C,KAAK,CAChCqa,cAD2B,GAE3Bs8B,2BAF2B,EAA9B,CAIA,KAAKC,YAAL,CACEr1C,UAAU,CAAG,OADf,CAEEm1C,qBAFF,CAGE,SAAC17C,KAAD,CAAQmU,MAAR,CAAc,CACZ,GAAI1T,KAAI,CAAG0T,MAAX,CAEA,GAAInU,KAAK,GAAK,GAAd,CAAmB,CACjBS,IAAI,CAAG,IAAP,CACAT,KAAK,CAAG,IAAR,CACD,CAED,GAAIA,KAAK,GAAK,IAAd,CAAoB,CAClBuZ,KAAI,CAAC66B,aAAL,CAAmB7tC,UAAnB,CAA+B9F,IAA/B,CAAmC,YAAe,KAAlD,CAAyDg6B,GAAzD,EACD,CAED,GAAIniB,OAAO,CAACiB,KAAI,CAACkiC,QAAN,CAAgBH,QAAhB,CAAP,GAAqCE,UAAzC,CAAqD,CACnD,GAAIK,SAAJ,CACA,GAAI,CAAC77C,KAAL,CAAY,CACV67C,QAAM,CAAG,IAAT,CACD,CAFD,IAEO,IAAI77C,KAAK,GAAK,GAAd,CAAmB,CACxB67C,QAAM,CAAG,mBAAT,CACD,CAFM,IAEA,CACLA,QAAM,CAAG,cAAgB77C,KAAzB,CACD,CAEDwO,UAAU,CAACqtC,QAAD,CAAS,IAAT,CAAV,CACD,CACF,CA3BH,EA6BD,CAjDD,mBAoDAR,+CAASr2C,KAAT,CAAuBy1B,GAAvB,CAAyC,CACvC,GAAM6gB,SAAQ,CAAGD,kBAAkB,CAACE,YAAnB,CAAgCv2C,KAAhC,CAAuCy1B,GAAvC,CAAjB,CACA,MAAO,MAAKghB,QAAL,CAAcH,QAAd,CAAP,CACD,CAHD,CAKAD,0CAAIr2C,KAAJ,CAAgB,CAAhB,eACE,GAAM02C,sBAAqB,CAAG12C,KAAK,CAChCqa,cAD2B,GAE3Bs8B,2BAF2B,EAA9B,CAIA,GAAMp1C,WAAU,CAAGvB,KAAK,CAACE,IAAN,CAAWrI,QAAX,EAAnB,CAEA,GAAM+R,SAAQ,CAAG,GAAIC,SAAJ,EAAjB,CAEA,KAAK+sC,YAAL,CACEr1C,UAAU,CAAG,OADf,CAEEm1C,qBAFF,CAGE,SAAC17C,KAAD,CAAQmU,MAAR,CAAc,CACZ,GAAI1T,KAAI,CAAG0T,MAAX,CAEA,GAAInU,KAAK,GAAK,GAAd,CAAmB,CACjBS,IAAI,CAAG,IAAP,CACAT,KAAK,CAAG,IAAR,CACD,CAED,GAAIA,KAAK,GAAK,IAAd,CAAoB,CAClBuZ,KAAI,CAAC66B,aAAL,CACE7tC,UADF,CAEE9F,IAFF,aAGe,KAHf,SAIW,IAJX,EAMAmO,QAAQ,CAACsU,OAAT,CAAiBziB,IAAjB,EACD,CARD,IAQO,CACLmO,QAAQ,CAACyU,MAAT,CAAgB,GAAInjB,MAAJ,CAAUO,IAAV,CAAhB,EACD,CACF,CAtBH,EAwBA,MAAOmO,SAAQ,CAACI,OAAhB,CACD,CAlCD,mBAqCAqsC,uDAAiB1H,KAAjB,CAA8B;AAE7B,CAFD;;;;;;;;OAaQ0H,0CAAR,SACE90C,UADF,CAEEm1C,qBAFF,CAGE75B,QAHF,CAG4D,CAH5D,eAEE,4DAA4D,CAG5D65B,qBAAqB,CAAC,QAAD,CAArB,CAAkC,QAAlC,CAEA,KAAKnH,kBAAL,CACG4F,QADH,CACW,iBAAmB,KAD9B,EAEGC,IAFH,CAEQ,uBAAa,CACjB,GAAM0B,UAAS,CAAGC,aAAa,EAAIA,aAAa,CAAC1B,WAAjD,CACA,GAAIyB,SAAJ,CAAe,CACbJ,qBAAqB,CAAC,MAAD,CAArB,CAAgCI,SAAhC,CACD,CAED,GAAMxR,IAAG,CACP,CAAC/wB,KAAI,CAACo2B,SAAL,CAAermC,MAAf,CAAwB,UAAxB,CAAqC,SAAtC,EACAiQ,KAAI,CAACo2B,SAAL,CAAetmC,IADf,CAEA9C,UAFA,CAGA,GAHA,CAIA,KAJA,CAKAgT,KAAI,CAACo2B,SAAL,CAAepmC,SALf,CAMAyyC,WAAW,CAACN,qBAAD,CAPb,CASAniC,KAAI,CAACwrB,IAAL,CAAU,4BAA8BuF,GAAxC,EACA,GAAM2R,IAAG,CAAG,GAAIC,eAAJ,EAAZ,CACAD,GAAG,CAACjR,kBAAJ,CAAyB,WACvB,GAAInpB,QAAQ,EAAIo6B,GAAG,CAACh7C,UAAJ,GAAmB,CAAnC,CAAsC,CACpCsY,KAAI,CAACwrB,IAAL,CACE,qBAAuBuF,GAAvB,CAA6B,oBAD/B,CAEE2R,GAAG,CAAC1d,MAFN,CAGE,WAHF,CAIE0d,GAAG,CAACE,YAJN,EAMA,GAAI/E,IAAG,CAAG,IAAV,CACA,GAAI6E,GAAG,CAAC1d,MAAJ,EAAc,GAAd,EAAqB0d,GAAG,CAAC1d,MAAJ,CAAa,GAAtC,CAA2C,CACzC,GAAI,CACF6Y,GAAG,CAAG16C,QAAQ,CAACu/C,GAAG,CAACE,YAAL,CAAd,CACD,CAAC,MAAO9+C,CAAP,CAAU,CACV8C,IAAI,CACF,qCACEmqC,GADF,CAEE,IAFF,CAGE2R,GAAG,CAACE,YAJJ,CAAJ,CAMD,CACDt6B,QAAQ,CAAC,IAAD,CAAOu1B,GAAP,CAAR,CACD,CAZD,IAYO;AAEL,GAAI6E,GAAG,CAAC1d,MAAJ,GAAe,GAAf,EAAsB0d,GAAG,CAAC1d,MAAJ,GAAe,GAAzC,CAA8C,CAC5Cp+B,IAAI,CACF,sCACEmqC,GADF,CAEE,WAFF,CAGE2R,GAAG,CAAC1d,MAJJ,CAAJ,CAMD,CACD1c,QAAQ,CAACo6B,GAAG,CAAC1d,MAAL,CAAR,CACD,CACD1c,QAAQ,CAAG,IAAX,CACD,CACF,CAnCD,CAqCAo6B,GAAG,CAAClT,IAAJ,CAAS,KAAT,CAAgBuB,GAAhB,CAAmB,iBAAoB,IAAvC,EACA2R,GAAG,CAAC9N,IAAJ,GACD,CA1DH,EA2DD,CAlEO,CAmEV,0BApOA,EAAwCuF,aAAxC,ECpCA;;;;;;;;;;;;;;;GAmDA,GAAM0I,iBAAgB,CAAG,gBAAzB,CAEA;;GAGA,iCA6BE,cACSzM,SADT,CAEU0M,gBAFV,CAGSC,GAHT,CAIS/H,kBAJT,CAI8C,CAHrC,yBACC,uCACD,aACA,2CA7BT,qBAAkB,CAAlB,CAKQ,oBAAuC,IAAvC,CACA,iBAAc,GAAItT,WAAJ,EAAd,CACA,kBAAe,CAAf,CAOA,kCAEG,IAFH,+EAMA,mBAAgB,GAAI7a,mBAAJ,EAAhB;AAGR,2BAAqD,IAArD;AASE,KAAKlqB,GAAL,CAAW,KAAKyzC,SAAL,CAAeplC,WAAf,EAAX,CACD,CAEDgyC,+CACE,KAAKvX,MAAL,CAActF,YAAY,CAACuF,aAAb,CAA2B,KAAK0K,SAAhC,CAAd,CAEA,GAAI,KAAK0M,gBAAL,EAAyB52C,YAAY,EAAzC,CAA6C,CAC3C,KAAK+6B,OAAL,CAAe,GAAI6a,mBAAJ,CACb,KAAK1L,SADQ,CAEb,KAAKyE,aAAL,CAAmB30C,IAAnB,CAAwB,IAAxB,CAFa,CAGb,KAAK80C,kBAHQ,CAAf;AAOAlzC,UAAU,CAAC,KAAKgzC,gBAAL,CAAsB50C,IAAtB,CAA2B,IAA3B,CAAiC,IAAjC,CAAD,CAAyC,CAAzC,CAAV,CACD,CATD,IASO,CACL,GAAM+8C,aAAY,CAAG,KAAKF,GAAL,CAASvQ,OAAT,CAAiB,8BAAjB,CAArB;AAEA,GAAI,MAAOyQ,aAAP,GAAwB,WAAxB,EAAuCA,YAAY,GAAK,IAA5D,CAAkE,CAChE,GAAI,MAAOA,aAAP,GAAwB,QAA5B,CAAsC,CACpC,KAAM,IAAIt8C,MAAJ,CACJ,oEADI,CAAN,CAGD,CACD,GAAI,CACF3D,SAAS,CAACigD,YAAD,CAAT,CACD,CAAC,MAAOn/C,CAAP,CAAU,CACV,KAAM,IAAI6C,MAAJ,CAAU,kCAAoC7C,CAA9C,CAAN,CACD,CACF,CAED,KAAKo/C,qBAAL,CAA6B,GAAIhI,qBAAJ,CAC3B,KAAK9E,SADsB,CAE3B,KAAK2M,GAAL,CAASvQ,OAAT,CAAiB2Q,KAFU,CAG3B,KAAKtI,aAAL,CAAmB30C,IAAnB,CAAwB,IAAxB,CAH2B,CAI3B,KAAK40C,gBAAL,CAAsB50C,IAAtB,CAA2B,IAA3B,CAJ2B,CAK3B,KAAK60C,mBAAL,CAAyB70C,IAAzB,CAA8B,IAA9B,CAL2B,CAM3B,KAAK80C,kBANsB,CAO3BiI,YAP2B,CAA7B,CAUA,KAAKhc,OAAL,CAAe,KAAKic,qBAApB,CACD,CAED,KAAKlI,kBAAL,CAAwBoI,sBAAxB,CAA+C,eAAK,CAClDpjC,KAAI,CAACinB,OAAL,CAAaoc,gBAAb,CAA8BjJ,KAA9B,EACD,CAFD;;AAMA,KAAKkJ,cAAL,CAAsBnd,YAAY,CAACod,mBAAb,CACpB,KAAKnN,SADe,CAEpB,WAAM,UAAIhP,cAAJ,CAAkBpnB,KAAI,CAACyrB,MAAvB,CAA+BzrB,KAAI,CAACinB,OAApC,EAA4C,CAF9B,CAAtB,CAKA,KAAKuc,iBAAL;AAGA,KAAKC,SAAL,CAAiB,GAAI7d,eAAJ,EAAjB,CACA,KAAK8d,aAAL,CAAqB,GAAIpjB,SAAJ,CAAa,CAChC+C,cAAc,CAAE,SAAC53B,KAAD,CAAQy1B,GAAR,CAAaob,aAAb,CAA4BrnC,UAA5B,CAAsC,CACpD,GAAI0uC,WAAU,CAAY,EAA1B,CACA,GAAMhtC,KAAI,CAAGqJ,KAAI,CAACyjC,SAAL,CAAeryB,OAAf,CAAuB3lB,KAAK,CAACE,IAA7B,CAAb;;AAGA,GAAI,CAACgL,IAAI,CAACsB,OAAL,EAAL,CAAqB,CACnB0rC,UAAU,CAAG3jC,KAAI,CAAC0jC,aAAL,CAAmBE,oBAAnB,CACXn4C,KAAK,CAACE,IADK,CAEXgL,IAFW,CAAb,CAIA7O,UAAU,CAAC,WACTmN,UAAU,CAAC,IAAD,CAAV,CACD,CAFS,CAEP,CAFO,CAAV,CAGD,CACD,MAAO0uC,WAAP,CACD,CAhB+B,CAiBhCjgB,aAAa,CAAE,WAAQ,CAjBS,CAAb,CAArB,CAmBA,KAAKmgB,WAAL,CAAiB,WAAjB,CAA8B,KAA9B,EAEA,KAAKC,eAAL,CAAuB,GAAIxjB,SAAJ,CAAa,CAClC+C,cAAc,CAAE,SAAC53B,KAAD,CAAQy1B,GAAR,CAAaob,aAAb,CAA4BrnC,UAA5B,CAAsC,CACpD+K,KAAI,CAACinB,OAAL,CAAa+W,MAAb,CAAoBvyC,KAApB,CAA2B6wC,aAA3B,CAA0Cpb,GAA1C,CAA+C,SAAC8D,MAAD,CAAS99B,IAAT,CAAa,CAC1D,GAAM4xB,OAAM,CAAG7jB,UAAU,CAAC+vB,MAAD,CAAS99B,IAAT,CAAzB,CACA8Y,KAAI,CAAC+jC,WAAL,CAAiBC,yBAAjB,CAA2Cv4C,KAAK,CAACE,IAAjD,CAAuDmtB,MAAvD,EACD,CAHD;AAKA,MAAO,EAAP,CACD,CARiC,CASlC4K,aAAa,CAAE,SAACj4B,KAAD,CAAQy1B,GAAR,CAAW,CACxBlhB,KAAI,CAACinB,OAAL,CAAagd,QAAb,CAAsBx4C,KAAtB,CAA6By1B,GAA7B,EACD,CAXiC,CAAb,CAAvB,CAaD,CA1FD;;OA+FA8hB,mCACE,MACE,CAAC,KAAK5M,SAAL,CAAermC,MAAf,CAAwB,UAAxB,CAAqC,SAAtC,EAAmD,KAAKqmC,SAAL,CAAetmC,IADpE,CAGD,CAJD;;OASAkzC,+BACE,MAAO,MAAK5M,SAAL,CAAepmC,SAAtB,CACD,CAFD;;OAOAgzC,qCACE,GAAMkB,WAAU,CAAG,KAAKT,SAAL,CAAeryB,OAAf,CACjB,GAAIrkB,KAAJ,CAAS,wBAAT,CADiB,CAAnB,CAGA,GAAMo3C,OAAM,CAAID,UAAU,CAAC3sC,GAAX,IAA+B,CAA/C,CACA,MAAO,IAAIkU,KAAJ,GAAWC,OAAX,GAAuBy4B,MAA9B,CACD,CAND;;OAWAnB,+CACE,MAAOz3B,mBAAkB,CAAC,CACxBmuB,SAAS,CAAE,KAAK0K,UAAL,EADa,CAAD,CAAzB,CAGD,CAJD;;OASQpB,6BAAR,SACEh2C,UADF,CAEE9F,IAFF,CAGEm9C,OAHF,CAIEnjB,GAJF,CAIoB;AAGlB,KAAKojB,eAAL,GACA,GAAM34C,KAAI,CAAG,GAAIoB,KAAJ,CAASC,UAAT,CAAb,CACA9F,IAAI,CAAG,KAAKq9C,4BAAL,CACH,KAAKA,4BAAL,CAAkCv3C,UAAlC,CAA8C9F,IAA9C,CADG,CAEHA,IAFJ,CAGA,GAAI4xB,OAAM,CAAG,EAAb,CACA,GAAIoI,GAAJ,CAAS,CACP,GAAImjB,OAAJ,CAAa,CACX,GAAMG,eAAc,CAAG1kC,GAAG,CACxB5Y,IADwB,CAExB,SAACu9C,GAAD,CAAa,CAAK,qBAAY,CAACA,GAAD,CAAZ,CAAiB,CAFX,CAA1B,CAIA3rB,MAAM,CAAG,KAAKgrB,eAAL,CAAqBY,qBAArB,CACP/4C,IADO,CAEP64C,cAFO,CAGPtjB,GAHO,CAAT,CAKD,CAVD,IAUO,CACL,GAAMyjB,WAAU,CAAG7qC,cAAY,CAAC5S,IAAD,CAA/B,CACA4xB,MAAM,CAAG,KAAKgrB,eAAL,CAAqBc,yBAArB,CACPj5C,IADO,CAEPg5C,UAFO,CAGPzjB,GAHO,CAAT,CAKD,CACF,CAnBD,IAmBO,IAAImjB,OAAJ,CAAa,CAClB,GAAM9sB,gBAAe,CAAGzX,GAAG,CACzB5Y,IADyB,CAEzB,SAACu9C,GAAD,CAAa,CAAK,qBAAY,CAACA,GAAD,CAAZ,CAAiB,CAFV,CAA3B,CAIA3rB,MAAM,CAAG,KAAKgrB,eAAL,CAAqBe,gBAArB,CAAsCl5C,IAAtC,CAA4C4rB,eAA5C,CAAT,CACD,CANM,IAMA,CACL,GAAMtT,KAAI,CAAGnK,cAAY,CAAC5S,IAAD,CAAzB,CACA4xB,MAAM,CAAG,KAAKgrB,eAAL,CAAqBF,oBAArB,CAA0Cj4C,IAA1C,CAAgDsY,IAAhD,CAAT,CACD,CACD,GAAI8N,aAAY,CAAGpmB,IAAnB,CACA,GAAImtB,MAAM,CAAC3zB,MAAP,CAAgB,CAApB,CAAuB;;AAGrB4sB,YAAY,CAAG,KAAK+yB,kBAAL,CAAwBn5C,IAAxB,CAAf,CACD,CACD,KAAKo4C,WAAL,CAAiBC,yBAAjB,CAA2CjyB,YAA3C,CAAyD+G,MAAzD,EACD,CAjDO;AAoDRkqB,6CAAqB16B,QAArB,CAA0E,CACxE,KAAKi8B,4BAAL,CAAoCj8B,QAApC,CACD,CAFD,CAIQ06B,gCAAR,SAAyB+B,aAAzB,CAA+C,CAC7C,KAAKlB,WAAL,CAAiB,WAAjB,CAA8BkB,aAA9B,EACA,GAAIA,aAAa,GAAK,KAAtB,CAA6B,CAC3B,KAAKC,sBAAL,GACD,CACF,CALO,CAOAhC,mCAAR,SAA4B/lB,OAA5B,CAA2C,CAA3C,eACExzB,IAAI,CAACwzB,OAAD,CAAU,SAACt6B,GAAD,CAAcC,KAAd,CAA4B,CACxCod,KAAI,CAAC6jC,WAAL,CAAiBlhD,GAAjB,CAAsBC,KAAtB,EACD,CAFG,CAAJ,CAGD,CAJO,CAMAogD,2BAAR,SAAoBh2C,UAApB,CAAwCpK,KAAxC,CAAsD,CACpD,GAAM+I,KAAI,CAAG,GAAIoB,KAAJ,CAAS,UAAYC,UAArB,CAAb,CACA,GAAMgK,QAAO,CAAG8C,cAAY,CAAClX,KAAD,CAA5B,CACA,KAAK6gD,SAAL,CAAewB,cAAf,CAA8Bt5C,IAA9B,CAAoCqL,OAApC,EACA,GAAM8hB,OAAM,CAAG,KAAK4qB,aAAL,CAAmBE,oBAAnB,CAAwCj4C,IAAxC,CAA8CqL,OAA9C,CAAf,CACA,KAAK+sC,WAAL,CAAiBC,yBAAjB,CAA2Cr4C,IAA3C,CAAiDmtB,MAAjD,EACD,CANO,CAQAkqB,+BAAR,WACE,MAAO,MAAKkC,YAAL,EAAP,CACD,CAFO;;;;;;;;;;;;;;;;;;;;;;;;;OA8BRlC,iCAASv3C,KAAT,CAAqB,CAArB,eACE,MAAO,MAAKw7B,OAAL,CAAa5gC,GAAb,CAAiBoF,KAAjB,EAAwBo1C,IAAxB,CACL,iBAAO,CACL,GAAMlqC,KAAI,CAAGmD,cAAY,CAACs/B,OAAD,CAAzB,CACA,GAAMtgB,OAAM,CAAG9Y,KAAI,CAAC8jC,eAAL,CAAqBF,oBAArB,CACbn4C,KAAK,CAACE,IADO,CAEbgL,IAFa,CAAf,CAIAqJ,KAAI,CAAC+jC,WAAL,CAAiBoB,iBAAjB,CAAmC15C,KAAK,CAACE,IAAzC,CAA+CmtB,MAA/C,EACA,MAAOssB,QAAO,CAACz7B,OAAR,CACL,GAAInF,aAAJ,CACE7N,IADF,CAEElL,KAAK,CAACuZ,MAAN,EAFF,CAGEvZ,KAAK,CAACqa,cAAN,GAAuBC,QAAvB,EAHF,CADK,CAAP,CAOD,CAfI,CAgBL,aAAG,CACD/F,KAAI,CAACwrB,IAAL,CACE,iBACExoC,SAAS,CAACyI,KAAD,CADX,CAEE,sCAFF,CAGEoe,GAJJ,EAMA,GAAMw7B,OAAM,CAAGrlC,KAAI,CAAC8jC,eAAL,CAAqBx4B,sBAArB,CAA4C7f,KAAK,CAACE,IAAlD,CAAf,CACA,GAAI,CAAC05C,MAAM,CAACptC,OAAP,EAAL,CAAuB,CACrB,MAAOmtC,QAAO,CAACz7B,OAAR,CACL,GAAInF,aAAJ,CACE6gC,MADF,CAEE55C,KAAK,CAACuZ,MAAN,EAFF,CAGEvZ,KAAK,CAACqa,cAAN,GAAuBC,QAAvB,EAHF,CADK,CAAP,CAOD,CACD,MAAOq/B,QAAO,CAACt7B,MAAR,CAAe,GAAInjB,MAAJ,CAAUkjB,GAAV,CAAf,CAAP,CACD,CAlCI,CAAP,CAoCD,CArCD,CAuCAm5B,wCACEr3C,IADF,CAEE25C,MAFF,CAGExkC,WAHF,CAIE7L,UAJF,CAI2E,CAJ3E,eAME,KAAKu2B,IAAL,CAAU,KAAV,CAAiB,CACf7/B,IAAI,CAAEA,IAAI,CAACrI,QAAL,EADS,CAEfV,KAAK,CAAE0iD,MAFQ,CAGfpyC,QAAQ,CAAE4N,WAHK,CAAjB;;AAQA,GAAM+K,aAAY,CAAG,KAAK05B,oBAAL,EAArB,CACA,GAAMC,kBAAiB,CAAG1rC,cAAY,CAACwrC,MAAD,CAASxkC,WAAT,CAAtC,CACA,GAAMoL,SAAQ,CAAG,KAAK43B,eAAL,CAAqBx4B,sBAArB,CAA4C3f,IAA5C,CAAjB,CACA,GAAMqL,QAAO,CAAGyV,4BAA4B,CAC1C+4B,iBAD0C,CAE1Ct5B,QAF0C,CAG1CL,YAH0C,CAA5C,CAMA,GAAM8R,QAAO,CAAG,KAAK8nB,eAAL,EAAhB,CACA,GAAM3sB,OAAM,CAAG,KAAKgrB,eAAL,CAAqB4B,kBAArB,CACb/5C,IADa,CAEbqL,OAFa,CAGb2mB,OAHa,CAIb,IAJa,CAAf,CAMA,KAAKomB,WAAL,CAAiB9b,WAAjB,CAA6BnP,MAA7B,EACA,KAAKmO,OAAL,CAAaia,GAAb,CACEv1C,IAAI,CAACrI,QAAL,EADF,CAEEkiD,iBAAiB,CAACjuC,GAAlB,CAAqB,WAAa,IAAlC,CAFF,CAGE,SAACytB,MAAD,CAAS2Z,WAAT,CAAoB,CAClB,GAAMgH,QAAO,CAAG3gB,MAAM,GAAK,IAA3B,CACA,GAAI,CAAC2gB,OAAL,CAAc,CACZ/+C,IAAI,CAAC,UAAY+E,IAAZ,CAAmB,WAAnB,CAAiCq5B,MAAlC,CAAJ,CACD,CAED,GAAM4gB,YAAW,CAAG5lC,KAAI,CAAC8jC,eAAL,CAAqBhvB,YAArB,CAClB6I,OADkB,CAElB,CAACgoB,OAFiB,CAApB,CAIA3lC,KAAI,CAAC+jC,WAAL,CAAiBC,yBAAjB,CAA2Cr4C,IAA3C,CAAiDi6C,WAAjD,EACA5lC,KAAI,CAAC6lC,sBAAL,CAA4B5wC,UAA5B,CAAwC+vB,MAAxC,CAAgD2Z,WAAhD,EACD,CAfH,EAiBA,GAAM5sB,aAAY,CAAG,KAAK+zB,kBAAL,CAAwBn6C,IAAxB,CAArB,CACA,KAAKm5C,kBAAL,CAAwB/yB,YAAxB;AAEA,KAAKgyB,WAAL,CAAiBC,yBAAjB,CAA2CjyB,YAA3C,CAAyD,EAAzD,EACD,CApDD,CAsDAixB,+BACEr3C,IADF,CAEEo6C,eAFF,CAGE9wC,UAHF,CAG2E,CAH3E,eAKE,KAAKu2B,IAAL,CAAU,QAAV,CAAoB,CAAE7/B,IAAI,CAAEA,IAAI,CAACrI,QAAL,EAAR,CAAyBV,KAAK,CAAEmjD,eAAhC,CAApB;AAGA,GAAIC,MAAK,CAAG,IAAZ,CACA,GAAMn6B,aAAY,CAAG,KAAK05B,oBAAL,EAArB,CACA,GAAMhuB,gBAAe,CAA0B,EAA/C,CACA9tB,IAAI,CAACs8C,eAAD,CAAkB,SAACE,UAAD,CAAqBC,YAArB,CAA0C,CAC9DF,KAAK,CAAG,KAAR,CACAzuB,eAAe,CAAC0uB,UAAD,CAAf,CAA8B15B,wBAAwB,CACpD5gB,IAAI,CAACmD,KAAL,CAAWm3C,UAAX,CADoD,CAEpDnsC,cAAY,CAACosC,YAAD,CAFwC,CAGpDlmC,KAAI,CAAC8jC,eAH+C,CAIpDj4B,YAJoD,CAAtD,CAMD,CARG,CAAJ,CAUA,GAAI,CAACm6B,KAAL,CAAY,CACV,GAAMG,UAAO,CAAG,KAAKV,eAAL,EAAhB,CACA,GAAM3sB,OAAM,CAAG,KAAKgrB,eAAL,CAAqBsC,cAArB,CACbz6C,IADa,CAEb4rB,eAFa,CAGb4uB,SAHa,CAAf,CAKA,KAAKpC,WAAL,CAAiB9b,WAAjB,CAA6BnP,MAA7B,EACA,KAAKmO,OAAL,CAAatS,KAAb,CACEhpB,IAAI,CAACrI,QAAL,EADF,CAEEyiD,eAFF,CAGE,SAAC/gB,MAAD,CAAS2Z,WAAT,CAAoB,CAClB,GAAMgH,QAAO,CAAG3gB,MAAM,GAAK,IAA3B,CACA,GAAI,CAAC2gB,OAAL,CAAc,CACZ/+C,IAAI,CAAC,aAAe+E,IAAf,CAAsB,WAAtB,CAAoCq5B,MAArC,CAAJ,CACD,CAED,GAAM4gB,YAAW,CAAG5lC,KAAI,CAAC8jC,eAAL,CAAqBhvB,YAArB,CAClBqxB,SADkB,CAElB,CAACR,OAFiB,CAApB,CAIA,GAAM5zB,aAAY,CAChB6zB,WAAW,CAACzgD,MAAZ,CAAqB,CAArB,CAAyB6a,KAAI,CAAC8kC,kBAAL,CAAwBn5C,IAAxB,CAAzB,CAAyDA,IAD3D,CAEAqU,KAAI,CAAC+jC,WAAL,CAAiBC,yBAAjB,CAA2CjyB,YAA3C,CAAyD6zB,WAAzD,EACA5lC,KAAI,CAAC6lC,sBAAL,CAA4B5wC,UAA5B,CAAwC+vB,MAAxC,CAAgD2Z,WAAhD,EACD,CAjBH,EAoBAl1C,IAAI,CAACs8C,eAAD,CAAkB,SAAC5d,WAAD,CAAoB,CACxC,GAAMpW,aAAY,CAAG/R,KAAI,CAAC8lC,kBAAL,CAAwBn6C,IAAI,CAACmD,KAAL,CAAWq5B,WAAX,CAAxB,CAArB,CACAnoB,KAAI,CAAC8kC,kBAAL,CAAwB/yB,YAAxB,EACD,CAHG,CAAJ;AAMA,KAAKgyB,WAAL,CAAiBC,yBAAjB,CAA2Cr4C,IAA3C,CAAiD,EAAjD,EACD,CAnCD,IAmCO,CACL1F,GAAG,CAAC,sDAAD,CAAH,CACA,KAAK4/C,sBAAL,CAA4B5wC,UAA5B,CAAwC,IAAxC,EACD,CACF,CA5DD;;OAiEQ+tC,sCAAR,0BACE,KAAKxX,IAAL,CAAU,oBAAV,EAEA,GAAM3f,aAAY,CAAG,KAAK05B,oBAAL,EAArB,CACA,GAAMc,yBAAwB,CAAG,GAAIx5B,mBAAJ,EAAjC,CACA,KAAKof,aAAL,CAAmBre,WAAnB,CAA+B7gB,IAAI,CAAC2hB,KAApC,CAA2C,SAAC/iB,IAAD,CAAOgL,IAAP,CAAW,CACpD,GAAM2vC,SAAQ,CAAG/5B,wBAAwB,CACvC5gB,IADuC,CAEvCgL,IAFuC,CAGvCqJ,KAAI,CAAC8jC,eAHkC,CAIvCj4B,YAJuC,CAAzC,CAMAw6B,wBAAwB,CAACj5B,QAAzB,CAAkCzhB,IAAlC,CAAwC26C,QAAxC,EACD,CARD,EASA,GAAIxtB,OAAM,CAAY,EAAtB,CAEAutB,wBAAwB,CAACz4B,WAAzB,CAAqC7gB,IAAI,CAAC2hB,KAA1C,CAAiD,SAAC/iB,IAAD,CAAOsY,IAAP,CAAW,CAC1D6U,MAAM,CAAGA,MAAM,CAACoC,MAAP,CACPlb,KAAI,CAAC8jC,eAAL,CAAqBF,oBAArB,CAA0Cj4C,IAA1C,CAAgDsY,IAAhD,CADO,CAAT,CAGA,GAAM8N,aAAY,CAAG/R,KAAI,CAAC8lC,kBAAL,CAAwBn6C,IAAxB,CAArB,CACAqU,KAAI,CAAC8kC,kBAAL,CAAwB/yB,YAAxB,EACD,CAND,EAQA,KAAKka,aAAL,CAAqB,GAAIpf,mBAAJ,EAArB,CACA,KAAKk3B,WAAL,CAAiBC,yBAAjB,CAA2Cj3C,IAAI,CAAC2hB,KAAhD,CAAuDoK,MAAvD,EACD,CA1BO,CA4BRkqB,2CACEr3C,IADF,CAEEsJ,UAFF,CAE2E,CAF3E,eAIE,KAAKgyB,OAAL,CAAa1xB,kBAAb,CAAgC5J,IAAI,CAACrI,QAAL,EAAhC,CAAiD,SAAC0hC,MAAD,CAAS2Z,WAAT,CAAoB,CACnE,GAAI3Z,MAAM,GAAK,IAAf,CAAqB,CACnBhlB,KAAI,CAACisB,aAAL,CAAmB1e,MAAnB,CAA0B5hB,IAA1B,EACD,CACDqU,KAAI,CAAC6lC,sBAAL,CAA4B5wC,UAA5B,CAAwC+vB,MAAxC,CAAgD2Z,WAAhD,EACD,CALD,EAMD,CAVD,CAYAqE,wCACEr3C,IADF,CAEE/I,KAFF,CAGEqS,UAHF,CAG2E,CAH3E,eAKE,GAAM+B,QAAO,CAAG8C,cAAY,CAAClX,KAAD,CAA5B,CACA,KAAKqkC,OAAL,CAAasf,eAAb,CACE56C,IAAI,CAACrI,QAAL,EADF,CAEE0T,OAAO,CAACO,GAAR,CAAW,WAAa,IAAxB,CAFF,CAGE,SAACytB,MAAD,CAAS2Z,WAAT,CAAoB,CAClB,GAAI3Z,MAAM,GAAK,IAAf,CAAqB,CACnBhlB,KAAI,CAACisB,aAAL,CAAmB7e,QAAnB,CAA4BzhB,IAA5B,CAAkCqL,OAAlC,EACD,CACDgJ,KAAI,CAAC6lC,sBAAL,CAA4B5wC,UAA5B,CAAwC+vB,MAAxC,CAAgD2Z,WAAhD,EACD,CARH,EAUD,CAhBD,CAkBAqE,oDACEr3C,IADF,CAEE/I,KAFF,CAGEsQ,QAHF,CAIE+B,UAJF,CAI2E,CAJ3E,eAME,GAAM+B,QAAO,CAAG8C,cAAY,CAAClX,KAAD,CAAQsQ,QAAR,CAA5B,CACA,KAAK+zB,OAAL,CAAasf,eAAb,CACE56C,IAAI,CAACrI,QAAL,EADF,CAEE0T,OAAO,CAACO,GAAR,CAAW,WAAa,IAAxB,CAFF,CAGE,SAACytB,MAAD,CAAS2Z,WAAT,CAAoB,CAClB,GAAI3Z,MAAM,GAAK,IAAf,CAAqB,CACnBhlB,KAAI,CAACisB,aAAL,CAAmB7e,QAAnB,CAA4BzhB,IAA5B,CAAkCqL,OAAlC,EACD,CACDgJ,KAAI,CAAC6lC,sBAAL,CAA4B5wC,UAA5B,CAAwC+vB,MAAxC,CAAgD2Z,WAAhD,EACD,CARH,EAUD,CAjBD,CAmBAqE,2CACEr3C,IADF,CAEEo6C,eAFF,CAGE9wC,UAHF,CAG2E,CAH3E,eAKE,GAAIgD,OAAO,CAAC8tC,eAAD,CAAX,CAA8B,CAC5B9/C,GAAG,CACD,qEADC,CAAH,CAGA,KAAK4/C,sBAAL,CAA4B5wC,UAA5B,CAAwC,IAAxC,EACA,OACD,CAED,KAAKgyB,OAAL,CAAauf,iBAAb,CACE76C,IAAI,CAACrI,QAAL,EADF,CAEEyiD,eAFF,CAGE,SAAC/gB,MAAD,CAAS2Z,WAAT,CAAoB,CAClB,GAAI3Z,MAAM,GAAK,IAAf,CAAqB,CACnBv7B,IAAI,CAACs8C,eAAD,CAAkB,SAACttC,SAAD,CAAoBC,SAApB,CAAsC,CAC1D,GAAMC,aAAY,CAAGmB,cAAY,CAACpB,SAAD,CAAjC,CACAsH,KAAI,CAACisB,aAAL,CAAmB7e,QAAnB,CAA4BzhB,IAAI,CAACmD,KAAL,CAAW2J,SAAX,CAA5B,CAAmDE,YAAnD,EACD,CAHG,CAAJ,CAID,CACDqH,KAAI,CAAC6lC,sBAAL,CAA4B5wC,UAA5B,CAAwC+vB,MAAxC,CAAgD2Z,WAAhD,EACD,CAXH,EAaD,CA1BD,CA4BAqE,iDAAyBv3C,KAAzB,CAAuCwZ,iBAAvC,CAA2E,CACzE,GAAI6T,OAAJ,CACA,GAAIrtB,KAAK,CAACE,IAAN,CAAWgC,QAAX,KAA0B,OAA9B,CAAuC,CACrCmrB,MAAM,CAAG,KAAK4qB,aAAL,CAAmB3nB,oBAAnB,CACPtwB,KADO,CAEPwZ,iBAFO,CAAT,CAID,CALD,IAKO,CACL6T,MAAM,CAAG,KAAKgrB,eAAL,CAAqB/nB,oBAArB,CACPtwB,KADO,CAEPwZ,iBAFO,CAAT,CAID,CACD,KAAK8+B,WAAL,CAAiBoB,iBAAjB,CAAmC15C,KAAK,CAACE,IAAzC,CAA+CmtB,MAA/C,EACD,CAdD,CAgBAkqB,oDACEv3C,KADF,CAEEwZ,iBAFF,CAEsC;;AAIpC,GAAI6T,OAAJ,CACA,GAAIrtB,KAAK,CAACE,IAAN,CAAWgC,QAAX,KAA0B,OAA9B,CAAuC,CACrCmrB,MAAM,CAAG,KAAK4qB,aAAL,CAAmBpnB,uBAAnB,CACP7wB,KADO,CAEPwZ,iBAFO,CAAT,CAID,CALD,IAKO,CACL6T,MAAM,CAAG,KAAKgrB,eAAL,CAAqBxnB,uBAArB,CACP7wB,KADO,CAEPwZ,iBAFO,CAAT,CAID,CACD,KAAK8+B,WAAL,CAAiBoB,iBAAjB,CAAmC15C,KAAK,CAACE,IAAzC,CAA+CmtB,MAA/C,EACD,CAnBD,CAqBAkqB,oCACE,GAAI,KAAKE,qBAAT,CAAgC,CAC9B,KAAKA,qBAAL,CAA2BnC,SAA3B,CAAqC8B,gBAArC,EACD,CACF,CAJD,CAMAG,iCACE,GAAI,KAAKE,qBAAT,CAAgC,CAC9B,KAAKA,qBAAL,CAA2BuD,MAA3B,CAAkC5D,gBAAlC,EACD,CACF,CAJD,CAMAG,8BAAM0D,SAAN,CAAgC,CAA1B,uCAA0B,CAC9B,GAAI,MAAOlF,QAAP,GAAmB,WAAvB,CAAoC,CAClC,OACD,CAED,GAAIla,MAAJ,CACA,GAAIof,SAAJ,CAAe,CACb,GAAI,CAAC,KAAKxf,cAAV,CAA0B,CACxB,KAAKA,cAAL,CAAsB,GAAIT,cAAJ,CAAkB,KAAKgF,MAAvB,CAAtB,CACD,CACDnE,KAAK,CAAG,KAAKJ,cAAL,CAAoB7gC,GAApB,EAAR,CACD,CALD,IAKO,CACLihC,KAAK,CAAG,KAAKmE,MAAL,CAAYplC,GAAZ,EAAR,CACD,CAED,GAAMsgD,YAAW,CAAG75C,MAAM,CAAC/D,IAAP,CAAYu+B,KAAZ,EAAmBsf,MAAnB,CAClB,SAACC,aAAD,CAAgBC,YAAhB,CAA4B,CAC1B,WAAI,CAACp4C,GAAL,CAASo4C,YAAY,CAAC3hD,MAAtB,CAA8B0hD,aAA9B,EAA4C,CAF5B,CAGlB,CAHkB,CAApB,CAMAp9C,IAAI,CAAC69B,KAAD,CAAQ,SAACV,IAAD,CAAehkC,KAAf,CAA6B,CACvC,GAAImkD,WAAU,CAAGngB,IAAjB;AAEA,IAAK,GAAI1hC,EAAC,CAAG0hC,IAAI,CAACzhC,MAAlB,CAA0BD,CAAC,CAAGyhD,WAAW,CAAG,CAA5C,CAA+CzhD,CAAC,EAAhD,CAAoD,CAClD6hD,UAAU,EAAI,GAAd,CACD,CACDvF,OAAO,CAACv7C,GAAR,CAAY8gD,UAAU,CAAGnkD,KAAzB,EACD,CAPG,CAAJ,CAQD,CA7BD,CA+BAogD,8CAAsBgE,MAAtB,CAAoC,CAClC,KAAKvb,MAAL,CAAY4C,gBAAZ,CAA6B2Y,MAA7B,EACA,KAAK1D,cAAL,CAAoB2D,WAApB,CAAgCD,MAAhC,EACD,CAHD,CAKQhE,oBAAR,WAAa,qDAAqB,CAArBh+C,2BACX,GAAIuB,OAAM,CAAG,EAAb,CACA,GAAI,KAAK28C,qBAAT,CAAgC,CAC9B38C,MAAM,CAAG,KAAK28C,qBAAL,CAA2B9+C,EAA3B,CAAgC,GAAzC,CACD,CACD6B,GAAG,MAAH,CAAG,MAAH,CAAGO,UAACD,MAAD,EAAYvB,OAAZ,CAAH,EACD,CANO,CAQRg+C,+CACE16B,QADF,CAEE0c,MAFF,CAGE2Z,WAHF,CAG6B,CAE3B,GAAIr2B,QAAJ,CAAc,CACZtc,cAAc,CAAC,WACb,GAAIg5B,MAAM,GAAK,IAAf,CAAqB,CACnB1c,QAAQ,CAAC,IAAD,CAAR,CACD,CAFD,IAEO,CACL,GAAM9c,KAAI,CAAG,CAACw5B,MAAM,EAAI,OAAX,EAAoBp5B,WAApB,EAAb,CACA,GAAI3G,QAAO,CAAGuG,IAAd,CACA,GAAImzC,WAAJ,CAAiB,CACf15C,OAAO,EAAI,KAAO05C,WAAlB,CACD,CAED,GAAMl4C,MAAK,CAAG,GAAIE,MAAJ,CAAU1B,OAAV,CAAd;AAECwB,KAAa,CAAC+E,IAAd,CAAqBA,IAArB,CACD8c,QAAQ,CAAC7hB,KAAD,CAAR,CACD,CACF,CAfa,CAAd,CAgBD,CACF,CAvBD,CAyBAqG,sBAAIk2C,cAAJ,CAAI,UAAJ,CAAY,KAAZ,WACE,MAAO,MAAKkE,UAAL,GAAoB,KAAKA,UAAL,CAAkB,GAAIC,SAAJ,CAAa,IAAb,CAAtC,CAAP,CACD,CAFW,oCAAZ,EAGF,YAAC,CArpBD,GCxDA;;;;;;;;;;;;;;;IA4BA;;;;;GAMA;;OAgCE,sBAAYv2C,MAAZ,CAA+B,CAC7B,KAAKw2C,cAAL,CAAsB,GAAIt1B,cAAJ,CAAkBlhB,MAAM,CAACmV,QAAP,EAAlB,CAAtB,CACA,KAAKxB,MAAL,CAAc3T,MAAM,CAACmV,QAAP,EAAd,CACA,KAAKshC,UAAL,CAAkBC,YAAY,CAACC,aAAb,CAA2B32C,MAA3B,CAAlB,CACA,KAAK42C,QAAL,CAAgBF,YAAY,CAACG,WAAb,CAAyB72C,MAAzB,CAAhB,CACD;;OAKD02C,+CACE,MAAO,MAAKD,UAAZ,CACD,CAFD;;OAOAC,6CACE,MAAO,MAAKE,QAAZ,CACD,CAFD;;;OAQAF,wCAAQ3wC,IAAR,CAAuB,CACrB,MACE,MAAK4N,MAAL,CAAYzN,OAAZ,CAAoB,KAAK4wC,YAAL,EAApB,CAAyC/wC,IAAzC,GAAkD,CAAlD,EACA,KAAK4N,MAAL,CAAYzN,OAAZ,CAAoBH,IAApB,CAA0B,KAAKgxC,UAAL,EAA1B,GAAgD,CAFlD,CAID,CALD;;OAUAL,4CACErjC,IADF,CAEEthB,GAFF,CAGEysB,QAHF,CAIE2C,YAJF,CAKE/B,MALF,CAMEgC,oBANF,CAMqD,CAEnD,GAAI,CAAC,KAAKgJ,OAAL,CAAa,GAAIpkB,UAAJ,CAAcjU,GAAd,CAAmBysB,QAAnB,CAAb,CAAL,CAAiD,CAC/CA,QAAQ,CAAG7O,YAAY,CAAChI,UAAxB,CACD,CACD,MAAO,MAAK6uC,cAAL,CAAoBruC,WAApB,CACLkL,IADK,CAELthB,GAFK,CAGLysB,QAHK,CAIL2C,YAJK,CAKL/B,MALK,CAMLgC,oBANK,CAAP,CAQD,CAnBD;;OAwBAs1B,+CACEj2B,OADF,CAEEmB,OAFF,CAGER,oBAHF,CAGqD,CAEnD,GAAIQ,OAAO,CAACxa,UAAR,EAAJ,CAA0B;AAExBwa,OAAO,CAAGjS,YAAY,CAAChI,UAAvB,CACD,CACD,GAAI2Y,SAAQ,CAAGsB,OAAO,CAACD,SAAR,CAAkB,KAAKhO,MAAvB,CAAf;AAEA2M,QAAQ,CAAGA,QAAQ,CAACtY,cAAT,CAAwB2H,YAAY,CAAChI,UAArC,CAAX,CACA,GAAMqvC,KAAI,CAAG,IAAb,CACAp1B,OAAO,CAACtR,YAAR,CAAqB7G,cAArB,CAAqC,SAAC1X,GAAD,CAAM+V,SAAN,CAAe,CAClD,GAAI,CAACkvC,IAAI,CAAC5sB,OAAL,CAAa,GAAIpkB,UAAJ,CAAcjU,GAAd,CAAmB+V,SAAnB,CAAb,CAAL,CAAkD,CAChDwY,QAAQ,CAAGA,QAAQ,CAACrY,oBAAT,CAA8BlW,GAA9B,CAAmC4d,YAAY,CAAChI,UAAhD,CAAX,CACD,CACF,CAJD,EAKA,MAAO,MAAK6uC,cAAL,CAAoBnxB,cAApB,CACL5E,OADK,CAELH,QAFK,CAGLc,oBAHK,CAAP,CAKD,CAvBD;;OA4BAs1B,+CAAej2B,OAAf,CAA8BvQ,WAA9B,CAA+C;AAE7C,MAAOuQ,QAAP,CACD,CAHD;;OAQAi2B,+CACE,MAAO,KAAP,CACD,CAFD;;OAOAA,mDACE,MAAO,MAAKF,cAAZ,CACD,CAFD;;OAOAE,2CACE,MAAO,MAAK/iC,MAAZ,CACD,CAFD;;;;OASe+iC,2BAAf,SAA6B12C,MAA7B,CAAgD,CAC9C,GAAIA,MAAM,CAAC8W,QAAP,EAAJ,CAAuB,CACrB,GAAMM,UAAS,CAAGpX,MAAM,CAACqX,iBAAP,EAAlB,CACA,MAAOrX,OAAM,CAACmV,QAAP,GAAkB8hC,QAAlB,CAA2Bj3C,MAAM,CAAC+W,kBAAP,EAA3B,CAAwDK,SAAxD,CAAP,CACD,CAHD,IAGO,CACL,MAAOpX,OAAM,CAACmV,QAAP,GAAkBhE,OAAlB,EAAP,CACD,CACF,CAPc;;;;OAcAulC,yBAAf,SAA2B12C,MAA3B,CAA8C,CAC5C,GAAIA,MAAM,CAACgX,MAAP,EAAJ,CAAqB,CACnB,GAAMM,QAAO,CAAGtX,MAAM,CAACuX,eAAP,EAAhB,CACA,MAAOvX,OAAM,CAACmV,QAAP,GAAkB8hC,QAAlB,CAA2Bj3C,MAAM,CAACiX,gBAAP,EAA3B,CAAsDK,OAAtD,CAAP,CACD,CAHD,IAGO,CACL,MAAOtX,OAAM,CAACmV,QAAP,GAAkB3D,OAAlB,EAAP,CACD,CACF,CAPc,CAQjB,oBAAC,CA5KD,GClCA;;;;;;;;;;;;;;;IA8BA;;;;;GAMA;;OAgCE,uBAAYxR,MAAZ,CAA+B,CAC7B,KAAKk3C,aAAL,CAAqB,GAAIR,aAAJ,CAAiB12C,MAAjB,CAArB,CACA,KAAK2T,MAAL,CAAc3T,MAAM,CAACmV,QAAP,EAAd,CACA,KAAKgiC,MAAL,CAAcn3C,MAAM,CAACo3C,QAAP,EAAd,CACA,KAAKC,QAAL,CAAgB,CAACr3C,MAAM,CAACs3C,cAAP,EAAjB,CACD;;OAKDC,6CACElkC,IADF,CAEEthB,GAFF,CAGEysB,QAHF,CAIE2C,YAJF,CAKE/B,MALF,CAMEgC,oBANF,CAMqD,CAEnD,GAAI,CAAC,KAAK81B,aAAL,CAAmB9sB,OAAnB,CAA2B,GAAIpkB,UAAJ,CAAcjU,GAAd,CAAmBysB,QAAnB,CAA3B,CAAL,CAA+D,CAC7DA,QAAQ,CAAG7O,YAAY,CAAChI,UAAxB,CACD,CACD,GAAI0L,IAAI,CAACxD,iBAAL,CAAuB9d,GAAvB,EAA4BkX,MAA5B,CAAmCuV,QAAnC,CAAJ,CAAkD;AAEhD,MAAOnL,KAAP,CACD,CAHD,IAGO,IAAIA,IAAI,CAACc,WAAL,GAAqB,KAAKgjC,MAA9B,CAAsC,CAC3C,MAAO,MAAKD,aAAL,CACJ/wB,gBADI,GAEJhe,WAFI,CAGHkL,IAHG,CAIHthB,GAJG,CAKHysB,QALG,CAMH2C,YANG,CAOH/B,MAPG,CAQHgC,oBARG,CAAP,CAUD,CAXM,IAWA,CACL,MAAO,MAAKo2B,qBAAL,CACLnkC,IADK,CAELthB,GAFK,CAGLysB,QAHK,CAILY,MAJK,CAKLgC,oBALK,CAAP,CAOD,CACF,CAlCD;;OAuCAm2B,gDACE92B,OADF,CAEEmB,OAFF,CAGER,oBAHF,CAGqD,CAEnD,GAAId,SAAJ,CACA,GAAIsB,OAAO,CAACxa,UAAR,IAAwBwa,OAAO,CAACva,OAAR,EAA5B,CAA+C;AAE7CiZ,QAAQ,CAAG3Q,YAAY,CAAChI,UAAb,CAAwBga,SAAxB,CAAkC,KAAKhO,MAAvC,CAAX,CACD,CAHD,IAGO,CACL,GACE,KAAKwjC,MAAL,CAAc,CAAd,CAAkBv1B,OAAO,CAACzN,WAAR,EAAlB,EACAyN,OAAO,CAACP,SAAR,CAAkB,KAAK1N,MAAvB,CAFF,CAGE;AAEA2M,QAAQ,CAAG3Q,YAAY,CAAChI,UAAb,CAAwBga,SAAxB,CAAkC,KAAKhO,MAAvC,CAAX;AAEA,GAAItC,SAAQ,OAAZ,CACA,GAAI,KAAKgmC,QAAT,CAAmB,CACjBhmC,QAAQ,CAAIuQ,OAAwB,CAACrQ,sBAAzB,CACV,KAAK2lC,aAAL,CAAmBH,UAAnB,EADU,CAEV,KAAKpjC,MAFK,CAAZ,CAID,CALD,IAKO,CACLtC,QAAQ,CAAIuQ,OAAwB,CAAC1Q,eAAzB,CACV,KAAKgmC,aAAL,CAAmBJ,YAAnB,EADU,CAEV,KAAKnjC,MAFK,CAAZ,CAID,CACD,GAAItJ,MAAK,CAAG,CAAZ,CACA,MAAOgH,QAAQ,CAAComC,OAAT,IAAsBptC,KAAK,CAAG,KAAK8sC,MAA1C,CAAkD,CAChD,GAAMzoC,KAAI,CAAG2C,QAAQ,CAAC1C,OAAT,EAAb,CACA,GAAI+oC,QAAO,OAAX,CACA,GAAI,KAAKL,QAAT,CAAmB,CACjBK,OAAO,CACL,KAAK/jC,MAAL,CAAYzN,OAAZ,CAAoB,KAAKgxC,aAAL,CAAmBJ,YAAnB,EAApB,CAAuDpoC,IAAvD,GAAgE,CADlE,CAED,CAHD,IAGO,CACLgpC,OAAO,CACL,KAAK/jC,MAAL,CAAYzN,OAAZ,CAAoBwI,IAApB,CAA0B,KAAKwoC,aAAL,CAAmBH,UAAnB,EAA1B,GAA8D,CADhE,CAED,CACD,GAAIW,OAAJ,CAAa,CACXp3B,QAAQ,CAAGA,QAAQ,CAACrY,oBAAT,CAA8ByG,IAAI,CAAClc,IAAnC,CAAyCkc,IAAI,CAAC3I,IAA9C,CAAX,CACAsE,KAAK,GACN,CAHD,IAGO;AAEL,MACD,CACF,CACF,CAtCD,IAsCO;AAELiW,QAAQ,CAAGsB,OAAO,CAACD,SAAR,CAAkB,KAAKhO,MAAvB,CAAX;AAEA2M,QAAQ,CAAGA,QAAQ,CAACtY,cAAT,CACT2H,YAAY,CAAChI,UADJ,CAAX,CAGA,GAAIyJ,UAAS,OAAb,CACA,GAAIK,QAAO,OAAX,CACA,GAAIlU,IAAG,OAAP,CACA,GAAI8T,SAAQ,OAAZ,CACA,GAAI,KAAKgmC,QAAT,CAAmB,CACjBhmC,QAAQ,CAAGiP,QAAQ,CAACq3B,kBAAT,CAA4B,KAAKhkC,MAAjC,CAAX,CACAvC,SAAS,CAAG,KAAK8lC,aAAL,CAAmBH,UAAnB,EAAZ,CACAtlC,OAAO,CAAG,KAAKylC,aAAL,CAAmBJ,YAAnB,EAAV,CACA,GAAMc,eAAY,CAAG,KAAKjkC,MAAL,CAAY7E,UAAZ,EAArB,CACAvR,GAAG,CAAG,SAAC7F,CAAD,CAAeC,CAAf,CAA2B,CAAK,qBAAY,CAACA,CAAD,CAAID,CAAJ,CAAZ,CAAkB,CAAxD,CACD,CAND,IAMO,CACL2Z,QAAQ,CAAGiP,QAAQ,CAAC9R,WAAT,CAAqB,KAAKmF,MAA1B,CAAX,CACAvC,SAAS,CAAG,KAAK8lC,aAAL,CAAmBJ,YAAnB,EAAZ,CACArlC,OAAO,CAAG,KAAKylC,aAAL,CAAmBH,UAAnB,EAAV,CACAx5C,GAAG,CAAG,KAAKoW,MAAL,CAAY7E,UAAZ,EAAN,CACD,CAED,GAAIzE,MAAK,CAAG,CAAZ,CACA,GAAIwtC,eAAc,CAAG,KAArB,CACA,MAAOxmC,QAAQ,CAAComC,OAAT,EAAP,CAA2B,CACzB,GAAM/oC,KAAI,CAAG2C,QAAQ,CAAC1C,OAAT,EAAb,CACA,GAAI,CAACkpC,cAAD,EAAmBt6C,GAAG,CAAC6T,SAAD,CAAY1C,IAAZ,CAAH,EAAwB,CAA/C,CAAkD;AAEhDmpC,cAAc,CAAG,IAAjB,CACD,CACD,GAAMH,QAAO,CACXG,cAAc,EAAIxtC,KAAK,CAAG,KAAK8sC,MAA/B,EAAyC55C,GAAG,CAACmR,IAAD,CAAO+C,OAAP,CAAH,EAAsB,CADjE,CAEA,GAAIimC,OAAJ,CAAa,CACXrtC,KAAK,GACN,CAFD,IAEO,CACLiW,QAAQ,CAAGA,QAAQ,CAACrY,oBAAT,CACTyG,IAAI,CAAClc,IADI,CAETmd,YAAY,CAAChI,UAFJ,CAAX,CAID,CACF,CACF,CACF,CACD,MAAO,MAAKuvC,aAAL,CACJ/wB,gBADI,GAEJd,cAFI,CAEW5E,OAFX,CAEoBH,QAFpB,CAE8Bc,oBAF9B,CAAP,CAGD,CAhGD;;OAqGAm2B,gDAAe92B,OAAf,CAA8BvQ,WAA9B,CAA+C;AAE7C,MAAOuQ,QAAP,CACD,CAHD;;OAQA82B,gDACE,MAAO,KAAP,CACD,CAFD;;OAOAA,oDACE,MAAO,MAAKL,aAAL,CAAmB/wB,gBAAnB,EAAP,CACD,CAFD;;OAOAoxB,4CACE,MAAO,MAAK5jC,MAAZ,CACD,CAFD;;;;;;;;OAaQ4jC,8CAAR,SACElkC,IADF,CAEE+I,QAFF,CAGE8B,SAHF,CAIEkB,MAJF,CAKE04B,iBALF,CAKkD;AAGhD,GAAIv6C,IAAJ,CACA,GAAI,KAAK85C,QAAT,CAAmB,CACjB,GAAMU,WAAQ,CAAG,KAAKpkC,MAAL,CAAY7E,UAAZ,EAAjB,CACAvR,GAAG,CAAG,SAAC7F,CAAD,CAAeC,CAAf,CAA2B,CAAK,iBAAQ,CAACA,CAAD,CAAID,CAAJ,CAAR,CAAc,CAApD,CACD,CAHD,IAGO,CACL6F,GAAG,CAAG,KAAKoW,MAAL,CAAY7E,UAAZ,EAAN,CACD,CACD,GAAM8Y,cAAa,CAAGvU,IAAtB,CACApe,MAAM,CAAC2yB,aAAa,CAACzT,WAAd,KAAgC,KAAKgjC,MAAtC,CAA8C,EAA9C,CAAN,CACA,GAAMa,kBAAiB,CAAG,GAAIhyC,UAAJ,CAAcoW,QAAd,CAAwB8B,SAAxB,CAA1B,CACA,GAAM+5B,eAAc,CAAG,KAAKZ,QAAL,CACnBzvB,aAAa,CAACswB,aAAd,CAA4B,KAAKvkC,MAAjC,CADmB,CAElBiU,aAAa,CAACuwB,YAAd,CAA2B,KAAKxkC,MAAhC,CAFL,CAGA,GAAM+jC,QAAO,CAAG,KAAKR,aAAL,CAAmB9sB,OAAnB,CAA2B4tB,iBAA3B,CAAhB,CACA,GAAIpwB,aAAa,CAAC5H,QAAd,CAAuB5D,QAAvB,CAAJ,CAAsC,CACpC,GAAMg8B,aAAY,CAAGxwB,aAAa,CAAC/X,iBAAd,CAAgCuM,QAAhC,CAArB,CACA,GAAI4C,UAAS,CAAGI,MAAM,CAACi5B,kBAAP,CACd,KAAK1kC,MADS,CAEdskC,cAFc,CAGd,KAAKZ,QAHS,CAAhB,CAKA,MACEr4B,SAAS,EAAI,IAAb,GACCA,SAAS,CAACxsB,IAAV,GAAmB4pB,QAAnB,EAA+BwL,aAAa,CAAC5H,QAAd,CAAuBhB,SAAS,CAACxsB,IAAjC,CADhC,CADF,CAGE;;;AAIAwsB,SAAS,CAAGI,MAAM,CAACi5B,kBAAP,CACV,KAAK1kC,MADK,CAEVqL,SAFU,CAGV,KAAKq4B,QAHK,CAAZ,CAKD,CACD,GAAMiB,YAAW,CACft5B,SAAS,EAAI,IAAb,CAAoB,CAApB,CAAwBzhB,GAAG,CAACyhB,SAAD,CAAYg5B,iBAAZ,CAD7B,CAEA,GAAMO,gBAAe,CACnBb,OAAO,EAAI,CAACx5B,SAAS,CAAC7W,OAAV,EAAZ,EAAmCixC,WAAW,EAAI,CADpD,CAEA,GAAIC,eAAJ,CAAqB,CACnB,GAAIT,iBAAiB,EAAI,IAAzB,CAA+B,CAC7BA,iBAAiB,CAACv2B,gBAAlB,CACEb,MAAM,CAACgB,kBAAP,CAA0BtF,QAA1B,CAAoC8B,SAApC,CAA+Ck6B,YAA/C,CADF,EAGD,CACD,MAAOxwB,cAAa,CAAC3f,oBAAd,CAAmCmU,QAAnC,CAA6C8B,SAA7C,CAAP,CACD,CAPD,IAOO,CACL,GAAI45B,iBAAiB,EAAI,IAAzB,CAA+B,CAC7BA,iBAAiB,CAACv2B,gBAAlB,CACEb,MAAM,CAACc,kBAAP,CAA0BpF,QAA1B,CAAoCg8B,YAApC,CADF,EAGD,CACD,GAAMpzB,cAAa,CAAG4C,aAAa,CAAC3f,oBAAd,CACpBmU,QADoB,CAEpBzM,YAAY,CAAChI,UAFO,CAAtB,CAIA,GAAM6wC,iBAAgB,CACpBx5B,SAAS,EAAI,IAAb,EAAqB,KAAKk4B,aAAL,CAAmB9sB,OAAnB,CAA2BpL,SAA3B,CADvB,CAEA,GAAIw5B,gBAAJ,CAAsB,CACpB,GAAIV,iBAAiB,EAAI,IAAzB,CAA+B,CAC7BA,iBAAiB,CAACv2B,gBAAlB,CACEb,MAAM,CAACe,gBAAP,CAAwBzC,SAAS,CAACxsB,IAAlC,CAAwCwsB,SAAS,CAACjZ,IAAlD,CADF,EAGD,CACD,MAAOif,cAAa,CAAC/c,oBAAd,CACL+W,SAAS,CAACxsB,IADL,CAELwsB,SAAS,CAACjZ,IAFL,CAAP,CAID,CAVD,IAUO,CACL,MAAOif,cAAP,CACD,CACF,CACF,CAzDD,IAyDO,IAAI9G,SAAS,CAAC7W,OAAV,EAAJ,CAAyB;AAE9B,MAAOgM,KAAP,CACD,CAHM,IAGA,IAAIqkC,OAAJ,CAAa,CAClB,GAAIn6C,GAAG,CAAC06C,cAAD,CAAiBD,iBAAjB,CAAH,EAA0C,CAA9C,CAAiD,CAC/C,GAAIF,iBAAiB,EAAI,IAAzB,CAA+B,CAC7BA,iBAAiB,CAACv2B,gBAAlB,CACEb,MAAM,CAACc,kBAAP,CAA0By2B,cAAc,CAACzlD,IAAzC,CAA+CylD,cAAc,CAAClyC,IAA9D,CADF,EAGA+xC,iBAAiB,CAACv2B,gBAAlB,CACEb,MAAM,CAACe,gBAAP,CAAwBrF,QAAxB,CAAkC8B,SAAlC,CADF,EAGD,CACD,MAAO0J,cAAa,CACjB3f,oBADI,CACiBmU,QADjB,CAC2B8B,SAD3B,EAEJjW,oBAFI,CAEiBgwC,cAAc,CAACzlD,IAFhC,CAEsCmd,YAAY,CAAChI,UAFnD,CAAP,CAGD,CAZD,IAYO,CACL,MAAO0L,KAAP,CACD,CACF,CAhBM,IAgBA,CACL,MAAOA,KAAP,CACD,CACF,CArGO,CAsGV,qBAAC,CA/TD,GCpCA;;;;;;;;;;;;;;;IA6BA;;;;;GAMA,+DACU,eAAY,KAAZ,CACA,eAAY,KAAZ,CACA,mBAAgB,KAAhB,CACA,aAAU,KAAV,CACA,iBAAc,KAAd,CAEA,YAAS,CAAT,CACA,eAAY,EAAZ,CACA,sBAAmC,IAAnC,CACA,qBAAkB,EAAlB,CACA,oBAAiC,IAAjC,CACA,mBAAgB,EAAhB,CAEA,YAAS5J,cAAT,CAwXT;;OAzUCgvC,0CACE,MAAO,MAAKC,SAAZ,CACD,CAFD;;OAOAD,gDACE,GAAI,KAAKE,SAAL,GAAmB,EAAvB,CAA2B;;;;AAKzB,MAAO,MAAKD,SAAZ,CACD,CAND,IAMO,CACL,MACE,MAAKC,SAAL,GAAmBF,WAAW,CAACG,wBAAZ,CAAqCC,cAD1D,CAGD,CACF,CAZD;;;OAkBAJ,oDACExjD,MAAM,CAAC,KAAKyjD,SAAN,CAAiB,kCAAjB,CAAN,CACA,MAAO,MAAKI,gBAAZ,CACD,CAHD;;;;OAUAL,mDACExjD,MAAM,CAAC,KAAKyjD,SAAN,CAAiB,kCAAjB,CAAN,CACA,GAAI,KAAKK,aAAT,CAAwB,CACtB,MAAO,MAAKC,eAAZ,CACD,CAFD,IAEO,CACL,MAAOzhD,SAAP,CACD,CACF,CAPD;;OAYAkhD,wCACE,MAAO,MAAKQ,OAAZ,CACD,CAFD;;;OAQAR,kDACExjD,MAAM,CAAC,KAAKgkD,OAAN,CAAe,gCAAf,CAAN,CACA,MAAO,MAAKC,cAAZ,CACD,CAHD;;;;OAUAT,iDACExjD,MAAM,CAAC,KAAKgkD,OAAN,CAAe,gCAAf,CAAN,CACA,GAAI,KAAKE,WAAT,CAAsB,CACpB,MAAO,MAAKC,aAAZ,CACD,CAFD,IAEO,CACL,MAAO5hD,SAAP,CACD,CACF,CAPD;;OAYAihD,0CACE,MAAO,MAAKY,SAAZ,CACD,CAFD;;OAOAZ,kDACE,MAAO,MAAKY,SAAL,EAAkB,KAAKV,SAAL,GAAmB,EAA5C,CACD,CAFD;;;OAQAF,0CACExjD,MAAM,CAAC,KAAKokD,SAAN,CAAiB,kCAAjB,CAAN,CACA,MAAO,MAAKlC,MAAZ,CACD,CAHD;;OAQAsB,0CACE,MAAO,MAAK9kC,MAAZ,CACD,CAFD;;;OAQQ8kC,4BAAR,WACE,GAAM9tC,KAAI,CAAG,GAAI8tC,YAAJ,EAAb,CACA9tC,IAAI,CAAC0uC,SAAL,CAAiB,KAAKA,SAAtB,CACA1uC,IAAI,CAACwsC,MAAL,CAAc,KAAKA,MAAnB,CACAxsC,IAAI,CAAC+tC,SAAL,CAAiB,KAAKA,SAAtB,CACA/tC,IAAI,CAACmuC,gBAAL,CAAwB,KAAKA,gBAA7B,CACAnuC,IAAI,CAACouC,aAAL,CAAqB,KAAKA,aAA1B,CACApuC,IAAI,CAACquC,eAAL,CAAuB,KAAKA,eAA5B,CACAruC,IAAI,CAACsuC,OAAL,CAAe,KAAKA,OAApB,CACAtuC,IAAI,CAACuuC,cAAL,CAAsB,KAAKA,cAA3B,CACAvuC,IAAI,CAACwuC,WAAL,CAAmB,KAAKA,WAAxB,CACAxuC,IAAI,CAACyuC,aAAL,CAAqB,KAAKA,aAA1B,CACAzuC,IAAI,CAACgJ,MAAL,CAAc,KAAKA,MAAnB,CACAhJ,IAAI,CAACguC,SAAL,CAAiB,KAAKA,SAAtB,CACA,MAAOhuC,KAAP,CACD,CAfO;;;OAqBR8tC,qCAAMa,QAAN,CAAsB,CACpB,GAAM9/B,UAAS,CAAG,KAAK+/B,KAAL,EAAlB,CACA//B,SAAS,CAAC6/B,SAAV,CAAsB,IAAtB,CACA7/B,SAAS,CAAC29B,MAAV,CAAmBmC,QAAnB,CACA9/B,SAAS,CAACm/B,SAAV,CAAsB,EAAtB,CACA,MAAOn/B,UAAP,CACD,CAND;;;OAYAi/B,4CAAaa,QAAb,CAA6B,CAC3B,GAAM9/B,UAAS,CAAG,KAAK+/B,KAAL,EAAlB,CACA//B,SAAS,CAAC6/B,SAAV,CAAsB,IAAtB,CACA7/B,SAAS,CAAC29B,MAAV,CAAmBmC,QAAnB,CACA9/B,SAAS,CAACm/B,SAAV,CAAsBF,WAAW,CAACG,wBAAZ,CAAqCC,cAA3D,CACA,MAAOr/B,UAAP,CACD,CAND;;;OAYAi/B,2CAAYa,QAAZ,CAA4B,CAC1B,GAAM9/B,UAAS,CAAG,KAAK+/B,KAAL,EAAlB,CACA//B,SAAS,CAAC6/B,SAAV,CAAsB,IAAtB,CACA7/B,SAAS,CAAC29B,MAAV,CAAmBmC,QAAnB,CACA9/B,SAAS,CAACm/B,SAAV,CAAsBF,WAAW,CAACG,wBAAZ,CAAqCY,eAA3D,CACA,MAAOhgC,UAAP,CACD,CAND;;;;OAaAi/B,uCAAQ5xC,UAAR,CAA6B9U,GAA7B,CAAgD,CAC9C,GAAMynB,UAAS,CAAG,KAAK+/B,KAAL,EAAlB,CACA//B,SAAS,CAACk/B,SAAV,CAAsB,IAAtB,CACA,GAAI7xC,UAAU,GAAKlE,SAAnB,CAA8B,CAC5BkE,UAAU,CAAG,IAAb,CACD,CACD2S,SAAS,CAACs/B,gBAAV,CAA6BjyC,UAA7B,CACA,GAAI9U,GAAG,EAAI,IAAX,CAAiB,CACfynB,SAAS,CAACu/B,aAAV,CAA0B,IAA1B,CACAv/B,SAAS,CAACw/B,eAAV,CAA4BjnD,GAA5B,CACD,CAHD,IAGO,CACLynB,SAAS,CAACu/B,aAAV,CAA0B,KAA1B,CACAv/B,SAAS,CAACw/B,eAAV,CAA4B,EAA5B,CACD,CACD,MAAOx/B,UAAP,CACD,CAfD;;;;OAsBAi/B,qCAAM5xC,UAAN,CAA2B9U,GAA3B,CAA8C,CAC5C,GAAMynB,UAAS,CAAG,KAAK+/B,KAAL,EAAlB,CACA//B,SAAS,CAACy/B,OAAV,CAAoB,IAApB,CACA,GAAIpyC,UAAU,GAAKlE,SAAnB,CAA8B,CAC5BkE,UAAU,CAAG,IAAb,CACD,CACD2S,SAAS,CAAC0/B,cAAV,CAA2BryC,UAA3B,CACA,GAAI9U,GAAG,GAAK4Q,SAAZ,CAAuB,CACrB6W,SAAS,CAAC2/B,WAAV,CAAwB,IAAxB,CACA3/B,SAAS,CAAC4/B,aAAV,CAA0BrnD,GAA1B,CACD,CAHD,IAGO,CACLynB,SAAS,CAAC2/B,WAAV,CAAwB,KAAxB,CACA3/B,SAAS,CAAC4/B,aAAV,CAA0B,EAA1B,CACD,CACD,MAAO5/B,UAAP,CACD,CAfD;;;OAqBAi/B,uCAAQrwC,KAAR,CAAoB,CAClB,GAAMoR,UAAS,CAAG,KAAK+/B,KAAL,EAAlB,CACA//B,SAAS,CAAC7F,MAAV,CAAmBvL,KAAnB,CACA,MAAOoR,UAAP,CACD,CAJD;;OASAi/B,gDACE,GAAMgB,wBAAuB,CAAGhB,WAAW,CAACG,wBAA5C,CACA,GAAM3gD,IAAG,CAA6B,EAAtC,CACA,GAAI,KAAKygD,SAAT,CAAoB,CAClBzgD,GAAG,CAACwhD,uBAAuB,CAACC,iBAAzB,CAAH,CAAiD,KAAKZ,gBAAtD,CACA,GAAI,KAAKC,aAAT,CAAwB,CACtB9gD,GAAG,CAACwhD,uBAAuB,CAACE,gBAAzB,CAAH,CAAgD,KAAKX,eAArD,CACD,CACF,CACD,GAAI,KAAKC,OAAT,CAAkB,CAChBhhD,GAAG,CAACwhD,uBAAuB,CAACG,eAAzB,CAAH,CAA+C,KAAKV,cAApD,CACA,GAAI,KAAKC,WAAT,CAAsB,CACpBlhD,GAAG,CAACwhD,uBAAuB,CAACI,cAAzB,CAAH,CAA8C,KAAKT,aAAnD,CACD,CACF,CACD,GAAI,KAAKC,SAAT,CAAoB,CAClBphD,GAAG,CAACwhD,uBAAuB,CAACK,KAAzB,CAAH,CAAqC,KAAK3C,MAA1C,CACA,GAAI4C,SAAQ,CAAG,KAAKpB,SAApB,CACA,GAAIoB,QAAQ,GAAK,EAAjB,CAAqB,CACnB,GAAI,KAAKzC,cAAL,EAAJ,CAA2B,CACzByC,QAAQ,CAAGN,uBAAuB,CAACZ,cAAnC,CACD,CAFD,IAEO,CACLkB,QAAQ,CAAGN,uBAAuB,CAACD,eAAnC,CACD,CACF,CACDvhD,GAAG,CAACwhD,uBAAuB,CAACO,SAAzB,CAAH,CAAyCD,QAAzC,CACD;AAED,GAAI,KAAKpmC,MAAL,GAAgBlK,cAApB,CAAoC,CAClCxR,GAAG,CAACwhD,uBAAuB,CAACQ,KAAzB,CAAH,CAAqC,KAAKtmC,MAAL,CAAYjhB,QAAZ,EAArC,CACD,CACD,MAAOuF,IAAP,CACD,CAhCD;;OAqCAwgD,8CACE,MAAO,EAAE,KAAKC,SAAL,EAAkB,KAAKO,OAAvB,EAAkC,KAAKI,SAAzC,CAAP,CACD,CAFD;;OAOAZ,2CACE,MAAO,MAAK7uB,YAAL,IAAuB,KAAKjW,MAAL,GAAgBlK,cAA9C,CACD,CAFD;;OAOAgvC,+CACE,GAAI,KAAK7uB,YAAL,EAAJ,CAAyB,CACvB,MAAO,IAAI1I,cAAJ,CAAkB,KAAK/L,QAAL,EAAlB,CAAP,CACD,CAFD,IAEO,IAAI,KAAKqC,QAAL,EAAJ,CAAqB,CAC1B,MAAO,IAAI+/B,cAAJ,CAAkB,IAAlB,CAAP,CACD,CAFM,IAEA,CACL,MAAO,IAAIb,aAAJ,CAAiB,IAAjB,CAAP,CACD,CACF,CARD;;;;OAeA+B,6DACE,GAAMyB,eAAc,CAAGzB,WAAW,CAAC0B,qBAAnC,CACA,GAAMC,GAAE,CAAqC,EAA7C,CAEA,GAAI,KAAKrmB,SAAL,EAAJ,CAAsB,CACpB,MAAOqmB,GAAP,CACD,CAED,GAAI3gC,QAAJ,CACA,GAAI,KAAK9F,MAAL,GAAgBlK,cAApB,CAAoC,CAClCgQ,OAAO,CAAGygC,cAAc,CAACzwC,cAAzB,CACD,CAFD,IAEO,IAAI,KAAKkK,MAAL,GAAgBT,WAApB,CAAiC,CACtCuG,OAAO,CAAGygC,cAAc,CAAChnC,WAAzB,CACD,CAFM,IAEA,IAAI,KAAKS,MAAL,GAAgB7M,SAApB,CAA+B,CACpC2S,OAAO,CAAGygC,cAAc,CAACpzC,SAAzB,CACD,CAFM,IAEA,CACL7R,MAAM,CAAC,KAAK0e,MAAL,WAAuBP,UAAxB,CAAmC,0BAAnC,CAAN,CACAqG,OAAO,CAAG,KAAK9F,MAAL,CAAYjhB,QAAZ,EAAV,CACD,CACD0nD,EAAE,CAACF,cAAc,CAACG,QAAhB,CAAF,CAA8BjoD,SAAS,CAACqnB,OAAD,CAAvC,CAEA,GAAI,KAAKi/B,SAAT,CAAoB,CAClB0B,EAAE,CAACF,cAAc,CAACI,QAAhB,CAAF,CAA8BloD,SAAS,CAAC,KAAK0mD,gBAAN,CAAvC,CACA,GAAI,KAAKC,aAAT,CAAwB,CACtBqB,EAAE,CAACF,cAAc,CAACI,QAAhB,CAAF,EAA+B,IAAMloD,SAAS,CAAC,KAAK4mD,eAAN,CAA9C,CACD,CACF,CAED,GAAI,KAAKC,OAAT,CAAkB,CAChBmB,EAAE,CAACF,cAAc,CAACK,MAAhB,CAAF,CAA4BnoD,SAAS,CAAC,KAAK8mD,cAAN,CAArC,CACA,GAAI,KAAKC,WAAT,CAAsB,CACpBiB,EAAE,CAACF,cAAc,CAACK,MAAhB,CAAF,EAA6B,IAAMnoD,SAAS,CAAC,KAAKgnD,aAAN,CAA5C,CACD,CACF,CAED,GAAI,KAAKC,SAAT,CAAoB,CAClB,GAAI,KAAK/B,cAAL,EAAJ,CAA2B,CACzB8C,EAAE,CAACF,cAAc,CAACM,cAAhB,CAAF,CAAoC,KAAKrD,MAAzC,CACD,CAFD,IAEO,CACLiD,EAAE,CAACF,cAAc,CAACO,aAAhB,CAAF,CAAmC,KAAKtD,MAAxC,CACD,CACF,CAED,MAAOiD,GAAP,CACD,CA5CD;;;;;OAnUwB3B,qCAA2B,CACjDiB,iBAAiB,CAAE,IAD8B,CAEjDC,gBAAgB,CAAE,IAF+B,CAGjDC,eAAe,CAAE,IAHgC,CAIjDC,cAAc,CAAE,IAJiC,CAKjDC,KAAK,CAAE,GAL0C,CAMjDE,SAAS,CAAE,IANsC,CAOjDnB,cAAc,CAAE,GAPiC,CAQjDW,eAAe,CAAE,GARgC,CASjDS,KAAK,CAAE,GAT0C,CAA3B;;;;;OAkBAxB,kCAAwB,CAC9C4B,QAAQ,CAAE,SADoC,CAE9C5wC,cAAc,CAAE,WAF8B,CAG9CyJ,WAAW,CAAE,QAHiC,CAI9CpM,SAAS,CAAE,MAJmC,CAK9CwzC,QAAQ,CAAE,SALoC,CAM9CC,MAAM,CAAE,OANsC,CAO9CC,cAAc,CAAE,cAP8B,CAQ9CC,aAAa,CAAE,aAR+B,CAAxB;;;;OAgBRhC,oBAAU,GAAIA,YAAJ,EAAV,CA8UlB,mBAtYA,ICnCA;;;;;;;;;;;;;;;+CA6C+BhyC;;;;;;;;;;OAe7B,mBAAY+P,IAAZ,CAAwBzb,IAAxB,CAAkC,CAAlC,eACE,GAAI,EAAEyb,IAAI,WAAY47B,KAAlB,CAAJ,CAA6B,CAC3B,KAAM,IAAIr8C,MAAJ,CACJ,2DADI,CAAN,CAGD;AAGDqZ,uBAAMoH,IAAN,CAAYzb,IAAZ,CAAkB09C,WAAW,CAACiC,OAA9B,CAAuC,KAAvC,GAA6C,IAA7C,cACD,yBAGDC,sCACEr2C,gBAAgB,CAAC,eAAD,CAAkB,CAAlB,CAAqB,CAArB,CAAwBC,SAAS,CAAChQ,MAAlC,CAAhB,CAEA,GAAI,KAAKwG,IAAL,CAAUsM,OAAV,EAAJ,CAAyB,CACvB,MAAO,KAAP,CACD,CAFD,IAEO,CACL,MAAO,MAAKtM,IAAL,CAAUyI,OAAV,EAAP,CACD,CACF,CARD;;;OAcAm3C,mCAAMv+C,UAAN,CAA+B,CAC7BkI,gBAAgB,CAAC,iBAAD,CAAoB,CAApB,CAAuB,CAAvB,CAA0BC,SAAS,CAAChQ,MAApC,CAAhB,CACA,GAAI,MAAO6H,WAAP,GAAsB,QAA1B,CAAoC,CAClCA,UAAU,CAAGE,MAAM,CAACF,UAAD,CAAnB,CACD,CAFD,IAEO,IAAI,EAAEA,UAAU,WAAYD,KAAxB,CAAJ,CAAmC,CACxC,GAAI,KAAKpB,IAAL,CAAUgC,QAAV,KAAyB,IAA7B,CAAmC,CACjC+G,sBAAsB,CAAC,iBAAD,CAAoB,CAApB,CAAuB1H,UAAvB,CAAmC,KAAnC,CAAtB,CACD,CAFD,IAEO,CACLyH,kBAAkB,CAAC,iBAAD,CAAoB,CAApB,CAAuBzH,UAAvB,CAAmC,KAAnC,CAAlB,CACD,CACF,CAED,MAAO,IAAIu+C,UAAJ,CAAc,KAAKnkC,IAAnB,CAAyB,KAAKzb,IAAL,CAAUmD,KAAV,CAAgB9B,UAAhB,CAAzB,CAAP,CACD,CAbD,4BAgBAu+C,yCACEr2C,gBAAgB,CAAC,kBAAD,CAAqB,CAArB,CAAwB,CAAxB,CAA2BC,SAAS,CAAChQ,MAArC,CAAhB,CAEA,GAAMqmD,WAAU,CAAG,KAAK7/C,IAAL,CAAU0rB,MAAV,EAAnB,CACA,MAAOm0B,WAAU,GAAK,IAAf,CAAsB,IAAtB,CAA6B,GAAID,UAAJ,CAAc,KAAKnkC,IAAnB,CAAyBokC,UAAzB,CAApC,CACD,CALD,4BAQAD,uCACEr2C,gBAAgB,CAAC,gBAAD,CAAmB,CAAnB,CAAsB,CAAtB,CAAyBC,SAAS,CAAChQ,MAAnC,CAAhB,CAEA,GAAIigB,IAAG,CAAc,IAArB,CACA,MAAOA,GAAG,CAACC,SAAJ,KAAoB,IAA3B,CAAiC,CAC/BD,GAAG,CAAGA,GAAG,CAACC,SAAJ,EAAN,CACD,CACD,MAAOD,IAAP,CACD,CARD,2BAWAmmC,4CACE,MAAO,MAAKnkC,IAAL,CAAUqkC,QAAjB,CACD,CAFD;;;;OASAF,iCACEjG,MADF,CAEErwC,UAFF,CAEwC,CAEtCC,gBAAgB,CAAC,eAAD,CAAkB,CAAlB,CAAqB,CAArB,CAAwBC,SAAS,CAAChQ,MAAlC,CAAhB,CACAwP,oBAAoB,CAAC,eAAD,CAAkB,KAAKhJ,IAAvB,CAApB,CACAwH,uBAAuB,CAAC,eAAD,CAAkB,CAAlB,CAAqBmyC,MAArB,CAA6B,KAAK35C,IAAlC,CAAwC,KAAxC,CAAvB,CACAyJ,gBAAgB,CAAC,eAAD,CAAkB,CAAlB,CAAqBH,UAArB,CAAiC,IAAjC,CAAhB,CAEA,GAAMI,SAAQ,CAAG,GAAIC,SAAJ,EAAjB,CACA,KAAK8R,IAAL,CAAUskC,eAAV,CACE,KAAK//C,IADP,CAEE25C,MAFF,cAGgB,IAHhB,CAIEjwC,QAAQ,CAACG,YAAT,CAAsBP,UAAtB,CAJF,EAMA,MAAOI,SAAQ,CAACI,OAAhB,CACD,CAjBD;;;;OAwBA81C,oCACE31C,aADF,CAEEX,UAFF,CAEwC,CAEtCC,gBAAgB,CAAC,kBAAD,CAAqB,CAArB,CAAwB,CAAxB,CAA2BC,SAAS,CAAChQ,MAArC,CAAhB,CACAwP,oBAAoB,CAAC,kBAAD,CAAqB,KAAKhJ,IAA1B,CAApB,CAEA,GAAItG,KAAK,CAACC,OAAN,CAAcsQ,aAAd,CAAJ,CAAkC,CAChC,GAAMC,iBAAgB,CAA6B,EAAnD,CACA,IAAK,GAAI3Q,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG0Q,aAAa,CAACzQ,MAAlC,CAA0C,EAAED,CAA5C,CAA+C,CAC7C2Q,gBAAgB,CAAC,GAAK3Q,CAAN,CAAhB,CAA2B0Q,aAAa,CAAC1Q,CAAD,CAAxC,CACD,CACD0Q,aAAa,CAAGC,gBAAhB,CACAjP,IAAI,CACF,wDACE,2DADF,CAEE,uDAFF,CAGE,mCAJA,CAAJ,CAMD,CACDuN,4BAA4B,CAC1B,kBAD0B,CAE1B,CAF0B,CAG1ByB,aAH0B,CAI1B,KAAKjK,IAJqB,CAK1B,KAL0B,CAA5B,CAOAyJ,gBAAgB,CAAC,kBAAD,CAAqB,CAArB,CAAwBH,UAAxB,CAAoC,IAApC,CAAhB,CACA,GAAMI,SAAQ,CAAG,GAAIC,SAAJ,EAAjB,CACA,KAAK8R,IAAL,CAAU1iB,MAAV,CACE,KAAKiH,IADP,CAEEiK,aAFF,CAGEP,QAAQ,CAACG,YAAT,CAAsBP,UAAtB,CAHF,EAKA,MAAOI,SAAQ,CAACI,OAAhB,CACD,CAnCD;;;;;OA2CA81C,6CACEjG,MADF,CAEExkC,WAFF,CAGE7L,UAHF,CAGwC,CAEtCC,gBAAgB,CAAC,2BAAD,CAA8B,CAA9B,CAAiC,CAAjC,CAAoCC,SAAS,CAAChQ,MAA9C,CAAhB,CACAwP,oBAAoB,CAAC,2BAAD,CAA8B,KAAKhJ,IAAnC,CAApB,CACAwH,uBAAuB,CACrB,2BADqB,CAErB,CAFqB,CAGrBmyC,MAHqB,CAIrB,KAAK35C,IAJgB,CAKrB,KALqB,CAAvB,CAOA0I,gBAAgB,CAAC,2BAAD,CAA8B,CAA9B,CAAiCyM,WAAjC,CAA8C,KAA9C,CAAhB,CACA1L,gBAAgB,CAAC,2BAAD,CAA8B,CAA9B,CAAiCH,UAAjC,CAA6C,IAA7C,CAAhB,CAEA,GAAI,KAAK6P,MAAL,KAAkB,SAAlB,EAA+B,KAAKA,MAAL,KAAkB,OAArD,CAA8D,CAC5D,KACE,qCACA,KAAKA,MAAL,EADA,CAEA,yBAHF,CAKD,CAED,GAAMzP,SAAQ,CAAG,GAAIC,SAAJ,EAAjB,CACA,KAAK8R,IAAL,CAAUskC,eAAV,CACE,KAAK//C,IADP,CAEE25C,MAFF,CAGExkC,WAHF,CAIEzL,QAAQ,CAACG,YAAT,CAAsBP,UAAtB,CAJF,EAMA,MAAOI,SAAQ,CAACI,OAAhB,CACD,CAjCD;;;OAuCA81C,oCAAOt2C,UAAP,CAA6C,CAC3CC,gBAAgB,CAAC,kBAAD,CAAqB,CAArB,CAAwB,CAAxB,CAA2BC,SAAS,CAAChQ,MAArC,CAAhB,CACAwP,oBAAoB,CAAC,kBAAD,CAAqB,KAAKhJ,IAA1B,CAApB,CACAyJ,gBAAgB,CAAC,kBAAD,CAAqB,CAArB,CAAwBH,UAAxB,CAAoC,IAApC,CAAhB,CAEA,MAAO,MAAK9O,GAAL,CAAS,IAAT,CAAe8O,UAAf,CAAP,CACD,CAND;;;;;OAcAs2C,yCACEI,iBADF,CAEE12C,UAFF,CAGE22C,YAHF,CAGwB,CAEtB12C,gBAAgB,CAAC,uBAAD,CAA0B,CAA1B,CAA6B,CAA7B,CAAgCC,SAAS,CAAChQ,MAA1C,CAAhB,CACAwP,oBAAoB,CAAC,uBAAD,CAA0B,KAAKhJ,IAA/B,CAApB,CACAyJ,gBAAgB,CAAC,uBAAD,CAA0B,CAA1B,CAA6Bu2C,iBAA7B,CAAgD,KAAhD,CAAhB,CACAv2C,gBAAgB,CAAC,uBAAD,CAA0B,CAA1B,CAA6BH,UAA7B,CAAyC,IAAzC,CAAhB;;AAGAJ,eAAe,CAAC,uBAAD,CAA0B,CAA1B,CAA6B+2C,YAA7B,CAA2C,IAA3C,CAAf,CAEA,GAAI,KAAK9mC,MAAL,KAAkB,SAAlB,EAA+B,KAAKA,MAAL,KAAkB,OAArD,CAA8D,CAC5D,KACE,iCACA,KAAKA,MAAL,EADA,CAEA,yBAHF,CAKD,CAED,GAAI8mC,YAAY,GAAKr4C,SAArB,CAAgC,CAC9Bq4C,YAAY,CAAG,IAAf,CACD,CAED,GAAMv2C,SAAQ,CAAG,GAAIC,SAAJ,EAAjB,CACA,GAAI,MAAOL,WAAP,GAAsB,UAA1B,CAAsC,CACpCI,QAAQ,CAACI,OAAT,CAAiB+T,KAAjB,CAAuB,WAAQ,CAA/B,EACD,CAED,GAAMqiC,gBAAe,CAAG,SACtBplD,KADsB,CAEtBsP,SAFsB,CAGtBC,QAHsB,CAGA,CAEtB,GAAIvP,KAAJ,CAAW,CACT4O,QAAQ,CAACyU,MAAT,CAAgBrjB,KAAhB,EACD,CAFD,IAEO,CACL4O,QAAQ,CAACsU,OAAT,CAAiB,GAAI1T,kBAAJ,CAAsBF,SAAtB,CAAiCC,QAAjC,CAAjB,EACD,CACD,GAAI,MAAOf,WAAP,GAAsB,UAA1B,CAAsC,CACpCA,UAAU,CAACxO,KAAD,CAAQsP,SAAR,CAAmBC,QAAnB,CAAV,CACD,CACF,CAbD,CAcA,KAAKoR,IAAL,CAAU0kC,gBAAV,CACE,KAAKngD,IADP,CAEEggD,iBAFF,CAGEE,eAHF,CAIED,YAJF,EAOA,MAAOv2C,SAAQ,CAACI,OAAhB,CACD,CApDD;;;;OA2DA81C,yCACEr4C,QADF,CAEE+B,UAFF,CAEwC,CAEtCC,gBAAgB,CAAC,uBAAD,CAA0B,CAA1B,CAA6B,CAA7B,CAAgCC,SAAS,CAAChQ,MAA1C,CAAhB,CACAwP,oBAAoB,CAAC,uBAAD,CAA0B,KAAKhJ,IAA/B,CAApB,CACA0I,gBAAgB,CAAC,uBAAD,CAA0B,CAA1B,CAA6BnB,QAA7B,CAAuC,KAAvC,CAAhB,CACAkC,gBAAgB,CAAC,uBAAD,CAA0B,CAA1B,CAA6BH,UAA7B,CAAyC,IAAzC,CAAhB,CAEA,GAAMI,SAAQ,CAAG,GAAIC,SAAJ,EAAjB,CACA,KAAK8R,IAAL,CAAUskC,eAAV,CACE,KAAK//C,IAAL,CAAUmD,KAAV,CAAgB,WAAhB,CADF,CAEEoE,QAFF,CAGE,IAHF,CAIEmC,QAAQ,CAACG,YAAT,CAAsBP,UAAtB,CAJF,EAMA,MAAOI,SAAQ,CAACI,OAAhB,CACD,CAjBD;;;;OAwBA81C,kCAAK3oD,KAAL,CAAsBqS,UAAtB,CAA4D,CAC1DC,gBAAgB,CAAC,gBAAD,CAAmB,CAAnB,CAAsB,CAAtB,CAAyBC,SAAS,CAAChQ,MAAnC,CAAhB,CACAwP,oBAAoB,CAAC,gBAAD,CAAmB,KAAKhJ,IAAxB,CAApB,CACAwH,uBAAuB,CAAC,gBAAD,CAAmB,CAAnB,CAAsBvQ,KAAtB,CAA6B,KAAK+I,IAAlC,CAAwC,IAAxC,CAAvB,CACAyJ,gBAAgB,CAAC,gBAAD,CAAmB,CAAnB,CAAsBH,UAAtB,CAAkC,IAAlC,CAAhB,CAEA,GAAMsB,IAAG,CAAG,KAAK6Q,IAAL,CAAUg9B,UAAV,EAAZ,CACA,GAAMhhD,KAAI,CAAG+S,UAAU,CAACI,GAAD,CAAvB;;;;;AAOA,GAAMw1C,iBAAgB,CAAG,KAAKj9C,KAAL,CAAW1L,IAAX,CAAzB,CACA,GAAM4oD,QAAO,CAAG,KAAKl9C,KAAL,CAAW1L,IAAX,CAAhB,CAEA,GAAIqS,QAAJ,CACA,GAAI7S,KAAK,EAAI,IAAb,CAAmB,CACjB6S,OAAO,CAAGs2C,gBAAgB,CAAC5lD,GAAjB,CAAqBvD,KAArB,CAA4BqS,UAA5B,EAAwC4rC,IAAxC,CAA6C,WAAM,eAAO,CAA1D,CAAV,CACD,CAFD,IAEO,CACLprC,OAAO,CAAG2vC,OAAO,CAACz7B,OAAR,CAAgBqiC,OAAhB,CAAV,CACD,CAEDD,gBAAgB,CAAClL,IAAjB,CAAwBprC,OAAO,CAACorC,IAAR,CAAa36C,IAAb,CAAkBuP,OAAlB,CAAxB,CACAs2C,gBAAgB,CAACviC,KAAjB,CAAyB/T,OAAO,CAACorC,IAAR,CAAa36C,IAAb,CAAkBuP,OAAlB,CAA2BlC,SAA3B,CAAzB,CAEA,GAAI,MAAO0B,WAAP,GAAsB,UAA1B,CAAsC,CACpCQ,OAAO,CAAC+T,KAAR,CAAc,WAAQ,CAAtB,EACD,CAED,MAAOuiC,iBAAP,CACD,CAhCD;;OAqCAR,4CACE52C,oBAAoB,CAAC,wBAAD,CAA2B,KAAKhJ,IAAhC,CAApB,CACA,MAAO,IAAIqJ,aAAJ,CAAiB,KAAKoS,IAAtB,CAA4B,KAAKzb,IAAjC,CAAP,CACD,CAHD,CAKAmB,sBAAIy+C,mBAAJ,CAAI,UAAJ,CAAY,KAAZ,WACE,MAAO,MAAKU,YAAL,EAAP,CACD,CAFW,oCAAZ,EAIAn/C,sBAAIy+C,mBAAJ,CAAI,KAAJ,CAAO,KAAP,WACE,MAAO,MAAKzmC,MAAL,EAAP,CACD,CAFM,oCAAP,EAIAhY,sBAAIy+C,mBAAJ,CAAI,QAAJ,CAAU,KAAV,WACE,MAAO,MAAKlmC,SAAL,EAAP,CACD,CAFS,oCAAV,EAIAvY,sBAAIy+C,mBAAJ,CAAI,MAAJ,CAAQ,KAAR,WACE,MAAO,MAAKW,OAAL,EAAP,CACD,CAFO,oCAAR,EAGF,iBAzVA,EAA+B3kC,OA2V/B;;;;;GAMAA,KAAK,CAACJ,sBAAN,CAA+BokC,SAA/B,CACA9vB,SAAS,CAACtU,sBAAV,CAAmCokC,SAAnC,CC/YA;;;;;;;;;;;;;;;IAsBA;;GAGA;;AAGE,cAA4C,EAA5C,CACA,gBAAa,CAAb,CACA,WAAkB,IAAlB,CACD,CAAD,gBAAC,CAND,GAQA;;;;GAKA;;;;;OAOE,cACUY,KADV,CAEUC,OAFV,CAGU/nC,KAHV,CAGgD,CAFtC,4BAAkB,CAClB,kCAA8B,CAC9B,4BAAyBgoC,SAAzB,GAAsC,CAFtC,iBACA,qBACA,iBACN;;;;;OAQJC,gCAAQC,OAAR,CAA8B;AAE5B,GAAI5gD,KAAI,CAAG4gD,OAAO,WAAYx/C,KAAnB,CAA0Bw/C,OAA1B,CAAoC,GAAIx/C,KAAJ,CAASw/C,OAAT,CAA/C,CACA,GAAIz9C,MAAK,CAAG,IAAZ,CACEwQ,IAAI,CAAG3T,IAAI,CAACgC,QAAL,EADT,CAEA,MAAO2R,IAAI,GAAK,IAAhB,CAAsB,CACpB,GAAM5G,UAAS,CAAGqG,OAAO,CAACjQ,KAAK,CAACuV,KAAN,CAAYyI,QAAb,CAAuBxN,IAAvB,CAAP,EAAuC,GAAI+sC,SAAJ,EAAzD,CACAv9C,KAAK,CAAG,GAAIw9C,KAAJ,CAAShtC,IAAT,CAAexQ,KAAf,CAAsB4J,SAAtB,CAAR,CACA/M,IAAI,CAAGA,IAAI,CAACmC,QAAL,EAAP,CACAwR,IAAI,CAAG3T,IAAI,CAACgC,QAAL,EAAP,CACD,CAED,MAAOmB,MAAP,CACD,CAbD;;;;OAoBAw9C,mCACE,MAAO,MAAKjoC,KAAL,CAAWzhB,KAAlB,CACD,CAFD;;;;OASA0pD,iCAAS1pD,KAAT,CAAiB,CACfiD,MAAM,CAAC,MAAOjD,MAAP,GAAiB,WAAlB,CAA+B,+BAA/B,CAAN,CACA,KAAKyhB,KAAL,CAAWzhB,KAAX,CAAmBA,KAAnB,CACA,KAAK4pD,cAAL,GACD,CAJD;;OASAF,gCACE,KAAKjoC,KAAL,CAAWzhB,KAAX,CAAmB,IAAnB,CACA,KAAKyhB,KAAL,CAAWyI,QAAX,CAAsB,EAAtB,CACA,KAAKzI,KAAL,CAAWooC,UAAX,CAAwB,CAAxB,CACA,KAAKD,cAAL,GACD,CALD;;OAUAF,sCACE,MAAO,MAAKjoC,KAAL,CAAWooC,UAAX,CAAwB,CAA/B,CACD,CAFD;;OAOAH,kCACE,MAAO,MAAKnzC,QAAL,KAAoB,IAApB,EAA4B,CAAC,KAAKuzC,WAAL,EAApC,CACD,CAFD;;;;OASAJ,qCAAarzC,MAAb,CAA4C,CAA5C,eACExP,IAAI,CAAC,KAAK4a,KAAL,CAAWyI,QAAZ,CAAsB,SAAChe,KAAD,CAAgBqP,SAAhB,CAAsC,CAC9DlF,MAAM,CAAC,GAAIqzC,KAAJ,CAAYx9C,KAAZ,CAAmBkR,KAAnB,CAAyB7B,SAAzB,CAAD,CAAN,CACD,CAFG,CAAJ,CAGD,CAJD;;;;;;;;OAeAmuC,0CACErzC,MADF,CAEE0zC,WAFF,CAGEC,aAHF,CAGyB,CAEvB,GAAID,WAAW,EAAI,CAACC,aAApB,CAAmC,CACjC3zC,MAAM,CAAC,IAAD,CAAN,CACD,CAED,KAAKiI,YAAL,CAAkB,eAAK,CACrBpS,KAAK,CAAC+9C,iBAAN,CAAwB5zC,MAAxB,CAA8B,gBAAmB,IAAjD,CAAuD2zC,aAAvD,EACD,CAFD,EAIA,GAAID,WAAW,EAAIC,aAAnB,CAAkC,CAChC3zC,MAAM,CAAC,IAAD,CAAN,CACD,CACF,CAhBD;;;;;;;OA0BAqzC,wCACErzC,MADF,CAEE0zC,WAFF,CAEuB,CAErB,GAAIh2C,KAAI,CAAGg2C,WAAW,CAAG,IAAH,CAAU,KAAKt1B,MAAL,EAAhC,CACA,MAAO1gB,IAAI,GAAK,IAAhB,CAAsB,CACpB,GAAIsC,MAAM,CAACtC,IAAD,CAAV,CAAkB,CAChB,MAAO,KAAP,CACD,CACDA,IAAI,CAAGA,IAAI,CAAC0gB,MAAL,EAAP,CACD,CACD,MAAO,MAAP,CACD,CAZD;;;;;;OAqBAi1B,4DAAoCrzC,MAApC,CAAmE,CACjE,KAAKiI,YAAL,CAAkB,eAAK,CACrB,GAAIpS,KAAK,CAACqK,QAAN,KAAqB,IAAzB,CAA+B,CAC7BF,MAAM,CAACnK,KAAD,CAAN,CACD,CAFD,IAEO,CACLA,KAAK,CAACg+C,mCAAN,CAA0C7zC,MAA1C,EACD,CACF,CAND,EAOD,CARD;;OAaAqzC,+BACE,MAAO,IAAIv/C,KAAJ,CACL,KAAKq/C,OAAL,GAAiB,IAAjB,CACI,KAAKD,KADT,CAEI,KAAKC,OAAL,CAAazgD,IAAb,GAAsB,GAAtB,CAA4B,KAAKwgD,KAHhC,CAAP,CAKD,CAND;;OAWAG,+BACE,MAAO,MAAKH,KAAZ,CACD,CAFD;;OAOAG,iCACE,MAAO,MAAKF,OAAZ,CACD,CAFD;;;;OASQE,8BAAR,WACE,GAAI,KAAKF,OAAL,GAAiB,IAArB,CAA2B,CACzB,KAAKA,OAAL,CAAaW,YAAb,CAA0B,KAAKZ,KAA/B,CAAsC,IAAtC,EACD,CACF,CAJO;;;;;;OAaAG,4BAAR,SAAqB7zC,SAArB,CAAwC3J,KAAxC,CAAsD,CACpD,GAAMk+C,WAAU,CAAGl+C,KAAK,CAACmJ,OAAN,EAAnB,CACA,GAAMg1C,YAAW,CAAGxpD,QAAQ,CAAC,KAAK4gB,KAAL,CAAWyI,QAAZ,CAAsBrU,SAAtB,CAA5B,CACA,GAAIu0C,UAAU,EAAIC,WAAlB,CAA+B,CAC7B,MAAO,MAAK5oC,KAAL,CAAWyI,QAAX,CAAoBrU,SAApB,CAAP,CACA,KAAK4L,KAAL,CAAWooC,UAAX,GACA,KAAKD,cAAL,GACD,CAJD,IAIO,IAAI,CAACQ,UAAD,EAAe,CAACC,WAApB,CAAiC,CACtC,KAAK5oC,KAAL,CAAWyI,QAAX,CAAoBrU,SAApB,EAAiC3J,KAAK,CAACuV,KAAvC,CACA,KAAKA,KAAL,CAAWooC,UAAX,GACA,KAAKD,cAAL,GACD,CACF,CAZO,CAaV,YAAC,CAnND,GCtCA;;;;;;;;;;;;;;;IAiCA;AACA;AACA;AACA;AAEA;;GAGA,GAAYU,kBAAZ,WAAYA,iBAAZ,CAA6B;;;AAI3BA;;AAIAA;;AAIAA;;AAIAA;AAGAA,oEACD,CApBD,EAAYA,iBAAiB,GAAjBA,iBAAiB,IAA7B,EAsBA;;;;;;IAOA;AACClK,IAAY,CAACmK,wBAAb,CAAwC,EAAxC,CAmCD;;;IAIA;AACCnK,IAAI,CAACoK,SAAL,CAAuB5J,iBAAvB,CAA2C;;;;;OAO1C,KAAK6J,qBAAL,CAA6B,GAAIf,KAAJ,EAA7B,CACD,CARA,CAqBD;;;;;;;GAQAtJ,IAAI,CAACoK,SAAL,CAAetB,gBAAf,CAAkC,SAChCngD,IADgC,CAEhCggD,iBAFgC,CAGhC12C,UAHgC,CAIhC22C,YAJgC,CAIX,CAErB,KAAKpgB,IAAL,CAAU,kBAAoB7/B,IAA9B;AAGA,GAAMwd,cAAa,CAAG,WAAc,CAApC,CACA,GAAMmkC,SAAQ,CAAG,GAAI/B,UAAJ,CAAc,IAAd,CAAoB5/C,IAApB,CAAjB,CACA2hD,QAAQ,CAAC1jC,EAAT,CAAY,OAAZ,CAAqBT,aAArB,EACA,GAAMokC,UAAS,CAAG,WAChBD,QAAQ,CAAC5jC,GAAT,CAAa,OAAb,CAAsBP,aAAtB,EACD,CAFD;AAKA,GAAMqkC,YAAW,CAAgB,CAC/B7hD,IAAI,KAD2B,CAE/BjH,MAAM,CAAEinD,iBAFuB,CAG/B12C,UAAU,WAHqB;AAM/B+vB,MAAM,CAAE,IANuB;AAS/ByoB,KAAK,CAAEtpD,aAAa,EATW;AAY/BynD,YAAY,aAZmB;AAe/B8B,UAAU,CAAE,CAfmB;AAkB/BH,SAAS,UAlBsB;AAqB/BI,WAAW,CAAE,IArBkB,CAuB/BC,cAAc,CAAE,IAvBe,CAyB/BC,oBAAoB,CAAE,IAzBS,CA2B/BC,wBAAwB,CAAE,IA3BK,CA6B/BC,6BAA6B,CAAE,IA7BA,CAAjC;AAiCA,GAAMC,aAAY,CAAG,KAAKC,eAAL,CAAqBtiD,IAArB,CAArB,CACA6hD,WAAW,CAACK,oBAAZ,CAAmCG,YAAnC,CACA,GAAM1I,OAAM,CAAGkI,WAAW,CAAC9oD,MAAZ,CAAmBspD,YAAY,CAACz2C,GAAb,EAAnB,CAAf,CACA,GAAI+tC,MAAM,GAAK/xC,SAAf,CAA0B;AAExBi6C,WAAW,CAACD,SAAZ,GACAC,WAAW,CAACM,wBAAZ,CAAuC,IAAvC,CACAN,WAAW,CAACO,6BAAZ,CAA4C,IAA5C,CACA,GAAIP,WAAW,CAACv4C,UAAhB,CAA4B;AAE1B,GAAMe,SAAQ,CAAG,GAAIwO,aAAJ,CACfgpC,WAAW,CAACK,oBADG,CAEf,GAAItC,UAAJ,CAAc,IAAd,CAAoBiC,WAAW,CAAC7hD,IAAhC,CAFe,CAGf0O,cAHe,CAAjB,CAKAmzC,WAAW,CAACv4C,UAAZ,CAAuB,IAAvB,CAA6B,KAA7B,CAAoCe,QAApC,EACD,CACF,CAdD,IAcO,CACLxC,oBAAoB,CAClB,oCADkB,CAElB8xC,MAFkB,CAGlBkI,WAAW,CAAC7hD,IAHM,CAApB;AAOA6hD,WAAW,CAACxoB,MAAZ,CAAqBkoB,iBAAiB,CAACgB,GAAvC,CACA,GAAMC,UAAS,CAAG,KAAKd,qBAAL,CAA2Be,OAA3B,CAAmCziD,IAAnC,CAAlB,CACA,GAAM0iD,UAAS,CAAGF,SAAS,CAACh1C,QAAV,IAAwB,EAA1C,CACAk1C,SAAS,CAACplD,IAAV,CAAeukD,WAAf,EAEAW,SAAS,CAACG,QAAV,CAAmBD,SAAnB;;;AAKA,GAAIE,gBAAe,OAAnB,CACA,GACE,MAAOjJ,OAAP,GAAkB,QAAlB,EACAA,MAAM,GAAK,IADX,EAEA7hD,QAAQ,CAAC6hD,MAAD,CAAS,WAAT,CAHV,CAIE;AAEAiJ,eAAe,CAAGxvC,OAAO,CAACumC,MAAD,CAAgB,WAAhB,CAAzB,CACAz/C,MAAM,CACJoN,eAAe,CAACs7C,eAAD,CADX,CAEJ,6CACE,wEAHE,CAAN,CAKD,CAZD,IAYO,CACL,GAAMC,YAAW,CACf,KAAK1K,eAAL,CAAqBx4B,sBAArB,CAA4C3f,IAA5C,GACA4U,YAAY,CAAChI,UAFf,CAGAg2C,eAAe,CAAGC,WAAW,CAACt2C,WAAZ,GAA0BX,GAA1B,EAAlB,CACD,CACDg3C,eAAe,kCAAqCA,eAApD,CAEA,GAAM1iC,aAAY,CAAG,KAAK05B,oBAAL,EAArB,CACA,GAAMC,kBAAiB,CAAG1rC,cAAY,CAACwrC,MAAD,CAASiJ,eAAT,CAAtC,CACA,GAAMv3C,QAAO,CAAGyV,4BAA4B,CAC1C+4B,iBAD0C,CAE1CwI,YAF0C,CAG1CniC,YAH0C,CAA5C,CAKA2hC,WAAW,CAACM,wBAAZ,CAAuCtI,iBAAvC,CACAgI,WAAW,CAACO,6BAAZ,CAA4C/2C,OAA5C,CACAw2C,WAAW,CAACI,cAAZ,CAA6B,KAAKnI,eAAL,EAA7B,CAEA,GAAM3sB,OAAM,CAAG,KAAKgrB,eAAL,CAAqB4B,kBAArB,CACb/5C,IADa,CAEbqL,OAFa,CAGbw2C,WAAW,CAACI,cAHC,CAIbJ,WAAW,CAAC5B,YAJC,CAAf,CAMA,KAAK7H,WAAL,CAAiBC,yBAAjB,CAA2Cr4C,IAA3C,CAAiDmtB,MAAjD,EAEA,KAAK21B,sBAAL,GACD,CACF,CA/HD,CAiIA;;;;;IAMA;AACCzL,IAAI,CAACoK,SAAL,CAAuBa,eAAvB,CAAyC,SACxCtiD,IADwC,CAExC+iD,WAFwC,CAElB,CAEtB,MACE,MAAK5K,eAAL,CAAqBx4B,sBAArB,CAA4C3f,IAA5C,CAAkD+iD,WAAlD,GACAnuC,YAAY,CAAChI,UAFf,CAID,CARA,CAUD;;;;;;;;;IAUA;AACCyqC,IAAI,CAACoK,SAAL,CAAuBqB,sBAAvB,CAAgD,SAC/C93C,IAD+C,CACO,CADP,eAC/C,uBAA4B,KAAK02C,qBAAjC,CAAsD;AAGtD,GAAI,CAAC12C,IAAL,CAAW,CACT,KAAKg4C,oCAAL,CAA0Ch4C,IAA1C,EACD,CAED,GAAIA,IAAI,CAACwC,QAAL,KAAoB,IAAxB,CAA8B,CAC5B,GAAMy1C,MAAK,CAAG,KAAKC,sBAAL,CAA4Bl4C,IAA5B,CAAd,CACA9Q,MAAM,CAAC+oD,KAAK,CAACzpD,MAAN,CAAe,CAAhB,CAAmB,uCAAnB,CAAN,CAEA,GAAM2pD,OAAM,CAAGF,KAAK,CAAC1nC,KAAN,CACb,SAACsmC,WAAD,CAAyB,CAAK,kBAAW,CAACxoB,MAAZ,GAAuBkoB,iBAAiB,CAACgB,GAAzC,CAA4C,CAD7D,CAAf;AAKA,GAAIY,MAAJ,CAAY,CACV,KAAKC,qBAAL,CAA2Bp4C,IAAI,CAAChL,IAAL,EAA3B,CAAwCijD,KAAxC,EACD,CACF,CAZD,IAYO,IAAIj4C,IAAI,CAAC+1C,WAAL,EAAJ,CAAwB,CAC7B/1C,IAAI,CAACuK,YAAL,CAAkB,mBAAS,CACzBlB,KAAI,CAACyuC,sBAAL,CAA4B/1C,SAA5B,EACD,CAFD,EAGD,CACF,CAzBA,CA2BD;;;;;;IAOA;AACCsqC,IAAI,CAACoK,SAAL,CAAuB2B,qBAAvB,CAA+C,SAC9CpjD,IAD8C,CAE9CijD,KAF8C,CAE1B,CAF0B;AAK9C,GAAMI,aAAY,CAAGJ,KAAK,CAAC9uC,GAAN,CAAU,aAAG,CAChC,MAAOmvC,IAAG,CAACrB,cAAX,CACD,CAFoB,CAArB,CAGA,GAAMsB,YAAW,CAAG,KAAKjB,eAAL,CAAqBtiD,IAArB,CAA2BqjD,YAA3B,CAApB,CACA,GAAIG,WAAU,CAAGD,WAAjB,CACA,GAAME,WAAU,CAAGF,WAAW,CAAC5tC,IAAZ,EAAnB,CACA,IAAK,GAAIpc,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG0pD,KAAK,CAACzpD,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACrC,GAAM+pD,IAAG,CAAGL,KAAK,CAAC1pD,CAAD,CAAjB,CACAW,MAAM,CACJopD,GAAG,CAACjqB,MAAJ,GAAekoB,iBAAiB,CAACgB,GAD7B,CAEJ,+DAFI,CAAN,CAIAe,GAAG,CAACjqB,MAAJ,CAAakoB,iBAAiB,CAACmC,IAA/B,CACAJ,GAAG,CAACvB,UAAJ,GACA,GAAM7/C,aAAY,CAAGd,IAAI,CAACc,YAAL,CAAkBlC,IAAlB,CAAwBsjD,GAAG,CAACtjD,IAA5B,CAArB;AAEAwjD,UAAU,CAAGA,UAAU,CAACp2C,WAAX,CACXlL,YAAY,oBADD,CAEXohD,GAAG,CAACnB,wBAFO,CAAb,CAID,CAED,GAAMwB,WAAU,CAAGH,UAAU,CAAC53C,GAAX,CAAe,IAAf,CAAnB,CACA,GAAMg4C,WAAU,CAAG5jD,IAAnB;AAGA,KAAKs7B,OAAL,CAAaia,GAAb,CACEqO,UAAU,CAACjsD,QAAX,EADF,CAEEgsD,UAFF,CAGE,SAACtqB,MAAD,CAAe,CACbhlB,KAAI,CAACwrB,IAAL,CAAU,0BAAV,CAAsC,CACpC7/B,IAAI,CAAE4jD,UAAU,CAACjsD,QAAX,EAD8B,CAEpC0hC,MAAM,OAF8B,CAAtC,EAKA,GAAIlM,OAAM,CAAY,EAAtB,CACA,GAAIkM,MAAM,GAAK,IAAf,CAAqB;;AAGnB,GAAMnc,UAAS,CAAG,EAAlB,CACA,IAAK,GAAI3jB,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG0pD,KAAK,CAACzpD,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACrC0pD,KAAK,CAAC1pD,CAAD,CAAL,CAAS8/B,MAAT,CAAkBkoB,iBAAiB,CAACsC,SAApC,CACA12B,MAAM,CAAGA,MAAM,CAACoC,MAAP,CACPlb,KAAI,CAAC8jC,eAAL,CAAqBhvB,YAArB,CAAkC85B,KAAK,CAAC1pD,CAAD,CAAL,CAAS0oD,cAA3C,CADO,CAAT,CAGA,GAAIgB,KAAK,CAAC1pD,CAAD,CAAL,CAAS+P,UAAb,CAAyB;AAEvB,GAAM0B,KAAI,CAAGi4C,KAAK,CAAC1pD,CAAD,CAAL,CAAS6oD,6BAAtB,CACA,GAAM3oC,IAAG,CAAG,GAAImmC,UAAJ,CAAcvrC,KAAd,CAAoB4uC,KAAK,CAAC1pD,CAAD,CAAL,CAASyG,IAA7B,CAAZ,CACA,GAAMqK,SAAQ,CAAG,GAAIwO,aAAJ,CAAiB7N,IAAjB,CAAuByO,GAAvB,CAA4B/K,cAA5B,CAAjB,CACAwO,SAAS,CAAC5f,IAAV,CACE2lD,KAAK,CAAC1pD,CAAD,CAAL,CAAS+P,UAAT,CAAoB/O,IAApB,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,IAArC,CAA2C8P,QAA3C,CADF,EAGD,CACD44C,KAAK,CAAC1pD,CAAD,CAAL,CAASqoD,SAAT,GACD;AAGDvtC,KAAI,CAAC2uC,oCAAL,CACE3uC,KAAI,CAACqtC,qBAAL,CAA2Be,OAA3B,CAAmCziD,IAAnC,CADF;AAIAqU,KAAI,CAACyuC,sBAAL,GAEAzuC,KAAI,CAAC+jC,WAAL,CAAiBC,yBAAjB,CAA2Cr4C,IAA3C,CAAiDmtB,MAAjD;AAGA,IAAK,GAAI5zB,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG2jB,SAAS,CAAC1jB,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACzC8G,cAAc,CAAC6c,SAAS,CAAC3jB,CAAD,CAAV,CAAd,CACD,CACF,CAlCD,IAkCO;AAEL,GAAI8/B,MAAM,GAAK,WAAf,CAA4B,CAC1B,IAAK,GAAI9/B,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG0pD,KAAK,CAACzpD,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACrC,GAAI0pD,KAAK,CAAC1pD,CAAD,CAAL,CAAS8/B,MAAT,GAAoBkoB,iBAAiB,CAACuC,gBAA1C,CAA4D,CAC1Db,KAAK,CAAC1pD,CAAD,CAAL,CAAS8/B,MAAT,CAAkBkoB,iBAAiB,CAACwC,WAApC,CACD,CAFD,IAEO,CACLd,KAAK,CAAC1pD,CAAD,CAAL,CAAS8/B,MAAT,CAAkBkoB,iBAAiB,CAACgB,GAApC,CACD,CACF,CACF,CARD,IAQO,CACLtnD,IAAI,CACF,kBAAoB2oD,UAAU,CAACjsD,QAAX,EAApB,CAA4C,WAA5C,CAA0D0hC,MADxD,CAAJ,CAGA,IAAK,GAAI9/B,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG0pD,KAAK,CAACzpD,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACrC0pD,KAAK,CAAC1pD,CAAD,CAAL,CAAS8/B,MAAT,CAAkBkoB,iBAAiB,CAACwC,WAApC,CACAd,KAAK,CAAC1pD,CAAD,CAAL,CAASyoD,WAAT,CAAuB3oB,MAAvB,CACD,CACF,CAEDhlB,KAAI,CAAC8kC,kBAAL,CAAwBn5C,IAAxB,EACD,CACF,CAlEH,CAmEEyjD,UAnEF,EAqED,CApGA,CAsGD;;;;;;;;;;;IAYA;AACCpM,IAAI,CAACoK,SAAL,CAAuBtI,kBAAvB,CAA4C,SAC3C3c,WAD2C,CAC1B,CAEjB,GAAMwnB,wBAAuB,CAAG,KAAKC,2BAAL,CAAiCznB,WAAjC,CAAhC,CACA,GAAMx8B,KAAI,CAAGgkD,uBAAuB,CAAChkD,IAAxB,EAAb,CAEA,GAAMijD,MAAK,CAAG,KAAKC,sBAAL,CAA4Bc,uBAA5B,CAAd,CACA,KAAKE,sBAAL,CAA4BjB,KAA5B,CAAmCjjD,IAAnC,EAEA,MAAOA,KAAP,CACD,CAVA,CAYD;;;;;;IAOA;AACCq3C,IAAI,CAACoK,SAAL,CAAuByC,sBAAvB,CAAgD,SAC/CjB,KAD+C,CAE/CjjD,IAF+C,CAErC,CAEV,GAAIijD,KAAK,CAACzpD,MAAN,GAAiB,CAArB,CAAwB,CACtB,OAAO;AACR;;AAID,GAAM0jB,UAAS,CAAG,EAAlB,CACA,GAAIiQ,OAAM,CAAY,EAAtB;AAEA,GAAMg3B,YAAW,CAAGlB,KAAK,CAACv1B,MAAN,CAAa,WAAC,CAChC,MAAO4iB,EAAC,CAACjX,MAAF,GAAakoB,iBAAiB,CAACgB,GAAtC,CACD,CAFmB,CAApB,CAGA,GAAMc,aAAY,CAAGc,WAAW,CAAChwC,GAAZ,CAAgB,WAAC,CACpC,MAAOm8B,EAAC,CAAC2R,cAAT,CACD,CAFoB,CAArB,CAGA,IAAK,GAAI1oD,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG0pD,KAAK,CAACzpD,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACrC,GAAMsoD,YAAW,CAAGoB,KAAK,CAAC1pD,CAAD,CAAzB,CACA,GAAM2I,aAAY,CAAGd,IAAI,CAACc,YAAL,CAAkBlC,IAAlB,CAAwB6hD,WAAW,CAAC7hD,IAApC,CAArB,CACA,GAAIokD,iBAAgB,CAAG,KAAvB,CACEpC,WAAW,OADb,CAEA9nD,MAAM,CACJgI,YAAY,GAAK,IADb,CAEJ,+DAFI,CAAN,CAKA,GAAI2/C,WAAW,CAACxoB,MAAZ,GAAuBkoB,iBAAiB,CAACwC,WAA7C,CAA0D,CACxDK,gBAAgB,CAAG,IAAnB,CACApC,WAAW,CAAGH,WAAW,CAACG,WAA1B,CACA70B,MAAM,CAAGA,MAAM,CAACoC,MAAP,CACP,KAAK4oB,eAAL,CAAqBhvB,YAArB,CAAkC04B,WAAW,CAACI,cAA9C,CAA8D,IAA9D,CADO,CAAT,CAGD,CAND,IAMO,IAAIJ,WAAW,CAACxoB,MAAZ,GAAuBkoB,iBAAiB,CAACgB,GAA7C,CAAkD;AAEvD,GAAIV,WAAW,CAACE,UAAZ,EAA2B1K,IAAY,CAACmK,wBAA5C,CAAsE,CACpE4C,gBAAgB,CAAG,IAAnB,CACApC,WAAW,CAAG,UAAd,CACA70B,MAAM,CAAGA,MAAM,CAACoC,MAAP,CACP,KAAK4oB,eAAL,CAAqBhvB,YAArB,CAAkC04B,WAAW,CAACI,cAA9C,CAA8D,IAA9D,CADO,CAAT,CAGD,CAND,IAMO;AAEL,GAAMY,YAAW,CAAG,KAAKP,eAAL,CAClBT,WAAW,CAAC7hD,IADM,CAElBqjD,YAFkB,CAApB,CAIAxB,WAAW,CAACK,oBAAZ,CAAmCW,WAAnC,CACA,GAAMjuB,QAAO,CAAGquB,KAAK,CAAC1pD,CAAD,CAAL,CAASR,MAAT,CAAgB8pD,WAAW,CAACj3C,GAAZ,EAAhB,CAAhB,CACA,GAAIgpB,OAAO,GAAKhtB,SAAhB,CAA2B,CACzBC,oBAAoB,CAClB,oCADkB,CAElB+sB,OAFkB,CAGlBitB,WAAW,CAAC7hD,IAHM,CAApB,CAKA,GAAIqkD,YAAW,CAAGl2C,cAAY,CAACymB,OAAD,CAA9B,CACA,GAAM0vB,oBAAmB,CACvB,MAAO1vB,QAAP,GAAmB,QAAnB,EACAA,OAAO,EAAI,IADX,EAEA98B,QAAQ,CAAC88B,OAAD,CAAU,WAAV,CAHV,CAIA,GAAI,CAAC0vB,mBAAL,CAA0B;AAExBD,WAAW,CAAGA,WAAW,CAACp3C,cAAZ,CAA2B41C,WAAW,CAACt2C,WAAZ,EAA3B,CAAd,CACD,CAED,GAAMg4C,WAAU,CAAG1C,WAAW,CAACI,cAA/B,CACA,GAAM/hC,aAAY,CAAG,KAAK05B,oBAAL,EAArB,CACA,GAAM4K,gBAAe,CAAG1jC,4BAA4B,CAClDujC,WADkD,CAElDxB,WAFkD,CAGlD3iC,YAHkD,CAApD,CAMA2hC,WAAW,CAACM,wBAAZ,CAAuCkC,WAAvC,CACAxC,WAAW,CAACO,6BAAZ,CAA4CoC,eAA5C,CACA3C,WAAW,CAACI,cAAZ,CAA6B,KAAKnI,eAAL,EAA7B;AAEAuJ,YAAY,CAAC5wB,MAAb,CAAoB4wB,YAAY,CAAChoD,OAAb,CAAqBkpD,UAArB,CAApB,CAAsD,CAAtD,EACAp3B,MAAM,CAAGA,MAAM,CAACoC,MAAP,CACP,KAAK4oB,eAAL,CAAqB4B,kBAArB,CACE8H,WAAW,CAAC7hD,IADd,CAEEwkD,eAFF,CAGE3C,WAAW,CAACI,cAHd,CAIEJ,WAAW,CAAC5B,YAJd,CADO,CAAT,CAQA9yB,MAAM,CAAGA,MAAM,CAACoC,MAAP,CACP,KAAK4oB,eAAL,CAAqBhvB,YAArB,CAAkCo7B,UAAlC,CAA8C,IAA9C,CADO,CAAT,CAGD,CAxCD,IAwCO,CACLH,gBAAgB,CAAG,IAAnB,CACApC,WAAW,CAAG,QAAd,CACA70B,MAAM,CAAGA,MAAM,CAACoC,MAAP,CACP,KAAK4oB,eAAL,CAAqBhvB,YAArB,CAAkC04B,WAAW,CAACI,cAA9C,CAA8D,IAA9D,CADO,CAAT,CAGD,CACF,CACF,CACD,KAAK7J,WAAL,CAAiBC,yBAAjB,CAA2Cr4C,IAA3C,CAAiDmtB,MAAjD,EACAA,MAAM,CAAG,EAAT,CACA,GAAIi3B,gBAAJ,CAAsB;AAEpBnB,KAAK,CAAC1pD,CAAD,CAAL,CAAS8/B,MAAT,CAAkBkoB,iBAAiB,CAACsC,SAApC;;AAIA,CAAC,SAAUjC,SAAV,CAAmB,CAClBzlD,UAAU,CAACylD,SAAD,CAAYxlD,IAAI,CAACC,KAAL,CAAW,CAAX,CAAZ,CAAV,CACD,CAFD,EAEG4mD,KAAK,CAAC1pD,CAAD,CAAL,CAASqoD,SAFZ,EAIA,GAAIqB,KAAK,CAAC1pD,CAAD,CAAL,CAAS+P,UAAb,CAAyB,CACvB,GAAI04C,WAAW,GAAK,QAApB,CAA8B,CAC5B,GAAMvoC,IAAG,CAAG,GAAImmC,UAAJ,CAAc,IAAd,CAAoBqD,KAAK,CAAC1pD,CAAD,CAAL,CAASyG,IAA7B,CAAZ;AAEA,GAAMykD,UAAS,qBAAwBxB,KAAK,CAAC1pD,CAAD,CAAL,CAAS2oD,oBAAhD,CACA,GAAM73C,SAAQ,CAAG,GAAIwO,aAAJ,CAAiB4rC,SAAjB,CAA4BhrC,GAA5B,CAAiC/K,cAAjC,CAAjB,CACAwO,SAAS,CAAC5f,IAAV,CAAe2lD,KAAK,CAAC1pD,CAAD,CAAL,CAAS+P,UAAT,CAAoB/O,IAApB,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,KAArC,CAA4C8P,QAA5C,CAAf,EACD,CAND,IAMO,CACL6S,SAAS,CAAC5f,IAAV,CACE2lD,KAAK,CAAC1pD,CAAD,CAAL,CAAS+P,UAAT,CAAoB/O,IAApB,CAAyB,IAAzB,CAA+B,GAAIS,MAAJ,CAAUgnD,WAAV,CAA/B,CAAuD,KAAvD,CAA8D,IAA9D,CADF,EAGD,CACF,CACF,CACF;AAGD,KAAKgB,oCAAL,CAA0C,KAAKtB,qBAA/C;AAGA,IAAK,GAAInoD,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG2jB,SAAS,CAAC1jB,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACzC8G,cAAc,CAAC6c,SAAS,CAAC3jB,CAAD,CAAV,CAAd,CACD;AAGD,KAAKupD,sBAAL,GACD,CA1IA,CA4ID;;;;;;;IAQA;AACCzL,IAAI,CAACoK,SAAL,CAAuBwC,2BAAvB,CAAqD,SACpDjkD,IADoD,CAC1C,CAEV,GAAImN,MAAJ;AAGA,GAAIu3C,gBAAe,CAAG,KAAKhD,qBAA3B,CACAv0C,KAAK,CAAGnN,IAAI,CAACgC,QAAL,EAAR,CACA,MAAOmL,KAAK,GAAK,IAAV,EAAkBu3C,eAAe,CAACl3C,QAAhB,KAA+B,IAAxD,CAA8D,CAC5Dk3C,eAAe,CAAGA,eAAe,CAACjC,OAAhB,CAAwBt1C,KAAxB,CAAlB,CACAnN,IAAI,CAAGA,IAAI,CAACmC,QAAL,EAAP,CACAgL,KAAK,CAAGnN,IAAI,CAACgC,QAAL,EAAR,CACD,CAED,MAAO0iD,gBAAP,CACD,CAfA,CAiBD;;;;;;IAOA;AACCrN,IAAI,CAACoK,SAAL,CAAuByB,sBAAvB,CAAgD,SAC/CwB,eAD+C,CACX;AAGpC,GAAMC,iBAAgB,CAAkB,EAAxC,CACA,KAAKC,kCAAL,CAAwCF,eAAxC,CAAyDC,gBAAzD;AAGAA,gBAAgB,CAACpnD,IAAjB,CAAsB,SAACZ,CAAD,CAAIC,CAAJ,CAAK,CACzB,MAAOD,EAAC,CAACmlD,KAAF,CAAUllD,CAAC,CAACklD,KAAnB,CACD,CAFD,EAIA,MAAO6C,iBAAP,CACD,CAbA,CAeD;;;;IAKA;AACCtN,IAAI,CAACoK,SAAL,CAAuBmD,kCAAvB,CAA4D,SAC3D55C,IAD2D,CAE3Di4C,KAF2D,CAEvC,CAFuC,eAI3D,GAAMP,UAAS,CAAG13C,IAAI,CAACwC,QAAL,EAAlB,CACA,GAAIk1C,SAAS,GAAK,IAAlB,CAAwB,CACtB,IAAK,GAAInpD,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGmpD,SAAS,CAAClpD,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACzC0pD,KAAK,CAAC3lD,IAAN,CAAWolD,SAAS,CAACnpD,CAAD,CAApB,EACD,CACF,CAEDyR,IAAI,CAACuK,YAAL,CAAkB,eAAK,CACrBlB,KAAI,CAACuwC,kCAAL,CAAwCzhD,KAAxC,CAA+C8/C,KAA/C,EACD,CAFD,EAGD,CAdA,CAgBD;;;;;IAMA;AACC5L,IAAI,CAACoK,SAAL,CAAuBuB,oCAAvB,CAA8D,SAC7Dh4C,IAD6D,CACpC,CADoC,eAG7D,GAAMi4C,MAAK,CAAGj4C,IAAI,CAACwC,QAAL,EAAd,CACA,GAAIy1C,KAAJ,CAAW,CACT,GAAI4B,GAAE,CAAG,CAAT,CACA,IAAK,GAAI39B,KAAI,CAAG,CAAhB,CAAmBA,IAAI,CAAG+7B,KAAK,CAACzpD,MAAhC,CAAwC0tB,IAAI,EAA5C,CAAgD,CAC9C,GAAI+7B,KAAK,CAAC/7B,IAAD,CAAL,CAAYmS,MAAZ,GAAuBkoB,iBAAiB,CAACsC,SAA7C,CAAwD,CACtDZ,KAAK,CAAC4B,EAAD,CAAL,CAAY5B,KAAK,CAAC/7B,IAAD,CAAjB,CACA29B,EAAE,GACH,CACF,CACD5B,KAAK,CAACzpD,MAAN,CAAeqrD,EAAf,CACA75C,IAAI,CAAC23C,QAAL,CAAcM,KAAK,CAACzpD,MAAN,CAAe,CAAf,CAAmBypD,KAAnB,CAA2B,IAAzC,EACD,CAEDj4C,IAAI,CAACuK,YAAL,CAAkB,mBAAS,CACzBlB,KAAI,CAAC2uC,oCAAL,CAA0Cj2C,SAA1C,EACD,CAFD,EAGD,CAnBA,CAqBD;;;;;;;IAQA;AACCsqC,IAAI,CAACoK,SAAL,CAAuBtH,kBAAvB,CAA4C,SAAUn6C,IAAV,CAAoB,CAApB,eAC3C,GAAMomB,aAAY,CAAG,KAAK69B,2BAAL,CAAiCjkD,IAAjC,EAAuCA,IAAvC,EAArB,CAEA,GAAM0kD,gBAAe,CAAG,KAAKhD,qBAAL,CAA2Be,OAA3B,CAAmCziD,IAAnC,CAAxB,CAEA0kD,eAAe,CAACI,eAAhB,CAAgC,SAAC95C,IAAD,CAA0B,CACxDqJ,KAAI,CAAC0wC,wBAAL,CAA8B/5C,IAA9B,EACD,CAFD,EAIA,KAAK+5C,wBAAL,CAA8BL,eAA9B,EAEAA,eAAe,CAACxD,iBAAhB,CAAkC,SAACl2C,IAAD,CAA0B,CAC1DqJ,KAAI,CAAC0wC,wBAAL,CAA8B/5C,IAA9B,EACD,CAFD,EAIA,MAAOob,aAAP,CACD,CAhBA,CAkBD;;;;;IAMA;AACCixB,IAAI,CAACoK,SAAL,CAAuBsD,wBAAvB,CAAkD,SACjD/5C,IADiD,CACxB,CAEzB,GAAMi4C,MAAK,CAAGj4C,IAAI,CAACwC,QAAL,EAAd,CACA,GAAIy1C,KAAK,GAAK,IAAd,CAAoB;;AAGlB,GAAM/lC,UAAS,CAAG,EAAlB;;AAIA,GAAIiQ,OAAM,CAAY,EAAtB,CACA,GAAI63B,SAAQ,CAAG,CAAC,CAAhB,CACA,IAAK,GAAIzrD,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG0pD,KAAK,CAACzpD,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACrC,GAAI0pD,KAAK,CAAC1pD,CAAD,CAAL,CAAS8/B,MAAT,GAAoBkoB,iBAAiB,CAACuC,gBAA1C,CAA4D,CAA5D,IAEO,IAAIb,KAAK,CAAC1pD,CAAD,CAAL,CAAS8/B,MAAT,GAAoBkoB,iBAAiB,CAACmC,IAA1C,CAAgD,CACrDxpD,MAAM,CACJ8qD,QAAQ,GAAKzrD,CAAC,CAAG,CADb,CAEJ,iDAFI,CAAN,CAIAyrD,QAAQ,CAAGzrD,CAAX;AAEA0pD,KAAK,CAAC1pD,CAAD,CAAL,CAAS8/B,MAAT,CAAkBkoB,iBAAiB,CAACuC,gBAApC,CACAb,KAAK,CAAC1pD,CAAD,CAAL,CAASyoD,WAAT,CAAuB,KAAvB,CACD,CATM,IASA,CACL9nD,MAAM,CACJ+oD,KAAK,CAAC1pD,CAAD,CAAL,CAAS8/B,MAAT,GAAoBkoB,iBAAiB,CAACgB,GADlC,CAEJ,wCAFI,CAAN;AAKAU,KAAK,CAAC1pD,CAAD,CAAL,CAASqoD,SAAT,GACAz0B,MAAM,CAAGA,MAAM,CAACoC,MAAP,CACP,KAAK4oB,eAAL,CAAqBhvB,YAArB,CAAkC85B,KAAK,CAAC1pD,CAAD,CAAL,CAAS0oD,cAA3C,CAA2D,IAA3D,CADO,CAAT,CAGA,GAAIgB,KAAK,CAAC1pD,CAAD,CAAL,CAAS+P,UAAb,CAAyB,CACvB,GAAMe,SAAQ,CAAwB,IAAtC,CACA6S,SAAS,CAAC5f,IAAV,CACE2lD,KAAK,CAAC1pD,CAAD,CAAL,CAAS+P,UAAT,CAAoB/O,IAApB,CAAyB,IAAzB,CAA+B,GAAIS,MAAJ,CAAU,KAAV,CAA/B,CAAiD,KAAjD,CAAwDqP,QAAxD,CADF,EAGD,CACF,CACF,CACD,GAAI26C,QAAQ,GAAK,CAAC,CAAlB,CAAqB;AAEnBh6C,IAAI,CAAC23C,QAAL,CAAc,IAAd,EACD,CAHD,IAGO;AAELM,KAAK,CAACzpD,MAAN,CAAewrD,QAAQ,CAAG,CAA1B,CACD;AAGD,KAAK5M,WAAL,CAAiBC,yBAAjB,CAA2CrtC,IAAI,CAAChL,IAAL,EAA3C,CAAwDmtB,MAAxD,EACA,IAAK,GAAI5zB,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG2jB,SAAS,CAAC1jB,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACzC8G,cAAc,CAAC6c,SAAS,CAAC3jB,CAAD,CAAV,CAAd,CACD,CACF,CACF,CAzDA,CCpuBD;;;;;;;;;;;;;;;IAiCA;;GAGA,sDAEE,mCACU0rD,IADV,CAEUC,aAFV,CAE2D,CAF3D,eACU,eACA,iCAHF,WAAqC,IAArC,CAKN,KAAKC,KAAL,CAAaD,aAAa,CAACE,YAAd,CAA2B,CAAEz9C,QAAQ,CAAE,IAAZ,CAA3B,CAAb,CACA,GAAI,CAAC,KAAKw9C,KAAV,CAAiB,CACfD,aAAa,CAACxqD,GAAd,GAAoBw6C,IAApB,CAAyB,cAAI,CAAI,MAAC7gC,MAAI,CAAC8wC,KAAL,CAAaE,IAAd,CAAmB,CAApD,EACD,CACF;;;OAMDC,sDAASvQ,YAAT,CAA8B,CAC5B,GAAI,CAAC,KAAKoQ,KAAV,CAAiB,CACf,MAAO1L,QAAO,CAACz7B,OAAR,CAAgB,IAAhB,CAAP,CACD,CAED,MAAO,MAAKmnC,KAAL,CAAWlQ,QAAX,CAAoBF,YAApB,EAAkCl3B,KAAlC,CAAwC,eAAK;;AAGlD,GAAI/iB,KAAK,EAAIA,KAAK,CAAC+E,IAAN,GAAe,4BAA5B,CAA0D,CACxDvF,GAAG,CAAC,gEAAD,CAAH,CACA,MAAO,KAAP,CACD,CAHD,IAGO,CACL,MAAOm/C,QAAO,CAACt7B,MAAR,CAAerjB,KAAf,CAAP,CACD,CACF,CATM,CAAP,CAUD,CAfD,CAiBAwqD,oEAAuB9tB,QAAvB,CAA+D;;AAG7D,GAAI,KAAK2tB,KAAT,CAAgB,CACd,KAAKA,KAAL,CAAWI,oBAAX,CAAgC/tB,QAAhC,EACD,CAFD,IAEO,CACLr7B,UAAU,CAAC,WAAM,eAAQ,CAAC,IAAD,CAAR,CAAc,CAArB,CAAuB,CAAvB,CAAV,CACA,KAAK+oD,aAAL,CACGxqD,GADH,GAEGw6C,IAFH,CAEQ,cAAI,CAAI,WAAI,CAACqQ,oBAAL,CAA0B/tB,QAA1B,EAAmC,CAFnD,EAGD,CACF,CAXD,CAaA8tB,uEAA0B9tB,QAA1B,CAAkE,CAChE,KAAK0tB,aAAL,CACGxqD,GADH,GAEGw6C,IAFH,CAEQ,cAAI,CAAI,WAAI,CAACsQ,uBAAL,CAA6BhuB,QAA7B,EAAsC,CAFtD,EAGD,CAJD,CAMA8tB,qEACE,GAAIG,aAAY,CACd,0DACA,KAAKR,IAAL,CAAUxtD,IADV,CAEA,yDAFA,CAGA,yBAJF,CAKA,GAAI,cAAgB,MAAKwtD,IAAL,CAAUpe,OAA9B,CAAuC,CACrC4e,YAAY,EACV,mEACA,8EADA,CAEA,UAHF,CAID,CALD,IAKO,IAAI,kBAAoB,MAAKR,IAAL,CAAUpe,OAAlC,CAA2C,CAChD4e,YAAY,EACV,uEACA,8EADA,CAEA,UAHF,CAID,CALM,IAKA,CACLA,YAAY,EACV,mEACA,4DADA,CAEA,uCAHF,CAID,CACDxqD,IAAI,CAACwqD,YAAD,CAAJ,CACD,CAvBD,CAwBF,iCAAC,CA5ED,GA8EA,6EACA,6FAkBC,CAfCC,uDAAS3Q,YAAT,CAA8B,CAC5B,MAAO0E,QAAO,CAACz7B,OAAR,CAAgB,CACrBm3B,WAAW,CAAEuQ,0BAA0B,CAACC,mBADnB,CAAhB,CAAP,CAGD,CAJD,CAMAD,qEAAuBluB,QAAvB,CAA+D;;AAG7DA,QAAQ,CAACkuB,0BAA0B,CAACC,mBAA5B,CAAR,CACD,CAJD,CAMAD,wEAA0BluB,QAA1B,CAAkE,CAAU,CAA5E,CAEAkuB,sEAAgC,CAAhC,CAhBeA,+CAAsB,OAAtB,CAiBjB,kCAlBA,ICnHA;;;;;;;;;;;;;;;IAkCA;;;;;;;GAQA,GAAME,oCAAmC,CAAG,iCAA5C,CAEA,GAAIC,gBAAJ,CAEA;;GAGA;;WAIU,YAIJ,EAJI;;;WAUA,oBAA0B,KAA1B,CAmKT,CAjKQC,wBAAP,WACE,GAAI,CAACD,eAAL,CAAsB,CACpBA,eAAe,CAAG,GAAIC,YAAJ,EAAlB,CACD,CACD,MAAOD,gBAAP,CACD,CALM;AAQPC,iEACE,IAAsB,sBAAM,CAAC1oD,IAAP,CAAY,KAAK2oD,MAAjB,GAAwBjQ,YAA9C,CAA8C,QAA9C,CAA8CA,YAA9C,CAAgD,CAA3C,GAAMkQ,QAAO,SAAb,KACH,IAAoB,kCAAM,CAAC5oD,IAAP,CAAY,KAAK2oD,MAAL,CAAYC,OAAZ,CAAZ,IAAiCjQ,YAArD,CAAqD,QAArD,CAAqDA,YAArD,CAAuD,CAAlD,GAAMkQ,MAAK,SAAX,CACH,KAAKF,MAAL,CAAYC,OAAZ,EAAqBC,KAArB,EAA4B7Q,SAA5B,GACD,4HACF,4HACF,CAND,CAQA0Q,8DACE,IAAsB,sBAAM,CAAC1oD,IAAP,CAAY,KAAK2oD,MAAjB,GAAwBjQ,YAA9C,CAA8C,QAA9C,CAA8CA,YAA9C,CAAgD,CAA3C,GAAMkQ,QAAO,SAAb,KACH,IAAoB,kCAAM,CAAC5oD,IAAP,CAAY,KAAK2oD,MAAL,CAAYC,OAAZ,CAAZ,IAAiCjQ,YAArD,CAAqD,QAArD,CAAqDA,YAArD,CAAuD,CAAlD,GAAMkQ,MAAK,SAAX,CACH,KAAKF,MAAL,CAAYC,OAAZ,EAAqBC,KAArB,EAA4BnL,MAA5B,GACD,4HACF,4HACF,CAND;;OAWAgL,qDAAsBrqC,IAAtB,CAAkCtX,IAAlC,CAAgDsC,IAAhD,CAA4D,CAC1DgV,IAAI,CAACgvB,SAAL,CAAiB,GAAI7lC,SAAJ,CACZT,IAAI,IAAJ,CAAQsC,IADI,cAED,KAFC,CAGfgV,IAAI,CAACgvB,SAAL,CAAepmC,SAHA,CAIfoX,IAAI,CAACgvB,SAAL,CAAenmC,aAJA,CAKfmX,IAAI,CAACgvB,SAAL,CAAelmC,SALA,CAMfkX,IAAI,CAACgvB,SAAL,CAAejmC,cANA,CAOfiX,IAAI,CAACgvB,SAAL,CAAehmC,6BAPA,CAAjB,CAUA,GAAIgX,IAAI,CAACgvB,SAAL,CAAelmC,SAAnB,CAA8B,CAC5BkX,IAAI,CAAC4zB,kBAAL,CAA0B,GAAIqW,2BAAJ,EAA1B,CACD,CACF,CAdD;;;;;OAsBAI,+CACE1O,GADF,CAEE8O,YAFF,CAGE9gB,GAHF,CAIE7gC,SAJF,CAIqB,CAEnB,GAAI0hD,MAAK,CAAuB7gB,GAAG,EAAIgS,GAAG,CAACvQ,OAAJ,CAAYsf,WAAnD,CACA,GAAIF,KAAK,GAAKr+C,SAAd,CAAyB,CACvB,GAAI,CAACwvC,GAAG,CAACvQ,OAAJ,CAAYuf,SAAjB,CAA4B,CAC1BrrD,KAAK,CACH,6DACE,sDAFC,CAAL,CAID,CAEDT,GAAG,CAAC,iCAAD,CAAoC88C,GAAG,CAACvQ,OAAJ,CAAYuf,SAAhD,CAAH,CACAH,KAAK,CAAM7O,GAAG,CAACvQ,OAAJ,CAAYuf,SAAZ,CAAqB,8BAAhC,CACD,CAED,GAAIhgD,UAAS,CAAGF,aAAa,CAAC+/C,KAAD,CAAQ1hD,SAAR,CAA7B,CACA,GAAIgC,SAAQ,CAAGH,SAAS,CAACG,QAAzB,CAEA,GAAI8/C,WAAJ,CAEA,GAAIC,eAAc,CAAuB1+C,SAAzC,CACA,GAAI,MAAOm/B,QAAP,GAAmB,WAAvB,CAAoC,CAClCuf,cAAc,CAAGvf,OAAO,CAACE,GAAR,CAAY2e,mCAAZ,CAAjB,CACD,CAED,GAAIU,cAAJ,CAAoB,CAClBD,UAAU,CAAG,IAAb,CACAJ,KAAK,CAAG,UAAUK,cAAV,CAAwB,MAAxB,CAA+B//C,QAAQ,CAAClC,SAAhD,CACA+B,SAAS,CAAGF,aAAa,CAAC+/C,KAAD,CAAQ1hD,SAAR,CAAzB,CACAgC,QAAQ,CAAGH,SAAS,CAACG,QAArB,CACD,CALD,IAKO,CACL8/C,UAAU,CAAG,CAACjgD,SAAS,CAACG,QAAV,CAAmBnC,MAAjC,CACD,CAED,GAAMmiD,kBAAiB,CACrBhiD,SAAS,EAAI8hD,UAAb,CACI,GAAIX,2BAAJ,EADJ,CAEI,GAAIJ,0BAAJ,CAA8BlO,GAA9B,CAAmC8O,YAAnC,CAHN,CAKAj9C,WAAW,CAAC,+BAAD,CAAkC,CAAlC,CAAqC7C,SAArC,CAAX,CACA,GAAI,CAACA,SAAS,CAACpG,IAAV,CAAesM,OAAf,EAAL,CAA+B,CAC7BvR,KAAK,CACH,8DACE,+BAFC,CAAL,CAID,CAED,GAAM0gB,KAAI,CAAG,KAAK+qC,UAAL,CAAgBjgD,QAAhB,CAA0B6wC,GAA1B,CAA+BmP,iBAA/B,CAAb,CAEA,MAAO9qC,KAAI,CAACqkC,QAAZ,CACD,CAtDD;;;;OA6DAgG,0CAAWrqC,IAAX,CAAqB,CACnB,GAAMgrC,SAAQ,CAAGrzC,OAAO,CAAC,KAAK2yC,MAAN,CAActqC,IAAI,CAAC27B,GAAL,CAAS3/C,IAAvB,CAAxB;AAEA,GAAI,CAACgvD,QAAD,EAAarzC,OAAO,CAACqzC,QAAD,CAAWhrC,IAAI,CAACzkB,GAAhB,CAAP,GAAgCykB,IAAjD,CAAuD,CACrD1gB,KAAK,CACH,YAAY0gB,IAAI,CAAC27B,GAAL,CAAS3/C,IAArB,CAAyB,GAAzB,CAA6BgkB,IAAI,CAACgvB,SAAlC,CAA2C,6BADxC,CAAL,CAGD,CACDhvB,IAAI,CAAC25B,SAAL,GACA,MAAOqR,SAAQ,CAAChrC,IAAI,CAACzkB,GAAN,CAAf,CACD,CAVD;;;;;;;OAoBA8uD,0CACEv/C,QADF,CAEE6wC,GAFF,CAGEmP,iBAHF,CAGsC,CAEpC,GAAIE,SAAQ,CAAGrzC,OAAO,CAAC,KAAK2yC,MAAN,CAAc3O,GAAG,CAAC3/C,IAAlB,CAAtB,CAEA,GAAI,CAACgvD,QAAL,CAAe,CACbA,QAAQ,CAAG,EAAX,CACA,KAAKV,MAAL,CAAY3O,GAAG,CAAC3/C,IAAhB,EAAwBgvD,QAAxB,CACD,CAED,GAAIhrC,KAAI,CAAGrI,OAAO,CAACqzC,QAAD,CAAWlgD,QAAQ,CAAClB,WAAT,EAAX,CAAlB,CACA,GAAIoW,IAAJ,CAAU,CACR1gB,KAAK,CACH,yHADG,CAAL,CAGD,CACD0gB,IAAI,CAAG,GAAI47B,KAAJ,CAAS9wC,QAAT,CAAmB,KAAKmgD,cAAxB,CAAwCtP,GAAxC,CAA6CmP,iBAA7C,CAAP,CACAE,QAAQ,CAAClgD,QAAQ,CAAClB,WAAT,EAAD,CAAR,CAAmCoW,IAAnC,CAEA,MAAOA,KAAP,CACD,CAtBD;;;OA4BAqqC,+CAAgBa,eAAhB,CAAwC,CACtC,KAAKD,cAAL,CAAsBC,eAAtB,CACD,CAFD,CAGF,mBAAC,CAjLD,GCjDA;;;;;;;;;;;;;;;IA8BA;;;;;;OA4BE,kBAAoBC,aAApB,CAAuC,CAAvC,eAAoB,mGAtBZ,sBAA4B,KAA5B,CA8BR,cAAW,CACT9kC,MAAM,CAAE,gGACN,KAAK+kC,aAAL,CAAmB,QAAnB,EACAf,WAAW,CAACpW,WAAZ,GAA0BoX,UAA1B,CAAqC,KAAK19C,KAA1C,EACA,KAAKw9C,aAAL,CAAqB,IAArB,CACA,KAAKG,aAAL,CAAqB,IAArB,yBAJM,EAKP,CANQ,CAAX,CAPE,GAAI,EAAEH,aAAa,WAAYvP,KAA3B,CAAJ,CAAsC,CACpCt8C,KAAK,CACH,sEADG,CAAL,CAGD,CACF,CAWDoG,sBAAYq6C,kBAAZ,CAAY,OAAZ,CAAiB,KAAjB,WACE,GAAI,CAAC,KAAKwL,gBAAV,CAA4B,CAC1B,KAAKJ,aAAL,CAAmBxZ,KAAnB,GACA,KAAK4Z,gBAAL,CAAwB,IAAxB,CACD,CACD,MAAO,MAAKJ,aAAZ,CACD,CANgB,oCAAjB,EAQAzlD,sBAAIq6C,kBAAJ,CAAI,OAAJ,CAAS,KAAT,WACE,GAAI,CAAC,KAAKuL,aAAV,CAAyB,CACvB,KAAKA,aAAL,CAAqB,GAAInH,UAAJ,CAAc,KAAKx2C,KAAnB,CAA0BhI,IAAI,CAAC2hB,KAA/B,CAArB,CACD,CAED,MAAO,MAAKgkC,aAAZ,CACD,CANQ,oCAAT,EAQA5lD,sBAAIq6C,kBAAJ,CAAI,KAAJ,CAAO,KAAP,WACE,MAAO,MAAKpyC,KAAL,CAAWguC,GAAlB,CACD,CAFM,oCAAP;;;;;;;OAYAoE,wCAAYr3C,IAAZ,CAA0BsC,IAA1B,CAAsC,CACpC,KAAKogD,aAAL,CAAmB,aAAnB,EACA,GAAI,KAAKG,gBAAT,CAA2B,CACzBjsD,KAAK,CACH,wEADG,CAAL,CAGA,OACD;AAGD+qD,WAAW,CAACpW,WAAZ,GAA0BuX,qBAA1B,CACE,KAAKL,aADP,CAEEziD,IAFF,CAGEsC,IAHF,EAKD,CAfD,CA6BA+0C,gCAAIx7C,IAAJ,CAA6B,CAC3B,KAAK6mD,aAAL,CAAmB,KAAnB,EACAt9C,gBAAgB,CAAC,cAAD,CAAiB,CAAjB,CAAoB,CAApB,CAAuBC,SAAS,CAAChQ,MAAjC,CAAhB,CAEA,GAAIwG,IAAI,WAAY4/C,UAApB,CAA+B,CAC7B,MAAO,MAAKsH,UAAL,CAAgBlnD,IAAI,CAACrI,QAAL,EAAhB,CAAP,CACD,CAED,MAAOqI,KAAI,GAAK4H,SAAT,CAAqB,KAAKiJ,KAAL,CAAW1N,KAAX,CAAiBnD,IAAjB,CAArB,CAA8C,KAAK6Q,KAA1D,CACD,CATD;;;;;;OAkBA2qC,uCAAWpW,GAAX,CAAsB,uBAEpB,GAAM+hB,QAAO,CAAG,qBAAhB,CACA,KAAKN,aAAL,CAAmBM,OAAnB,EACA59C,gBAAgB,CAAC49C,OAAD,CAAU,CAAV,CAAa,CAAb,CAAgB39C,SAAS,CAAChQ,MAA1B,CAAhB,CACA,GAAM4tD,UAAS,CAAGlhD,aAAa,CAACk/B,GAAD,CAAM,KAAKh8B,KAAL,CAAWqhC,SAAX,CAAqBlmC,SAA3B,CAA/B,CACA0E,WAAW,CAACk+C,OAAD,CAAU,CAAV,CAAaC,SAAb,CAAX,CAEA,GAAM7gD,SAAQ,CAAG6gD,SAAS,CAAC7gD,QAA3B,CACA,GACE,CAACA,QAAQ,CAAC1B,YAAT,EAAD,EACA0B,QAAQ,CAACpC,IAAT,GAAkB,KAAKiF,KAAL,CAAWqhC,SAAX,CAAqBtmC,IAFzC,CAGE,CACApJ,KAAK,CACHosD,OAAO,CACL,mDADF,CAEE,SAFF,CAGE5gD,QAAQ,CAACpC,IAHX,CAIE,gBAJF,CAKE,KAAKiF,KAAL,CAAWqhC,SAAX,CAAqBtmC,IALvB,CAME,GAPC,CAAL,CASD,CAED,MAAO,MAAKsV,GAAL,CAAS2tC,SAAS,CAACpnD,IAAV,CAAerI,QAAf,EAAT,CAAP,CACD,CAzBD;;OA8BQ6jD,iCAAR,SAAsB2L,OAAtB,CAAqC,CACnC,GAAI,KAAKP,aAAL,GAAuB,IAA3B,CAAiC,CAC/B7rD,KAAK,CAAC,eAAiBosD,OAAjB,CAA2B,yBAA5B,CAAL,CACD,CACF,CAJO;AAOR3L,wCACEjyC,gBAAgB,CAAC,oBAAD,CAAuB,CAAvB,CAA0B,CAA1B,CAA6BC,SAAS,CAAChQ,MAAvC,CAAhB,CACA,KAAKqtD,aAAL,CAAmB,WAAnB,EACA,KAAKz9C,KAAL,CAAWgsC,SAAX,GACD,CAJD,CAMAoG,uCACEjyC,gBAAgB,CAAC,mBAAD,CAAsB,CAAtB,CAAyB,CAAzB,CAA4BC,SAAS,CAAChQ,MAAtC,CAAhB,CACA,KAAKqtD,aAAL,CAAmB,UAAnB,EACA,KAAKz9C,KAAL,CAAW0xC,MAAX,GACD,CAJD,CAxJgBU,qBAAc,CAC5B6L,SAAS,CAAE,CACT,MAAO,WADE,CADiB,CAI5BC,SAAS,CAAE,SAAC7mC,KAAD,CAAc,CACvB,MAAO,CACL,MAAO,CACL,YAAaA,KADR,CADF,CAAP,CAKD,CAV2B,CAAd,CA6JlB,gBApKA,IClCA;;;;;;;;;;;;;;;IAmCA;;;;;;GAQO,GAAM8mC,iBAAgB,CAAG,WAC9B7gB,mBAAmB,CAAC8gB,aAApB,GACAtnB,qBAAqB,CAACunB,UAAtB,GACD,CAHM,CAKA,GAAMC,gBAAe,CAAG,WAC7BxnB,qBAAqB,CAACsnB,aAAtB,GACD,CAFM,CAIP,yBACO,GAAMpe,sBAAqB,CAAG,WACnC,MAAO1C,oBAAmB,CAAC,aAAD,CAAnB,EAAP,CACD,CAFM,CAIA,GAAMihB,yBAAwB,CAAG,SACtCluC,GADsC,CAEtCkD,QAFsC,CAET;AAG5BlD,GAAG,CAACgC,IAAJ,CAAS87B,qBAAT,CAAuC3B,sBAAvC,CAAgEj5B,QAAhE,CACF,CANM,CAQA,GAAMgf,MAAK,CAAG,SAAUliB,GAAV,CAA0BshC,SAA1B,CAA6C,CAChEthC,GAAG,CAACgC,IAAJ,CAASkgB,KAAT,CAAeof,SAAf,EACD,CAFM,CAIA,GAAM6M,sBAAqB,CAAG,SAAUnuC,GAAV,CAA0B4hC,MAA1B,CAAwC,CAC3E5hC,GAAG,CAACgC,IAAJ,CAASmsC,qBAAT,CAA+BvM,MAA/B,EACD,CAFM,CAIA,GAAM1C,gBAAe,CAAG,SAAUl/B,GAAV,CAAwB,CACrD,MAAOA,IAAG,CAACgC,IAAJ,CAASk9B,eAAhB,CACD,CAFM,CAIA,GAAMkP,oBAAmB,CAAG,SACjCpuC,GADiC,CAEjCkD,QAFiC,CAEiB,CAElD,MAAOlD,IAAG,CAACgC,IAAJ,CAASqsC,oBAAT,CAA8BnrC,QAA9B,CAAP,CACD,CALM,CAOP;;;;;;;;WASgBorC,gBAAkBC,GAcjC,IAbC5Q,IAAG,QACHhS,GAAG,QACHgB,OAAO,YACP6hB,cAAc,mBACd5jD,SAAS,cACT6jD,yBAAS,aAAG,KAAH,CAAQA,GAYjB/hB,aAAa,CAACC,OAAD,CAAb;;;OAMA,GAAM8f,aAAY,CAAG,GAAIiC,SAAJ,CACnB,eADmB,CAEnB,GAAIC,mBAAJ,CAAuB,qBAAvB,CAFmB,CAArB,CAIAlC,YAAY,CAACmC,YAAb,CACE,GAAIC,UAAJ,CAAc,eAAd,CAA+B,WAAM,sBAAc,CAAnD,CAAmD,sBAAnD,CADF,EAIA,MAAO,CACLC,QAAQ,CAAEzC,WAAW,CAACpW,WAAZ,GAA0B8Y,eAA1B,CACRpR,GADQ,CAER8O,YAFQ,CAGR9gB,GAHQ,CAIR7gC,SAJQ,CADL,CAOLF,SAAS,UAPJ,CAAP,CASF,yXCtIA;;;;;;;;;;;;;;;GAuBO,GAAMokD,eAAc,CAAGlZ,oBAAvB,CAEP;;;IAIA;AACCA,oBAAoB,CAACkS,SAArB,CAAuCiH,YAAvC,CAAsD,SACrDrnD,UADqD,CAErDiI,UAFqD,CAErB,CAEhC,KAAK4mC,WAAL,CAAiB,GAAjB,CAAsB,CAAEG,CAAC,CAAEhvC,UAAL,CAAtB,CAAyCiI,UAAzC,EACD,CALA,CAOD;;;IAIA;AACCimC,oBAAoB,CAACkS,SAArB,CAAuCkH,IAAvC,CAA8C,SAC7CptD,IAD6C,CAE7CqtD,MAF6C,CAEjB,CAE5B,KAAK1Y,WAAL,CAAiB,MAAjB,CAAyB,CAAEtL,CAAC,CAAErpC,IAAL,CAAzB,CAAsCqtD,MAAtC,EACD,CALA,CAOD;AACO,GAAMC,mBAAkB,CAAG9d,UAA3B,CAEP;;;GAIO,GAAM+d,WAAU,CAAG,SAAUC,OAAV,CAA+B,CACvD,GAAMC,OAAM,CAAGzZ,oBAAoB,CAACkS,SAArB,CAA+BlM,GAA9C,CACAhG,oBAAoB,CAACkS,SAArB,CAA+BlM,GAA/B,CAAqC,SACnCl0C,UADmC,CAEnC9F,IAFmC,CAGnC+N,UAHmC,CAInCqM,IAJmC,CAI/B,CAEJ,GAAIA,IAAI,GAAK/N,SAAb,CAAwB,CACtB+N,IAAI,CAAGozC,OAAO,EAAd,CACD,CACDC,MAAM,CAACtuC,IAAP,CAAY,IAAZ,CAAkBrZ,UAAlB,CAA8B9F,IAA9B,CAAoC+N,UAApC,CAAgDqM,IAAhD,EACD,CAVD,CAWA,MAAO,YACL45B,oBAAoB,CAACkS,SAArB,CAA+BlM,GAA/B,CAAqCyT,MAArC,CACD,CAFD,CAGD,CAhBM,CAkBP;;GAGO,GAAMC,iBAAgB,CAAGrkD,QAAzB,CAEP;;;GAIO,GAAMya,gBAAe,CAAG,SAAUvf,KAAV,CAAsB,CACnD,MAAOA,MAAK,CAACuf,eAAN,EAAP,CACD,CAFM,CAIP;;;;GAKO,GAAMsnC,gBAAe,CAAG,SAAUA,eAAV,CAAkC,CAC/Db,WAAW,CAACpW,WAAZ,GAA0BiX,eAA1B,CAA0CA,eAA1C,EACD,CAFM,4SC5FP;;;;;;;;;;;;;;;MAmCMuC,YAAW,CAAG1N,QAAQ,CAAC0N,oBAEbC,kBAAiBZ,SAA2B;AAE1DpiB,aAAa,CAACoiB,QAAQ,CAACriB,WAAV,CAAb;AAGA,GAAM7hC,UAAS,CAAIkkD,QAA+B,CAACa,QAAhC,CAAyCC,iBAAzC,CACjB,GAAIf,UAAJ,CACE,UADF,CAEE,SAACjrC,SAAD,CAAY+nB,GAAZ,CAAe;AAGb,GAAMgS,IAAG,CAAG/5B,SAAS,CAACisC,WAAV,CAAsB,KAAtB,EAA6BlE,YAA7B,EAAZ,CACA,GAAMc,aAAY,CAAG7oC,SAAS,CAACisC,WAAV,CAAsB,eAAtB,CAArB,CAEA,MAAOxD,YAAW,CAACpW,WAAZ,GAA0B8Y,eAA1B,CACLpR,GADK,CAEL8O,YAFK,CAGL9gB,GAHK,CAAP,CAKD,CAbH,CAaG,oBAbH,EAgBGmkB,eAhBH;AAkBI,CACE3J,SAAS,UADX,CAEEhkC,KAAK,MAFP,CAGE4/B,QAAQ,SAHV,CAIE3iC,YAAY,aAJd,CAKE9e,aAAa,cALf,CAMEqvD,QAAQ,SANV,CAOEF,WAAW,YAPb,CAQEM,WAAW,YARb,CAlBJ,EA6BGC,oBA7BH,CA6BwB,IA7BxB,CADiB,CAAnB,CAiCAlB,QAAQ,CAACmB,eAAT,CAAyBjyD,IAAzB,CAA+B2uC,OAA/B,EAEA,GAAIvqC,SAAS,EAAb,CAAiB,CACf8tD,MAAM,CAACC,OAAP,CAAiBvlD,SAAjB,CACD,CACF,CAED8kD,gBAAgB,CAACU,QAAD,CAAhB","names":["domStorage_","DOMStorageWrapper","key","value","removeItem","prefixedName_","setItem","stringify","storedVal","getItem","jsonEval","name","prefix_","toString","MemoryStorage","cache_","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","message","i","length","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","set","remove","get","logWrapper","prefix","__spread","error","fatal","Error","warn","warnIfPageIsSecure","location","protocol","indexOf","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","isNodeSdk","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","ebits","fbits","bias","s","f","ln","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","path","toUpperCase","INTEGER_REGEXP_","RegExp","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","Object","Path","pathString","encodeURIComponent","String","begin","slice","pieces","childPathObj","childPieces","outerPath","innerPath","outer","getFront","inner","relativePath","popFront","left","right","leftKeys","rightKeys","cmp","other","getLength","j","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","ValidationPath","child","last","pop","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","WEBSOCKET","LONG_POLLING","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","domain","internalHost","RepoInfo","isCustomHost","newHost","isCacheableHost","type","params","connURL","needsQueryParam","pairs","toURLString","decodePath","pathStringDecoded","piece","decodeURIComponent","replace","decodeQuery","queryString","results","charAt","_c","segment","kv","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","queryParams","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefixFxn","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","comparePaths","prevPath","validateFirebaseMergeDataArg","getBack","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","bool","repo_","OnDisconnect","onComplete","validateArgCount","arguments","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","committed","snapshot","TransactionResult","toJSON","nextPushId","PUSH_CHARS","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","random","node","NamedNode","Index","compare","oldNode","newNode","oldWrapped","newWrapped","MIN","__EMPTY_NODE","__extends","KeyIndex","val","assertionError","indexValue","KEY_INDEX","MAX_NODE","setMaxNode","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","isEmpty","getPriority","__childrenNodeConstructor","value_","priorityNode_","LeafNode","EMPTY_NODE","newPriorityNode","childName","childNode","newChildNode","updatePriority","updateImmediateChild","front","updateChild","index","action","exportFormat","getValue","lazyHash_","toHash","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","equals","nodeFromJSON","setNodeFromJSON","PriorityIndex","aPriority","bPriority","indexCmp","compareTo","PRIORITY_INDEX","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","SortedMapIterator","result","color","LLRBNode","RED","SortedMap","count","inorderTraversal","reverseTraversal","min_","maxKey","n","copy","insert","fixUp_","isRed_","moveRedLeft_","removeMin_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","blackDepth","check_","LLRBEmptyNode","comparator_","root_","BLACK","rightParent","minKey","resultGenerator","LOG_2","logBase2","num","bitMask","current_","mask","bits_","Base12Num","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","nextBitIsOne","_defaultIndexMap","fallbackObject","indexes_","indexSet_","IndexMap","indexKey","sortedMap","safeGet","indexDefinition","existingChildren","sawIndexedValue","iter","getIterator","Wrap","next","getNext","isDefinedOn","newIndex","getCompare","indexName","newIndexSet","newIndexes","map","indexedChildren","_this","existingSnap","newChildren","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","children_","indexMap_","ChildrenNode","Default","getImmediateChild","getChild","newIndexMap","removeFromIndexes","addToIndexes","newPriority","newImmediateChild","numKeys","allIntegerKeys","forEachChild","array","toHash_1","childHash","hash","idx","resolveIndex_","predecessor","getPredecessorKey","getFirstChildName","getLastChildName","wrappedNode","getIteratorFrom","minPost","startPost","iterator","peek","getReverseIteratorFrom","maxPost","endPost","hasIndex","addIndex","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","_super","MaxNode","defineProperties","MAX","setPriorityMaxNode","USE_HINZE","json","jsonLeaf","children_1","childrenHavePriority_1","hinzeJsonObj","childSet","sortedChildSet","node_1","childData","ValueIndex","valueNode","VALUE_INDEX","indexPath_","PathIndex","snap","aChild","extractChild","bChild","node_","ref_","index_","DataSnapshot","exportVal","childPathString","childPath","childRef","childrenNode","getKey","numChildren","getRef","eventRegistration","prevName","DataEvent","ref","getParent","getEventRunner","getPath","CancelEvent","callback_","cancelCallback_","context_","ValueEventRegistration","change","getQueryParams","getIndex","snapshotNode","eventData","ctx","getEventType","cancelCB_1","call","cb_1","callbacks_","ChildEventRegistration","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","thisCount","otherKey","thisKey","every","__referenceConstructor","repo","queryParams_","orderByCalled_","Query","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","startName","getIndexStartName","endName","getIndexEndName","hasLimit","hasAnchoredLimit","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","cancel","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","validateContextObject","valueCallback","removeEventCallbackForQuery","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","off","resolve","on","err","reject","limit","limitToFirst","limitToLast","validateNoPreviousOrderByCall_","parsedPath","newParams","orderBy","validateQueryEndpoints_","startAt","validateLimit_","endAt","toUrlEncodedString","getQueryObject","queryObject","sameRepo","samePath","sameQueryIdentifier","queryIdentifier","cancelOrContext","ExistingValueProvider","syncTree","syncTree_","DeferredValueProvider","calcCompleteEventCache","generateWithValues","values","Date","getTime","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","existing","unused","delta","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","Map","SparseSnapshotTree","children","size","childKey","has","find","clear","remember","self_1","tree","forget","safeToRemove","delete","prefixPath","func","forEachTree","forEach","OperationType","fromUser","fromServer","queryId","tagged","OperationSource","affectedTree","revert","ACK_USER_WRITE","User","AckUserWrite","subtree","Empty","emptyChildrenSingleton","EmptyChildren","ImmutableTree","childSnap","predicate","childExistingPathAndValue","findRootMostMatchingPathAndValue","fullPath","toSet","newChild","newTree","setTree","fold_","pathSoFar","accum","findOnPath_","pathToFollow","nextChild","foreachOnPath_","currentRelativePath","foreach_","source","LISTEN_COMPLETE","ListenComplete","OVERWRITE","Overwrite","MERGE","Merge","fullyInitialized_","filtered_","CacheNode","isFullyInitialized","isCompleteForChild","hasChild","eventCache_","serverCache_","ViewCache","eventSnap","complete","filtered","serverSnap","getNode","oldSnap","Change","VALUE","CHILD_ADDED","CHILD_REMOVED","newSnapshot","oldSnapshot","CHILD_CHANGED","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","isIndexed","oldChild","trackChildChange","childRemovedChange","childAddedChange","childChangedChange","withIndex","newSnap","ChildChangeAccumulator","oldChange","changeMap","oldType","from","NoCompleteChildSource_","NO_COMPLETE_CHILD_SOURCE","writes_","viewCache_","optCompleteServerCache_","WriteTreeCompleteChildSource","getEventCache","serverNode","getServerCache","calcCompleteChild","completeServerData","getCompleteServerSnap","nodes","calcIndexedSlice","viewCache","changes","filter_","ViewProcessor","oldViewCache","operation","writesCache","completeCache","accumulator","newViewCache","filterServerNode","overwrite","applyUserOverwrite_","isFiltered","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","ackUserWrite_","revertUserWrite_","listenComplete_","getChanges","maybeAddValueEvent_","ProcessorResult","isLeafOrEmpty","oldCompleteSnap","getCompleteEventSnap","valueChange","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","updateFullNode","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","updateEventSnap","filtersNodes","changedSnap","oldServerSnap","newServerCache","serverFilter","getIndexedFilter","newServerNode","isCompleteForPath","updateServerSnap","generateEventCacheAfterServerEvent_","getCompleteChild","parent","newEventSnap","changedChildren","curViewCache","foreach","writePath","cacheHasChild_","viewMergeTree","serverChild","applyMerge_","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","query_","EventGenerator","eventCache","eventRegistrations","events","moves","indexedValueChanged","childMovedChange","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","respondsTo","createEvent","getPredecessorChildName","aWrapped","bWrapped","initialViewCache","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","View","cache","loadsAllData","eventRegistrations_","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","matches","hasAnyCallback","concat","applyOperation","assertIndexed","generateEventsForChanges_","initialChanges","eventNode","generateEventsForChanges","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","addEventRegistration","getInitialEvents","removed","hadCompleteView","hasCompleteView","entries","viewQueryId","removeEventRegistration","getQuery","getCompleteServerCache","getCompleteView","viewForQuery","writeTree_","CompoundWrite","rootmost","findRootMostValueAndPath","rootMostPath","newWriteTree","updates","newWrite","addWrite","getCompleteNode","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","WriteTreeRef","writeId","visible","lastWriteId_","allWrites_","visibleWrites_","addWrites","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","removeWrite","treePath","writeIdsToExclude","includeHiddenWrites","subMerge","childCompoundWrite","hasCompleteWrite","layeredCache","write","mergeAtPath","layerTree_","completeServerChildren","topLevelSet","merge_1","getCompleteChildren","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","listenProvider_","SyncTree","newData","pendingWriteTree_","addOverwrite","applyOperationToSyncPoints_","addMerge","changeTree","fromObject","getWrite","needToReevaluate","affectedTree_1","Server","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","forServerTaggedQuery","applyTaggedOperation_","foundAncestorDefaultView","syncPointTree_","foreachOnPath","pathToSyncPoint","sp","syncPoint","foreachChild","childSyncPoint","viewAlreadyExists","viewExistsForQuery","makeQueryKey_","queryToTagMap","getNextQueryTag_","tagToQueryMap","childWrites","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","findOnPath","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","defaultTag","stopListening","queryToRemove","tagToRemove","removeTags_","includeHiddenSets","fold","maybeChildSyncPoint","childMap","completeView","views_1","getQueryViews","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","applyTaggedListenComplete","applyListenComplete","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","operationForChild","childServerCache","childWritesCache","SnapshotHolder","rootNode_","newSnapshotNode","StatsCollection","amount","counters_","deepCopy","StatsManager","hashString","collections_","creatorFunction","reporters_","collection_","StatsListener","newStats","last_","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","collection","server_","statsListener_","reportStats_","StatsReporter","statsToReport_","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventDataList","currList","eventPath","eventLists_","EventList","add","queueEvents","raiseQueuedEventsMatchingPredicate_","changedPath","recursionDepth_","sentAll","eventList","raise","events_","eventFn","allowedEvents_","EventEmitter","listeners_","listeners","validateEventType_","getInitialEvent","et","hidden","visibilityChange","visible_","trigger","VisibilityMonitor","isMobileCordova","online_","OnlineMonitor","onMessage_","PacketReceiver","responseNum","closeAfterResponse","onClose","currentResponseNum","requestNum","pendingResponses","toProcess","this_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","connId","applicationId","transportSessionId","lastSessionId","log_","stats_","getCollection","urlFn","connectionURL","BrowserPollConnection","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","clearTimeout","everConnected_","password","sendNewPolls","closeAfter","pN","handleResponse","urlParams","uniqueCallbackIdentifier","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow_","forceDisallow_","createElement","close","myDisconnFrame","removeChild","shutdown_","dataStr","bytesSent","incrementCounter","base64data","base64Encode","enqueueSegment","pw","src","style","display","appendChild","bytesReceived","commandCB","onMessageCB","Set","myIFrame","createIFrame_","script","currentDomain","iframeContents","doc","open","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","outstandingRequests","pendingSegs","currentSerial","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","handleIncomingFrame","m","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","isInMemoryStorage","frames","totalFrames","fullMess","jsonMess","frameCount","isNaN","handleNewFrameCount_","mess","resetKeepAlive","appendFrame_","remainingData","extractFrameCount_","sendString_","keepaliveTimer","clearInterval","setInterval","send","initTransports_","TransportManager","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","ALL_TRANSPORTS","transport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","repoInfo_","applicationId_","onReady_","onKill_","transportManager_","start_","Connection","conn","initialTransport","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","markConnectionHealthy","connectionCount","onConnectionLost_","everConnected","onSecondaryConnectionLost_","state_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","msg","t","sendData_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","onSecondaryControl_","pendingDataMessages","proceedWithUpgrade_","start","tryCleanupConnection","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","updateHost","onConnectionEstablished_","tryStartUpgrade_","upgradeTransport","startUpgrade_","closeConnections_","ServerActions","token","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","GET_CONNECT_TIMEOUT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_AUTH_TOKEN_THRESHOLD","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","PersistentConnection","nextPersistentConnectionId_","scheduleConnect_","getInstance","onVisible_","onOnline_","onResponse","curReqNum","requestNumber_","connected_","realtime_","sendRequest","requestCBHash_","request","p","q","outstandingGet","outstandingGets_","outstandingGetCount_","sendGet_","currentHashFn","listens","listenSpec","sendListen_","req","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","indexPath","authToken_","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","isAdmin","maxReconnectDelay_","token_1","authMethod","isValidFormat","requestData","cred","res","invalidAuthTokenCount_","onAuthRevoked_","listen","sendUnlisten_","queryObj","sendOnDisconnect_","onDisconnectRequestQueue_","response","putInternal","outstandingPuts_","outstandingPutCount_","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","lastConnectionEstablishedTime_","handleTimestamp_","firstConnection_","sendConnectStats_","restoreState_","establishConnectionTimer_","establishConnection_","reconnectDelay_","online","cancelSentTransactions_","shouldReconnect_","lastConnectionAttemptTime_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","onRealtimeDisconnect_","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","forceRefresh","forceTokenRefresh_","getToken","then","accessToken","interrupt","interruptReasons_","serverTimeOffset","put","normalizedPathString","statusCode","explanation","notifyForInvalidToken","securityDebugCallback_","console","_d","_f","clientName","isReactNative","currentlyOnline","ReadonlyRestClient","listenId","getListenId_","thisListen","listens_","queryStringParameters","toRestQueryStringParameters","restRequest_","status_1","authToken","authTokenData","querystring","xhr","XMLHttpRequest","responseText","INTERRUPT_REASON","forceRestClient_","app","Repo","authOverride","persistentConnection_","appId","addTokenChangeListener","refreshAuthToken","statsReporter_","getOrCreateReporter","transactionsInit_","infoData_","infoSyncTree_","infoEvents","applyServerOverwrite","updateInfo_","serverSyncTree_","eventQueue_","raiseEventsForChangedPath","unlisten","offsetNode","offset","serverTime","isMerge","dataUpdateCount","interceptServerDataCallback_","taggedChildren","raw","applyTaggedQueryMerge","taggedSnap","applyTaggedQueryOverwrite","applyServerMerge","rerunTransactions_","connectStatus","runOnDisconnectEvents_","updateSnapshot","nextWriteId_","raiseEventsAtPath","Promise","cached","newVal","generateServerValues","newNodeUnresolved","getNextWriteId_","applyUserOverwrite","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","applyUserMerge","resolvedOnDisconnectTree","resolved","onDisconnectPut","onDisconnectMerge","resume","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","metric","includeStat","__database","Database","indexedFilter_","startPost_","RangedFilter","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","makePost","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","LimitedFilter","fullLimitUpdateChild_","hasNext","inRange","getReverseIterator","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","getFirstChild","getLastChild","oldChildSnap","getChildAfterChild","compareNext","remainsInWindow","nextChildInRange","QueryParams","startSet_","viewFrom_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","indexStartValue_","startNameSet_","indexStartName_","endSet_","indexEndValue_","endNameSet_","indexEndName_","limitSet_","newLimit","copy_","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","database","setWithPriority","transactionUpdate","applyLocally","promiseComplete","startTransaction","thennablePushRef","pushRef","databaseProp","getRoot","name_","parent_","TreeNode","Tree","pathObj","updateParents_","childCount","hasChildren","includeSelf","childrenFirst","forEachDescendant","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","TransactionStatus","MAX_TRANSACTION_RETRIES_","prototype","transactionQueueTree_","watchRef","unwatcher","transaction","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","subTree","nodeQueue","setValue","priorityForNode","currentNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","allRun","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","forEachAncestor","abortTransactionsOnNode_","lastSent","app_","authProvider_","auth_","getImmediate","auth","FirebaseAuthTokenProvider","addAuthTokenListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","FIREBASE_DATABASE_EMULATOR_HOST_VAR","_staticInstance","RepoManager","repos_","appName","dbUrl","authProvider","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","createRepo","appRepos","useRestClient_","forceRestClient","repoInternal_","checkDeleted_","deleteRepo","rootInternal_","instanceStarted_","applyEmulatorSettings","refFromURL","apiName","parsedURL","TIMESTAMP","increment","forceLongPolling","forceDisallow","forceAllow","forceWebSockets","setSecurityDebugCallback","statsIncrementCounter","interceptServerData","interceptServerData_","initStandalone","_a","customAuthImpl","_b","Provider","ComponentContainer","setComponent","Component","instance","databaseFromApp","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","ConnectionTarget","ServerValue","registerDatabase","INTERNAL","registerComponent","getProvider","setServiceProps","TEST_ACCESS","setMultipleInstances","registerVersion","module","exports","firebase"],"sources":["../src/core/storage/DOMStorageWrapper.ts","../src/core/storage/MemoryStorage.ts","../src/core/storage/storage.ts","../src/core/util/util.ts","../src/core/util/Path.ts","../src/realtime/Constants.ts","../src/core/RepoInfo.ts","../src/core/util/libs/parser.ts","../src/core/util/validation.ts","../src/api/onDisconnect.ts","../src/api/TransactionResult.ts","../src/core/util/NextPushId.ts","../src/core/snap/Node.ts","../src/core/snap/indexes/Index.ts","../src/core/snap/indexes/KeyIndex.ts","../src/core/snap/snap.ts","../src/core/snap/LeafNode.ts","../src/core/snap/indexes/PriorityIndex.ts","../src/core/util/SortedMap.ts","../src/core/snap/childSet.ts","../src/core/snap/IndexMap.ts","../src/core/snap/comparators.ts","../src/core/snap/ChildrenNode.ts","../src/core/snap/nodeFromJSON.ts","../src/core/snap/indexes/ValueIndex.ts","../src/core/snap/indexes/PathIndex.ts","../src/api/DataSnapshot.ts","../src/core/view/Event.ts","../src/core/view/EventRegistration.ts","../src/api/Query.ts","../src/core/util/ServerValues.ts","../src/core/SparseSnapshotTree.ts","../src/core/operation/Operation.ts","../src/core/operation/AckUserWrite.ts","../src/core/util/ImmutableTree.ts","../src/core/operation/ListenComplete.ts","../src/core/operation/Overwrite.ts","../src/core/operation/Merge.ts","../src/core/view/CacheNode.ts","../src/core/view/ViewCache.ts","../src/core/view/Change.ts","../src/core/view/filter/IndexedFilter.ts","../src/core/view/ChildChangeAccumulator.ts","../src/core/view/CompleteChildSource.ts","../src/core/view/ViewProcessor.ts","../src/core/view/EventGenerator.ts","../src/core/view/View.ts","../src/core/SyncPoint.ts","../src/core/CompoundWrite.ts","../src/core/WriteTree.ts","../src/core/SyncTree.ts","../src/core/SnapshotHolder.ts","../src/core/stats/StatsCollection.ts","../src/core/stats/StatsManager.ts","../src/core/stats/StatsListener.ts","../src/core/stats/StatsReporter.ts","../src/core/view/EventQueue.ts","../src/core/util/EventEmitter.ts","../src/core/util/VisibilityMonitor.ts","../src/core/util/OnlineMonitor.ts","../src/realtime/polling/PacketReceiver.ts","../src/realtime/BrowserPollConnection.ts","../src/core/version.ts","../src/realtime/WebSocketConnection.ts","../src/realtime/TransportManager.ts","../src/realtime/Connection.ts","../src/core/ServerActions.ts","../src/core/PersistentConnection.ts","../src/core/ReadonlyRestClient.ts","../src/core/Repo.ts","../src/core/view/filter/RangedFilter.ts","../src/core/view/filter/LimitedFilter.ts","../src/core/view/QueryParams.ts","../src/api/Reference.ts","../src/core/util/Tree.ts","../src/core/Repo_transaction.ts","../src/core/AuthTokenProvider.ts","../src/core/RepoManager.ts","../src/api/Database.ts","../src/api/internal.ts","../src/api/test_access.ts","../index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n * @constructor\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param {string} key The key to save the value under\n   * @param {?Object} value The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @param {string} key\n   * @return {*} The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  /**\n   * @param {string} key\n   */\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n *\n * @constructor\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param {string} domStorageName Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @return {?} Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Query } from '../../api/Query';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\nimport { SessionStorage } from '../storage/storage';\nimport { Logger, LogLevel } from '@firebase/logger';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n * @type {function(): number} Generated ID.\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param {!string} str The string to hash\n * @return {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\n/**\n * @param {...*} varArgs\n * @return {string}\n * @private\n */\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n * @type {?function(string)}\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n * @type {boolean}\n * @private\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\n/**\n *\n * @param {...(string|Arguments)} varArgs\n */\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\n/**\n * @param {!string} prefix\n * @return {function(...[*])}\n */\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\n/**\n * @param {...string} varArgs\n */\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\n/**\n * @param {...string} varArgs\n */\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\n/**\n * @param {...*} varArgs\n */\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\n/**\n * @param {!String} methodName\n */\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n * @param {*} data\n * @return {boolean}\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\n/**\n * @param {function()} fn\n */\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n * @type {!string}\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n * @type {!string}\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n * @param {!string} a\n * @param {!string} b\n * @return {!number}\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @param {!string} a\n * @param {!string} b\n * @return {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * @param {string} key\n * @param {Object} obj\n * @return {*}\n */\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\n/**\n * @param {*} obj\n * @return {string}\n */\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param {!string} str The string\n * @param {!number} segsize The maximum number of chars in the string.\n * @return {Array.<string>} The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj The object or array to iterate over\n * @param fn The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param {function(*)} callback Callback function.\n * @param {?Object=} context Optional context to bind to.\n * @return {function(*)}\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param {!number} v A double\n * @return {string}\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n * @return {boolean}\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n * @return {boolean}\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n * @param {!string} code\n * @param {!Query} query\n * @return {Error}\n */\nexport const errorForServerCode = function (code: string, query: Query): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query.path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n};\n\n/**\n * Used to test for integer-looking strings\n * @type {RegExp}\n * @private\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n * @param {!string} str\n * @return {?number}\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= -2147483648 && intVal <= 2147483647) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param {!function()} fn The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param {?Function=} callback Optional onComplete callback.\n * @param {...*} varArgs Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @return {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n *\n * @param {!Object} object\n * @param {string} name\n * @param {!function(): *} fnGet\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param {Function} fn Function to run.\n * @param {number} time Milliseconds to wait before running.\n * @return {number|Object} The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from './util';\nimport { stringLength } from '@firebase/util';\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  private pieces_: string[];\n  private pieceNum_: number;\n\n  /**\n   * Singleton to represent an empty path\n   *\n   * @const\n   */\n  static get Empty() {\n    return new Path('');\n  }\n\n  /**\n   * @param {string|Array.<string>} pathOrString Path string to parse,\n   *      or another path, or the raw tokens array\n   * @param {number=} pieceNum\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  getFront(): string | null {\n    if (this.pieceNum_ >= this.pieces_.length) {\n      return null;\n    }\n\n    return this.pieces_[this.pieceNum_];\n  }\n\n  /**\n   * @return {number} The number of segments in this path\n   */\n  getLength(): number {\n    return this.pieces_.length - this.pieceNum_;\n  }\n\n  /**\n   * @return {!Path}\n   */\n  popFront(): Path {\n    let pieceNum = this.pieceNum_;\n    if (pieceNum < this.pieces_.length) {\n      pieceNum++;\n    }\n    return new Path(this.pieces_, pieceNum);\n  }\n\n  /**\n   * @return {?string}\n   */\n  getBack(): string | null {\n    if (this.pieceNum_ < this.pieces_.length) {\n      return this.pieces_[this.pieces_.length - 1];\n    }\n\n    return null;\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n\n  toUrlEncodedString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n      }\n    }\n\n    return pathString || '/';\n  }\n\n  /**\n   * Shallow copy of the parts of the path.\n   *\n   * @param {number=} begin\n   * @return {!Array<string>}\n   */\n  slice(begin: number = 0): string[] {\n    return this.pieces_.slice(this.pieceNum_ + begin);\n  }\n\n  /**\n   * @return {?Path}\n   */\n  parent(): Path | null {\n    if (this.pieceNum_ >= this.pieces_.length) {\n      return null;\n    }\n\n    const pieces = [];\n    for (let i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    return new Path(pieces, 0);\n  }\n\n  /**\n   * @param {string|!Path} childPathObj\n   * @return {!Path}\n   */\n  child(childPathObj: string | Path): Path {\n    const pieces = [];\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    if (childPathObj instanceof Path) {\n      for (\n        let i = childPathObj.pieceNum_;\n        i < childPathObj.pieces_.length;\n        i++\n      ) {\n        pieces.push(childPathObj.pieces_[i]);\n      }\n    } else {\n      const childPieces = childPathObj.split('/');\n      for (let i = 0; i < childPieces.length; i++) {\n        if (childPieces[i].length > 0) {\n          pieces.push(childPieces[i]);\n        }\n      }\n    }\n\n    return new Path(pieces, 0);\n  }\n\n  /**\n   * @return {boolean} True if there are no segments in this path\n   */\n  isEmpty(): boolean {\n    return this.pieceNum_ >= this.pieces_.length;\n  }\n\n  /**\n   * @param {!Path} outerPath\n   * @param {!Path} innerPath\n   * @return {!Path} The path from outerPath to innerPath\n   */\n  static relativePath(outerPath: Path, innerPath: Path): Path {\n    const outer = outerPath.getFront(),\n      inner = innerPath.getFront();\n    if (outer === null) {\n      return innerPath;\n    } else if (outer === inner) {\n      return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n    } else {\n      throw new Error(\n        'INTERNAL ERROR: innerPath (' +\n          innerPath +\n          ') is not within ' +\n          'outerPath (' +\n          outerPath +\n          ')'\n      );\n    }\n  }\n\n  /**\n   * @param {!Path} left\n   * @param {!Path} right\n   * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\n   */\n  static comparePaths(left: Path, right: Path): number {\n    const leftKeys = left.slice();\n    const rightKeys = right.slice();\n    for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n      const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n      if (cmp !== 0) {\n        return cmp;\n      }\n    }\n    if (leftKeys.length === rightKeys.length) {\n      return 0;\n    }\n    return leftKeys.length < rightKeys.length ? -1 : 1;\n  }\n\n  /**\n   *\n   * @param {Path} other\n   * @return {boolean} true if paths are the same.\n   */\n  equals(other: Path): boolean {\n    if (this.getLength() !== other.getLength()) {\n      return false;\n    }\n\n    for (\n      let i = this.pieceNum_, j = other.pieceNum_;\n      i <= this.pieces_.length;\n      i++, j++\n    ) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   *\n   * @param {!Path} other\n   * @return {boolean} True if this path is a parent (or the same as) other\n   */\n  contains(other: Path): boolean {\n    let i = this.pieceNum_;\n    let j = other.pieceNum_;\n    if (this.getLength() > other.getLength()) {\n      return false;\n    }\n    while (i < this.pieces_.length) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n      ++i;\n      ++j;\n    }\n    return true;\n  }\n} // end Path\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  /** @type {!Array<string>} */\n  private parts_: string[];\n  /** @type {number} Initialize to number of '/' chars needed in path. */\n  private byteLength_: number;\n\n  /**\n   * @param {!Path} path Initial Path.\n   * @param {string} errorPrefix_ Prefix for any error messages.\n   */\n  constructor(path: Path, private errorPrefix_: string) {\n    /** @type {!Array<string>} */\n    this.parts_ = path.slice();\n    /** @type {number} Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    this.checkValid_();\n  }\n\n  /** @const {number} Maximum key depth. */\n  static get MAX_PATH_DEPTH() {\n    return 32;\n  }\n\n  /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n  static get MAX_PATH_LENGTH_BYTES() {\n    return 768;\n  }\n\n  /** @param {string} child */\n  push(child: string) {\n    // Count the needed '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ += 1;\n    }\n    this.parts_.push(child);\n    this.byteLength_ += stringLength(child);\n    this.checkValid_();\n  }\n\n  pop() {\n    const last = this.parts_.pop();\n    this.byteLength_ -= stringLength(last);\n    // Un-count the previous '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ -= 1;\n    }\n  }\n\n  private checkValid_() {\n    if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n      throw new Error(\n        this.errorPrefix_ +\n          'has a key path longer than ' +\n          ValidationPath.MAX_PATH_LENGTH_BYTES +\n          ' bytes (' +\n          this.byteLength_ +\n          ').'\n      );\n    }\n    if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n      throw new Error(\n        this.errorPrefix_ +\n          'path specified exceeds the maximum depth that can be written (' +\n          ValidationPath.MAX_PATH_DEPTH +\n          ') or object contains a cycle ' +\n          this.toErrorString()\n      );\n    }\n  }\n\n  /**\n   * String for use in error messages - uses '.' notation for path.\n   *\n   * @return {string}\n   */\n  toErrorString(): string {\n    if (this.parts_.length === 0) {\n      return '';\n    }\n    return \"in property '\" + this.parts_.join('.') + \"'\";\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\nexport const FORGE_DOMAIN = 'firebaseio.com';\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { PersistentStorage } from './storage/storage';\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n *\n * @constructor\n */\nexport class RepoInfo {\n  host: string;\n  domain: string;\n  internalHost: string;\n\n  /**\n   * @param host Hostname portion of the url for the repo\n   * @param secure Whether or not this repo is accessed over ssl\n   * @param namespace The namespace represented by the repo\n   * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin Whether this instance uses Admin SDK credentials\n   * @param persistenceKey Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false\n  ) {\n    this.host = host.toLowerCase();\n    this.domain = this.host.substr(this.host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this.host;\n  }\n\n  needsQueryParam(): boolean {\n    return (\n      this.host !== this.internalHost ||\n      this.isCustomHost() ||\n      this.includeNamespaceInQueryParams\n    );\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isDemoHost() {\n    return this.domain === 'firebaseio-demo.com';\n  }\n\n  isCustomHost() {\n    return (\n      this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  updateHost(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this.host, this.internalHost);\n      }\n    }\n  }\n\n  /**\n   * Returns the websocket URL for this repo\n   * @param {string} type of connection\n   * @param {Object} params list\n   * @return {string} The URL for this repo\n   */\n  connectionURL(type: string, params: { [k: string]: string }): string {\n    assert(typeof type === 'string', 'typeof type must == string');\n    assert(typeof params === 'object', 'typeof params must == object');\n\n    let connURL: string;\n    if (type === WEBSOCKET) {\n      connURL =\n        (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n    } else if (type === LONG_POLLING) {\n      connURL =\n        (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n    } else {\n      throw new Error('Unknown connection type: ' + type);\n    }\n    if (this.needsQueryParam()) {\n      params['ns'] = this.namespace;\n    }\n\n    const pairs: string[] = [];\n\n    each(params, (key: string, value: string) => {\n      pairs.push(key + '=' + value);\n    });\n\n    return connURL + pairs.join('&');\n  }\n\n  /** @return {string} */\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  /** @return {string} */\n  toURLString(): string {\n    return (this.secure ? 'https://' : 'http://') + this.host;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../Path';\nimport { RepoInfo } from '../../RepoInfo';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\n/**\n * @param {!string} pathString\n * @return {string}\n */\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @param {!string} queryString\n * @return {!{[key:string]:string}} key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      nodeAdmin,\n      webSocketOnly,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\n/**\n *\n * @param {!string} dataURL\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\n */\nexport const parseDatabaseURL = function (\n  dataURL: string\n): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, ValidationPath } from './Path';\nimport {\n  contains,\n  safeGet,\n  errorPrefix as errorPrefixFxn,\n  stringLength\n} from '@firebase/util';\nimport { isInvalidJSONNumber, each } from './util';\n\nimport { RepoInfo } from '../RepoInfo';\n\n/**\n * True for invalid Firebase keys\n * @type {RegExp}\n * @private\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n * @type {RegExp}\n * @private\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n * @type {number}\n * @private\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\n/**\n * @param {*} key\n * @return {boolean}\n */\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\n/**\n * @param {string} pathString\n * @return {boolean}\n */\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\n/**\n * @param {string} pathString\n * @return {boolean}\n */\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\n/**\n * @param {*} priority\n * @return {boolean}\n */\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n *\n * @param {string} fnName\n * @param {number} argumentNumber\n * @param {*} data\n * @param {!Path} path\n * @param {boolean} optional\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  argumentNumber: number,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  validateFirebaseData(\n    errorPrefixFxn(fnName, argumentNumber, optional),\n    data,\n    path\n  );\n};\n\n/**\n * Validate a data object client-side before sending to server.\n *\n * @param {string} errorPrefix\n * @param {*} data\n * @param {!Path|!ValidationPath} path_\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        path.toErrorString() +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString()\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        path.toErrorString() +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              path.toErrorString() +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      path.push(key);\n      validateFirebaseData(errorPrefix, value, path);\n      path.pop();\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          path.toErrorString() +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n *\n * @param {string} errorPrefix\n * @param {Array<!Path>} mergePaths\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = curPath.slice();\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(Path.comparePaths);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && prevPath.contains(curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n *\n * @param {string} fnName\n * @param {number} argumentNumber\n * @param {*} data\n * @param {!Path} path\n * @param {boolean} optional\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  argumentNumber: number,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, path.child(curPath));\n    if (curPath.getBack() === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  argumentNumber: number,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateEventType = function (\n  fnName: string,\n  argumentNumber: number,\n  eventType: string,\n  optional: boolean\n) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n    default:\n      throw new Error(\n        errorPrefixFxn(fnName, argumentNumber, optional) +\n          'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\n          '\"child_changed\", or \"child_moved\".'\n      );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentNumber: number,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\nexport const validatePathString = function (\n  fnName: string,\n  argumentNumber: number,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentNumber: number,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (path.getFront() === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  argumentNumber: number,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, false) +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateCredential = function (\n  fnName: string,\n  argumentNumber: number,\n  cred: unknown,\n  optional: boolean\n) {\n  if (optional && cred === undefined) {\n    return;\n  }\n  if (!(typeof cred === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid credential (a string).'\n    );\n  }\n};\n\nexport const validateBoolean = function (\n  fnName: string,\n  argumentNumber: number,\n  bool: unknown,\n  optional: boolean\n) {\n  if (optional && bool === undefined) {\n    return;\n  }\n  if (typeof bool !== 'boolean') {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) + 'must be a boolean.'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentNumber: number,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentNumber: number,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentNumber: number,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentNumber, optional) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentNumber, optional) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentNumber, optional) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { validateArgCount, validateCallback, Deferred } from '@firebase/util';\nimport {\n  validateWritablePath,\n  validateFirebaseDataArg,\n  validatePriority,\n  validateFirebaseMergeDataArg\n} from '../core/util/validation';\nimport { warn } from '../core/util/util';\n\nimport { Repo } from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport { Indexable } from '../core/util/misc';\n\n/**\n * @constructor\n */\nexport class OnDisconnect {\n  /**\n   * @param {!Repo} repo_\n   * @param {!Path} path_\n   */\n  constructor(private repo_: Repo, private path_: Path) {}\n\n  /**\n   * @param {function(?Error)=} onComplete\n   * @return {!firebase.Promise}\n   */\n  cancel(onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectCancel(\n      this.path_,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {function(?Error)=} onComplete\n   * @return {!firebase.Promise}\n   */\n  remove(onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectSet(\n      this.path_,\n      null,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {*} value\n   * @param {function(?Error)=} onComplete\n   * @return {!firebase.Promise}\n   */\n  set(value: unknown, onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    validateCallback('OnDisconnect.set', 2, onComplete, true);\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectSet(\n      this.path_,\n      value,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {*} value\n   * @param {number|string|null} priority\n   * @param {function(?Error)=} onComplete\n   * @return {!firebase.Promise}\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      1,\n      value,\n      this.path_,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectSetWithPriority(\n      this.path_,\n      value,\n      priority,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {!Object} objectToMerge\n   * @param {function(?Error)=} onComplete\n   * @return {!firebase.Promise}\n   */\n  update(\n    objectToMerge: Indexable,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n    if (Array.isArray(objectToMerge)) {\n      const newObjectToMerge: { [k: string]: unknown } = {};\n      for (let i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n      objectToMerge = newObjectToMerge;\n      warn(\n        'Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\n          'existing data, or an Object with integer keys if you really do want to only update some of the children.'\n      );\n    }\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      1,\n      objectToMerge,\n      this.path_,\n      false\n    );\n    validateCallback('OnDisconnect.update', 2, onComplete, true);\n    const deferred = new Deferred<void>();\n    this.repo_.onDisconnectUpdate(\n      this.path_,\n      objectToMerge,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataSnapshot } from './DataSnapshot';\nimport { validateArgCount } from '@firebase/util';\n\nexport class TransactionResult {\n  /**\n   * A type for the resolve value of Firebase.transaction.\n   * @constructor\n   * @dict\n   * @param {boolean} committed\n   * @param {DataSnapshot} snapshot\n   */\n  constructor(public committed: boolean, public snapshot: DataSnapshot) {}\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  toJSON(): object {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Modeled after base64 web-safe chars, but ordered by ASCII.\n  const PUSH_CHARS =\n    '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @return {boolean} Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @return {!Node} The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param {!Node} newPriorityNode New priority to set for the node.\n   * @return {!Node} Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param {string} childName The name of the child to retrieve.\n   * @return {!Node} The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param {!Path} path The path of the child to retrieve.\n   * @return {!Node} The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param {!string} childName The name of the child to find the predecessor of.\n   * @param {!Node} childNode The node to find the predecessor of.\n   * @param {!Index} index The index to use to determine the predecessor\n   * @return {?string} The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param {string} childName The name of the child to update.\n   * @param {!Node} newChildNode The new child node\n   * @return {!Node} The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param {!Path} path The path of the child to update.\n   * @param {!Node} newChildNode The new child node, which may be an empty node\n   * @return {!Node} The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   * @param {!string} childName\n   * @return {boolean}\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @return {boolean} True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @return {number} The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param {!Index} index\n   * @param {function(string, !Node)} action Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @return {*} The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat True for export format (also wire protocol format).\n   * @return Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @return {string} hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param {!Node} other Another node\n   * @return {!number} -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @param {!Node} other\n   * @return {boolean} Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {!Node} This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {boolean}\n   */\n  isIndexed(indexDefinition: Index): boolean;\n}\n\n/**\n *\n * @param {!string} name\n * @param {!Node} node\n * @constructor\n * @struct\n */\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  /**\n   *\n   * @param {!string} name\n   * @param {!Node} node\n   * @return {NamedNode}\n   */\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node, NamedNode } from '../Node';\nimport { MIN_NAME, MAX_NAME } from '../../util/util';\nimport { Comparator } from '../../util/SortedMap';\n\n/**\n *\n * @constructor\n */\nexport abstract class Index {\n  /**\n   * @param {!NamedNode} a\n   * @param {!NamedNode} b\n   * @return {number}\n   */\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   * @param {!Node} oldNode\n   * @param {!Node} newNode\n   * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @return {!NamedNode} a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @return {!NamedNode} a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  /**\n   * @param {*} indexValue\n   * @param {string} name\n   * @return {!NamedNode}\n   */\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @return {!string} String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from './Index';\nimport { Node, NamedNode } from '../Node';\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { assert, assertionError } from '@firebase/util';\nimport { ChildrenNode } from '../ChildrenNode';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n\n  /**\n   * @inheritDoc\n   */\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  /**\n   * @param {*} indexValue\n   * @param {string} name\n   * @return {!NamedNode}\n   */\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @return {!string} String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\nimport { Indexable } from '../util/misc';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\n/**\n * @param {(!string|!number)} priority\n * @return {!string}\n */\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n *\n * @param {!Node} priorityNode\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\nimport { priorityHashText, validatePriorityNode } from './snap';\nimport { Node } from './Node';\nimport { Path } from '../util/Path';\nimport { Index } from './indexes/Index';\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Indexable } from '../util/misc';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   * @type {Array.<!string>}\n   * @const\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @implements {Node}\n   * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\n   *                                         The object type is possible in the event of a deferred value\n   * @param {!Node=} priorityNode_ The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (path.isEmpty()) {\n      return this;\n    } else if (path.getFront() === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = path.getFront();\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || path.getLength() === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          path.popFront(),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @return {Object|string|number|boolean} The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   * @param {!LeafNode} otherLeaf\n   * @return {!number}\n   * @private\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  withIndex(): Node {\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isIndexed(): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  equals(other: Node): boolean {\n    /**\n     * @inheritDoc\n     */\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from './Index';\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { LeafNode } from '../LeafNode';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nexport class PriorityIndex extends Index {\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  /**\n   * @param {*} indexValue\n   * @param {string} name\n   * @return {!NamedNode}\n   */\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @return {!string} String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  /** @private\n   * @type {Array.<!LLRBNode>}\n   */\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @template K, V, T\n   * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\n   * @param {?K} startKey\n   * @param {function(K, K): number} comparator\n   * @param {boolean} isReverse_ Whether or not to iterate in reverse\n   * @param {(function(K, V):T)=} resultGenerator_\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = ({ key: node.key, value: node.value } as unknown) as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return ({ key: node.key, value: node.value } as unknown) as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @template K, V\n   * @param {!K} key Key associated with this node.\n   * @param {!V} value Value associated with this node.\n   * @param {?boolean} color Whether this node is red.\n   * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\n   * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param {?K} key New key for the node, or null.\n   * @param {?V} value New value for the node, or null.\n   * @param {?boolean} color New color for the node, or null.\n   * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\n   * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\n   * @return {!LLRBNode} The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @return {number} The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @return {boolean} True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param {function(!K, !V):*} action Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @return {*} The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param {function(!Object, !Object)} action Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @return {*} True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @return {!Object} The minimum node in the tree.\n   * @private\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @return {!K} The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @return {!K} The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   *\n   * @param {!Object} key Key to insert.\n   * @param {!Object} value Value to insert.\n   * @param {Comparator} comparator Comparator.\n   * @return {!LLRBNode} New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @private\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param {!Object} key The key of the item to remove.\n   * @param {Comparator} comparator Comparator.\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @private\n   * @return {boolean} Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @private\n   * @return {!LLRBNode} New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @private\n   * @return {!LLRBNode} New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @private\n   * @return {!LLRBNode} New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @private\n   * @return {!LLRBNode} New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @private\n   * @return {!LLRBNode} New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @private\n   * @return {!LLRBNode} New tree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @private\n   * @return {boolean} True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  /**\n   * @private\n   * @return {number} Not sure what this returns exactly. :-).\n   */\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @return {!LLRBEmptyNode} The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param {!K} key Key to be added.\n   * @param {!V} value Value to be added.\n   * @param {Comparator} comparator Comparator.\n   * @return {!LLRBNode} New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param {!K} key The key to remove.\n   * @param {Comparator} comparator Comparator.\n   * @return {!LLRBEmptyNode} New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @return {number} The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @return {boolean} True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param {function(!K, !V):*} action Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @return {boolean} True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param {function(!K, !V)} action Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @return {boolean} True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  /**\n   * @return {null}\n   */\n  minKey(): null {\n    return null;\n  }\n\n  /**\n   * @return {null}\n   */\n  maxKey(): null {\n    return null;\n  }\n\n  /**\n   * @private\n   * @return {number} Not sure what this returns exactly. :-).\n   */\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @private\n   * @return {boolean} Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   * @const\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @template K, V\n   * @param {function(K, K):number} comparator_ Key comparator.\n   * @param {LLRBNode=} root_ (Optional) Root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param {!K} key Key to be added.\n   * @param {!V} value Value to be added.\n   * @return {!SortedMap.<K, V>} New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param {!K} key The key to remove.\n   * @return {!SortedMap.<K, V>} New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param {!K} key The key to look up.\n   * @return {?V} The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param {K} key The key to find the predecessor of\n   * @return {?K} The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @return {boolean} True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @return {number} The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @return {?K} The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @return {?K} The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param {function(!K, !V):*} action Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @return {*} The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param {function(!Object, !Object)} action Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @return {*} True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @template T\n   * @param {(function(K, V):T)=} resultGenerator\n   * @return {SortedMapIterator.<K, V, T>} The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\n/**\n * @constructor\n */\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  /**\n   * @param {number} length\n   */\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @template K, V\n * @param {Array.<!NamedNode>} childList Unsorted list of children\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\n *                                                        type is not NamedNode\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\n * @return {SortedMap.<K, V>}\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : ((namedNode as unknown) as K);\n      return new LLRBNode(\n        key,\n        (namedNode.node as unknown) as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : ((namedNode as unknown) as K);\n      return new LLRBNode(\n        key,\n        (namedNode.node as unknown) as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : ((namedNode as unknown) as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          (namedNode.node as unknown) as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\nimport { buildChildSet } from './childSet';\n\nimport { NamedNode, Node } from './Node';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { SortedMap } from '../util/SortedMap';\nimport { Index } from './indexes/Index';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { sha1, MAX_NAME, MIN_NAME } from '../util/util';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { Node, NamedNode } from './Node';\nimport { validatePriorityNode, priorityHashText, setMaxNode } from './snap';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { Path } from '../util/Path';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n *\n * @constructor\n * @implements {Node}\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   *\n   * @param {!SortedMap.<string, !Node>} children_ List of children\n   * of this node..\n   * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\n   * @param {!IndexMap} indexMap_\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = path.getFront();\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(path.popFront());\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = path.getFront();\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        path.getFront() !== '.priority' || path.getLength() === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        path.popFront(),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  /**\n   * @private\n   * @type {RegExp}\n   */\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[(key as unknown) as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {?string}\n   */\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {?NamedNode}\n   */\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   * @param {!Index} indexDefinition\n   * @return {?string}\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {?NamedNode}\n   */\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {SortedMapIterator}\n   */\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  /**\n   *\n   * @param {!NamedNode} startPost\n   * @param {!Index} indexDefinition\n   * @return {!SortedMapIterator}\n   */\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {!SortedMapIterator}\n   */\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  /**\n   * @param {!NamedNode} endPost\n   * @param {!Index} indexDefinition\n   * @return {!SortedMapIterator}\n   */\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   * @private\n   * @param {!Index} indexDefinition\n   * @return {?SortedMap.<NamedNode, Node>}\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\n/**\n * @constructor\n * @extends {ChildrenNode}\n * @private\n */\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n * @type {!MAX_NODE}\n * @const\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { contains, assert } from '@firebase/util';\n\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { IndexMap } from './IndexMap';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\nimport { Indexable } from '../util/misc';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param {*} json JSON to create a node for.\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n * @return {!Node}\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from './Index';\nimport { NamedNode, Node } from '../Node';\nimport { nameCompare } from '../../util/util';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nexport class ValueIndex extends Index {\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  /**\n   * @param {*} indexValue\n   * @param {string} name\n   * @return {!NamedNode}\n   */\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @return {!string} String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { Index } from './Index';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\nimport { Path } from '../../util/Path';\n\n/**\n * @param {!Path} indexPath\n * @constructor\n * @extends {Index}\n */\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !indexPath_.isEmpty() && indexPath_.getFront() !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  /**\n   * @param {!Node} snap\n   * @return {!Node}\n   * @protected\n   */\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return this.indexPath_.slice().join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { validateArgCount, validateCallback } from '@firebase/util';\nimport { validatePathString } from '../core/util/validation';\nimport { Path } from '../core/util/Path';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { Reference } from './Reference';\nimport { Index } from '../core/snap/indexes/Index';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\n\n/**\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\n * surfaces the public methods (val, forEach, etc.) we want to expose.\n */\nexport class DataSnapshot {\n  /**\n   * @param {!Node} node_ A SnapshotNode to wrap.\n   * @param {!Reference} ref_ The ref of the location this snapshot came from.\n   * @param {!Index} index_ The iteration order for this snapshot\n   */\n  constructor(\n    private readonly node_: Node,\n    private readonly ref_: Reference,\n    private readonly index_: Index\n  ) {}\n\n  /**\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\n   * empty.\n   *\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n   */\n  val(): unknown {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this.node_.val();\n  }\n\n  /**\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\n   * the entire node contents.\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n   */\n  exportVal(): unknown {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this.node_.val(true);\n  }\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  toJSON(): unknown {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this.exportVal();\n  }\n\n  /**\n   * Returns whether the snapshot contains a non-null value.\n   *\n   * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\n   */\n  exists(): boolean {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return !this.node_.isEmpty();\n  }\n\n  /**\n   * Returns a DataSnapshot of the specified child node's contents.\n   *\n   * @param {!string} childPathString Path to a child.\n   * @return {!DataSnapshot} DataSnapshot for child node.\n   */\n  child(childPathString: string): DataSnapshot {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n    // Ensure the childPath is a string (can be a number)\n    childPathString = String(childPathString);\n    validatePathString('DataSnapshot.child', 1, childPathString, false);\n\n    const childPath = new Path(childPathString);\n    const childRef = this.ref_.child(childPath);\n    return new DataSnapshot(\n      this.node_.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n\n  /**\n   * Returns whether the snapshot contains a child at the specified path.\n   *\n   * @param {!string} childPathString Path to a child.\n   * @return {boolean} Whether the child exists.\n   */\n  hasChild(childPathString: string): boolean {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n\n    const childPath = new Path(childPathString);\n    return !this.node_.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns the priority of the object, or null if no priority was set.\n   *\n   * @return {string|number|null} The priority.\n   */\n  getPriority(): string | number | null {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this.node_.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * Iterates through child nodes and calls the specified action for each one.\n   *\n   * @param {function(!DataSnapshot)} action Callback function to be called\n   * for each child.\n   * @return {boolean} True if forEach was canceled by action returning true for\n   * one of the child nodes.\n   */\n  forEach(action: (d: DataSnapshot) => boolean | void): boolean {\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 1, action, false);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this.node_ as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this.index_, (key, node) => {\n      return action(\n        new DataSnapshot(node, this.ref_.child(key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns whether this DataSnapshot has children.\n   * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\n   */\n  hasChildren(): boolean {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    } else {\n      return !this.node_.isEmpty();\n    }\n  }\n\n  get key() {\n    return this.ref_.getKey();\n  }\n\n  /**\n   * Returns the number of children for this DataSnapshot.\n   * @return {number} The number of children that this DataSnapshot contains.\n   */\n  numChildren(): number {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n\n    return this.node_.numChildren();\n  }\n\n  /**\n   * @return {Reference} The Firebase reference for the location this snapshot's data came from.\n   */\n  getRef(): Reference {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n\n    return this.ref_;\n  }\n\n  get ref() {\n    return this.getRef();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\nimport { Path } from '../util/Path';\nimport { EventRegistration } from './EventRegistration';\nimport { DataSnapshot } from '../../api/DataSnapshot';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  /**\n   * @return {!Path}\n   */\n  getPath(): Path;\n\n  /**\n   * @return {!string}\n   */\n  getEventType(): string;\n\n  /**\n   * @return {!function()}\n   */\n  getEventRunner(): () => void;\n\n  /**\n   * @return {!string}\n   */\n  toString(): string;\n}\n\nexport type EventType =\n  | 'value'\n  | ' child_added'\n  | ' child_changed'\n  | ' child_moved'\n  | ' child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n * @implements {Event}\n */\nexport class DataEvent implements Event {\n  /**\n   * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\n   * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\n   * @param {!DataSnapshot} snapshot The data backing the event\n   * @param {?string=} prevName Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: DataSnapshot,\n    public prevName?: string | null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getPath(): Path {\n    const ref = this.snapshot.getRef();\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventType(): string {\n    return this.eventType;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  /**\n   * @param {EventRegistration} eventRegistration\n   * @param {Error} error\n   * @param {!Path} path\n   */\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getPath(): Path {\n    return this.path;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventType(): string {\n    return 'cancel';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataSnapshot } from '../../api/DataSnapshot';\nimport { DataEvent, CancelEvent, Event, EventType } from './Event';\nimport { contains, assert } from '@firebase/util';\n\nimport { Path } from '../util/Path';\nimport { Change } from './Change';\nimport { Query } from '../../api/Query';\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   * @param {!string} eventType\n   * @return {boolean}\n   */\n  respondsTo(eventType: string): boolean;\n\n  /**\n   * @param {!Change} change\n   * @param {!Query} query\n   * @return {!Event}\n   */\n  createEvent(change: Change, query: Query): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   * @param {!Event} eventData\n   * @return {function()}\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  /**\n   * @param {!Error} error\n   * @param {!Path} path\n   * @return {?CancelEvent}\n   */\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  /**\n   * @param {!EventRegistration} other\n   * @return {boolean}\n   */\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   * @return {boolean}\n   */\n  hasAnyCallback(): boolean;\n}\n\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  /**\n   * @param {?function(!DataSnapshot)} callback_\n   * @param {?function(Error)} cancelCallback_\n   * @param {?Object} context_\n   */\n  constructor(\n    private callback_: ((d: DataSnapshot) => void) | null,\n    private cancelCallback_: ((e: Error) => void) | null,\n    private context_: {} | null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createEvent(change: Change, query: Query): DataEvent {\n    const index = query.getQueryParams().getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(change.snapshotNode, query.getRef(), index)\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    const ctx = this.context_;\n    if (eventData.getEventType() === 'cancel') {\n      assert(\n        this.cancelCallback_,\n        'Raising a cancel event on a listener with no cancel callback'\n      );\n      const cancelCB = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB.call(ctx, (eventData as CancelEvent).error);\n      };\n    } else {\n      const cb = this.callback_;\n      return function () {\n        cb.call(ctx, (eventData as DataEvent).snapshot);\n      };\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callback_ || !this.callback_) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return (\n        other.callback_ === this.callback_ && other.context_ === this.context_\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasAnyCallback(): boolean {\n    return this.callback_ !== null;\n  }\n}\n\n/**\n * Represents the registration of 1 or more child_xxx events.\n *\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\n * register a group of callbacks together in the future.\n *\n * @constructor\n * @implements {EventRegistration}\n */\nexport class ChildEventRegistration implements EventRegistration {\n  /**\n   * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\n   * @param {?function(Error)} cancelCallback_\n   * @param {Object=} context_\n   */\n  constructor(\n    private callbacks_: {\n      [k: string]: (d: DataSnapshot, s?: string | null) => void;\n    } | null,\n    private cancelCallback_: ((e: Error) => void) | null,\n    private context_?: {}\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return contains(this.callbacks_, eventToCheck);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createEvent(change: Change, query: Query): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const ref = query.getRef().child(/** @type {!string} */ change.childName);\n    const index = query.getQueryParams().getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, ref, index),\n      change.prevName\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    const ctx = this.context_;\n    if (eventData.getEventType() === 'cancel') {\n      assert(\n        this.cancelCallback_,\n        'Raising a cancel event on a listener with no cancel callback'\n      );\n      const cancelCB = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB.call(ctx, (eventData as CancelEvent).error);\n      };\n    } else {\n      const cb = this.callbacks_[(eventData as DataEvent).eventType];\n      return function () {\n        cb.call(\n          ctx,\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n      };\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks_ || !other.callbacks_) {\n        return true;\n      } else if (this.context_ === other.context_) {\n        const otherKeys = Object.keys(other.callbacks_);\n        const thisKeys = Object.keys(this.callbacks_);\n        const otherCount = otherKeys.length;\n        const thisCount = thisKeys.length;\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n\n          if (otherCount === 1) {\n            const otherKey = otherKeys[0];\n            const thisKey = thisKeys[0];\n            return (\n              thisKey === otherKey &&\n              (!other.callbacks_[otherKey] ||\n                !this.callbacks_[thisKey] ||\n                other.callbacks_[otherKey] === this.callbacks_[thisKey])\n            );\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(\n              eventType =>\n                other.callbacks_[eventType] === this.callbacks_[eventType]\n            );\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasAnyCallback(): boolean {\n    return this.callbacks_ !== null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  errorPrefix,\n  validateArgCount,\n  validateCallback,\n  validateContextObject,\n  Deferred\n} from '@firebase/util';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { MIN_NAME, MAX_NAME, ObjectToUniqueKey } from '../core/util/util';\nimport { Path } from '../core/util/Path';\nimport {\n  isValidPriority,\n  validateEventType,\n  validatePathString,\n  validateFirebaseDataArg,\n  validateKey\n} from '../core/util/validation';\n\nimport {\n  ValueEventRegistration,\n  ChildEventRegistration,\n  EventRegistration\n} from '../core/view/EventRegistration';\n\nimport { Repo } from '../core/Repo';\nimport { QueryParams } from '../core/view/QueryParams';\nimport { Reference } from './Reference';\nimport { DataSnapshot } from './DataSnapshot';\n\nlet __referenceConstructor: new (repo: Repo, path: Path) => Query;\n\nexport interface SnapshotCallback {\n  (a: DataSnapshot, b?: string | null): unknown;\n}\n\n/**\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\n *\n * Since every Firebase reference is a query, Firebase inherits from this object.\n */\nexport class Query {\n  static set __referenceConstructor(val) {\n    __referenceConstructor = val;\n  }\n\n  static get __referenceConstructor() {\n    assert(__referenceConstructor, 'Reference.ts has not been loaded');\n    return __referenceConstructor;\n  }\n\n  constructor(\n    public repo: Repo,\n    public path: Path,\n    private queryParams_: QueryParams,\n    private orderByCalled_: boolean\n  ) {}\n\n  /**\n   * Validates start/end values for queries.\n   * @param {!QueryParams} params\n   * @private\n   */\n  private static validateQueryEndpoints_(params: QueryParams) {\n    let startNode = null;\n    let endNode = null;\n    if (params.hasStart()) {\n      startNode = params.getIndexStartValue();\n    }\n    if (params.hasEnd()) {\n      endNode = params.getIndexEndValue();\n    }\n\n    if (params.getIndex() === KEY_INDEX) {\n      const tooManyArgsError =\n        'Query: When ordering by key, you may only pass one argument to ' +\n        'startAt(), endAt(), or equalTo().';\n      const wrongArgTypeError =\n        'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\n        'or equalTo() must be a string.';\n      if (params.hasStart()) {\n        const startName = params.getIndexStartName();\n        if (startName !== MIN_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof startNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n      if (params.hasEnd()) {\n        const endName = params.getIndexEndName();\n        if (endName !== MAX_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof endNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n    } else if (params.getIndex() === PRIORITY_INDEX) {\n      if (\n        (startNode != null && !isValidPriority(startNode)) ||\n        (endNode != null && !isValidPriority(endNode))\n      ) {\n        throw new Error(\n          'Query: When ordering by priority, the first argument passed to startAt(), ' +\n            'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).'\n        );\n      }\n    } else {\n      assert(\n        params.getIndex() instanceof PathIndex ||\n          params.getIndex() === VALUE_INDEX,\n        'unknown index type.'\n      );\n      if (\n        (startNode != null && typeof startNode === 'object') ||\n        (endNode != null && typeof endNode === 'object')\n      ) {\n        throw new Error(\n          'Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\n            'an object.'\n        );\n      }\n    }\n  }\n\n  /**\n   * Validates that limit* has been called with the correct combination of parameters\n   * @param {!QueryParams} params\n   * @private\n   */\n  private static validateLimit_(params: QueryParams) {\n    if (\n      params.hasStart() &&\n      params.hasEnd() &&\n      params.hasLimit() &&\n      !params.hasAnchoredLimit()\n    ) {\n      throw new Error(\n        \"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\"\n      );\n    }\n  }\n\n  /**\n   * Validates that no other order by call has been made\n   * @param {!string} fnName\n   * @private\n   */\n  private validateNoPreviousOrderByCall_(fnName: string) {\n    if (this.orderByCalled_ === true) {\n      throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n    }\n  }\n\n  /**\n   * @return {!QueryParams}\n   */\n  getQueryParams(): QueryParams {\n    return this.queryParams_;\n  }\n\n  /**\n   * @return {!Reference}\n   */\n  getRef(): Reference {\n    validateArgCount('Query.ref', 0, 0, arguments.length);\n    // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n    // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n    // method gets called.\n    return new Query.__referenceConstructor(this.repo, this.path) as Reference;\n  }\n\n  /**\n   * @param {!string} eventType\n   * @param {!function(DataSnapshot, string=)} callback\n   * @param {(function(Error)|Object)=} cancelCallbackOrContext\n   * @param {Object=} context\n   * @return {!function(DataSnapshot, string=)}\n   */\n  on(\n    eventType: string,\n    callback: SnapshotCallback,\n    cancelCallbackOrContext?: ((a: Error) => unknown) | object | null,\n    context?: object | null\n  ): SnapshotCallback {\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateEventType('Query.on', 1, eventType, false);\n    validateCallback('Query.on', 2, callback, false);\n\n    const ret = Query.getCancelAndContextArgs_(\n      'Query.on',\n      cancelCallbackOrContext,\n      context\n    );\n\n    if (eventType === 'value') {\n      this.onValueEvent(callback, ret.cancel, ret.context);\n    } else {\n      const callbacks: { [k: string]: typeof callback } = {};\n      callbacks[eventType] = callback;\n      this.onChildEvent(callbacks, ret.cancel, ret.context);\n    }\n    return callback;\n  }\n\n  /**\n   * @param {!function(!DataSnapshot)} callback\n   * @param {?function(Error)} cancelCallback\n   * @param {?Object} context\n   * @protected\n   */\n  protected onValueEvent(\n    callback: (a: DataSnapshot) => void,\n    cancelCallback: ((a: Error) => void) | null,\n    context: object | null\n  ) {\n    const container = new ValueEventRegistration(\n      callback,\n      cancelCallback || null,\n      context || null\n    );\n    this.repo.addEventCallbackForQuery(this, container);\n  }\n\n  /**\n   * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\n   * @param {?function(Error)} cancelCallback\n   * @param {?Object} context\n   * @protected\n   */\n  onChildEvent(\n    callbacks: { [k: string]: SnapshotCallback },\n    cancelCallback: ((a: Error) => unknown) | null,\n    context: object | null\n  ) {\n    const container = new ChildEventRegistration(\n      callbacks,\n      cancelCallback,\n      context\n    );\n    this.repo.addEventCallbackForQuery(this, container);\n  }\n\n  /**\n   * @param {string=} eventType\n   * @param {(function(!DataSnapshot, ?string=))=} callback\n   * @param {Object=} context\n   */\n  off(\n    eventType?: string,\n    callback?: SnapshotCallback,\n    context?: object | null\n  ): void {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', 1, eventType, true);\n    validateCallback('Query.off', 2, callback, true);\n    validateContextObject('Query.off', 3, context, true);\n\n    let container: EventRegistration | null = null;\n    let callbacks: { [k: string]: typeof callback } | null = null;\n    if (eventType === 'value') {\n      const valueCallback = callback || null;\n      container = new ValueEventRegistration(\n        valueCallback,\n        null,\n        context || null\n      );\n    } else if (eventType) {\n      if (callback) {\n        callbacks = {};\n        callbacks[eventType] = callback;\n      }\n      container = new ChildEventRegistration(callbacks, null, context || null);\n    }\n    this.repo.removeEventCallbackForQuery(this, container);\n  }\n\n  /**\n   * Get the server-value for this query, or return a cached value if not connected.\n   */\n  get(): Promise<DataSnapshot> {\n    return this.repo.getValue(this);\n  }\n\n  /**\n   * Attaches a listener, waits for the first event, and then removes the listener\n   * @param {!string} eventType\n   * @param {!function(!DataSnapshot, string=)} userCallback\n   * @param failureCallbackOrContext\n   * @param context\n   * @return {!firebase.Promise}\n   */\n  once(\n    eventType: string,\n    userCallback?: SnapshotCallback,\n    failureCallbackOrContext?: ((a: Error) => void) | object | null,\n    context?: object | null\n  ): Promise<DataSnapshot> {\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateEventType('Query.once', 1, eventType, false);\n    validateCallback('Query.once', 2, userCallback, true);\n\n    const ret = Query.getCancelAndContextArgs_(\n      'Query.once',\n      failureCallbackOrContext,\n      context\n    );\n\n    // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n    // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n    // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n    // against the Promise specification.\n    let firstCall = true;\n    const deferred = new Deferred<DataSnapshot>();\n\n    // A dummy error handler in case a user wasn't expecting promises\n    deferred.promise.catch(() => {});\n\n    const onceCallback = (snapshot: DataSnapshot) => {\n      // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n      // triggers multiple events (e.g. child_added or child_changed).\n      if (firstCall) {\n        firstCall = false;\n        this.off(eventType, onceCallback);\n\n        if (userCallback) {\n          userCallback.bind(ret.context)(snapshot);\n        }\n        deferred.resolve(snapshot);\n      }\n    };\n\n    this.on(\n      eventType,\n      onceCallback,\n      /*cancel=*/ err => {\n        this.off(eventType, onceCallback);\n\n        if (ret.cancel) {\n          ret.cancel.bind(ret.context)(err);\n        }\n        deferred.reject(err);\n      }\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Set a limit and anchor it to the start of the window.\n   * @param {!number} limit\n   * @return {!Query}\n   */\n  limitToFirst(limit: number): Query {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n    if (\n      typeof limit !== 'number' ||\n      Math.floor(limit) !== limit ||\n      limit <= 0\n    ) {\n      throw new Error(\n        'Query.limitToFirst: First argument must be a positive integer.'\n      );\n    }\n    if (this.queryParams_.hasLimit()) {\n      throw new Error(\n        'Query.limitToFirst: Limit was already set (by another call to limit, ' +\n          'limitToFirst, or limitToLast).'\n      );\n    }\n\n    return new Query(\n      this.repo,\n      this.path,\n      this.queryParams_.limitToFirst(limit),\n      this.orderByCalled_\n    );\n  }\n\n  /**\n   * Set a limit and anchor it to the end of the window.\n   * @param {!number} limit\n   * @return {!Query}\n   */\n  limitToLast(limit: number): Query {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n    if (\n      typeof limit !== 'number' ||\n      Math.floor(limit) !== limit ||\n      limit <= 0\n    ) {\n      throw new Error(\n        'Query.limitToLast: First argument must be a positive integer.'\n      );\n    }\n    if (this.queryParams_.hasLimit()) {\n      throw new Error(\n        'Query.limitToLast: Limit was already set (by another call to limit, ' +\n          'limitToFirst, or limitToLast).'\n      );\n    }\n\n    return new Query(\n      this.repo,\n      this.path,\n      this.queryParams_.limitToLast(limit),\n      this.orderByCalled_\n    );\n  }\n\n  /**\n   * Given a child path, return a new query ordered by the specified grandchild path.\n   * @param {!string} path\n   * @return {!Query}\n   */\n  orderByChild(path: string): Query {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n    if (path === '$key') {\n      throw new Error(\n        'Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.'\n      );\n    } else if (path === '$priority') {\n      throw new Error(\n        'Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.'\n      );\n    } else if (path === '$value') {\n      throw new Error(\n        'Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.'\n      );\n    }\n    validatePathString('Query.orderByChild', 1, path, false);\n    this.validateNoPreviousOrderByCall_('Query.orderByChild');\n    const parsedPath = new Path(path);\n    if (parsedPath.isEmpty()) {\n      throw new Error(\n        'Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = this.queryParams_.orderBy(index);\n    Query.validateQueryEndpoints_(newParams);\n\n    return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n  }\n\n  /**\n   * Return a new query ordered by the KeyIndex\n   * @return {!Query}\n   */\n  orderByKey(): Query {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByKey');\n    const newParams = this.queryParams_.orderBy(KEY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n  }\n\n  /**\n   * Return a new query ordered by the PriorityIndex\n   * @return {!Query}\n   */\n  orderByPriority(): Query {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n    const newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n  }\n\n  /**\n   * Return a new query ordered by the ValueIndex\n   * @return {!Query}\n   */\n  orderByValue(): Query {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByValue');\n    const newParams = this.queryParams_.orderBy(VALUE_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n  }\n\n  /**\n   * @param {number|string|boolean|null} value\n   * @param {?string=} name\n   * @return {!Query}\n   */\n  startAt(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n    validateKey('Query.startAt', 2, name, true);\n\n    const newParams = this.queryParams_.startAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n    if (this.queryParams_.hasStart()) {\n      throw new Error(\n        'Query.startAt: Starting point was already set (by another call to startAt ' +\n          'or equalTo).'\n      );\n    }\n\n    // Calling with no params tells us to start at the beginning.\n    if (value === undefined) {\n      value = null;\n      name = null;\n    }\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  }\n\n  /**\n   * @param {number|string|boolean|null} value\n   * @param {?string=} name\n   * @return {!Query}\n   */\n  endAt(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n    validateKey('Query.endAt', 2, name, true);\n\n    const newParams = this.queryParams_.endAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n    if (this.queryParams_.hasEnd()) {\n      throw new Error(\n        'Query.endAt: Ending point was already set (by another call to endAt or ' +\n          'equalTo).'\n      );\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  }\n\n  /**\n   * Load the selection of children with exactly the specified value, and, optionally,\n   * the specified name.\n   * @param {number|string|boolean|null} value\n   * @param {string=} name\n   * @return {!Query}\n   */\n  equalTo(value: number | string | boolean | null, name?: string) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n    validateKey('Query.equalTo', 2, name, true);\n    if (this.queryParams_.hasStart()) {\n      throw new Error(\n        'Query.equalTo: Starting point was already set (by another call to startAt or ' +\n          'equalTo).'\n      );\n    }\n    if (this.queryParams_.hasEnd()) {\n      throw new Error(\n        'Query.equalTo: Ending point was already set (by another call to endAt or ' +\n          'equalTo).'\n      );\n    }\n    return this.startAt(value, name).endAt(value, name);\n  }\n\n  /**\n   * @return {!string} URL for this location.\n   */\n  toString(): string {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n\n    return this.repo.toString() + this.path.toUrlEncodedString();\n  }\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n  toJSON() {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this.toString();\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   * @return {!Object}\n   */\n  queryObject(): object {\n    return this.queryParams_.getQueryObject();\n  }\n\n  /**\n   * @return {!string}\n   */\n  queryIdentifier(): string {\n    const obj = this.queryObject();\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\n   * @param {Query} other\n   * @return {boolean}\n   */\n  isEqual(other: Query): boolean {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n    if (!(other instanceof Query)) {\n      const error =\n        'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    const sameRepo = this.repo === other.repo;\n    const samePath = this.path.equals(other.path);\n    const sameQueryIdentifier =\n      this.queryIdentifier() === other.queryIdentifier();\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  /**\n   * Helper used by .on and .once to extract the context and or cancel arguments.\n   * @param {!string} fnName The function name (on or once)\n   * @param {(function(Error)|Object)=} cancelOrContext\n   * @param {Object=} context\n   * @return {{cancel: ?function(Error), context: ?Object}}\n   * @private\n   */\n  private static getCancelAndContextArgs_(\n    fnName: string,\n    cancelOrContext?: ((a: Error) => void) | object | null,\n    context?: object | null\n  ): { cancel: ((a: Error) => void) | null; context: object | null } {\n    const ret: {\n      cancel: ((a: Error) => void) | null;\n      context: object | null;\n    } = { cancel: null, context: null };\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext as (a: Error) => void;\n      validateCallback(fnName, 3, ret.cancel, true);\n\n      ret.context = context;\n      validateContextObject(fnName, 4, ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext as (a: Error) => void;\n      } else {\n        throw new Error(\n          errorPrefix(fnName, 3, true) +\n            ' must either be a cancel callback or a context object.'\n        );\n      }\n    }\n    return ret;\n  }\n\n  get ref(): Reference {\n    return this.getRef();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { Path } from './Path';\nimport { SparseSnapshotTree } from '../SparseSnapshotTree';\nimport { LeafNode } from '../snap/LeafNode';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { SyncTree } from '../SyncTree';\nimport { Indexable } from './misc';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = this.path_.child(childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return this.syncTree_.calcCompleteEventCache(this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n * @param {?Object} values\n * @return {!Object}\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n * @param {(Object|string|number|boolean)} value\n * @param {!Object} serverValues\n * @return {!(string|number|boolean)}\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param {!Path} path path to which write is relative\n * @param {!Node} node new data written at path\n * @param {!SyncTree} syncTree current data\n * @param {!Object} serverValues\n * @return {!SparseSnapshotTree}\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n * @param {!Node} node\n * @param {!Object} serverValues\n * @return {!Node}\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from './util/Path';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport class SparseSnapshotTree {\n  private value: Node | null = null;\n\n  private readonly children: Map<string, SparseSnapshotTree> = new Map();\n\n  /**\n   * Gets the node stored at the given path if one exists.\n   *\n   * @param path Path to look up snapshot for.\n   * @return The retrieved node, or null.\n   */\n  find(path: Path): Node | null {\n    if (this.value != null) {\n      return this.value.getChild(path);\n    } else if (!path.isEmpty() && this.children.size > 0) {\n      const childKey = path.getFront();\n      path = path.popFront();\n      if (this.children.has(childKey)) {\n        const childTree = this.children.get(childKey);\n        return childTree.find(path);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Stores the given node at the specified path. If there is already a node\n   * at a shallower path, it merges the new data into that snapshot node.\n   *\n   * @param path Path to look up snapshot for.\n   * @param data The new data, or null.\n   */\n  remember(path: Path, data: Node) {\n    if (path.isEmpty()) {\n      this.value = data;\n      this.children.clear();\n    } else if (this.value !== null) {\n      this.value = this.value.updateChild(path, data);\n    } else {\n      const childKey = path.getFront();\n      if (!this.children.has(childKey)) {\n        this.children.set(childKey, new SparseSnapshotTree());\n      }\n\n      const child = this.children.get(childKey);\n      path = path.popFront();\n      child.remember(path, data);\n    }\n  }\n\n  /**\n   * Purge the data at path from the cache.\n   *\n   * @param path Path to look up snapshot for.\n   * @return True if this node should now be removed.\n   */\n  forget(path: Path): boolean {\n    if (path.isEmpty()) {\n      this.value = null;\n      this.children.clear();\n      return true;\n    } else {\n      if (this.value !== null) {\n        if (this.value.isLeafNode()) {\n          // We're trying to forget a node that doesn't exist\n          return false;\n        } else {\n          const value = this.value;\n          this.value = null;\n\n          const self = this;\n          value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n            self.remember(new Path(key), tree);\n          });\n\n          return this.forget(path);\n        }\n      } else if (this.children.size > 0) {\n        const childKey = path.getFront();\n        path = path.popFront();\n        if (this.children.has(childKey)) {\n          const safeToRemove = this.children.get(childKey).forget(path);\n          if (safeToRemove) {\n            this.children.delete(childKey);\n          }\n        }\n\n        return this.children.size === 0;\n      } else {\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Recursively iterates through all of the stored tree and calls the\n   * callback on each one.\n   *\n   * @param prefixPath Path to look up node for.\n   * @param func The function to invoke for each tree.\n   */\n  forEachTree(prefixPath: Path, func: (a: Path, b: Node) => unknown) {\n    if (this.value !== null) {\n      func(prefixPath, this.value);\n    } else {\n      this.forEachChild((key, tree) => {\n        const path = new Path(prefixPath.toString() + '/' + key);\n        tree.forEachTree(path, func);\n      });\n    }\n  }\n\n  /**\n   * Iterates through each immediate child and triggers the callback.\n   *\n   * @param func The function to invoke for each child.\n   */\n  forEachChild(func: (a: string, b: SparseSnapshotTree) => void) {\n    this.children.forEach((tree, key) => {\n      func(key, tree);\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  /**\n   * @type {!OperationSource}\n   */\n  source: OperationSource;\n\n  /**\n   * @type {!OperationType}\n   */\n  type: OperationType;\n\n  /**\n   * @type {!Path}\n   */\n  path: Path;\n\n  /**\n   * @param {string} childName\n   * @return {?Operation}\n   */\n  operationForChild(childName: string): Operation | null;\n}\n\n/**\n * @param {boolean} fromUser\n * @param {boolean} fromServer\n * @param {?string} queryId\n * @param {boolean} tagged\n * @constructor\n */\nexport class OperationSource {\n  constructor(\n    public fromUser: boolean,\n    public fromServer: boolean,\n    public queryId: string | null,\n    public tagged: boolean\n  ) {\n    assert(!tagged || fromServer, 'Tagged queries must be from server.');\n  }\n  /**\n   * @const\n   * @type {!OperationSource}\n   */\n  static User = new OperationSource(\n    /*fromUser=*/ true,\n    false,\n    null,\n    /*tagged=*/ false\n  );\n\n  /**\n   * @const\n   * @type {!OperationSource}\n   */\n  static Server = new OperationSource(\n    false,\n    /*fromServer=*/ true,\n    null,\n    /*tagged=*/ false\n  );\n\n  /**\n   * @param {string} queryId\n   * @return {!OperationSource}\n   */\n  static forServerTaggedQuery = function (queryId: string): OperationSource {\n    return new OperationSource(\n      false,\n      /*fromServer=*/ true,\n      queryId,\n      /*tagged=*/ true\n    );\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { Path } from '../util/Path';\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { ImmutableTree } from '../util/ImmutableTree';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = OperationSource.User;\n\n  /**\n   *\n   * @param {!Path} path\n   * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\n   * @param {!boolean} revert\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  operationForChild(childName: string): AckUserWrite {\n    if (!this.path.isEmpty()) {\n      assert(\n        this.path.getFront() === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        this.path.popFront(),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(Path.Empty, childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SortedMap } from './SortedMap';\nimport { Path } from './Path';\nimport { stringCompare, each } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n * @const\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static Empty = new ImmutableTree<any>(null);\n\n  /**\n   * @template T\n   * @param {!Object.<string, !T>} obj\n   * @return {!ImmutableTree.<!T>}\n   */\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = ImmutableTree.Empty;\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  /**\n   * @template T\n   * @param {?T} value\n   * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\n   */\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   * @return {boolean}\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\n   * on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param {!Path} relativePath The remainder of the path\n   * @param {function(T):boolean} predicate The predicate to satisfy to return a\n   *   node\n   * @return {?{path:!Path, value:!T}}\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: Path.Empty, value: this.value };\n    } else {\n      if (relativePath.isEmpty()) {\n        return null;\n      } else {\n        const front = relativePath.getFront();\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue = child.findRootMostMatchingPathAndValue(\n            relativePath.popFront(),\n            predicate\n          );\n          if (childExistingPathAndValue != null) {\n            const fullPath = new Path(front).child(\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   * @param {!Path} relativePath\n   * @return {?{path: !Path, value: !T}}\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @param {!Path} relativePath\n   * @return {!ImmutableTree.<T>} The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (relativePath.isEmpty()) {\n      return this;\n    } else {\n      const front = relativePath.getFront();\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(relativePath.popFront());\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param {!Path} relativePath Path to set value at.\n   * @param {?T} toSet Value to set.\n   * @return {!ImmutableTree.<T>} Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (relativePath.isEmpty()) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = relativePath.getFront();\n      const child = this.children.get(front) || ImmutableTree.Empty;\n      const newChild = child.set(relativePath.popFront(), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param {!Path} relativePath Path to value to remove.\n   * @return {!ImmutableTree.<T>} Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (relativePath.isEmpty()) {\n      if (this.children.isEmpty()) {\n        return ImmutableTree.Empty;\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = relativePath.getFront();\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(relativePath.popFront());\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return ImmutableTree.Empty;\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param {!Path} relativePath Path to get value for.\n   * @return {?T} Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (relativePath.isEmpty()) {\n      return this.value;\n    } else {\n      const front = relativePath.getFront();\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(relativePath.popFront());\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param {!Path} relativePath Path to replace subtree for.\n   * @param {!ImmutableTree} newTree New tree.\n   * @return {!ImmutableTree} Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (relativePath.isEmpty()) {\n      return newTree;\n    } else {\n      const front = relativePath.getFront();\n      const child = this.children.get(front) || ImmutableTree.Empty;\n      const newChild = child.setTree(relativePath.popFront(), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   * @template V\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\n   * @return {V}\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(Path.Empty, fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   * @template V\n   * @param {!Path} pathSoFar\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\n   * @return {V}\n   * @private\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   * @template V\n   * @param {!Path} path\n   * @param {!function(!Path, !T):?V} f\n   * @return {?V}\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, Path.Empty, f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathToFollow.isEmpty()) {\n        return null;\n      } else {\n        const front = pathToFollow.getFront()!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathToFollow.popFront(),\n            pathSoFar.child(front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {!Path} path\n   * @param {!function(!Path, !T)} f\n   * @returns {!ImmutableTree.<T>}\n   */\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, Path.Empty, f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathToFollow.isEmpty()) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathToFollow.getFront();\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathToFollow.popFront(),\n          currentRelativePath.child(front),\n          f\n        );\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param {function(!Path, !T)} f A function to be called with\n   *   the path from the root of the tree to a node, and the value at that node.\n   *   Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(Path.Empty, f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(currentRelativePath.child(childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  /**\n   *\n   * @param {function(string, !T)} f\n   */\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\nimport { Operation, OperationSource, OperationType } from './Operation';\n\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @constructor\n * @implements {Operation}\n */\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (this.path.isEmpty()) {\n      return new ListenComplete(this.source, Path.Empty);\n    } else {\n      return new ListenComplete(this.source, this.path.popFront());\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Path } from '../util/Path';\nimport { Node } from '../snap/Node';\n\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!Node} snap\n * @constructor\n * @implements {Operation}\n */\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (this.path.isEmpty()) {\n      return new Overwrite(\n        this.source,\n        Path.Empty,\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\nimport { Path } from '../util/Path';\nimport { assert } from '@firebase/util';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport { Node } from '../snap/Node';\n\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!ImmutableTree.<!Node>} children\n * @constructor\n * @implements {Operation}\n */\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  operationForChild(childName: string): Operation {\n    if (this.path.isEmpty()) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, Path.Empty, childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, Path.Empty, childTree);\n      }\n    } else {\n      assert(\n        this.path.getFront() === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, this.path.popFront(), this.children);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  /**\n   * @param {!Node} node_\n   * @param {boolean} fullyInitialized_\n   * @param {boolean} filtered_\n   */\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   * @return {boolean}\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   * @return {boolean}\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  /**\n   * @param {!Path} path\n   * @return {boolean}\n   */\n  isCompleteForPath(path: Path): boolean {\n    if (path.isEmpty()) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = path.getFront();\n    return this.isCompleteForChild(childKey);\n  }\n\n  /**\n   * @param {!string} key\n   * @return {boolean}\n   */\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  /**\n   * @return {!Node}\n   */\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { CacheNode } from './CacheNode';\nimport { Node } from '../snap/Node';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n *\n * @constructor\n */\nexport class ViewCache {\n  /**\n   *\n   * @param {!CacheNode} eventCache_\n   * @param {!CacheNode} serverCache_\n   */\n  constructor(\n    private readonly eventCache_: CacheNode,\n    private readonly serverCache_: CacheNode\n  ) {}\n\n  /**\n   * @const\n   * @type {ViewCache}\n   */\n  static Empty = new ViewCache(\n    new CacheNode(\n      ChildrenNode.EMPTY_NODE,\n      /*fullyInitialized=*/ false,\n      /*filtered=*/ false\n    ),\n    new CacheNode(\n      ChildrenNode.EMPTY_NODE,\n      /*fullyInitialized=*/ false,\n      /*filtered=*/ false\n    )\n  );\n\n  /**\n   * @param {!Node} eventSnap\n   * @param {boolean} complete\n   * @param {boolean} filtered\n   * @return {!ViewCache}\n   */\n  updateEventSnap(\n    eventSnap: Node,\n    complete: boolean,\n    filtered: boolean\n  ): ViewCache {\n    return new ViewCache(\n      new CacheNode(eventSnap, complete, filtered),\n      this.serverCache_\n    );\n  }\n\n  /**\n   * @param {!Node} serverSnap\n   * @param {boolean} complete\n   * @param {boolean} filtered\n   * @return {!ViewCache}\n   */\n  updateServerSnap(\n    serverSnap: Node,\n    complete: boolean,\n    filtered: boolean\n  ): ViewCache {\n    return new ViewCache(\n      this.eventCache_,\n      new CacheNode(serverSnap, complete, filtered)\n    );\n  }\n\n  /**\n   * @return {!CacheNode}\n   */\n  getEventCache(): CacheNode {\n    return this.eventCache_;\n  }\n\n  /**\n   * @return {?Node}\n   */\n  getCompleteEventSnap(): Node | null {\n    return this.eventCache_.isFullyInitialized()\n      ? this.eventCache_.getNode()\n      : null;\n  }\n\n  /**\n   * @return {!CacheNode}\n   */\n  getServerCache(): CacheNode {\n    return this.serverCache_;\n  }\n\n  /**\n   * @return {?Node}\n   */\n  getCompleteServerSnap(): Node | null {\n    return this.serverCache_.isFullyInitialized()\n      ? this.serverCache_.getNode()\n      : null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\n/**\n * @constructor\n * @struct\n * @param {!string} type The event type\n * @param {!Node} snapshotNode The data\n * @param {string=} childName The name for this child, if it's a child event\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\n * @param {string=} prevName The name for the previous child, if applicable\n */\nexport class Change {\n  constructor(\n    public type: string,\n    public snapshotNode: Node,\n    public childName?: string,\n    public oldSnap?: Node,\n    public prevName?: string | null\n  ) {}\n\n  /**\n   * @param {!Node} snapshot\n   * @return {!Change}\n   */\n  static valueChange(snapshot: Node): Change {\n    return new Change(Change.VALUE, snapshot);\n  }\n\n  /**\n   * @param {string} childKey\n   * @param {!Node} snapshot\n   * @return {!Change}\n   */\n  static childAddedChange(childKey: string, snapshot: Node): Change {\n    return new Change(Change.CHILD_ADDED, snapshot, childKey);\n  }\n\n  /**\n   * @param {string} childKey\n   * @param {!Node} snapshot\n   * @return {!Change}\n   */\n  static childRemovedChange(childKey: string, snapshot: Node): Change {\n    return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n  }\n\n  /**\n   * @param {string} childKey\n   * @param {!Node} newSnapshot\n   * @param {!Node} oldSnapshot\n   * @return {!Change}\n   */\n  static childChangedChange(\n    childKey: string,\n    newSnapshot: Node,\n    oldSnapshot: Node\n  ): Change {\n    return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n  }\n\n  /**\n   * @param {string} childKey\n   * @param {!Node} snapshot\n   * @return {!Change}\n   */\n  static childMovedChange(childKey: string, snapshot: Node): Change {\n    return new Change(Change.CHILD_MOVED, snapshot, childKey);\n  }\n\n  //event types\n  /** Event type for a child added */\n  static CHILD_ADDED = 'child_added';\n\n  /** Event type for a child removed */\n  static CHILD_REMOVED = 'child_removed';\n\n  /** Event type for a child changed */\n  static CHILD_CHANGED = 'child_changed';\n\n  /** Event type for a child moved */\n  static CHILD_MOVED = 'child_moved';\n\n  /** Event type for a value change */\n  static VALUE = 'value';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { Change } from '../Change';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { NodeFilter } from './NodeFilter';\nimport { Index } from '../../snap/indexes/Index';\nimport { Path } from '../../util/Path';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { Node } from '../../snap/Node';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n *\n * @constructor\n * @implements {NodeFilter}\n * @param {!Index} index\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            Change.childRemovedChange(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(\n          Change.childAddedChange(key, newChild)\n        );\n      } else {\n        optChangeAccumulator.trackChildChange(\n          Change.childChangedChange(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              Change.childRemovedChange(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                Change.childChangedChange(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              Change.childAddedChange(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  filtersNodes(): boolean {\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Change } from './Change';\nimport { assert, assertionError } from '@firebase/util';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === Change.CHILD_ADDED ||\n        type === Change.CHILD_CHANGED ||\n        type === Change.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\n        this.changeMap.set(\n          childKey,\n          Change.childChangedChange(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === Change.CHILD_REMOVED &&\n        oldType === Change.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === Change.CHILD_REMOVED &&\n        oldType === Change.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          Change.childRemovedChange(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === Change.CHILD_CHANGED &&\n        oldType === Change.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          Change.childAddedChange(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === Change.CHILD_CHANGED &&\n        oldType === Change.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          Change.childChangedChange(\n            childKey,\n            change.snapshotNode,\n            oldChange.oldSnap\n          )\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CacheNode } from './CacheNode';\nimport { NamedNode, Node } from '../snap/Node';\nimport { Index } from '../snap/indexes/Index';\nimport { WriteTreeRef } from '../WriteTree';\nimport { ViewCache } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  /**\n   * @param {!string} childKey\n   * @return {?Node}\n   */\n  getCompleteChild(childKey: string): Node | null;\n\n  /**\n   * @param {!Index} index\n   * @param {!NamedNode} child\n   * @param {boolean} reverse\n   * @return {?NamedNode}\n   */\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n *\n * @private\n * @constructor\n * @implements CompleteChildSource\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  /**\n   * @inheritDoc\n   */\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n * @const\n * @type {!CompleteChildSource}\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n *\n *\n * @implements CompleteChildSource\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  /**\n   * @param {!WriteTreeRef} writes_\n   * @param {!ViewCache} viewCache_\n   * @param {?Node} optCompleteServerCache_\n   */\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.getEventCache();\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.getServerCache();\n      return this.writes_.calcCompleteChild(childKey, serverNode);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : this.viewCache_.getCompleteServerSnap();\n    const nodes = this.writes_.calcIndexedSlice(\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { assert, assertionError } from '@firebase/util';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport { Change } from './Change';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport { Path } from '../util/Path';\nimport {\n  WriteTreeCompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  CompleteChildSource\n} from './CompleteChildSource';\nimport { ViewCache } from './ViewCache';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { WriteTreeRef } from '../WriteTree';\nimport { Overwrite } from '../operation/Overwrite';\nimport { Merge } from '../operation/Merge';\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Node } from '../snap/Node';\n\n/**\n * @constructor\n * @struct\n */\nexport class ProcessorResult {\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {!Array.<!Change>} changes\n   */\n  constructor(\n    public readonly viewCache: ViewCache,\n    public readonly changes: Change[]\n  ) {}\n}\n\n/**\n * @constructor\n */\nexport class ViewProcessor {\n  /**\n   * @param {!NodeFilter} filter_\n   */\n  constructor(private readonly filter_: NodeFilter) {}\n\n  /**\n   * @param {!ViewCache} viewCache\n   */\n  assertIndexed(viewCache: ViewCache) {\n    assert(\n      viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()),\n      'Event snap not indexed'\n    );\n    assert(\n      viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()),\n      'Server snap not indexed'\n    );\n  }\n\n  /**\n   * @param {!ViewCache} oldViewCache\n   * @param {!Operation} operation\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} completeCache\n   * @return {!ProcessorResult}\n   */\n  applyOperation(\n    oldViewCache: ViewCache,\n    operation: Operation,\n    writesCache: WriteTreeRef,\n    completeCache: Node | null\n  ): ProcessorResult {\n    const accumulator = new ChildChangeAccumulator();\n    let newViewCache, filterServerNode;\n    if (operation.type === OperationType.OVERWRITE) {\n      const overwrite = operation as Overwrite;\n      if (overwrite.source.fromUser) {\n        newViewCache = this.applyUserOverwrite_(\n          oldViewCache,\n          overwrite.path,\n          overwrite.snap,\n          writesCache,\n          completeCache,\n          accumulator\n        );\n      } else {\n        assert(overwrite.source.fromServer, 'Unknown source.');\n        // We filter the node if it's a tagged update or the node has been previously filtered  and the\n        // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n        // again\n        filterServerNode =\n          overwrite.source.tagged ||\n          (oldViewCache.getServerCache().isFiltered() &&\n            !overwrite.path.isEmpty());\n        newViewCache = this.applyServerOverwrite_(\n          oldViewCache,\n          overwrite.path,\n          overwrite.snap,\n          writesCache,\n          completeCache,\n          filterServerNode,\n          accumulator\n        );\n      }\n    } else if (operation.type === OperationType.MERGE) {\n      const merge = operation as Merge;\n      if (merge.source.fromUser) {\n        newViewCache = this.applyUserMerge_(\n          oldViewCache,\n          merge.path,\n          merge.children,\n          writesCache,\n          completeCache,\n          accumulator\n        );\n      } else {\n        assert(merge.source.fromServer, 'Unknown source.');\n        // We filter the node if it's a tagged update or the node has been previously filtered\n        filterServerNode =\n          merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n        newViewCache = this.applyServerMerge_(\n          oldViewCache,\n          merge.path,\n          merge.children,\n          writesCache,\n          completeCache,\n          filterServerNode,\n          accumulator\n        );\n      }\n    } else if (operation.type === OperationType.ACK_USER_WRITE) {\n      const ackUserWrite = operation as AckUserWrite;\n      if (!ackUserWrite.revert) {\n        newViewCache = this.ackUserWrite_(\n          oldViewCache,\n          ackUserWrite.path,\n          ackUserWrite.affectedTree,\n          writesCache,\n          completeCache,\n          accumulator\n        );\n      } else {\n        newViewCache = this.revertUserWrite_(\n          oldViewCache,\n          ackUserWrite.path,\n          writesCache,\n          completeCache,\n          accumulator\n        );\n      }\n    } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n      newViewCache = this.listenComplete_(\n        oldViewCache,\n        operation.path,\n        writesCache,\n        accumulator\n      );\n    } else {\n      throw assertionError('Unknown operation type: ' + operation.type);\n    }\n    const changes = accumulator.getChanges();\n    ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n    return new ProcessorResult(newViewCache, changes);\n  }\n\n  /**\n   * @param {!ViewCache} oldViewCache\n   * @param {!ViewCache} newViewCache\n   * @param {!Array.<!Change>} accumulator\n   * @private\n   */\n  private static maybeAddValueEvent_(\n    oldViewCache: ViewCache,\n    newViewCache: ViewCache,\n    accumulator: Change[]\n  ) {\n    const eventSnap = newViewCache.getEventCache();\n    if (eventSnap.isFullyInitialized()) {\n      const isLeafOrEmpty =\n        eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n      const oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n      if (\n        accumulator.length > 0 ||\n        !oldViewCache.getEventCache().isFullyInitialized() ||\n        (isLeafOrEmpty &&\n          !eventSnap.getNode().equals(/** @type {!Node} */ oldCompleteSnap)) ||\n        !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n      ) {\n        accumulator.push(\n          Change.valueChange(\n            /** @type {!Node} */ newViewCache.getCompleteEventSnap()\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {!Path} changePath\n   * @param {!WriteTreeRef} writesCache\n   * @param {!CompleteChildSource} source\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  private generateEventCacheAfterServerEvent_(\n    viewCache: ViewCache,\n    changePath: Path,\n    writesCache: WriteTreeRef,\n    source: CompleteChildSource,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    const oldEventSnap = viewCache.getEventCache();\n    if (writesCache.shadowingWrite(changePath) != null) {\n      // we have a shadowing write, ignore changes\n      return viewCache;\n    } else {\n      let newEventCache, serverNode;\n      if (changePath.isEmpty()) {\n        // TODO: figure out how this plays with \"sliding ack windows\"\n        assert(\n          viewCache.getServerCache().isFullyInitialized(),\n          'If change path is empty, we must have complete server data'\n        );\n        if (viewCache.getServerCache().isFiltered()) {\n          // We need to special case this, because we need to only apply writes to complete children, or\n          // we might end up raising events for incomplete children. If the server data is filtered deep\n          // writes cannot be guaranteed to be complete\n          const serverCache = viewCache.getCompleteServerSnap();\n          const completeChildren =\n            serverCache instanceof ChildrenNode\n              ? serverCache\n              : ChildrenNode.EMPTY_NODE;\n          const completeEventChildren = writesCache.calcCompleteEventChildren(\n            completeChildren\n          );\n          newEventCache = this.filter_.updateFullNode(\n            viewCache.getEventCache().getNode(),\n            completeEventChildren,\n            accumulator\n          );\n        } else {\n          const completeNode = writesCache.calcCompleteEventCache(\n            viewCache.getCompleteServerSnap()\n          );\n          newEventCache = this.filter_.updateFullNode(\n            viewCache.getEventCache().getNode(),\n            completeNode,\n            accumulator\n          );\n        }\n      } else {\n        const childKey = changePath.getFront();\n        if (childKey === '.priority') {\n          assert(\n            changePath.getLength() === 1,\n            \"Can't have a priority with additional path components\"\n          );\n          const oldEventNode = oldEventSnap.getNode();\n          serverNode = viewCache.getServerCache().getNode();\n          // we might have overwrites for this priority\n          const updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(\n            changePath,\n            oldEventNode,\n            serverNode\n          );\n          if (updatedPriority != null) {\n            newEventCache = this.filter_.updatePriority(\n              oldEventNode,\n              updatedPriority\n            );\n          } else {\n            // priority didn't change, keep old node\n            newEventCache = oldEventSnap.getNode();\n          }\n        } else {\n          const childChangePath = changePath.popFront();\n          // update child\n          let newEventChild;\n          if (oldEventSnap.isCompleteForChild(childKey)) {\n            serverNode = viewCache.getServerCache().getNode();\n            const eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n            if (eventChildUpdate != null) {\n              newEventChild = oldEventSnap\n                .getNode()\n                .getImmediateChild(childKey)\n                .updateChild(childChangePath, eventChildUpdate);\n            } else {\n              // Nothing changed, just keep the old child\n              newEventChild = oldEventSnap\n                .getNode()\n                .getImmediateChild(childKey);\n            }\n          } else {\n            newEventChild = writesCache.calcCompleteChild(\n              childKey,\n              viewCache.getServerCache()\n            );\n          }\n          if (newEventChild != null) {\n            newEventCache = this.filter_.updateChild(\n              oldEventSnap.getNode(),\n              childKey,\n              newEventChild,\n              childChangePath,\n              source,\n              accumulator\n            );\n          } else {\n            // no complete child available or no change\n            newEventCache = oldEventSnap.getNode();\n          }\n        }\n      }\n      return viewCache.updateEventSnap(\n        newEventCache,\n        oldEventSnap.isFullyInitialized() || changePath.isEmpty(),\n        this.filter_.filtersNodes()\n      );\n    }\n  }\n\n  /**\n   * @param {!ViewCache} oldViewCache\n   * @param {!Path} changePath\n   * @param {!Node} changedSnap\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} completeCache\n   * @param {boolean} filterServerNode\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  applyServerOverwrite_(\n    oldViewCache: ViewCache,\n    changePath: Path,\n    changedSnap: Node,\n    writesCache: WriteTreeRef,\n    completeCache: Node | null,\n    filterServerNode: boolean,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    const oldServerSnap = oldViewCache.getServerCache();\n    let newServerCache;\n    const serverFilter = filterServerNode\n      ? this.filter_\n      : this.filter_.getIndexedFilter();\n    if (changePath.isEmpty()) {\n      newServerCache = serverFilter.updateFullNode(\n        oldServerSnap.getNode(),\n        changedSnap,\n        null\n      );\n    } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n      // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n      const newServerNode = oldServerSnap\n        .getNode()\n        .updateChild(changePath, changedSnap);\n      newServerCache = serverFilter.updateFullNode(\n        oldServerSnap.getNode(),\n        newServerNode,\n        null\n      );\n    } else {\n      const childKey = changePath.getFront();\n      if (\n        !oldServerSnap.isCompleteForPath(changePath) &&\n        changePath.getLength() > 1\n      ) {\n        // We don't update incomplete nodes with updates intended for other listeners\n        return oldViewCache;\n      }\n      const childChangePath = changePath.popFront();\n      const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n      const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n      if (childKey === '.priority') {\n        newServerCache = serverFilter.updatePriority(\n          oldServerSnap.getNode(),\n          newChildNode\n        );\n      } else {\n        newServerCache = serverFilter.updateChild(\n          oldServerSnap.getNode(),\n          childKey,\n          newChildNode,\n          childChangePath,\n          NO_COMPLETE_CHILD_SOURCE,\n          null\n        );\n      }\n    }\n    const newViewCache = oldViewCache.updateServerSnap(\n      newServerCache,\n      oldServerSnap.isFullyInitialized() || changePath.isEmpty(),\n      serverFilter.filtersNodes()\n    );\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      newViewCache,\n      completeCache\n    );\n    return this.generateEventCacheAfterServerEvent_(\n      newViewCache,\n      changePath,\n      writesCache,\n      source,\n      accumulator\n    );\n  }\n\n  /**\n   * @param {!ViewCache} oldViewCache\n   * @param {!Path} changePath\n   * @param {!Node} changedSnap\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} completeCache\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  applyUserOverwrite_(\n    oldViewCache: ViewCache,\n    changePath: Path,\n    changedSnap: Node,\n    writesCache: WriteTreeRef,\n    completeCache: Node | null,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    const oldEventSnap = oldViewCache.getEventCache();\n    let newViewCache, newEventCache;\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      oldViewCache,\n      completeCache\n    );\n    if (changePath.isEmpty()) {\n      newEventCache = this.filter_.updateFullNode(\n        oldViewCache.getEventCache().getNode(),\n        changedSnap,\n        accumulator\n      );\n      newViewCache = oldViewCache.updateEventSnap(\n        newEventCache,\n        true,\n        this.filter_.filtersNodes()\n      );\n    } else {\n      const childKey = changePath.getFront();\n      if (childKey === '.priority') {\n        newEventCache = this.filter_.updatePriority(\n          oldViewCache.getEventCache().getNode(),\n          changedSnap\n        );\n        newViewCache = oldViewCache.updateEventSnap(\n          newEventCache,\n          oldEventSnap.isFullyInitialized(),\n          oldEventSnap.isFiltered()\n        );\n      } else {\n        const childChangePath = changePath.popFront();\n        const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n        let newChild;\n        if (childChangePath.isEmpty()) {\n          // Child overwrite, we can replace the child\n          newChild = changedSnap;\n        } else {\n          const childNode = source.getCompleteChild(childKey);\n          if (childNode != null) {\n            if (\n              childChangePath.getBack() === '.priority' &&\n              childNode.getChild(childChangePath.parent()).isEmpty()\n            ) {\n              // This is a priority update on an empty node. If this node exists on the server, the\n              // server will send down the priority in the update, so ignore for now\n              newChild = childNode;\n            } else {\n              newChild = childNode.updateChild(childChangePath, changedSnap);\n            }\n          } else {\n            // There is no complete child node available\n            newChild = ChildrenNode.EMPTY_NODE;\n          }\n        }\n        if (!oldChild.equals(newChild)) {\n          const newEventSnap = this.filter_.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n          newViewCache = oldViewCache.updateEventSnap(\n            newEventSnap,\n            oldEventSnap.isFullyInitialized(),\n            this.filter_.filtersNodes()\n          );\n        } else {\n          newViewCache = oldViewCache;\n        }\n      }\n    }\n    return newViewCache;\n  }\n\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {string} childKey\n   * @return {boolean}\n   * @private\n   */\n  private static cacheHasChild_(\n    viewCache: ViewCache,\n    childKey: string\n  ): boolean {\n    return viewCache.getEventCache().isCompleteForChild(childKey);\n  }\n\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {!Path} path\n   * @param {ImmutableTree.<!Node>} changedChildren\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} serverCache\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  private applyUserMerge_(\n    viewCache: ViewCache,\n    path: Path,\n    changedChildren: ImmutableTree<Node>,\n    writesCache: WriteTreeRef,\n    serverCache: Node | null,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n    let curViewCache = viewCache;\n    changedChildren.foreach((relativePath, childNode) => {\n      const writePath = path.child(relativePath);\n      if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = this.applyUserOverwrite_(\n          curViewCache,\n          writePath,\n          childNode,\n          writesCache,\n          serverCache,\n          accumulator\n        );\n      }\n    });\n\n    changedChildren.foreach((relativePath, childNode) => {\n      const writePath = path.child(relativePath);\n      if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = this.applyUserOverwrite_(\n          curViewCache,\n          writePath,\n          childNode,\n          writesCache,\n          serverCache,\n          accumulator\n        );\n      }\n    });\n\n    return curViewCache;\n  }\n\n  /**\n   * @param {!Node} node\n   * @param {ImmutableTree.<!Node>} merge\n   * @return {!Node}\n   * @private\n   */\n  private applyMerge_(node: Node, merge: ImmutableTree<Node>): Node {\n    merge.foreach((relativePath, childNode) => {\n      node = node.updateChild(relativePath, childNode);\n    });\n    return node;\n  }\n\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {!Path} path\n   * @param {!ImmutableTree.<!Node>} changedChildren\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} serverCache\n   * @param {boolean} filterServerNode\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  private applyServerMerge_(\n    viewCache: ViewCache,\n    path: Path,\n    changedChildren: ImmutableTree<Node>,\n    writesCache: WriteTreeRef,\n    serverCache: Node | null,\n    filterServerNode: boolean,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n    // wait for the complete data update coming soon.\n    if (\n      viewCache.getServerCache().getNode().isEmpty() &&\n      !viewCache.getServerCache().isFullyInitialized()\n    ) {\n      return viewCache;\n    }\n\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n    let curViewCache = viewCache;\n    let viewMergeTree;\n    if (path.isEmpty()) {\n      viewMergeTree = changedChildren;\n    } else {\n      viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\n    }\n    const serverNode = viewCache.getServerCache().getNode();\n    viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n      if (serverNode.hasChild(childKey)) {\n        const serverChild = viewCache\n          .getServerCache()\n          .getNode()\n          .getImmediateChild(childKey);\n        const newChild = this.applyMerge_(serverChild, childTree);\n        curViewCache = this.applyServerOverwrite_(\n          curViewCache,\n          new Path(childKey),\n          newChild,\n          writesCache,\n          serverCache,\n          filterServerNode,\n          accumulator\n        );\n      }\n    });\n    viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n      const isUnknownDeepMerge =\n        !viewCache.getServerCache().isCompleteForChild(childKey) &&\n        childMergeTree.value == null;\n      if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n        const serverChild = viewCache\n          .getServerCache()\n          .getNode()\n          .getImmediateChild(childKey);\n        const newChild = this.applyMerge_(serverChild, childMergeTree);\n        curViewCache = this.applyServerOverwrite_(\n          curViewCache,\n          new Path(childKey),\n          newChild,\n          writesCache,\n          serverCache,\n          filterServerNode,\n          accumulator\n        );\n      }\n    });\n\n    return curViewCache;\n  }\n\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {!Path} ackPath\n   * @param {!ImmutableTree<!boolean>} affectedTree\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} completeCache\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  private ackUserWrite_(\n    viewCache: ViewCache,\n    ackPath: Path,\n    affectedTree: ImmutableTree<boolean>,\n    writesCache: WriteTreeRef,\n    completeCache: Node | null,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    if (writesCache.shadowingWrite(ackPath) != null) {\n      return viewCache;\n    }\n\n    // Only filter server node if it is currently filtered\n    const filterServerNode = viewCache.getServerCache().isFiltered();\n\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n    // now that it won't be shadowed.\n    const serverCache = viewCache.getServerCache();\n    if (affectedTree.value != null) {\n      // This is an overwrite.\n      if (\n        (ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\n        serverCache.isCompleteForPath(ackPath)\n      ) {\n        return this.applyServerOverwrite_(\n          viewCache,\n          ackPath,\n          serverCache.getNode().getChild(ackPath),\n          writesCache,\n          completeCache,\n          filterServerNode,\n          accumulator\n        );\n      } else if (ackPath.isEmpty()) {\n        // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n        // should just re-apply whatever we have in our cache as a merge.\n        let changedChildren = ImmutableTree.Empty;\n        serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n          changedChildren = changedChildren.set(new Path(name), node);\n        });\n        return this.applyServerMerge_(\n          viewCache,\n          ackPath,\n          changedChildren,\n          writesCache,\n          completeCache,\n          filterServerNode,\n          accumulator\n        );\n      } else {\n        return viewCache;\n      }\n    } else {\n      // This is a merge.\n      let changedChildren = ImmutableTree.Empty;\n      affectedTree.foreach((mergePath, value) => {\n        const serverCachePath = ackPath.child(mergePath);\n        if (serverCache.isCompleteForPath(serverCachePath)) {\n          changedChildren = changedChildren.set(\n            mergePath,\n            serverCache.getNode().getChild(serverCachePath)\n          );\n        }\n      });\n      return this.applyServerMerge_(\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  }\n\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {!Path} path\n   * @param {!WriteTreeRef} writesCache\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  private listenComplete_(\n    viewCache: ViewCache,\n    path: Path,\n    writesCache: WriteTreeRef,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    const oldServerNode = viewCache.getServerCache();\n    const newViewCache = viewCache.updateServerSnap(\n      oldServerNode.getNode(),\n      oldServerNode.isFullyInitialized() || path.isEmpty(),\n      oldServerNode.isFiltered()\n    );\n    return this.generateEventCacheAfterServerEvent_(\n      newViewCache,\n      path,\n      writesCache,\n      NO_COMPLETE_CHILD_SOURCE,\n      accumulator\n    );\n  }\n\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {!Path} path\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} completeServerCache\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  private revertUserWrite_(\n    viewCache: ViewCache,\n    path: Path,\n    writesCache: WriteTreeRef,\n    completeServerCache: Node | null,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    let complete;\n    if (writesCache.shadowingWrite(path) != null) {\n      return viewCache;\n    } else {\n      const source = new WriteTreeCompleteChildSource(\n        writesCache,\n        viewCache,\n        completeServerCache\n      );\n      const oldEventCache = viewCache.getEventCache().getNode();\n      let newEventCache;\n      if (path.isEmpty() || path.getFront() === '.priority') {\n        let newNode;\n        if (viewCache.getServerCache().isFullyInitialized()) {\n          newNode = writesCache.calcCompleteEventCache(\n            viewCache.getCompleteServerSnap()\n          );\n        } else {\n          const serverChildren = viewCache.getServerCache().getNode();\n          assert(\n            serverChildren instanceof ChildrenNode,\n            'serverChildren would be complete if leaf node'\n          );\n          newNode = writesCache.calcCompleteEventChildren(\n            serverChildren as ChildrenNode\n          );\n        }\n        newNode = newNode as Node;\n        newEventCache = this.filter_.updateFullNode(\n          oldEventCache,\n          newNode,\n          accumulator\n        );\n      } else {\n        const childKey = path.getFront();\n        let newChild = writesCache.calcCompleteChild(\n          childKey,\n          viewCache.getServerCache()\n        );\n        if (\n          newChild == null &&\n          viewCache.getServerCache().isCompleteForChild(childKey)\n        ) {\n          newChild = oldEventCache.getImmediateChild(childKey);\n        }\n        if (newChild != null) {\n          newEventCache = this.filter_.updateChild(\n            oldEventCache,\n            childKey,\n            newChild,\n            path.popFront(),\n            source,\n            accumulator\n          );\n        } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\n          // No complete child available, delete the existing one, if any\n          newEventCache = this.filter_.updateChild(\n            oldEventCache,\n            childKey,\n            ChildrenNode.EMPTY_NODE,\n            path.popFront(),\n            source,\n            accumulator\n          );\n        } else {\n          newEventCache = oldEventCache;\n        }\n        if (\n          newEventCache.isEmpty() &&\n          viewCache.getServerCache().isFullyInitialized()\n        ) {\n          // We might have reverted all child writes. Maybe the old event was a leaf node\n          complete = writesCache.calcCompleteEventCache(\n            viewCache.getCompleteServerSnap()\n          );\n          if (complete.isLeafNode()) {\n            newEventCache = this.filter_.updateFullNode(\n              newEventCache,\n              complete,\n              accumulator\n            );\n          }\n        }\n      }\n      complete =\n        viewCache.getServerCache().isFullyInitialized() ||\n        writesCache.shadowingWrite(Path.Empty) != null;\n      return viewCache.updateEventSnap(\n        newEventCache,\n        complete,\n        this.filter_.filtersNodes()\n      );\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../snap/Node';\nimport { Change } from './Change';\nimport { assertionError } from '@firebase/util';\nimport { Query } from '../../api/Query';\nimport { Index } from '../snap/indexes/Index';\nimport { EventRegistration } from './EventRegistration';\nimport { Event } from './Event';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n * @constructor\n */\nexport class EventGenerator {\n  private index_: Index;\n\n  /**\n   *\n   * @param {!Query} query_\n   */\n  constructor(private query_: Query) {\n    /**\n     * @private\n     * @type {!Index}\n     */\n    this.index_ = this.query_.getQueryParams().getIndex();\n  }\n\n  /**\n   * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n   * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n   *\n   * Notes:\n   *  - child_moved events will be synthesized at this time for any child_changed events that affect\n   *    our index.\n   *  - prevName will be calculated based on the index ordering.\n   *\n   * @param {!Array.<!Change>} changes\n   * @param {!Node} eventCache\n   * @param {!Array.<!EventRegistration>} eventRegistrations\n   * @return {!Array.<!Event>}\n   */\n  generateEventsForChanges(\n    changes: Change[],\n    eventCache: Node,\n    eventRegistrations: EventRegistration[]\n  ): Event[] {\n    const events: Event[] = [];\n    const moves: Change[] = [];\n\n    changes.forEach(change => {\n      if (\n        change.type === Change.CHILD_CHANGED &&\n        this.index_.indexedValueChanged(\n          change.oldSnap as Node,\n          change.snapshotNode\n        )\n      ) {\n        moves.push(\n          Change.childMovedChange(\n            change.childName as string,\n            change.snapshotNode\n          )\n        );\n      }\n    });\n\n    this.generateEventsForType_(\n      events,\n      Change.CHILD_REMOVED,\n      changes,\n      eventRegistrations,\n      eventCache\n    );\n    this.generateEventsForType_(\n      events,\n      Change.CHILD_ADDED,\n      changes,\n      eventRegistrations,\n      eventCache\n    );\n    this.generateEventsForType_(\n      events,\n      Change.CHILD_MOVED,\n      moves,\n      eventRegistrations,\n      eventCache\n    );\n    this.generateEventsForType_(\n      events,\n      Change.CHILD_CHANGED,\n      changes,\n      eventRegistrations,\n      eventCache\n    );\n    this.generateEventsForType_(\n      events,\n      Change.VALUE,\n      changes,\n      eventRegistrations,\n      eventCache\n    );\n\n    return events;\n  }\n\n  /**\n   * Given changes of a single change type, generate the corresponding events.\n   *\n   * @param {!Array.<!Event>} events\n   * @param {!string} eventType\n   * @param {!Array.<!Change>} changes\n   * @param {!Array.<!EventRegistration>} registrations\n   * @param {!Node} eventCache\n   * @private\n   */\n  private generateEventsForType_(\n    events: Event[],\n    eventType: string,\n    changes: Change[],\n    registrations: EventRegistration[],\n    eventCache: Node\n  ) {\n    const filteredChanges = changes.filter(change => change.type === eventType);\n\n    filteredChanges.sort(this.compareChanges_.bind(this));\n    filteredChanges.forEach(change => {\n      const materializedChange = this.materializeSingleChange_(\n        change,\n        eventCache\n      );\n      registrations.forEach(registration => {\n        if (registration.respondsTo(change.type)) {\n          events.push(\n            registration.createEvent(materializedChange, this.query_)\n          );\n        }\n      });\n    });\n  }\n\n  /**\n   * @param {!Change} change\n   * @param {!Node} eventCache\n   * @return {!Change}\n   * @private\n   */\n  private materializeSingleChange_(change: Change, eventCache: Node): Change {\n    if (change.type === 'value' || change.type === 'child_removed') {\n      return change;\n    } else {\n      change.prevName = eventCache.getPredecessorChildName(\n        /** @type {!string} */\n        change.childName,\n        change.snapshotNode,\n        this.index_\n      );\n      return change;\n    }\n  }\n\n  /**\n   * @param {!Change} a\n   * @param {!Change} b\n   * @return {number}\n   * @private\n   */\n  private compareChanges_(a: Change, b: Change) {\n    if (a.childName == null || b.childName == null) {\n      throw assertionError('Should only compare child_ events.');\n    }\n    const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n    const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n    return this.index_.compare(aWrapped, bWrapped);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { ViewProcessor } from './ViewProcessor';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { CacheNode } from './CacheNode';\nimport { ViewCache } from './ViewCache';\nimport { EventGenerator } from './EventGenerator';\nimport { assert } from '@firebase/util';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Change } from './Change';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Query } from '../../api/Query';\nimport { EventRegistration } from './EventRegistration';\nimport { Node } from '../snap/Node';\nimport { Path } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\nimport { CancelEvent, Event } from './Event';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n * @constructor\n */\nexport class View {\n  private processor_: ViewProcessor;\n  private viewCache_: ViewCache;\n  private eventRegistrations_: EventRegistration[] = [];\n  private eventGenerator_: EventGenerator;\n\n  /**\n   *\n   * @param {!Query} query_\n   * @param {!ViewCache} initialViewCache\n   */\n  constructor(private query_: Query, initialViewCache: ViewCache) {\n    const params = this.query_.getQueryParams();\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = params.getNodeFilter();\n\n    /**\n     * @type {ViewProcessor}\n     * @private\n     */\n    this.processor_ = new ViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.getServerCache();\n    const initialEventCache = initialViewCache.getEventCache();\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    /**\n     * @type {!ViewCache}\n     * @private\n     */\n    this.viewCache_ = new ViewCache(newEventCache, newServerCache);\n\n    /**\n     * @type {!EventGenerator}\n     * @private\n     */\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  /**\n   * @return {!Query}\n   */\n  getQuery(): Query {\n    return this.query_;\n  }\n\n  /**\n   * @return {?Node}\n   */\n  getServerCache(): Node | null {\n    return this.viewCache_.getServerCache().getNode();\n  }\n\n  /**\n   * @param {!Path} path\n   * @return {?Node}\n   */\n  getCompleteServerCache(path: Path): Node | null {\n    const cache = this.viewCache_.getCompleteServerSnap();\n    if (cache) {\n      // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n      // we need to see if it contains the child we're interested in.\n      if (\n        this.query_.getQueryParams().loadsAllData() ||\n        (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())\n      ) {\n        return cache.getChild(path);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isEmpty(): boolean {\n    return this.eventRegistrations_.length === 0;\n  }\n\n  /**\n   * @param {!EventRegistration} eventRegistration\n   */\n  addEventRegistration(eventRegistration: EventRegistration) {\n    this.eventRegistrations_.push(eventRegistration);\n  }\n\n  /**\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n   * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\n   */\n  removeEventRegistration(\n    eventRegistration: EventRegistration | null,\n    cancelError?: Error\n  ): Event[] {\n    const cancelEvents: CancelEvent[] = [];\n    if (cancelError) {\n      assert(\n        eventRegistration == null,\n        'A cancel should cancel all event registrations.'\n      );\n      const path = this.query_.path;\n      this.eventRegistrations_.forEach(registration => {\n        cancelError /** @type {!Error} */ = cancelError;\n        const maybeEvent = registration.createCancelEvent(cancelError, path);\n        if (maybeEvent) {\n          cancelEvents.push(maybeEvent);\n        }\n      });\n    }\n\n    if (eventRegistration) {\n      let remaining = [];\n      for (let i = 0; i < this.eventRegistrations_.length; ++i) {\n        const existing = this.eventRegistrations_[i];\n        if (!existing.matches(eventRegistration)) {\n          remaining.push(existing);\n        } else if (eventRegistration.hasAnyCallback()) {\n          // We're removing just this one\n          remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n          break;\n        }\n      }\n      this.eventRegistrations_ = remaining;\n    } else {\n      this.eventRegistrations_ = [];\n    }\n    return cancelEvents;\n  }\n\n  /**\n   * Applies the given Operation, updates our cache, and returns the appropriate events.\n   *\n   * @param {!Operation} operation\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} completeServerCache\n   * @return {!Array.<!Event>}\n   */\n  applyOperation(\n    operation: Operation,\n    writesCache: WriteTreeRef,\n    completeServerCache: Node | null\n  ): Event[] {\n    if (\n      operation.type === OperationType.MERGE &&\n      operation.source.queryId !== null\n    ) {\n      assert(\n        this.viewCache_.getCompleteServerSnap(),\n        'We should always have a full cache before handling merges'\n      );\n      assert(\n        this.viewCache_.getCompleteEventSnap(),\n        'Missing event cache, even though we have a server cache'\n      );\n    }\n\n    const oldViewCache = this.viewCache_;\n    const result = this.processor_.applyOperation(\n      oldViewCache,\n      operation,\n      writesCache,\n      completeServerCache\n    );\n    this.processor_.assertIndexed(result.viewCache);\n\n    assert(\n      result.viewCache.getServerCache().isFullyInitialized() ||\n        !oldViewCache.getServerCache().isFullyInitialized(),\n      'Once a server snap is complete, it should never go back'\n    );\n\n    this.viewCache_ = result.viewCache;\n\n    return this.generateEventsForChanges_(\n      result.changes,\n      result.viewCache.getEventCache().getNode(),\n      null\n    );\n  }\n\n  /**\n   * @param {!EventRegistration} registration\n   * @return {!Array.<!Event>}\n   */\n  getInitialEvents(registration: EventRegistration): Event[] {\n    const eventSnap = this.viewCache_.getEventCache();\n    const initialChanges: Change[] = [];\n    if (!eventSnap.getNode().isLeafNode()) {\n      const eventNode = eventSnap.getNode() as ChildrenNode;\n      eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        initialChanges.push(Change.childAddedChange(key, childNode));\n      });\n    }\n    if (eventSnap.isFullyInitialized()) {\n      initialChanges.push(Change.valueChange(eventSnap.getNode()));\n    }\n    return this.generateEventsForChanges_(\n      initialChanges,\n      eventSnap.getNode(),\n      registration\n    );\n  }\n\n  /**\n   * @private\n   * @param {!Array.<!Change>} changes\n   * @param {!Node} eventCache\n   * @param {EventRegistration=} eventRegistration\n   * @return {!Array.<!Event>}\n   */\n  generateEventsForChanges_(\n    changes: Change[],\n    eventCache: Node,\n    eventRegistration?: EventRegistration\n  ): Event[] {\n    const registrations = eventRegistration\n      ? [eventRegistration]\n      : this.eventRegistrations_;\n    return this.eventGenerator_.generateEventsForChanges(\n      changes,\n      eventCache,\n      registrations\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CacheNode } from './view/CacheNode';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { assert } from '@firebase/util';\nimport { ViewCache } from './view/ViewCache';\nimport { View } from './view/View';\nimport { Operation } from './operation/Operation';\nimport { WriteTreeRef } from './WriteTree';\nimport { Query } from '../api/Query';\nimport { EventRegistration } from './view/EventRegistration';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { Event } from './view/Event';\nimport { Reference, ReferenceConstructor } from '../api/Reference';\n\nlet __referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  static set __referenceConstructor(val: ReferenceConstructor) {\n    assert(\n      !__referenceConstructor,\n      '__referenceConstructor has already been defined'\n    );\n    __referenceConstructor = val;\n  }\n\n  static get __referenceConstructor() {\n    assert(__referenceConstructor, 'Reference.ts has not been loaded');\n    return __referenceConstructor;\n  }\n\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  private readonly views: Map<string, View> = new Map();\n\n  isEmpty(): boolean {\n    return this.views.size === 0;\n  }\n\n  applyOperation(\n    operation: Operation,\n    writesCache: WriteTreeRef,\n    optCompleteServerCache: Node | null\n  ): Event[] {\n    const queryId = operation.source.queryId;\n    if (queryId !== null) {\n      const view = this.views.get(queryId);\n      assert(view != null, 'SyncTree gave us an op for an invalid query.');\n      return view.applyOperation(\n        operation,\n        writesCache,\n        optCompleteServerCache\n      );\n    } else {\n      let events: Event[] = [];\n\n      for (const view of this.views.values()) {\n        events = events.concat(\n          view.applyOperation(operation, writesCache, optCompleteServerCache)\n        );\n      }\n\n      return events;\n    }\n  }\n\n  /**\n   * Add an event callback for the specified query.\n   *\n   * @param {!Query} query\n   * @param {!EventRegistration} eventRegistration\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} serverCache Complete server cache, if we have it.\n   * @param {boolean} serverCacheComplete\n   * @return {!Array.<!Event>} Events to raise.\n   */\n  addEventRegistration(\n    query: Query,\n    eventRegistration: EventRegistration,\n    writesCache: WriteTreeRef,\n    serverCache: Node | null,\n    serverCacheComplete: boolean\n  ): Event[] {\n    const queryId = query.queryIdentifier();\n    let view = this.views.get(queryId);\n    if (!view) {\n      // TODO: make writesCache take flag for complete server node\n      let eventCache = writesCache.calcCompleteEventCache(\n        serverCacheComplete ? serverCache : null\n      );\n      let eventCacheComplete = false;\n      if (eventCache) {\n        eventCacheComplete = true;\n      } else if (serverCache instanceof ChildrenNode) {\n        eventCache = writesCache.calcCompleteEventChildren(serverCache);\n        eventCacheComplete = false;\n      } else {\n        eventCache = ChildrenNode.EMPTY_NODE;\n        eventCacheComplete = false;\n      }\n      const viewCache = new ViewCache(\n        new CacheNode(\n          /** @type {!Node} */ eventCache,\n          eventCacheComplete,\n          false\n        ),\n        new CacheNode(\n          /** @type {!Node} */ serverCache,\n          serverCacheComplete,\n          false\n        )\n      );\n      view = new View(query, viewCache);\n      this.views.set(queryId, view);\n    }\n\n    // This is guaranteed to exist now, we just created anything that was missing\n    view.addEventRegistration(eventRegistration);\n    return view.getInitialEvents(eventRegistration);\n  }\n\n  /**\n   * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n   *\n   * If query is the default query, we'll check all views for the specified eventRegistration.\n   * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n   *\n   * @param {!Query} query\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n   * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\n   */\n  removeEventRegistration(\n    query: Query,\n    eventRegistration: EventRegistration | null,\n    cancelError?: Error\n  ): { removed: Query[]; events: Event[] } {\n    const queryId = query.queryIdentifier();\n    const removed: Query[] = [];\n    let cancelEvents: Event[] = [];\n    const hadCompleteView = this.hasCompleteView();\n    if (queryId === 'default') {\n      // When you do ref.off(...), we search all views for the registration to remove.\n      for (const [viewQueryId, view] of this.views.entries()) {\n        cancelEvents = cancelEvents.concat(\n          view.removeEventRegistration(eventRegistration, cancelError)\n        );\n        if (view.isEmpty()) {\n          this.views.delete(viewQueryId);\n\n          // We'll deal with complete views later.\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      }\n    } else {\n      // remove the callback from the specific view.\n      const view = this.views.get(queryId);\n      if (view) {\n        cancelEvents = cancelEvents.concat(\n          view.removeEventRegistration(eventRegistration, cancelError)\n        );\n        if (view.isEmpty()) {\n          this.views.delete(queryId);\n\n          // We'll deal with complete views later.\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      }\n    }\n\n    if (hadCompleteView && !this.hasCompleteView()) {\n      // We removed our last complete view.\n      removed.push(\n        new SyncPoint.__referenceConstructor(query.repo, query.path)\n      );\n    }\n\n    return { removed, events: cancelEvents };\n  }\n\n  getQueryViews(): View[] {\n    const result = [];\n    for (const view of this.views.values()) {\n      if (!view.getQuery().getQueryParams().loadsAllData()) {\n        result.push(view);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @param path The path to the desired complete snapshot\n   * @return A complete cache, if it exists\n   */\n  getCompleteServerCache(path: Path): Node | null {\n    let serverCache: Node | null = null;\n    for (const view of this.views.values()) {\n      serverCache = serverCache || view.getCompleteServerCache(path);\n    }\n    return serverCache;\n  }\n\n  viewForQuery(query: Query): View | null {\n    const params = query.getQueryParams();\n    if (params.loadsAllData()) {\n      return this.getCompleteView();\n    } else {\n      const queryId = query.queryIdentifier();\n      return this.views.get(queryId);\n    }\n  }\n\n  viewExistsForQuery(query: Query): boolean {\n    return this.viewForQuery(query) != null;\n  }\n\n  hasCompleteView(): boolean {\n    return this.getCompleteView() != null;\n  }\n\n  getCompleteView(): View | null {\n    for (const view of this.views.values()) {\n      if (view.getQuery().getQueryParams().loadsAllData()) {\n        return view;\n      }\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ImmutableTree } from './util/ImmutableTree';\nimport { Path } from './util/Path';\nimport { Node, NamedNode } from './snap/Node';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { assert } from '@firebase/util';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(private writeTree_: ImmutableTree<Node>) {}\n\n  static Empty = new CompoundWrite(new ImmutableTree(null));\n\n  addWrite(path: Path, node: Node): CompoundWrite {\n    if (path.isEmpty()) {\n      return new CompoundWrite(new ImmutableTree(node));\n    } else {\n      const rootmost = this.writeTree_.findRootMostValueAndPath(path);\n      if (rootmost != null) {\n        const rootMostPath = rootmost.path;\n        let value = rootmost.value;\n        const relativePath = Path.relativePath(rootMostPath, path);\n        value = value.updateChild(relativePath, node);\n        return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\n      } else {\n        const subtree = new ImmutableTree(node);\n        const newWriteTree = this.writeTree_.setTree(path, subtree);\n        return new CompoundWrite(newWriteTree);\n      }\n    }\n  }\n\n  addWrites(path: Path, updates: { [name: string]: Node }): CompoundWrite {\n    let newWrite = this as CompoundWrite;\n    each(updates, (childKey: string, node: Node) => {\n      newWrite = newWrite.addWrite(path.child(childKey), node);\n    });\n    return newWrite;\n  }\n\n  /**\n   * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n   * location, which must be removed by calling this method with that path.\n   *\n   * @param path The path at which a write and all deeper writes should be removed\n   * @return {!CompoundWrite} The new CompoundWrite with the removed path\n   */\n  removeWrite(path: Path): CompoundWrite {\n    if (path.isEmpty()) {\n      return CompoundWrite.Empty;\n    } else {\n      const newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n\n  /**\n   * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n   * considered \"complete\".\n   *\n   * @param path The path to check for\n   * @return Whether there is a complete write at that path\n   */\n  hasCompleteWrite(path: Path): boolean {\n    return this.getCompleteNode(path) != null;\n  }\n\n  /**\n   * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n   * writes from deeper paths, but will return child nodes from a more shallow path.\n   *\n   * @param path The path to get a complete write\n   * @return The node if complete at that path, or null otherwise.\n   */\n  getCompleteNode(path: Path): Node | null {\n    const rootmost = this.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      return this.writeTree_\n        .get(rootmost.path)\n        .getChild(Path.relativePath(rootmost.path, path));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Returns all children that are guaranteed to be a complete overwrite.\n   *\n   * @return A list of all complete children.\n   */\n  getCompleteChildren(): NamedNode[] {\n    const children: NamedNode[] = [];\n    const node = this.writeTree_.value;\n    if (node != null) {\n      // If it's a leaf node, it has no children; so nothing to do.\n      if (!node.isLeafNode()) {\n        (node as ChildrenNode).forEachChild(\n          PRIORITY_INDEX,\n          (childName, childNode) => {\n            children.push(new NamedNode(childName, childNode));\n          }\n        );\n      }\n    } else {\n      this.writeTree_.children.inorderTraversal((childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      });\n    }\n    return children;\n  }\n\n  childCompoundWrite(path: Path): CompoundWrite {\n    if (path.isEmpty()) {\n      return this;\n    } else {\n      const shadowingNode = this.getCompleteNode(path);\n      if (shadowingNode != null) {\n        return new CompoundWrite(new ImmutableTree(shadowingNode));\n      } else {\n        return new CompoundWrite(this.writeTree_.subtree(path));\n      }\n    }\n  }\n\n  /**\n   * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n   * @return Whether this CompoundWrite is empty\n   */\n  isEmpty(): boolean {\n    return this.writeTree_.isEmpty();\n  }\n\n  /**\n   * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n   * node\n   * @param node The node to apply this CompoundWrite to\n   * @return The node with all writes applied\n   */\n  apply(node: Node): Node {\n    return applySubtreeWrite(Path.Empty, this.writeTree_, node);\n  }\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(relativePath.child('.priority'), priorityWrite);\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { safeGet, assert, assertionError } from '@firebase/util';\n\nimport { Path } from './util/Path';\nimport { CompoundWrite } from './CompoundWrite';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { NamedNode, Node } from './snap/Node';\nimport { CacheNode } from './view/CacheNode';\nimport { Index } from './snap/indexes/Index';\nimport { each } from './util/util';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n *\n * @constructor\n */\nexport class WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   *\n   * @type {!CompoundWrite}\n   * @private\n   */\n  private visibleWrites_: CompoundWrite = CompoundWrite.Empty;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   *\n   * @type {!Array.<!WriteRecord>}\n   * @private\n   */\n  private allWrites_: WriteRecord[] = [];\n\n  private lastWriteId_ = -1;\n\n  /**\n   * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n   *\n   * @param {!Path} path\n   * @return {!WriteTreeRef}\n   */\n  childWrites(path: Path): WriteTreeRef {\n    return new WriteTreeRef(path, this);\n  }\n\n  /**\n   * Record a new overwrite from user code.\n   *\n   * @param {!Path} path\n   * @param {!Node} snap\n   * @param {!number} writeId\n   * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\n   */\n  addOverwrite(path: Path, snap: Node, writeId: number, visible?: boolean) {\n    assert(\n      writeId > this.lastWriteId_,\n      'Stacking an older write on top of newer ones'\n    );\n    if (visible === undefined) {\n      visible = true;\n    }\n    this.allWrites_.push({\n      path,\n      snap,\n      writeId,\n      visible\n    });\n\n    if (visible) {\n      this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\n    }\n    this.lastWriteId_ = writeId;\n  }\n\n  /**\n   * Record a new merge from user code.\n   *\n   * @param {!Path} path\n   * @param {!Object.<string, !Node>} changedChildren\n   * @param {!number} writeId\n   */\n  addMerge(\n    path: Path,\n    changedChildren: { [k: string]: Node },\n    writeId: number\n  ) {\n    assert(\n      writeId > this.lastWriteId_,\n      'Stacking an older merge on top of newer ones'\n    );\n    this.allWrites_.push({\n      path,\n      children: changedChildren,\n      writeId,\n      visible: true\n    });\n\n    this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\n    this.lastWriteId_ = writeId;\n  }\n\n  /**\n   * @param {!number} writeId\n   * @return {?WriteRecord}\n   */\n  getWrite(writeId: number): WriteRecord | null {\n    for (let i = 0; i < this.allWrites_.length; i++) {\n      const record = this.allWrites_[i];\n      if (record.writeId === writeId) {\n        return record;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n   * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n   *\n   * @param {!number} writeId\n   * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\n   * events as a result).\n   */\n  removeWrite(writeId: number): boolean {\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n    // out of order.\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n    const idx = this.allWrites_.findIndex(s => {\n      return s.writeId === writeId;\n    });\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n    const writeToRemove = this.allWrites_[idx];\n    this.allWrites_.splice(idx, 1);\n\n    let removedWriteWasVisible = writeToRemove.visible;\n    let removedWriteOverlapsWithOtherWrites = false;\n\n    let i = this.allWrites_.length - 1;\n\n    while (removedWriteWasVisible && i >= 0) {\n      const currentWrite = this.allWrites_[i];\n      if (currentWrite.visible) {\n        if (\n          i >= idx &&\n          this.recordContainsPath_(currentWrite, writeToRemove.path)\n        ) {\n          // The removed write was completely shadowed by a subsequent write.\n          removedWriteWasVisible = false;\n        } else if (writeToRemove.path.contains(currentWrite.path)) {\n          // Either we're covering some writes or they're covering part of us (depending on which came first).\n          removedWriteOverlapsWithOtherWrites = true;\n        }\n      }\n      i--;\n    }\n\n    if (!removedWriteWasVisible) {\n      return false;\n    } else if (removedWriteOverlapsWithOtherWrites) {\n      // There's some shadowing going on. Just rebuild the visible writes from scratch.\n      this.resetTree_();\n      return true;\n    } else {\n      // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n      if (writeToRemove.snap) {\n        this.visibleWrites_ = this.visibleWrites_.removeWrite(\n          writeToRemove.path\n        );\n      } else {\n        const children = writeToRemove.children;\n        each(children, (childName: string) => {\n          this.visibleWrites_ = this.visibleWrites_.removeWrite(\n            writeToRemove.path.child(childName)\n          );\n        });\n      }\n      return true;\n    }\n  }\n\n  /**\n   * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n   * No server data is considered.\n   *\n   * @param {!Path} path\n   * @return {?Node}\n   */\n  getCompleteWriteData(path: Path): Node | null {\n    return this.visibleWrites_.getCompleteNode(path);\n  }\n\n  /**\n   * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n   * writes), attempt to calculate a complete snapshot for the given path\n   *\n   * @param {!Path} treePath\n   * @param {?Node} completeServerCache\n   * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n   * @return {?Node}\n   */\n  calcCompleteEventCache(\n    treePath: Path,\n    completeServerCache: Node | null,\n    writeIdsToExclude?: number[],\n    includeHiddenWrites?: boolean\n  ): Node | null {\n    if (!writeIdsToExclude && !includeHiddenWrites) {\n      const shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\n      if (shadowingNode != null) {\n        return shadowingNode;\n      } else {\n        const subMerge = this.visibleWrites_.childCompoundWrite(treePath);\n        if (subMerge.isEmpty()) {\n          return completeServerCache;\n        } else if (\n          completeServerCache == null &&\n          !subMerge.hasCompleteWrite(Path.Empty)\n        ) {\n          // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n          return null;\n        } else {\n          const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return subMerge.apply(layeredCache);\n        }\n      }\n    } else {\n      const merge = this.visibleWrites_.childCompoundWrite(treePath);\n      if (!includeHiddenWrites && merge.isEmpty()) {\n        return completeServerCache;\n      } else {\n        // If the server cache is null, and we don't have a complete cache, we need to return null\n        if (\n          !includeHiddenWrites &&\n          completeServerCache == null &&\n          !merge.hasCompleteWrite(Path.Empty)\n        ) {\n          return null;\n        } else {\n          const filter = function (write: WriteRecord) {\n            return (\n              (write.visible || includeHiddenWrites) &&\n              (!writeIdsToExclude ||\n                !~writeIdsToExclude.indexOf(write.writeId)) &&\n              (write.path.contains(treePath) || treePath.contains(write.path))\n            );\n          };\n          const mergeAtPath = WriteTree.layerTree_(\n            this.allWrites_,\n            filter,\n            treePath\n          );\n          const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return mergeAtPath.apply(layeredCache);\n        }\n      }\n    }\n  }\n\n  /**\n   * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n   * Used when creating new views, to pre-fill their complete event children snapshot.\n   *\n   * @param {!Path} treePath\n   * @param {?ChildrenNode} completeServerChildren\n   * @return {!ChildrenNode}\n   */\n  calcCompleteEventChildren(\n    treePath: Path,\n    completeServerChildren: ChildrenNode | null\n  ) {\n    let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n    const topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\n    if (topLevelSet) {\n      if (!topLevelSet.isLeafNode()) {\n        // we're shadowing everything. Return the children.\n        topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n          completeChildren = completeChildren.updateImmediateChild(\n            childName,\n            childSnap\n          );\n        });\n      }\n      return completeChildren;\n    } else if (completeServerChildren) {\n      // Layer any children we have on top of this\n      // We know we don't have a top-level set, so just enumerate existing children\n      const merge = this.visibleWrites_.childCompoundWrite(treePath);\n      completeServerChildren.forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          const node = merge\n            .childCompoundWrite(new Path(childName))\n            .apply(childNode);\n          completeChildren = completeChildren.updateImmediateChild(\n            childName,\n            node\n          );\n        }\n      );\n      // Add any complete children we have from the set\n      merge.getCompleteChildren().forEach(namedNode => {\n        completeChildren = completeChildren.updateImmediateChild(\n          namedNode.name,\n          namedNode.node\n        );\n      });\n      return completeChildren;\n    } else {\n      // We don't have anything to layer on top of. Layer on any children we have\n      // Note that we can return an empty snap if we have a defined delete\n      const merge = this.visibleWrites_.childCompoundWrite(treePath);\n      merge.getCompleteChildren().forEach(namedNode => {\n        completeChildren = completeChildren.updateImmediateChild(\n          namedNode.name,\n          namedNode.node\n        );\n      });\n      return completeChildren;\n    }\n  }\n\n  /**\n   * Given that the underlying server data has updated, determine what, if anything, needs to be\n   * applied to the event cache.\n   *\n   * Possibilities:\n   *\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n   *\n   * 2. Some write is completely shadowing. No events to be raised\n   *\n   * 3. Is partially shadowed. Events\n   *\n   * Either existingEventSnap or existingServerSnap must exist\n   *\n   * @param {!Path} treePath\n   * @param {!Path} childPath\n   * @param {?Node} existingEventSnap\n   * @param {?Node} existingServerSnap\n   * @return {?Node}\n   */\n  calcEventCacheAfterServerOverwrite(\n    treePath: Path,\n    childPath: Path,\n    existingEventSnap: Node | null,\n    existingServerSnap: Node | null\n  ): Node | null {\n    assert(\n      existingEventSnap || existingServerSnap,\n      'Either existingEventSnap or existingServerSnap must exist'\n    );\n    const path = treePath.child(childPath);\n    if (this.visibleWrites_.hasCompleteWrite(path)) {\n      // At this point we can probably guarantee that we're in case 2, meaning no events\n      // May need to check visibility while doing the findRootMostValueAndPath call\n      return null;\n    } else {\n      // No complete shadowing. We're either partially shadowing or not shadowing at all.\n      const childMerge = this.visibleWrites_.childCompoundWrite(path);\n      if (childMerge.isEmpty()) {\n        // We're not shadowing at all. Case 1\n        return existingServerSnap.getChild(childPath);\n      } else {\n        // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n        // However this is tricky to find out, since user updates don't necessary change the server\n        // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n        // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n        // only check if the updates change the serverNode.\n        // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n        return childMerge.apply(existingServerSnap.getChild(childPath));\n      }\n    }\n  }\n\n  /**\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\n   * complete child for this ChildKey.\n   *\n   * @param {!Path} treePath\n   * @param {!string} childKey\n   * @param {!CacheNode} existingServerSnap\n   * @return {?Node}\n   */\n  calcCompleteChild(\n    treePath: Path,\n    childKey: string,\n    existingServerSnap: CacheNode\n  ): Node | null {\n    const path = treePath.child(childKey);\n    const shadowingNode = this.visibleWrites_.getCompleteNode(path);\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      if (existingServerSnap.isCompleteForChild(childKey)) {\n        const childMerge = this.visibleWrites_.childCompoundWrite(path);\n        return childMerge.apply(\n          existingServerSnap.getNode().getImmediateChild(childKey)\n        );\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n   * a higher path, this will return the child of that write relative to the write and this path.\n   * Returns null if there is no write at this path.\n   */\n  shadowingWrite(path: Path): Node | null {\n    return this.visibleWrites_.getCompleteNode(path);\n  }\n\n  /**\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n   * the window, but may now be in the window.\n   */\n  calcIndexedSlice(\n    treePath: Path,\n    completeServerData: Node | null,\n    startPost: NamedNode,\n    count: number,\n    reverse: boolean,\n    index: Index\n  ): NamedNode[] {\n    let toIterate: Node;\n    const merge = this.visibleWrites_.childCompoundWrite(treePath);\n    const shadowingNode = merge.getCompleteNode(Path.Empty);\n    if (shadowingNode != null) {\n      toIterate = shadowingNode;\n    } else if (completeServerData != null) {\n      toIterate = merge.apply(completeServerData);\n    } else {\n      // no children to iterate on\n      return [];\n    }\n    toIterate = toIterate.withIndex(index);\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n      const nodes = [];\n      const cmp = index.getCompare();\n      const iter = reverse\n        ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n        : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n      let next = iter.getNext();\n      while (next && nodes.length < count) {\n        if (cmp(next, startPost) !== 0) {\n          nodes.push(next);\n        }\n        next = iter.getNext();\n      }\n      return nodes;\n    } else {\n      return [];\n    }\n  }\n\n  private recordContainsPath_(writeRecord: WriteRecord, path: Path): boolean {\n    if (writeRecord.snap) {\n      return writeRecord.path.contains(path);\n    } else {\n      for (const childName in writeRecord.children) {\n        if (\n          writeRecord.children.hasOwnProperty(childName) &&\n          writeRecord.path.child(childName).contains(path)\n        ) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  /**\n   * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n   */\n  private resetTree_() {\n    this.visibleWrites_ = WriteTree.layerTree_(\n      this.allWrites_,\n      WriteTree.DefaultFilter_,\n      Path.Empty\n    );\n    if (this.allWrites_.length > 0) {\n      this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n    } else {\n      this.lastWriteId_ = -1;\n    }\n  }\n\n  /**\n   * The default filter used when constructing the tree. Keep everything that's visible.\n   */\n  private static DefaultFilter_(write: WriteRecord) {\n    return write.visible;\n  }\n\n  /**\n   * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n   * event data at that path.\n   */\n  private static layerTree_(\n    writes: WriteRecord[],\n    filter: (w: WriteRecord) => boolean,\n    treeRoot: Path\n  ): CompoundWrite {\n    let compoundWrite = CompoundWrite.Empty;\n    for (let i = 0; i < writes.length; ++i) {\n      const write = writes[i];\n      // Theory, a later set will either:\n      // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n      // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n      if (filter(write)) {\n        const writePath = write.path;\n        let relativePath;\n        if (write.snap) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n            compoundWrite = compoundWrite.addWrite(\n              Path.Empty,\n              write.snap.getChild(relativePath)\n            );\n          } else {\n            // There is no overlap between root path and write path, ignore write\n          }\n        } else if (write.children) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrites(\n              relativePath,\n              write.children\n            );\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n            if (relativePath.isEmpty()) {\n              compoundWrite = compoundWrite.addWrites(\n                Path.Empty,\n                write.children\n              );\n            } else {\n              const child = safeGet(write.children, relativePath.getFront());\n              if (child) {\n                // There exists a child in this node that matches the root path\n                const deepNode = child.getChild(relativePath.popFront());\n                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\n              }\n            }\n          } else {\n            // There is no overlap between root path and write path, ignore write\n          }\n        } else {\n          throw assertionError('WriteRecord should have .snap or .children');\n        }\n      }\n    }\n    return compoundWrite;\n  }\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n * @constructor\n */\nexport class WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   *\n   * @type {!Path}\n   * @private\n   * @const\n   */\n  private readonly treePath_: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   *\n   * @type {!WriteTree}\n   * @private\n   * @const\n   */\n  private readonly writeTree_: WriteTree;\n\n  /**\n   * @param {!Path} path\n   * @param {!WriteTree} writeTree\n   */\n  constructor(path: Path, writeTree: WriteTree) {\n    this.treePath_ = path;\n    this.writeTree_ = writeTree;\n  }\n\n  /**\n   * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n   * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n   * can lead to a more expensive calculation.\n   *\n   * @param {?Node} completeServerCache\n   * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n   * @return {?Node}\n   */\n  calcCompleteEventCache(\n    completeServerCache: Node | null,\n    writeIdsToExclude?: number[],\n    includeHiddenWrites?: boolean\n  ): Node | null {\n    return this.writeTree_.calcCompleteEventCache(\n      this.treePath_,\n      completeServerCache,\n      writeIdsToExclude,\n      includeHiddenWrites\n    );\n  }\n\n  /**\n   * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n   * mix of the given server data and write data.\n   *\n   * @param {?ChildrenNode} completeServerChildren\n   * @return {!ChildrenNode}\n   */\n  calcCompleteEventChildren(\n    completeServerChildren: ChildrenNode | null\n  ): ChildrenNode {\n    return this.writeTree_.calcCompleteEventChildren(\n      this.treePath_,\n      completeServerChildren\n    ) as ChildrenNode;\n  }\n\n  /**\n   * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n   * if anything, needs to be applied to the event cache.\n   *\n   * Possibilities:\n   *\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n   *\n   * 2. Some write is completely shadowing. No events to be raised\n   *\n   * 3. Is partially shadowed. Events should be raised\n   *\n   * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n   *\n   * @param {!Path} path\n   * @param {?Node} existingEventSnap\n   * @param {?Node} existingServerSnap\n   * @return {?Node}\n   */\n  calcEventCacheAfterServerOverwrite(\n    path: Path,\n    existingEventSnap: Node | null,\n    existingServerSnap: Node | null\n  ): Node | null {\n    return this.writeTree_.calcEventCacheAfterServerOverwrite(\n      this.treePath_,\n      path,\n      existingEventSnap,\n      existingServerSnap\n    );\n  }\n\n  /**\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n   * a higher path, this will return the child of that write relative to the write and this path.\n   * Returns null if there is no write at this path.\n   *\n   * @param {!Path} path\n   * @return {?Node}\n   */\n  shadowingWrite(path: Path): Node | null {\n    return this.writeTree_.shadowingWrite(this.treePath_.child(path));\n  }\n\n  /**\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n   * the window, but may now be in the window\n   *\n   * @param {?Node} completeServerData\n   * @param {!NamedNode} startPost\n   * @param {!number} count\n   * @param {boolean} reverse\n   * @param {!Index} index\n   * @return {!Array.<!NamedNode>}\n   */\n  calcIndexedSlice(\n    completeServerData: Node | null,\n    startPost: NamedNode,\n    count: number,\n    reverse: boolean,\n    index: Index\n  ): NamedNode[] {\n    return this.writeTree_.calcIndexedSlice(\n      this.treePath_,\n      completeServerData,\n      startPost,\n      count,\n      reverse,\n      index\n    );\n  }\n\n  /**\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\n   * complete child for this ChildKey.\n   *\n   * @param {!string} childKey\n   * @param {!CacheNode} existingServerCache\n   * @return {?Node}\n   */\n  calcCompleteChild(\n    childKey: string,\n    existingServerCache: CacheNode\n  ): Node | null {\n    return this.writeTree_.calcCompleteChild(\n      this.treePath_,\n      childKey,\n      existingServerCache\n    );\n  }\n\n  /**\n   * Return a WriteTreeRef for a child.\n   *\n   * @param {string} childName\n   * @return {!WriteTreeRef}\n   */\n  child(childName: string): WriteTreeRef {\n    return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\nimport { errorForServerCode, each } from './util/util';\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport { Operation, OperationSource } from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { Path } from './util/Path';\nimport { SyncPoint } from './SyncPoint';\nimport { WriteTree, WriteTreeRef } from './WriteTree';\nimport { Query } from '../api/Query';\nimport { Node } from './snap/Node';\nimport { Event } from './view/Event';\nimport { EventRegistration } from './view/EventRegistration';\nimport { View } from './view/View';\n\n/**\n * @typedef {{\n *   startListening: function(\n *     !Query,\n *     ?number,\n *     function():string,\n *     function(!string, *):!Array.<!Event>\n *   ):!Array.<!Event>,\n *\n *   stopListening: function(!Query, ?number)\n * }}\n */\nexport interface ListenProvider {\n  startListening(\n    query: Query,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: Query, b: number | null): void;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n * @constructor\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  private syncPointTree_: ImmutableTree<SyncPoint> = ImmutableTree.Empty;\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  private pendingWriteTree_ = new WriteTree();\n\n  private readonly tagToQueryMap: Map<number, string> = new Map();\n  private readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(private listenProvider_: ListenProvider) {}\n\n  /**\n   * Apply the data changes for a user-generated set() or transaction() call.\n   *\n   * @return Events to raise.\n   */\n  applyUserOverwrite(\n    path: Path,\n    newData: Node,\n    writeId: number,\n    visible?: boolean\n  ): Event[] {\n    // Record pending write.\n    this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n\n    if (!visible) {\n      return [];\n    } else {\n      return this.applyOperationToSyncPoints_(\n        new Overwrite(OperationSource.User, path, newData)\n      );\n    }\n  }\n\n  /**\n   * Apply the data from a user-generated update() call\n   *\n   * @return Events to raise.\n   */\n  applyUserMerge(\n    path: Path,\n    changedChildren: { [k: string]: Node },\n    writeId: number\n  ): Event[] {\n    // Record pending merge.\n    this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n\n    return this.applyOperationToSyncPoints_(\n      new Merge(OperationSource.User, path, changeTree)\n    );\n  }\n\n  /**\n   * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n   *\n   * @param revert True if the given write failed and needs to be reverted\n   * @return Events to raise.\n   */\n  ackUserWrite(writeId: number, revert: boolean = false) {\n    const write = this.pendingWriteTree_.getWrite(writeId);\n    const needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n    if (!needToReevaluate) {\n      return [];\n    } else {\n      let affectedTree = ImmutableTree.Empty;\n      if (write.snap != null) {\n        // overwrite\n        affectedTree = affectedTree.set(Path.Empty, true);\n      } else {\n        each(write.children, (pathString: string, node: Node) => {\n          affectedTree = affectedTree.set(new Path(pathString), node);\n        });\n      }\n      return this.applyOperationToSyncPoints_(\n        new AckUserWrite(write.path, affectedTree, revert)\n      );\n    }\n  }\n\n  /**\n   * Apply new server data for the specified path..\n   *\n   * @return Events to raise.\n   */\n  applyServerOverwrite(path: Path, newData: Node): Event[] {\n    return this.applyOperationToSyncPoints_(\n      new Overwrite(OperationSource.Server, path, newData)\n    );\n  }\n\n  /**\n   * Apply new server data to be merged in at the specified path.\n   *\n   * @return Events to raise.\n   */\n  applyServerMerge(\n    path: Path,\n    changedChildren: { [k: string]: Node }\n  ): Event[] {\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n\n    return this.applyOperationToSyncPoints_(\n      new Merge(OperationSource.Server, path, changeTree)\n    );\n  }\n\n  /**\n   * Apply a listen complete for a query\n   *\n   * @return Events to raise.\n   */\n  applyListenComplete(path: Path): Event[] {\n    return this.applyOperationToSyncPoints_(\n      new ListenComplete(OperationSource.Server, path)\n    );\n  }\n\n  /**\n   * Apply new server data for the specified tagged query.\n   *\n   * @return Events to raise.\n   */\n  applyTaggedQueryOverwrite(path: Path, snap: Node, tag: number): Event[] {\n    const queryKey = this.queryKeyForTag_(tag);\n    if (queryKey != null) {\n      const r = SyncTree.parseQueryKey_(queryKey);\n      const queryPath = r.path,\n        queryId = r.queryId;\n      const relativePath = Path.relativePath(queryPath, path);\n      const op = new Overwrite(\n        OperationSource.forServerTaggedQuery(queryId),\n        relativePath,\n        snap\n      );\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // Query must have been removed already\n      return [];\n    }\n  }\n\n  /**\n   * Apply server data to be merged in for the specified tagged query.\n   *\n   * @return Events to raise.\n   */\n  applyTaggedQueryMerge(\n    path: Path,\n    changedChildren: { [k: string]: Node },\n    tag: number\n  ): Event[] {\n    const queryKey = this.queryKeyForTag_(tag);\n    if (queryKey) {\n      const r = SyncTree.parseQueryKey_(queryKey);\n      const queryPath = r.path,\n        queryId = r.queryId;\n      const relativePath = Path.relativePath(queryPath, path);\n      const changeTree = ImmutableTree.fromObject(changedChildren);\n      const op = new Merge(\n        OperationSource.forServerTaggedQuery(queryId),\n        relativePath,\n        changeTree\n      );\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  }\n\n  /**\n   * Apply a listen complete for a tagged query\n   *\n   * @return Events to raise.\n   */\n  applyTaggedListenComplete(path: Path, tag: number): Event[] {\n    const queryKey = this.queryKeyForTag_(tag);\n    if (queryKey) {\n      const r = SyncTree.parseQueryKey_(queryKey);\n      const queryPath = r.path,\n        queryId = r.queryId;\n      const relativePath = Path.relativePath(queryPath, path);\n      const op = new ListenComplete(\n        OperationSource.forServerTaggedQuery(queryId),\n        relativePath\n      );\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  }\n\n  /**\n   * Add an event callback for the specified query.\n   *\n   * @return Events to raise.\n   */\n  addEventRegistration(\n    query: Query,\n    eventRegistration: EventRegistration\n  ): Event[] {\n    const path = query.path;\n\n    let serverCache: Node | null = null;\n    let foundAncestorDefaultView = false;\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n    this.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n      const relativePath = Path.relativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n      foundAncestorDefaultView =\n        foundAncestorDefaultView || sp.hasCompleteView();\n    });\n    let syncPoint = this.syncPointTree_.get(path);\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      foundAncestorDefaultView =\n        foundAncestorDefaultView || syncPoint.hasCompleteView();\n      serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    let serverCacheComplete;\n    if (serverCache != null) {\n      serverCacheComplete = true;\n    } else {\n      serverCacheComplete = false;\n      serverCache = ChildrenNode.EMPTY_NODE;\n      const subtree = this.syncPointTree_.subtree(path);\n      subtree.foreachChild((childName, childSyncPoint) => {\n        const completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\n        if (completeCache) {\n          serverCache = serverCache.updateImmediateChild(\n            childName,\n            completeCache\n          );\n        }\n      });\n    }\n\n    const viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n    if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n      // We need to track a tag for this query\n      const queryKey = SyncTree.makeQueryKey_(query);\n      assert(\n        !this.queryToTagMap.has(queryKey),\n        'View does not exist, but we have a tag'\n      );\n      const tag = SyncTree.getNextQueryTag_();\n      this.queryToTagMap.set(queryKey, tag);\n      this.tagToQueryMap.set(tag, queryKey);\n    }\n    const writesCache = this.pendingWriteTree_.childWrites(path);\n    let events = syncPoint.addEventRegistration(\n      query,\n      eventRegistration,\n      writesCache,\n      serverCache,\n      serverCacheComplete\n    );\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\n      const view /** @type !View */ = syncPoint.viewForQuery(query);\n      events = events.concat(this.setupListener_(query, view));\n    }\n    return events;\n  }\n\n  /**\n   * Remove event callback(s).\n   *\n   * If query is the default query, we'll check all queries for the specified eventRegistration.\n   * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n   *\n   * @param eventRegistration If null, all callbacks are removed.\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\n   * @return Cancel events, if cancelError was provided.\n   */\n  removeEventRegistration(\n    query: Query,\n    eventRegistration: EventRegistration | null,\n    cancelError?: Error\n  ): Event[] {\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\n    const path = query.path;\n    const maybeSyncPoint = this.syncPointTree_.get(path);\n    let cancelEvents: Event[] = [];\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n    // not loadsAllData().\n    if (\n      maybeSyncPoint &&\n      (query.queryIdentifier() === 'default' ||\n        maybeSyncPoint.viewExistsForQuery(query))\n    ) {\n      /**\n       * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\n       */\n      const removedAndEvents = maybeSyncPoint.removeEventRegistration(\n        query,\n        eventRegistration,\n        cancelError\n      );\n      if (maybeSyncPoint.isEmpty()) {\n        this.syncPointTree_ = this.syncPointTree_.remove(path);\n      }\n      const removed = removedAndEvents.removed;\n      cancelEvents = removedAndEvents.events;\n      // We may have just removed one of many listeners and can short-circuit this whole process\n      // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n      // properly set up.\n      //\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query.getQueryParams().loadsAllData();\n        });\n      const covered = this.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) => {\n          return parentSyncPoint.hasCompleteView();\n        }\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = this.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = this.collectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.getQuery();\n            const listener = this.createListenerForView_(view);\n            this.listenProvider_.startListening(\n              SyncTree.queryForListening_(newQuery),\n              this.tagForQuery_(newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        } else {\n          // There's nothing below us, so nothing we need to start listening on\n        }\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          this.listenProvider_.stopListening(\n            SyncTree.queryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: Query) => {\n            const tagToRemove = this.queryToTagMap.get(\n              SyncTree.makeQueryKey_(queryToRemove)\n            );\n            this.listenProvider_.stopListening(\n              SyncTree.queryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n      // Now, clear all of the tags we're tracking for the removed listens\n      this.removeTags_(removed);\n    } else {\n      // No-op, this listener must've been already removed\n    }\n    return cancelEvents;\n  }\n\n  /**\n   * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n   * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n   * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n   *     <incremented total> as the write is applied locally and then acknowledged at the server.\n   *\n   * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n   *\n   * @param path The path to the data we want\n   * @param writeIdsToExclude A specific set to be excluded\n   */\n  calcCompleteEventCache(path: Path, writeIdsToExclude?: number[]): Node {\n    const includeHiddenSets = true;\n    const writeTree = this.pendingWriteTree_;\n    const serverCache = this.syncPointTree_.findOnPath(\n      path,\n      (pathSoFar, syncPoint) => {\n        const relativePath = Path.relativePath(pathSoFar, path);\n        const serverCache = syncPoint.getCompleteServerCache(relativePath);\n        if (serverCache) {\n          return serverCache;\n        }\n      }\n    );\n    return writeTree.calcCompleteEventCache(\n      path,\n      serverCache,\n      writeIdsToExclude,\n      includeHiddenSets\n    );\n  }\n\n  /**\n   * This collapses multiple unfiltered views into a single view, since we only need a single\n   * listener for them.\n   */\n  private collectDistinctViewsForSubTree_(\n    subtree: ImmutableTree<SyncPoint>\n  ): View[] {\n    return subtree.fold<View[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n          const completeView = maybeChildSyncPoint.getCompleteView();\n          return [completeView];\n        } else {\n          // No complete view here, flatten any deeper listens into an array\n          let views: View[] = [];\n          if (maybeChildSyncPoint) {\n            views = maybeChildSyncPoint.getQueryViews();\n          }\n          each(childMap, (_key: string, childViews: View[]) => {\n            views = views.concat(childViews);\n          });\n          return views;\n        }\n      }\n    );\n  }\n\n  private removeTags_(queries: Query[]) {\n    for (let j = 0; j < queries.length; ++j) {\n      const removedQuery = queries[j];\n      if (!removedQuery.getQueryParams().loadsAllData()) {\n        // We should have a tag for this\n        const removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n        const removedQueryTag = this.queryToTagMap.get(removedQueryKey);\n        this.queryToTagMap.delete(removedQueryKey);\n        this.tagToQueryMap.delete(removedQueryTag);\n      }\n    }\n  }\n\n  /**\n   * Normalizes a query to a query we send the server for listening\n   *\n   * @return The normalized query\n   */\n  private static queryForListening_(query: Query): Query {\n    if (\n      query.getQueryParams().loadsAllData() &&\n      !query.getQueryParams().isDefault()\n    ) {\n      // We treat queries that load all data as default queries\n      // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n      // from Query\n      return query.getRef()!;\n    } else {\n      return query;\n    }\n  }\n\n  /**\n   * For a given new listen, manage the de-duplication of outstanding subscriptions.\n   *\n   * @return This method can return events to support synchronous data sources\n   */\n  private setupListener_(query: Query, view: View): Event[] {\n    const path = query.path;\n    const tag = this.tagForQuery_(query);\n    const listener = this.createListenerForView_(view);\n\n    const events = this.listenProvider_.startListening(\n      SyncTree.queryForListening_(query),\n      tag,\n      listener.hashFn,\n      listener.onComplete\n    );\n\n    const subtree = this.syncPointTree_.subtree(path);\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n    // may need to shadow other listens as well.\n    if (tag) {\n      assert(\n        !subtree.value.hasCompleteView(),\n        \"If we're adding a query, it shouldn't be shadowed\"\n      );\n    } else {\n      // Shadow everything at or below this location, this is a default listener.\n      const queriesToStop = subtree.fold<Query[]>(\n        (relativePath, maybeChildSyncPoint, childMap) => {\n          if (\n            !relativePath.isEmpty() &&\n            maybeChildSyncPoint &&\n            maybeChildSyncPoint.hasCompleteView()\n          ) {\n            return [maybeChildSyncPoint.getCompleteView().getQuery()];\n          } else {\n            // No default listener here, flatten any deeper queries into an array\n            let queries: Query[] = [];\n            if (maybeChildSyncPoint) {\n              queries = queries.concat(\n                maybeChildSyncPoint.getQueryViews().map(view => view.getQuery())\n              );\n            }\n            each(childMap, (_key: string, childQueries: Query[]) => {\n              queries = queries.concat(childQueries);\n            });\n            return queries;\n          }\n        }\n      );\n      for (let i = 0; i < queriesToStop.length; ++i) {\n        const queryToStop = queriesToStop[i];\n        this.listenProvider_.stopListening(\n          SyncTree.queryForListening_(queryToStop),\n          this.tagForQuery_(queryToStop)\n        );\n      }\n    }\n    return events;\n  }\n\n  private createListenerForView_(\n    view: View\n  ): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n    const query = view.getQuery();\n    const tag = this.tagForQuery_(query);\n\n    return {\n      hashFn: () => {\n        const cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\n        return cache.hash();\n      },\n      onComplete: (status: string): Event[] => {\n        if (status === 'ok') {\n          if (tag) {\n            return this.applyTaggedListenComplete(query.path, tag);\n          } else {\n            return this.applyListenComplete(query.path);\n          }\n        } else {\n          // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n          // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n          const error = errorForServerCode(status, query);\n          return this.removeEventRegistration(\n            query,\n            /*eventRegistration*/ null,\n            error\n          );\n        }\n      }\n    };\n  }\n\n  /**\n   * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n   */\n  private static makeQueryKey_(query: Query): string {\n    return query.path.toString() + '$' + query.queryIdentifier();\n  }\n\n  /**\n   * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n   */\n  private static parseQueryKey_(\n    queryKey: string\n  ): { queryId: string; path: Path } {\n    const splitIndex = queryKey.indexOf('$');\n    assert(\n      splitIndex !== -1 && splitIndex < queryKey.length - 1,\n      'Bad queryKey.'\n    );\n    return {\n      queryId: queryKey.substr(splitIndex + 1),\n      path: new Path(queryKey.substr(0, splitIndex))\n    };\n  }\n\n  /**\n   * Return the query associated with the given tag, if we have one\n   */\n  private queryKeyForTag_(tag: number): string | null {\n    return this.tagToQueryMap.get(tag);\n  }\n\n  /**\n   * Return the tag associated with the given query.\n   */\n  private tagForQuery_(query: Query): number | null {\n    const queryKey = SyncTree.makeQueryKey_(query);\n    return this.queryToTagMap.get(queryKey);\n  }\n\n  /**\n   * Static tracker for next query tag.\n   */\n  private static nextQueryTag_ = 1;\n\n  /**\n   * Static accessor for query tags.\n   */\n  private static getNextQueryTag_(): number {\n    return SyncTree.nextQueryTag_++;\n  }\n\n  /**\n   * A helper method to apply tagged operations\n   */\n  private applyTaggedOperation_(\n    queryPath: Path,\n    operation: Operation\n  ): Event[] {\n    const syncPoint = this.syncPointTree_.get(queryPath);\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n    const writesCache = this.pendingWriteTree_.childWrites(queryPath);\n    return syncPoint.applyOperation(\n      operation,\n      writesCache,\n      /*serverCache=*/ null\n    );\n  }\n\n  /**\n   * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n   *\n   * NOTES:\n   * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n   *\n   * - We call applyOperation() on each SyncPoint passing three things:\n   *   1. A version of the Operation that has been made relative to the SyncPoint location.\n   *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n   *   3. A snapshot Node with cached server data, if we have it.\n   *\n   * - We concatenate all of the events returned by each SyncPoint and return the result.\n   */\n  private applyOperationToSyncPoints_(operation: Operation): Event[] {\n    return this.applyOperationHelper_(\n      operation,\n      this.syncPointTree_,\n      /*serverCache=*/ null,\n      this.pendingWriteTree_.childWrites(Path.Empty)\n    );\n  }\n\n  /**\n   * Recursive helper for applyOperationToSyncPoints_\n   */\n  private applyOperationHelper_(\n    operation: Operation,\n    syncPointTree: ImmutableTree<SyncPoint>,\n    serverCache: Node | null,\n    writesCache: WriteTreeRef\n  ): Event[] {\n    if (operation.path.isEmpty()) {\n      return this.applyOperationDescendantsHelper_(\n        operation,\n        syncPointTree,\n        serverCache,\n        writesCache\n      );\n    } else {\n      const syncPoint = syncPointTree.get(Path.Empty);\n\n      // If we don't have cached server data, see if we can get it from this SyncPoint.\n      if (serverCache == null && syncPoint != null) {\n        serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n      }\n\n      let events: Event[] = [];\n      const childName = operation.path.getFront();\n      const childOperation = operation.operationForChild(childName);\n      const childTree = syncPointTree.children.get(childName);\n      if (childTree && childOperation) {\n        const childServerCache = serverCache\n          ? serverCache.getImmediateChild(childName)\n          : null;\n        const childWritesCache = writesCache.child(childName);\n        events = events.concat(\n          this.applyOperationHelper_(\n            childOperation,\n            childTree,\n            childServerCache,\n            childWritesCache\n          )\n        );\n      }\n\n      if (syncPoint) {\n        events = events.concat(\n          syncPoint.applyOperation(operation, writesCache, serverCache)\n        );\n      }\n\n      return events;\n    }\n  }\n\n  /**\n   * Recursive helper for applyOperationToSyncPoints_\n   */\n  private applyOperationDescendantsHelper_(\n    operation: Operation,\n    syncPointTree: ImmutableTree<SyncPoint>,\n    serverCache: Node | null,\n    writesCache: WriteTreeRef\n  ): Event[] {\n    const syncPoint = syncPointTree.get(Path.Empty);\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    let events: Event[] = [];\n    syncPointTree.children.inorderTraversal((childName, childTree) => {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writesCache.child(childName);\n      const childOperation = operation.operationForChild(childName);\n      if (childOperation) {\n        events = events.concat(\n          this.applyOperationDescendantsHelper_(\n            childOperation,\n            childTree,\n            childServerCache,\n            childWritesCache\n          )\n        );\n      }\n    });\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPoint.applyOperation(operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Path } from './util/Path';\nimport { Node } from './snap/Node';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n *\n * @constructor\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n *\n * @constructor\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StatsCollection } from './StatsCollection';\nimport { RepoInfo } from '../RepoInfo';\n\nexport class StatsManager {\n  private static collections_: { [k: string]: StatsCollection } = {};\n  private static reporters_: { [k: string]: unknown } = {};\n\n  static getCollection(repoInfo: RepoInfo): StatsCollection {\n    const hashString = repoInfo.toString();\n\n    if (!this.collections_[hashString]) {\n      this.collections_[hashString] = new StatsCollection();\n    }\n\n    return this.collections_[hashString];\n  }\n\n  static getOrCreateReporter<T>(\n    repoInfo: RepoInfo,\n    creatorFunction: () => T\n  ): T {\n    const hashString = repoInfo.toString();\n\n    if (!this.reporters_[hashString]) {\n      this.reporters_[hashString] = creatorFunction();\n    }\n\n    return this.reporters_[hashString] as T;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StatsCollection } from './StatsCollection';\nimport { each } from '../util/util';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ The collection to \"listen\" to.\n * @constructor\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\nimport { setTimeoutNonBlocking, each } from '../util/util';\nimport { StatsListener } from './StatsListener';\nimport { StatsCollection } from './StatsCollection';\nimport { ServerActions } from '../ServerActions';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\n/**\n * @constructor\n */\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  private statsToReport_: { [k: string]: boolean } = {};\n\n  /**\n   * @param collection\n   * @param server_\n   */\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  includeStat(stat: string) {\n    this.statsToReport_[stat] = true;\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\nimport { log, logger, exceptionGuard } from '../util/util';\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n * @constructor\n */\nexport class EventQueue {\n  /**\n   * @private\n   * @type {!Array.<EventList>}\n   */\n  private eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   * @private\n   * @type {!number}\n   */\n  private recursionDepth_ = 0;\n\n  /**\n   * @param {!Array.<Event>} eventDataList The new events to queue.\n   */\n  queueEvents(eventDataList: Event[]) {\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n    let currList = null;\n    for (let i = 0; i < eventDataList.length; i++) {\n      const eventData = eventDataList[i];\n      const eventPath = eventData.getPath();\n      if (currList !== null && !eventPath.equals(currList.getPath())) {\n        this.eventLists_.push(currList);\n        currList = null;\n      }\n\n      if (currList === null) {\n        currList = new EventList(eventPath);\n      }\n\n      currList.add(eventData);\n    }\n    if (currList) {\n      this.eventLists_.push(currList);\n    }\n  }\n\n  /**\n   * Queues the specified events and synchronously raises all events (including previously queued ones)\n   * for the specified path.\n   *\n   * It is assumed that the new events are all for the specified path.\n   *\n   * @param {!Path} path The path to raise events for.\n   * @param {!Array.<Event>} eventDataList The new events to raise.\n   */\n  raiseEventsAtPath(path: Path, eventDataList: Event[]) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_((eventPath: Path) =>\n      eventPath.equals(path)\n    );\n  }\n\n  /**\n   * Queues the specified events and synchronously raises all events (including previously queued ones) for\n   * locations related to the specified change path (i.e. all ancestors and descendants).\n   *\n   * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n   *\n   * @param {!Path} changedPath The path to raise events for.\n   * @param {!Array.<!Event>} eventDataList The events to raise\n   */\n  raiseEventsForChangedPath(changedPath: Path, eventDataList: Event[]) {\n    this.queueEvents(eventDataList);\n\n    this.raiseQueuedEventsMatchingPredicate_((eventPath: Path) => {\n      return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n    });\n  }\n\n  /**\n   * @param {!function(!Path):boolean} predicate\n   * @private\n   */\n  private raiseQueuedEventsMatchingPredicate_(\n    predicate: (path: Path) => boolean\n  ) {\n    this.recursionDepth_++;\n\n    let sentAll = true;\n    for (let i = 0; i < this.eventLists_.length; i++) {\n      const eventList = this.eventLists_[i];\n      if (eventList) {\n        const eventPath = eventList.getPath();\n        if (predicate(eventPath)) {\n          this.eventLists_[i].raise();\n          this.eventLists_[i] = null;\n        } else {\n          sentAll = false;\n        }\n      }\n    }\n\n    if (sentAll) {\n      this.eventLists_ = [];\n    }\n\n    this.recursionDepth_--;\n  }\n}\n\n/**\n * @param {!Path} path\n * @constructor\n */\nexport class EventList {\n  /**\n   * @type {!Array.<Event>}\n   * @private\n   */\n  private events_: Event[] = [];\n\n  constructor(private readonly path_: Path) {}\n\n  /**\n   * @param {!Event} eventData\n   */\n  add(eventData: Event) {\n    this.events_.push(eventData);\n  }\n\n  /**\n   * Iterates through the list and raises each event\n   */\n  raise() {\n    for (let i = 0; i < this.events_.length; i++) {\n      const eventData = this.events_[i];\n      if (eventData !== null) {\n        this.events_[i] = null;\n        const eventFn = eventData.getEventRunner();\n        if (logger) {\n          log('event: ' + eventData.toString());\n        }\n        exceptionGuard(eventFn);\n      }\n    }\n  }\n\n  /**\n   * @return {!Path}\n   */\n  getPath(): Path {\n    return this.path_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  /**\n   * @param {!Array.<string>} allowedEvents_\n   */\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @param {!string} eventType\n   * @return {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   * @param {!string} eventType\n   * @param {...*} varArgs\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from './EventEmitter';\nimport { assert } from '@firebase/util';\n\ndeclare const document: Document;\n\n/**\n * @extends {EventEmitter}\n */\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  /**\n   * @param {!string} eventType\n   * @return {Array.<boolean>}\n   */\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n *\n * @extends {EventEmitter}\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  /**\n   * @param {!string} eventType\n   * @return {Array.<boolean>}\n   */\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  /**\n   * @return {boolean}\n   */\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n * @constructor\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   * @param {number} requestNum\n   * @param {Array} data\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\nimport { StatsManager } from '../core/stats/StatsManager';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport {\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { base64Encode, stringify, isNodeSdk } from '@firebase/util';\n\nimport { Transport } from './Transport';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n * @const\n * @type {number}\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n * @const\n * @type {number}\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n *\n * @constructor\n * @implements {Transport}\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\n   *                                         transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\n   *                                     connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) =>\n      repoInfo.connectionURL(LONG_POLLING, params);\n  }\n\n  /**\n   *\n   * @param {function(Object)} onMessage Callback when messages arrive\n   * @param {function()} onDisconnect Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[\n          FIREBASE_LONGPOLL_CALLBACK_ID_PARAM\n        ] = this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.href &&\n        location.href.indexOf(FORGE_DOMAIN) !== -1\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  private static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  private static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   * @private\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   * @private\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param {!Object} data The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   * @param {!string} id\n   * @param {!string} pw\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   * @param {*} args\n   * @private\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n * @constructor\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[\n        FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier\n      ] = onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   * @private\n   * @return {Element}\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param {!string} id - The ID of this connection\n   * @param {!string} pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param {!string} url - The URL of the script tag.\n   * @param {!number} serial - The serial number of the request.\n   * @private\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param {!string} url - The URL for the script tag source.\n   * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const rstate = (newScript as any).readyState;\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript.onload = (newScript as any).onreadystatechange = null;\n              if (newScript.parentNode) {\n                newScript.parentNode.removeChild(newScript);\n              }\n              loadCB();\n            }\n          };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n// SDK_VERSION should be set before any database instance is created\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport {\n  assert,\n  CONSTANTS as ENV_CONSTANTS,\n  jsonEval,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { StatsManager } from '../core/stats/StatsManager';\nimport {\n  FORGE_DOMAIN,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Transport } from './Transport';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { SDK_VERSION } from '../core/version';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n * @constructor\n * @implements {Transport}\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param {RepoInfo} repoInfo The info for the websocket endpoint.\n   * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n   * @return {string} connection url\n   * @private\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.href &&\n      location.href.indexOf(FORGE_DOMAIN) !== -1\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    return repoInfo.connectionURL(WEBSOCKET, urlParams);\n  }\n\n  /**\n   *\n   * @param onMessage Callback when messages arrive\n   * @param onDisconnect Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        const options: { [k: string]: object } = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        const options: { [k: string]: object } = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   * @type {number}\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   * @type {number}\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   * @return {boolean}\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param {number} frameCount The number of frames we are expecting from the server\n   * @private\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @param {!String} data\n   * @return {?String} Any remaining data to be process, or null if there is none\n   * @private\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param {Object} data The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param {string} str String to send.\n   * @private\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { WebSocketConnection } from './WebSocketConnection';\nimport { warn } from '../core/util/util';\nimport { TransportConstructor } from './Transport';\nimport { RepoInfo } from '../core/RepoInfo';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n * @constructor\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  /**\n   * @const\n   * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\n   */\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  /**\n   * @param {!RepoInfo} repoInfo\n   * @private\n   */\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n    }\n  }\n\n  /**\n   * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\n   * initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\n   * transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { PROTOCOL_VERSION } from './Constants';\nimport { TransportManager } from './TransportManager';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Transport, TransportConstructor } from './Transport';\nimport { Indexable } from '../core/util/misc';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n *\n * @constructor\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   * @private\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      undefined,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  /**\n   * @return {!string}\n   * @private\n   */\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   *\n   * @param {Object} dataMsg An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(\n          payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          }\n        );\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {Object} handshake The handshake data returned from the server\n   * @private\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.updateHost(host);\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.updateHost(host);\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   *\n   * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   * @private\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  /**\n   *\n   * @param {string} reason\n   * @private\n   */\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   *\n   * @private\n   */\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Query } from '../api/Query';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  /**\n   * @param {!Query} query\n   * @param {function():string} currentHashFn\n   * @param {?number} tag\n   * @param {function(string, *)} onComplete\n   */\n  abstract listen(\n    query: Query,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   *\n   * @param {!Query} query\n   * @param {?number} tag\n   */\n  abstract unlisten(query: Query, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: Query): Promise<string>;\n\n  /**\n   * @param {string} pathString\n   * @param {*} data\n   * @param {function(string, string)=} onComplete\n   * @param {string=} hash\n   */\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * @param {string} pathString\n   * @param {*} data\n   * @param {function(string, ?string)} onComplete\n   * @param {string=} hash\n   */\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param {string} token The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * @param {string} pathString\n   * @param {*} data\n   * @param {function(string, string)=} onComplete\n   */\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  /**\n   * @param {string} pathString\n   * @param {*} data\n   * @param {function(string, string)=} onComplete\n   */\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  /**\n   * @param {string} pathString\n   * @param {function(string, string)=} onComplete\n   */\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  /**\n   * @param {Object.<string, *>} stats\n   */\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  isEmpty,\n  safeGet,\n  CONSTANTS,\n  stringify,\n  assert,\n  isAdmin,\n  isValidFormat,\n  isMobileCordova,\n  isReactNative,\n  isNodeSdk,\n  Deferred\n} from '@firebase/util';\n\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { Path } from './util/Path';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { OnlineMonitor } from './util/OnlineMonitor';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { ServerActions } from './ServerActions';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { Query } from '../api/Query';\nimport { SDK_VERSION } from './version';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst GET_CONNECT_TIMEOUT = 3 * 1000;\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_AUTH_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: Query;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  /** Map<path, Map<queryId, ListenSpec>> */\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @implements {ServerActions}\n   * @param repoInfo_ Data about the namespace we are connecting to\n   * @param applicationId_ The Firebase App ID for this project\n   * @param onDataUpdate_ A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n    this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: Query): Promise<string> {\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query.path.toString(),\n      q: query.queryObject()\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          this.onDataUpdate_(\n            request['p'],\n            payload,\n            /*isMerge*/ false,\n            /*tag*/ null\n          );\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(() => {\n        const get = this.outstandingGets_[index];\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n        delete this.outstandingGets_[index];\n        this.outstandingGetCount_--;\n        if (this.outstandingGetCount_ === 0) {\n          this.outstandingGets_ = [];\n        }\n        this.log_('get ' + index + ' timed out on connection');\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  listen(\n    query: Query,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const queryId = query.queryIdentifier();\n    const pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query.getQueryParams().isDefault() ||\n        !query.getQueryParams().loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      'listen() called twice for same path/queryId.'\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query.path.toString();\n    const queryId = query.queryIdentifier();\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query.queryObject();\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: Query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n        const indexPath = query.path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: Query, tag: number | null) {\n    const pathString = query.path.toString();\n    const queryId = query.queryIdentifier();\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query.getQueryParams().isDefault() ||\n        !query.getQueryParams().loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const self = this;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      // First fetch auth token, and establish connection after fetching the token was successful\n      this.authTokenProvider_\n        .getToken(forceRefresh)\n        .then(result => {\n          if (!canceled) {\n            log('getToken() completed. Creating connection.');\n            self.authToken_ = result && result.accessToken;\n            connection = new Connection(\n              connId,\n              self.repoInfo_,\n              self.applicationId_,\n              onDataMessage,\n              onReady,\n              onDisconnect,\n              /* onKill= */ reason => {\n                warn(reason + ' (' + self.repoInfo_.toString() + ')');\n                self.interrupt(SERVER_KILL_INTERRUPT_REASON);\n              },\n              lastSessionId\n            );\n          } else {\n            log('getToken() completed but was canceled');\n          }\n        })\n        .then(null, error => {\n          self.log_('Failed to get token: ' + error);\n          if (!canceled) {\n            if (this.repoInfo_.nodeAdmin) {\n              // This may be a critical error for the Admin Node.js SDK, so log a warning.\n              // But getToken() may also just have temporarily failed, so we still want to\n              // continue retrying.\n              warn(error);\n            }\n            closeFn();\n          }\n        });\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\nimport { logWrapper, warn } from './util/util';\n\nimport { ServerActions } from './ServerActions';\nimport { RepoInfo } from './RepoInfo';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { Query } from '../api/Query';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   *\n   * @private {!Object.<string, !Object>}\n   */\n  private listens_: { [k: string]: object } = {};\n\n  /**\n   * @param {!Query} query\n   * @param {?number=} tag\n   * @return {string}\n   * @private\n   */\n  static getListenId_(query: Query, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query.getQueryParams().isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query.path.toString();\n    }\n  }\n\n  /**\n   * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n   * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n   * @param {AuthTokenProvider} authTokenProvider_\n   * @implements {ServerActions}\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: Query,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query.path.toString();\n    this.log_(\n      'Listen called for ' + pathString + ' ' + query.queryIdentifier()\n    );\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = query\n      .getQueryParams()\n      .toRestQueryStringParameters();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: Query, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: Query): Promise<string> {\n    const queryStringParameters = query\n      .getQueryParams()\n      .toRestQueryStringParameters();\n\n    const pathString = query.path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   *\n   * @param {!string} pathString\n   * @param {!Object.<string, *>} queryStringParameters\n   * @param {?function(?number, *=)} callback\n   * @private\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    this.authTokenProvider_\n      .getToken(/*forceRefresh=*/ false)\n      .then(authTokenData => {\n        const authToken = authTokenData && authTokenData.accessToken;\n        if (authToken) {\n          queryStringParameters['auth'] = authToken;\n        }\n\n        const url =\n          (this.repoInfo_.secure ? 'https://' : 'http://') +\n          this.repoInfo_.host +\n          pathString +\n          '?' +\n          'ns=' +\n          this.repoInfo_.namespace +\n          querystring(queryStringParameters);\n\n        this.log_('Sending REST request for ' + url);\n        const xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = () => {\n          if (callback && xhr.readyState === 4) {\n            this.log_(\n              'REST Response for ' + url + ' received. status:',\n              xhr.status,\n              'response:',\n              xhr.responseText\n            );\n            let res = null;\n            if (xhr.status >= 200 && xhr.status < 300) {\n              try {\n                res = jsonEval(xhr.responseText);\n              } catch (e) {\n                warn(\n                  'Failed to parse JSON response for ' +\n                    url +\n                    ': ' +\n                    xhr.responseText\n                );\n              }\n              callback(null, res);\n            } else {\n              // 401 and 404 are expected.\n              if (xhr.status !== 401 && xhr.status !== 404) {\n                warn(\n                  'Got unsuccessful REST response for ' +\n                    url +\n                    ' Status: ' +\n                    xhr.status\n                );\n              }\n              callback(xhr.status);\n            }\n            callback = null;\n          }\n        };\n\n        xhr.open('GET', url, /*asynchronous=*/ true);\n        xhr.send();\n      });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { Path } from './util/Path';\nimport { SparseSnapshotTree } from './SparseSnapshotTree';\nimport { SyncTree } from './SyncTree';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport { stringify, map, isEmpty } from '@firebase/util';\nimport { beingCrawled, each, exceptionGuard, warn, log } from './util/util';\n\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { StatsManager } from './stats/StatsManager';\nimport { StatsReporter } from './stats/StatsReporter';\nimport { StatsListener } from './stats/StatsListener';\nimport { EventQueue } from './view/EventQueue';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { RepoInfo } from './RepoInfo';\nimport { Database } from '../api/Database';\nimport { DataSnapshot } from '../api/DataSnapshot';\nimport { ServerActions } from './ServerActions';\nimport { Query } from '../api/Query';\nimport { EventRegistration } from './view/EventRegistration';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { Event } from './view/Event';\nimport { Node } from './snap/Node';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport { Indexable } from './util/misc';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  private infoSyncTree_: SyncTree;\n  private serverSyncTree_: SyncTree;\n\n  private stats_: StatsCollection;\n  private statsListener_: StatsListener | null = null;\n  private eventQueue_ = new EventQueue();\n  private nextWriteId_ = 1;\n  private server_: ServerActions;\n  private statsReporter_: StatsReporter;\n  private transactionsInit_: () => void;\n  private infoData_: SnapshotHolder;\n  private abortTransactions_: (path: Path) => Path;\n  private rerunTransactions_: (changedPath: Path) => Path;\n  private interceptServerDataCallback_:\n    | ((a: string, b: unknown) => void)\n    | null = null;\n  private __database: Database;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  private onDisconnect_ = new SparseSnapshotTree();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    private forceRestClient_: boolean,\n    public app: FirebaseApp,\n    public authTokenProvider_: AuthTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  start(): void {\n    this.stats_ = StatsManager.getCollection(this.repoInfo_);\n\n    if (this.forceRestClient_ || beingCrawled()) {\n      this.server_ = new ReadonlyRestClient(\n        this.repoInfo_,\n        this.onDataUpdate_.bind(this),\n        this.authTokenProvider_\n      );\n\n      // Minor hack: Fire onConnect immediately, since there's no actual connection.\n      setTimeout(this.onConnectStatus_.bind(this, true), 0);\n    } else {\n      const authOverride = this.app.options['databaseAuthVariableOverride'];\n      // Validate authOverride\n      if (typeof authOverride !== 'undefined' && authOverride !== null) {\n        if (typeof authOverride !== 'object') {\n          throw new Error(\n            'Only objects are supported for option databaseAuthVariableOverride'\n          );\n        }\n        try {\n          stringify(authOverride);\n        } catch (e) {\n          throw new Error('Invalid authOverride provided: ' + e);\n        }\n      }\n\n      this.persistentConnection_ = new PersistentConnection(\n        this.repoInfo_,\n        this.app.options.appId,\n        this.onDataUpdate_.bind(this),\n        this.onConnectStatus_.bind(this),\n        this.onServerInfoUpdate_.bind(this),\n        this.authTokenProvider_,\n        authOverride\n      );\n\n      this.server_ = this.persistentConnection_;\n    }\n\n    this.authTokenProvider_.addTokenChangeListener(token => {\n      this.server_.refreshAuthToken(token);\n    });\n\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n    this.statsReporter_ = StatsManager.getOrCreateReporter(\n      this.repoInfo_,\n      () => new StatsReporter(this.stats_, this.server_)\n    );\n\n    this.transactionsInit_();\n\n    // Used for .info.\n    this.infoData_ = new SnapshotHolder();\n    this.infoSyncTree_ = new SyncTree({\n      startListening: (query, tag, currentHashFn, onComplete) => {\n        let infoEvents: Event[] = [];\n        const node = this.infoData_.getNode(query.path);\n        // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n        // on initial data...\n        if (!node.isEmpty()) {\n          infoEvents = this.infoSyncTree_.applyServerOverwrite(\n            query.path,\n            node\n          );\n          setTimeout(() => {\n            onComplete('ok');\n          }, 0);\n        }\n        return infoEvents;\n      },\n      stopListening: () => {}\n    });\n    this.updateInfo_('connected', false);\n\n    this.serverSyncTree_ = new SyncTree({\n      startListening: (query, tag, currentHashFn, onComplete) => {\n        this.server_.listen(query, currentHashFn, tag, (status, data) => {\n          const events = onComplete(status, data);\n          this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n        });\n        // No synchronous events for network-backed sync trees\n        return [];\n      },\n      stopListening: (query, tag) => {\n        this.server_.unlisten(query, tag);\n      }\n    });\n  }\n\n  /**\n   * @return The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n\n  /**\n   * @return The namespace represented by the repo.\n   */\n  name(): string {\n    return this.repoInfo_.namespace;\n  }\n\n  /**\n   * @return The time in milliseconds, taking the server offset into account if we have one.\n   */\n  serverTime(): number {\n    const offsetNode = this.infoData_.getNode(\n      new Path('.info/serverTimeOffset')\n    );\n    const offset = (offsetNode.val() as number) || 0;\n    return new Date().getTime() + offset;\n  }\n\n  /**\n   * Generate ServerValues using some variables from the repo object.\n   */\n  generateServerValues(): Indexable {\n    return generateWithValues({\n      timestamp: this.serverTime()\n    });\n  }\n\n  /**\n   * Called by realtime when we get new messages from the server.\n   */\n  private onDataUpdate_(\n    pathString: string,\n    data: unknown,\n    isMerge: boolean,\n    tag: number | null\n  ) {\n    // For testing.\n    this.dataUpdateCount++;\n    const path = new Path(pathString);\n    data = this.interceptServerDataCallback_\n      ? this.interceptServerDataCallback_(pathString, data)\n      : data;\n    let events = [];\n    if (tag) {\n      if (isMerge) {\n        const taggedChildren = map(\n          data as { [k: string]: unknown },\n          (raw: unknown) => nodeFromJSON(raw)\n        );\n        events = this.serverSyncTree_.applyTaggedQueryMerge(\n          path,\n          taggedChildren,\n          tag\n        );\n      } else {\n        const taggedSnap = nodeFromJSON(data);\n        events = this.serverSyncTree_.applyTaggedQueryOverwrite(\n          path,\n          taggedSnap,\n          tag\n        );\n      }\n    } else if (isMerge) {\n      const changedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n    } else {\n      const snap = nodeFromJSON(data);\n      events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n    }\n    let affectedPath = path;\n    if (events.length > 0) {\n      // Since we have a listener outstanding for each transaction, receiving any events\n      // is a proxy for some change having occurred.\n      affectedPath = this.rerunTransactions_(path);\n    }\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n  }\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  interceptServerData_(callback: ((a: string, b: unknown) => unknown) | null) {\n    this.interceptServerDataCallback_ = callback;\n  }\n\n  private onConnectStatus_(connectStatus: boolean) {\n    this.updateInfo_('connected', connectStatus);\n    if (connectStatus === false) {\n      this.runOnDisconnectEvents_();\n    }\n  }\n\n  private onServerInfoUpdate_(updates: object) {\n    each(updates, (key: string, value: unknown) => {\n      this.updateInfo_(key, value);\n    });\n  }\n\n  private updateInfo_(pathString: string, value: unknown) {\n    const path = new Path('/.info/' + pathString);\n    const newNode = nodeFromJSON(value);\n    this.infoData_.updateSnapshot(path, newNode);\n    const events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n  }\n\n  private getNextWriteId_(): number {\n    return this.nextWriteId_++;\n  }\n\n  /**\n   * The purpose of `getValue` is to return the latest known value\n   * satisfying `query`.\n   *\n   * If the client is connected, this method will send a request\n   * to the server. If the client is not connected, then either:\n   *\n   * 1. The client was once connected, but not anymore.\n   * 2. The client has never connected, this is the first operation\n   *    this repo is handling.\n   *\n   * In case (1), it's possible that the client still has an active\n   * listener, with cached data. Since this is the latest known\n   * value satisfying the query, that's what getValue will return.\n   * If there is no cached data, `getValue` surfaces an \"offline\"\n   * error.\n   *\n   * In case (2), `getValue` will trigger a time-limited connection\n   * attempt. If the client is unable to connect to the server, it\n   * will surface an \"offline\" error because there cannot be any\n   * cached data. On the other hand, if the client is able to connect,\n   * `getValue` will return the server's value for the query, if one\n   * exists.\n   *\n   * @param query - The query to surface a value for.\n   */\n  getValue(query: Query): Promise<DataSnapshot> {\n    return this.server_.get(query).then(\n      payload => {\n        const node = nodeFromJSON(payload as string);\n        const events = this.serverSyncTree_.applyServerOverwrite(\n          query.path,\n          node\n        );\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n        return Promise.resolve(\n          new DataSnapshot(\n            node,\n            query.getRef(),\n            query.getQueryParams().getIndex()\n          )\n        );\n      },\n      err => {\n        this.log_(\n          'get for query ' +\n            stringify(query) +\n            ' falling back to cache after error: ' +\n            err\n        );\n        const cached = this.serverSyncTree_.calcCompleteEventCache(query.path);\n        if (!cached.isEmpty()) {\n          return Promise.resolve(\n            new DataSnapshot(\n              cached,\n              query.getRef(),\n              query.getQueryParams().getIndex()\n            )\n          );\n        }\n        return Promise.reject(new Error(err as string));\n      }\n    );\n  }\n\n  setWithPriority(\n    path: Path,\n    newVal: unknown,\n    newPriority: number | string | null,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    this.log_('set', {\n      path: path.toString(),\n      value: newVal,\n      priority: newPriority\n    });\n\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n    // (b) store unresolved paths on JSON parse\n    const serverValues = this.generateServerValues();\n    const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n    const existing = this.serverSyncTree_.calcCompleteEventCache(path);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      existing,\n      serverValues\n    );\n\n    const writeId = this.getNextWriteId_();\n    const events = this.serverSyncTree_.applyUserOverwrite(\n      path,\n      newNode,\n      writeId,\n      true\n    );\n    this.eventQueue_.queueEvents(events);\n    this.server_.put(\n      path.toString(),\n      newNodeUnresolved.val(/*export=*/ true),\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('set at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = this.serverSyncTree_.ackUserWrite(\n          writeId,\n          !success\n        );\n        this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      }\n    );\n    const affectedPath = this.abortTransactions_(path);\n    this.rerunTransactions_(affectedPath);\n    // We queued the events above, so just flush the queue here\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n  }\n\n  update(\n    path: Path,\n    childrenToMerge: { [k: string]: unknown },\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    this.log_('update', { path: path.toString(), value: childrenToMerge });\n\n    // Start with our existing data and merge each child into it.\n    let empty = true;\n    const serverValues = this.generateServerValues();\n    const changedChildren: { [k: string]: Node } = {};\n    each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n      empty = false;\n      changedChildren[changedKey] = resolveDeferredValueTree(\n        path.child(changedKey),\n        nodeFromJSON(changedValue),\n        this.serverSyncTree_,\n        serverValues\n      );\n    });\n\n    if (!empty) {\n      const writeId = this.getNextWriteId_();\n      const events = this.serverSyncTree_.applyUserMerge(\n        path,\n        changedChildren,\n        writeId\n      );\n      this.eventQueue_.queueEvents(events);\n      this.server_.merge(\n        path.toString(),\n        childrenToMerge,\n        (status, errorReason) => {\n          const success = status === 'ok';\n          if (!success) {\n            warn('update at ' + path + ' failed: ' + status);\n          }\n\n          const clearEvents = this.serverSyncTree_.ackUserWrite(\n            writeId,\n            !success\n          );\n          const affectedPath =\n            clearEvents.length > 0 ? this.rerunTransactions_(path) : path;\n          this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n          this.callOnCompleteCallback(onComplete, status, errorReason);\n        }\n      );\n\n      each(childrenToMerge, (changedPath: string) => {\n        const affectedPath = this.abortTransactions_(path.child(changedPath));\n        this.rerunTransactions_(affectedPath);\n      });\n\n      // We queued the events above, so just flush the queue here\n      this.eventQueue_.raiseEventsForChangedPath(path, []);\n    } else {\n      log(\"update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n    }\n  }\n\n  /**\n   * Applies all of the changes stored up in the onDisconnect_ tree.\n   */\n  private runOnDisconnectEvents_() {\n    this.log_('onDisconnectEvents');\n\n    const serverValues = this.generateServerValues();\n    const resolvedOnDisconnectTree = new SparseSnapshotTree();\n    this.onDisconnect_.forEachTree(Path.Empty, (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        this.serverSyncTree_,\n        serverValues\n      );\n      resolvedOnDisconnectTree.remember(path, resolved);\n    });\n    let events: Event[] = [];\n\n    resolvedOnDisconnectTree.forEachTree(Path.Empty, (path, snap) => {\n      events = events.concat(\n        this.serverSyncTree_.applyServerOverwrite(path, snap)\n      );\n      const affectedPath = this.abortTransactions_(path);\n      this.rerunTransactions_(affectedPath);\n    });\n\n    this.onDisconnect_ = new SparseSnapshotTree();\n    this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\n  }\n\n  onDisconnectCancel(\n    path: Path,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    this.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n      if (status === 'ok') {\n        this.onDisconnect_.forget(path);\n      }\n      this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  }\n\n  onDisconnectSet(\n    path: Path,\n    value: unknown,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    const newNode = nodeFromJSON(value);\n    this.server_.onDisconnectPut(\n      path.toString(),\n      newNode.val(/*export=*/ true),\n      (status, errorReason) => {\n        if (status === 'ok') {\n          this.onDisconnect_.remember(path, newNode);\n        }\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      }\n    );\n  }\n\n  onDisconnectSetWithPriority(\n    path: Path,\n    value: unknown,\n    priority: unknown,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    const newNode = nodeFromJSON(value, priority);\n    this.server_.onDisconnectPut(\n      path.toString(),\n      newNode.val(/*export=*/ true),\n      (status, errorReason) => {\n        if (status === 'ok') {\n          this.onDisconnect_.remember(path, newNode);\n        }\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      }\n    );\n  }\n\n  onDisconnectUpdate(\n    path: Path,\n    childrenToMerge: { [k: string]: unknown },\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    if (isEmpty(childrenToMerge)) {\n      log(\n        \"onDisconnect().update() called with empty data.  Don't do anything.\"\n      );\n      this.callOnCompleteCallback(onComplete, 'ok');\n      return;\n    }\n\n    this.server_.onDisconnectMerge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        if (status === 'ok') {\n          each(childrenToMerge, (childName: string, childNode: unknown) => {\n            const newChildNode = nodeFromJSON(childNode);\n            this.onDisconnect_.remember(path.child(childName), newChildNode);\n          });\n        }\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      }\n    );\n  }\n\n  addEventCallbackForQuery(query: Query, eventRegistration: EventRegistration) {\n    let events;\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.addEventRegistration(\n        query,\n        eventRegistration\n      );\n    } else {\n      events = this.serverSyncTree_.addEventRegistration(\n        query,\n        eventRegistration\n      );\n    }\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  }\n\n  removeEventCallbackForQuery(\n    query: Query,\n    eventRegistration: EventRegistration\n  ) {\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n    // a little bit by handling the return values anyways.\n    let events;\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.removeEventRegistration(\n        query,\n        eventRegistration\n      );\n    } else {\n      events = this.serverSyncTree_.removeEventRegistration(\n        query,\n        eventRegistration\n      );\n    }\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  }\n\n  interrupt() {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.interrupt(INTERRUPT_REASON);\n    }\n  }\n\n  resume() {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.resume(INTERRUPT_REASON);\n    }\n  }\n\n  stats(showDelta: boolean = false) {\n    if (typeof console === 'undefined') {\n      return;\n    }\n\n    let stats: { [k: string]: unknown };\n    if (showDelta) {\n      if (!this.statsListener_) {\n        this.statsListener_ = new StatsListener(this.stats_);\n      }\n      stats = this.statsListener_.get();\n    } else {\n      stats = this.stats_.get();\n    }\n\n    const longestName = Object.keys(stats).reduce(\n      (previousValue, currentValue) =>\n        Math.max(currentValue.length, previousValue),\n      0\n    );\n\n    each(stats, (stat: string, value: unknown) => {\n      let paddedStat = stat;\n      // pad stat names to be the same length (plus 2 extra spaces).\n      for (let i = stat.length; i < longestName + 2; i++) {\n        paddedStat += ' ';\n      }\n      console.log(paddedStat + value);\n    });\n  }\n\n  statsIncrementCounter(metric: string) {\n    this.stats_.incrementCounter(metric);\n    this.statsReporter_.includeStat(metric);\n  }\n\n  private log_(...varArgs: unknown[]) {\n    let prefix = '';\n    if (this.persistentConnection_) {\n      prefix = this.persistentConnection_.id + ':';\n    }\n    log(prefix, ...varArgs);\n  }\n\n  callOnCompleteCallback(\n    callback: ((status: Error | null, errorReason?: string) => void) | null,\n    status: string,\n    errorReason?: string | null\n  ) {\n    if (callback) {\n      exceptionGuard(() => {\n        if (status === 'ok') {\n          callback(null);\n        } else {\n          const code = (status || 'error').toUpperCase();\n          let message = code;\n          if (errorReason) {\n            message += ': ' + errorReason;\n          }\n\n          const error = new Error(message);\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (error as any).code = code;\n          callback(error);\n        }\n      });\n    }\n  }\n\n  get database(): Database {\n    return this.__database || (this.__database = new Database(this));\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { NodeFilter } from './NodeFilter';\nimport { QueryParams } from '../QueryParams';\nimport { Index } from '../../snap/indexes/Index';\nimport { Path } from '../../util/Path';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n *\n * @constructor\n * @implements {NodeFilter}\n */\nexport class RangedFilter implements NodeFilter {\n  /**\n   * @type {!IndexedFilter}\n   * @const\n   * @private\n   */\n  private indexedFilter_: IndexedFilter;\n\n  /**\n   * @const\n   * @type {!Index}\n   * @private\n   */\n  private index_: Index;\n\n  /**\n   * @const\n   * @type {!NamedNode}\n   * @private\n   */\n  private startPost_: NamedNode;\n\n  /**\n   * @const\n   * @type {!NamedNode}\n   * @private\n   */\n  private endPost_: NamedNode;\n\n  /**\n   * @param {!QueryParams} params\n   */\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  /**\n   * @return {!NamedNode}\n   */\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  /**\n   * @return {!NamedNode}\n   */\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  /**\n   * @param {!NamedNode} node\n   * @return {boolean}\n   */\n  matches(node: NamedNode): boolean {\n    return (\n      this.index_.compare(this.getStartPost(), node) <= 0 &&\n      this.index_.compare(node, this.getEndPost()) <= 0\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  filtersNodes(): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  /**\n   * @param {!QueryParams} params\n   * @return {!NamedNode}\n   * @private\n   */\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  /**\n   * @param {!QueryParams} params\n   * @return {!NamedNode}\n   * @private\n   */\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RangedFilter } from './RangedFilter';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Node, NamedNode } from '../../snap/Node';\nimport { assert } from '@firebase/util';\nimport { Change } from '../Change';\nimport { NodeFilter } from './NodeFilter';\nimport { Index } from '../../snap/indexes/Index';\nimport { IndexedFilter } from './IndexedFilter';\nimport { QueryParams } from '../QueryParams';\nimport { Path } from '../../util/Path';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n *\n * @constructor\n * @implements {NodeFilter}\n */\nexport class LimitedFilter implements NodeFilter {\n  /**\n   * @const\n   * @type {RangedFilter}\n   * @private\n   */\n  private readonly rangedFilter_: RangedFilter;\n\n  /**\n   * @const\n   * @type {!Index}\n   * @private\n   */\n  private readonly index_: Index;\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  private readonly limit_: number;\n\n  /**\n   * @const\n   * @type {boolean}\n   * @private\n   */\n  private readonly reverse_: boolean;\n\n  /**\n   * @param {!QueryParams} params\n   */\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          let inRange;\n          if (this.reverse_) {\n            inRange =\n              this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange =\n              this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n        let startPost;\n        let endPost;\n        let cmp;\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          const indexCompare = this.index_.getCompare();\n          cmp = (a: NamedNode, b: NamedNode) => indexCompare(b, a);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        let count = 0;\n        let foundStartPost = false;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n          const inRange =\n            foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  filtersNodes(): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  /**\n   * @param {!Node} snap\n   * @param {string} childKey\n   * @param {!Node} childSnap\n   * @param {!CompleteChildSource} source\n   * @param {?ChildChangeAccumulator} changeAccumulator\n   * @return {!Node}\n   * @private\n   */\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            Change.childChangedChange(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            Change.childRemovedChange(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              Change.childAddedChange(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            Change.childRemovedChange(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            Change.childAddedChange(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\nimport { MIN_NAME, MAX_NAME } from '../util/util';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { RangedFilter } from './filter/RangedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { Index } from '../snap/indexes/Index';\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n * @constructor\n */\nexport class QueryParams {\n  private limitSet_ = false;\n  private startSet_ = false;\n  private startNameSet_ = false;\n  private endSet_ = false;\n  private endNameSet_ = false;\n\n  private limit_ = 0;\n  private viewFrom_ = '';\n  private indexStartValue_: unknown | null = null;\n  private indexStartName_ = '';\n  private indexEndValue_: unknown | null = null;\n  private indexEndName_ = '';\n\n  private index_ = PRIORITY_INDEX;\n\n  /**\n   * Wire Protocol Constants\n   * @const\n   * @enum {string}\n   * @private\n   */\n  private static readonly WIRE_PROTOCOL_CONSTANTS_ = {\n    INDEX_START_VALUE: 'sp',\n    INDEX_START_NAME: 'sn',\n    INDEX_END_VALUE: 'ep',\n    INDEX_END_NAME: 'en',\n    LIMIT: 'l',\n    VIEW_FROM: 'vf',\n    VIEW_FROM_LEFT: 'l',\n    VIEW_FROM_RIGHT: 'r',\n    INDEX: 'i'\n  };\n\n  /**\n   * REST Query Constants\n   * @const\n   * @enum {string}\n   * @private\n   */\n  private static readonly REST_QUERY_CONSTANTS_ = {\n    ORDER_BY: 'orderBy',\n    PRIORITY_INDEX: '$priority',\n    VALUE_INDEX: '$value',\n    KEY_INDEX: '$key',\n    START_AT: 'startAt',\n    END_AT: 'endAt',\n    LIMIT_TO_FIRST: 'limitToFirst',\n    LIMIT_TO_LAST: 'limitToLast'\n  };\n\n  /**\n   * Default, empty query parameters\n   * @type {!QueryParams}\n   * @const\n   */\n  static readonly DEFAULT = new QueryParams();\n\n  /**\n   * @return {boolean}\n   */\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @return {boolean} True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return (\n        this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT\n      );\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   * @return {*}\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   * @return {!string}\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * @return {*}\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   * @return {!string}\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @return {boolean} True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   * @return {!number}\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  /**\n   * @return {!Index}\n   */\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  /**\n   * @return {!QueryParams}\n   * @private\n   */\n  private copy_(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n\n  /**\n   * @param {!number} newLimit\n   * @return {!QueryParams}\n   */\n  limit(newLimit: number): QueryParams {\n    const newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = '';\n    return newParams;\n  }\n\n  /**\n   * @param {!number} newLimit\n   * @return {!QueryParams}\n   */\n  limitToFirst(newLimit: number): QueryParams {\n    const newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    return newParams;\n  }\n\n  /**\n   * @param {!number} newLimit\n   * @return {!QueryParams}\n   */\n  limitToLast(newLimit: number): QueryParams {\n    const newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n    return newParams;\n  }\n\n  /**\n   * @param {*} indexValue\n   * @param {?string=} key\n   * @return {!QueryParams}\n   */\n  startAt(indexValue: unknown, key?: string | null): QueryParams {\n    const newParams = this.copy_();\n    newParams.startSet_ = true;\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n    newParams.indexStartValue_ = indexValue;\n    if (key != null) {\n      newParams.startNameSet_ = true;\n      newParams.indexStartName_ = key;\n    } else {\n      newParams.startNameSet_ = false;\n      newParams.indexStartName_ = '';\n    }\n    return newParams;\n  }\n\n  /**\n   * @param {*} indexValue\n   * @param {?string=} key\n   * @return {!QueryParams}\n   */\n  endAt(indexValue: unknown, key?: string | null): QueryParams {\n    const newParams = this.copy_();\n    newParams.endSet_ = true;\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n    newParams.indexEndValue_ = indexValue;\n    if (key !== undefined) {\n      newParams.endNameSet_ = true;\n      newParams.indexEndName_ = key;\n    } else {\n      newParams.endNameSet_ = false;\n      newParams.indexEndName_ = '';\n    }\n    return newParams;\n  }\n\n  /**\n   * @param {!Index} index\n   * @return {!QueryParams}\n   */\n  orderBy(index: Index): QueryParams {\n    const newParams = this.copy_();\n    newParams.index_ = index;\n    return newParams;\n  }\n\n  /**\n   * @return {!Object}\n   */\n  getQueryObject(): {} {\n    const WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n    const obj: { [k: string]: unknown } = {};\n    if (this.startSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n      if (this.startNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n      }\n    }\n    if (this.endSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n      if (this.endNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n      }\n    }\n    if (this.limitSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n      let viewFrom = this.viewFrom_;\n      if (viewFrom === '') {\n        if (this.isViewFromLeft()) {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n        } else {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n        }\n      }\n      obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n    }\n    // For now, priority index is the default, so we only specify if it's some other index\n    if (this.index_ !== PRIORITY_INDEX) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n    }\n    return obj;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  /**\n   * @return {!NodeFilter}\n   */\n  getNodeFilter(): NodeFilter {\n    if (this.loadsAllData()) {\n      return new IndexedFilter(this.getIndex());\n    } else if (this.hasLimit()) {\n      return new LimitedFilter(this);\n    } else {\n      return new RangedFilter(this);\n    }\n  }\n\n  /**\n   * Returns a set of REST query string parameters representing this query.\n   *\n   * @return {!Object.<string,*>} query string parameters\n   */\n  toRestQueryStringParameters(): { [k: string]: string | number } {\n    const REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n    const qs: { [k: string]: string | number } = {};\n\n    if (this.isDefault()) {\n      return qs;\n    }\n\n    let orderBy;\n    if (this.index_ === PRIORITY_INDEX) {\n      orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n    } else if (this.index_ === VALUE_INDEX) {\n      orderBy = REST_CONSTANTS.VALUE_INDEX;\n    } else if (this.index_ === KEY_INDEX) {\n      orderBy = REST_CONSTANTS.KEY_INDEX;\n    } else {\n      assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\n      orderBy = this.index_.toString();\n    }\n    qs[REST_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n    if (this.startSet_) {\n      qs[REST_CONSTANTS.START_AT] = stringify(this.indexStartValue_);\n      if (this.startNameSet_) {\n        qs[REST_CONSTANTS.START_AT] += ',' + stringify(this.indexStartName_);\n      }\n    }\n\n    if (this.endSet_) {\n      qs[REST_CONSTANTS.END_AT] = stringify(this.indexEndValue_);\n      if (this.endNameSet_) {\n        qs[REST_CONSTANTS.END_AT] += ',' + stringify(this.indexEndName_);\n      }\n    }\n\n    if (this.limitSet_) {\n      if (this.isViewFromLeft()) {\n        qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n      } else {\n        qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n      }\n    }\n\n    return qs;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnDisconnect } from './onDisconnect';\nimport { TransactionResult } from './TransactionResult';\nimport { warn } from '../core/util/util';\nimport { nextPushId } from '../core/util/NextPushId';\nimport { Query } from './Query';\nimport { Repo } from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport { QueryParams } from '../core/view/QueryParams';\nimport {\n  validateRootPathString,\n  validatePathString,\n  validateFirebaseMergeDataArg,\n  validateBoolean,\n  validatePriority,\n  validateFirebaseDataArg,\n  validateWritablePath\n} from '../core/util/validation';\nimport { validateArgCount, validateCallback, Deferred } from '@firebase/util';\n\nimport { SyncPoint } from '../core/SyncPoint';\nimport { Database } from './Database';\nimport { DataSnapshot } from './DataSnapshot';\nimport * as types from '@firebase/database-types';\n\nexport interface ReferenceConstructor {\n  new (repo: Repo, path: Path): Reference;\n}\n\nexport class Reference extends Query {\n  then: Promise<Reference>['then'];\n  catch: Promise<Reference>['catch'];\n\n  /**\n   * Call options:\n   *   new Reference(Repo, Path) or\n   *   new Reference(url: string, string|RepoManager)\n   *\n   * Externally - this is the firebase.database.Reference type.\n   *\n   * @param {!Repo} repo\n   * @param {(!Path)} path\n   * @extends {Query}\n   */\n  constructor(repo: Repo, path: Path) {\n    if (!(repo instanceof Repo)) {\n      throw new Error(\n        'new Reference() no longer supported - use app.database().'\n      );\n    }\n\n    // call Query's constructor, passing in the repo and path.\n    super(repo, path, QueryParams.DEFAULT, false);\n  }\n\n  /** @return {?string} */\n  getKey(): string | null {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n\n    if (this.path.isEmpty()) {\n      return null;\n    } else {\n      return this.path.getBack();\n    }\n  }\n\n  /**\n   * @param {!(string|Path)} pathString\n   * @return {!Reference}\n   */\n  child(pathString: string | Path): Reference {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    } else if (!(pathString instanceof Path)) {\n      if (this.path.getFront() === null) {\n        validateRootPathString('Reference.child', 1, pathString, false);\n      } else {\n        validatePathString('Reference.child', 1, pathString, false);\n      }\n    }\n\n    return new Reference(this.repo, this.path.child(pathString));\n  }\n\n  /** @return {?Reference} */\n  getParent(): Reference | null {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n\n    const parentPath = this.path.parent();\n    return parentPath === null ? null : new Reference(this.repo, parentPath);\n  }\n\n  /** @return {!Reference} */\n  getRoot(): Reference {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n\n    let ref: Reference = this;\n    while (ref.getParent() !== null) {\n      ref = ref.getParent();\n    }\n    return ref;\n  }\n\n  /** @return {!Database} */\n  databaseProp(): Database {\n    return this.repo.database;\n  }\n\n  /**\n   * @param {*} newVal\n   * @param {function(?Error)=} onComplete\n   * @return {!Promise}\n   */\n  set(\n    newVal: unknown,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateWritablePath('Reference.set', this.path);\n    validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n    validateCallback('Reference.set', 2, onComplete, true);\n\n    const deferred = new Deferred();\n    this.repo.setWithPriority(\n      this.path,\n      newVal,\n      /*priority=*/ null,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {!Object} objectToMerge\n   * @param {function(?Error)=} onComplete\n   * @return {!Promise}\n   */\n  update(\n    objectToMerge: object,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n    validateWritablePath('Reference.update', this.path);\n\n    if (Array.isArray(objectToMerge)) {\n      const newObjectToMerge: { [k: string]: unknown } = {};\n      for (let i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n      objectToMerge = newObjectToMerge;\n      warn(\n        'Passing an Array to Firebase.update() is deprecated. ' +\n          'Use set() if you want to overwrite the existing data, or ' +\n          'an Object with integer keys if you really do want to ' +\n          'only update some of the children.'\n      );\n    }\n    validateFirebaseMergeDataArg(\n      'Reference.update',\n      1,\n      objectToMerge,\n      this.path,\n      false\n    );\n    validateCallback('Reference.update', 2, onComplete, true);\n    const deferred = new Deferred();\n    this.repo.update(\n      this.path,\n      objectToMerge as { [k: string]: unknown },\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {*} newVal\n   * @param {string|number|null} newPriority\n   * @param {function(?Error)=} onComplete\n   * @return {!Promise}\n   */\n  setWithPriority(\n    newVal: unknown,\n    newPriority: string | number | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('Reference.setWithPriority', this.path);\n    validateFirebaseDataArg(\n      'Reference.setWithPriority',\n      1,\n      newVal,\n      this.path,\n      false\n    );\n    validatePriority('Reference.setWithPriority', 2, newPriority, false);\n    validateCallback('Reference.setWithPriority', 3, onComplete, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw (\n        'Reference.setWithPriority failed: ' +\n        this.getKey() +\n        ' is a read-only object.'\n      );\n    }\n\n    const deferred = new Deferred();\n    this.repo.setWithPriority(\n      this.path,\n      newVal,\n      newPriority,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {function(?Error)=} onComplete\n   * @return {!Promise}\n   */\n  remove(onComplete?: (a: Error | null) => void): Promise<unknown> {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateWritablePath('Reference.remove', this.path);\n    validateCallback('Reference.remove', 1, onComplete, true);\n\n    return this.set(null, onComplete);\n  }\n\n  /**\n   * @param {function(*):*} transactionUpdate\n   * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\n   * @param {boolean=} applyLocally\n   * @return {!Promise}\n   */\n  transaction(\n    transactionUpdate: (a: unknown) => unknown,\n    onComplete?: (a: Error | null, b: boolean, c: DataSnapshot | null) => void,\n    applyLocally?: boolean\n  ): Promise<TransactionResult> {\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateWritablePath('Reference.transaction', this.path);\n    validateCallback('Reference.transaction', 1, transactionUpdate, false);\n    validateCallback('Reference.transaction', 2, onComplete, true);\n    // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n    // to expose it.\n    validateBoolean('Reference.transaction', 3, applyLocally, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw (\n        'Reference.transaction failed: ' +\n        this.getKey() +\n        ' is a read-only object.'\n      );\n    }\n\n    if (applyLocally === undefined) {\n      applyLocally = true;\n    }\n\n    const deferred = new Deferred<TransactionResult>();\n    if (typeof onComplete === 'function') {\n      deferred.promise.catch(() => {});\n    }\n\n    const promiseComplete = function (\n      error: Error,\n      committed: boolean,\n      snapshot: DataSnapshot\n    ) {\n      if (error) {\n        deferred.reject(error);\n      } else {\n        deferred.resolve(new TransactionResult(committed, snapshot));\n      }\n      if (typeof onComplete === 'function') {\n        onComplete(error, committed, snapshot);\n      }\n    };\n    this.repo.startTransaction(\n      this.path,\n      transactionUpdate,\n      promiseComplete,\n      applyLocally\n    );\n\n    return deferred.promise;\n  }\n\n  /**\n   * @param {string|number|null} priority\n   * @param {function(?Error)=} onComplete\n   * @return {!Promise}\n   */\n  setPriority(\n    priority: string | number | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateWritablePath('Reference.setPriority', this.path);\n    validatePriority('Reference.setPriority', 1, priority, false);\n    validateCallback('Reference.setPriority', 2, onComplete, true);\n\n    const deferred = new Deferred();\n    this.repo.setWithPriority(\n      this.path.child('.priority'),\n      priority,\n      null,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {*=} value\n   * @param {function(?Error)=} onComplete\n   * @return {!Reference}\n   */\n  push(value?: unknown, onComplete?: (a: Error | null) => void): Reference {\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateWritablePath('Reference.push', this.path);\n    validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n    validateCallback('Reference.push', 2, onComplete, true);\n\n    const now = this.repo.serverTime();\n    const name = nextPushId(now);\n\n    // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n    // We use child() to create handles to two different references. The first is turned into a\n    // ThennableReference below by adding then() and catch() methods and is used as the\n    // return value of push(). The second remains a regular Reference and is used as the fulfilled\n    // value of the first ThennableReference.\n    const thennablePushRef = this.child(name);\n    const pushRef = this.child(name);\n\n    let promise;\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(() => pushRef);\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\n\n    if (typeof onComplete === 'function') {\n      promise.catch(() => {});\n    }\n\n    return thennablePushRef;\n  }\n\n  /**\n   * @return {!OnDisconnect}\n   */\n  onDisconnect(): OnDisconnect {\n    validateWritablePath('Reference.onDisconnect', this.path);\n    return new OnDisconnect(this.repo, this.path);\n  }\n\n  get database(): Database {\n    return this.databaseProp();\n  }\n\n  get key(): string | null {\n    return this.getKey();\n  }\n\n  get parent(): Reference | null {\n    return this.getParent();\n  }\n\n  get root(): Reference {\n    return this.getRoot();\n  }\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nQuery.__referenceConstructor = Reference;\nSyncPoint.__referenceConstructor = Reference;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, safeGet } from '@firebase/util';\nimport { Path } from './Path';\n\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport class TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: { [name: string]: TreeNode<T> } = {};\n  childCount = 0;\n  value: T | null = null;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @template T\n   * @param {string=} name_ Optional name of the node.\n   * @param {Tree=} parent_ Optional parent node.\n   * @param {TreeNode=} node_ Optional node to wrap.\n   */\n  constructor(\n    private name_: string = '',\n    private parent_: Tree<T> | null = null,\n    private node_: TreeNode<T> = new TreeNode<T>()\n  ) {}\n\n  /**\n   * Returns a sub-Tree for the given path.\n   *\n   * @param {!(string|Path)} pathObj Path to look up.\n   * @return {!Tree.<T>} Tree for path.\n   */\n  subTree(pathObj: string | Path): Tree<T> {\n    // TODO: Require pathObj to be Path?\n    let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n    let child = this as Tree<T>,\n      next = path.getFront();\n    while (next !== null) {\n      const childNode = safeGet(child.node_.children, next) || new TreeNode();\n      child = new Tree(next, child, childNode);\n      path = path.popFront();\n      next = path.getFront();\n    }\n\n    return child;\n  }\n\n  /**\n   * Returns the data associated with this tree node.\n   *\n   * @return {?T} The data or null if no data exists.\n   */\n  getValue(): T | null {\n    return this.node_.value;\n  }\n\n  /**\n   * Sets data to this tree node.\n   *\n   * @param {!T} value Value to set.\n   */\n  setValue(value: T) {\n    assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n    this.node_.value = value;\n    this.updateParents_();\n  }\n\n  /**\n   * Clears the contents of the tree node (its value and all children).\n   */\n  clear() {\n    this.node_.value = null;\n    this.node_.children = {};\n    this.node_.childCount = 0;\n    this.updateParents_();\n  }\n\n  /**\n   * @return {boolean} Whether the tree has any children.\n   */\n  hasChildren(): boolean {\n    return this.node_.childCount > 0;\n  }\n\n  /**\n   * @return {boolean} Whether the tree is empty (no value or children).\n   */\n  isEmpty(): boolean {\n    return this.getValue() === null && !this.hasChildren();\n  }\n\n  /**\n   * Calls action for each child of this tree node.\n   *\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\n   */\n  forEachChild(action: (tree: Tree<T>) => void) {\n    each(this.node_.children, (child: string, childTree: TreeNode<T>) => {\n      action(new Tree<T>(child, this, childTree));\n    });\n  }\n\n  /**\n   * Does a depth-first traversal of this node's descendants, calling action for each one.\n   *\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\n   * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\n   *   false.\n   * @param {boolean=} childrenFirst Whether to call action on children before calling it on\n   *   parent.\n   */\n  forEachDescendant(\n    action: (tree: Tree<T>) => void,\n    includeSelf?: boolean,\n    childrenFirst?: boolean\n  ) {\n    if (includeSelf && !childrenFirst) {\n      action(this);\n    }\n\n    this.forEachChild(child => {\n      child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\n    });\n\n    if (includeSelf && childrenFirst) {\n      action(this);\n    }\n  }\n\n  /**\n   * Calls action on each ancestor node.\n   *\n   * @param {function(!Tree.<T>)} action Action to be called on each parent; return\n   *   true to abort.\n   * @param {boolean=} includeSelf Whether to call action on this node as well.\n   * @return {boolean} true if the action callback returned true.\n   */\n  forEachAncestor(\n    action: (tree: Tree<T>) => unknown,\n    includeSelf?: boolean\n  ): boolean {\n    let node = includeSelf ? this : this.parent();\n    while (node !== null) {\n      if (action(node)) {\n        return true;\n      }\n      node = node.parent();\n    }\n    return false;\n  }\n\n  /**\n   * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n   * is found, action is called on it and traversal does not continue inside the node.\n   * Action is *not* called on this node.\n   *\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\n   */\n  forEachImmediateDescendantWithValue(action: (tree: Tree<T>) => void) {\n    this.forEachChild(child => {\n      if (child.getValue() !== null) {\n        action(child);\n      } else {\n        child.forEachImmediateDescendantWithValue(action);\n      }\n    });\n  }\n\n  /**\n   * @return {!Path} The path of this tree node, as a Path.\n   */\n  path(): Path {\n    return new Path(\n      this.parent_ === null\n        ? this.name_\n        : this.parent_.path() + '/' + this.name_\n    );\n  }\n\n  /**\n   * @return {string} The name of the tree node.\n   */\n  name(): string {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Tree} The parent tree node, or null if this is the root of the tree.\n   */\n  parent(): Tree<T> | null {\n    return this.parent_;\n  }\n\n  /**\n   * Adds or removes this child from its parent based on whether it's empty or not.\n   *\n   * @private\n   */\n  private updateParents_() {\n    if (this.parent_ !== null) {\n      this.parent_.updateChild_(this.name_, this);\n    }\n  }\n\n  /**\n   * Adds or removes the passed child to this tree node, depending on whether it's empty.\n   *\n   * @param {string} childName The name of the child to update.\n   * @param {!Tree.<T>} child The child to update.\n   * @private\n   */\n  private updateChild_(childName: string, child: Tree<T>) {\n    const childEmpty = child.isEmpty();\n    const childExists = contains(this.node_.children, childName);\n    if (childEmpty && childExists) {\n      delete this.node_.children[childName];\n      this.node_.childCount--;\n      this.updateParents_();\n    } else if (!childEmpty && !childExists) {\n      this.node_.children[childName] = child.node_;\n      this.node_.childCount++;\n      this.updateParents_();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, safeGet } from '@firebase/util';\nimport { Reference } from '../api/Reference';\nimport { DataSnapshot } from '../api/DataSnapshot';\nimport { Path } from './util/Path';\nimport { Tree } from './util/Tree';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { LUIDGenerator, warn, exceptionGuard } from './util/util';\nimport { resolveDeferredValueSnapshot } from './util/ServerValues';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\n\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Repo } from './Repo';\nimport { Event } from './view/Event';\n\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n\n/**\n * @enum {number}\n */\nexport enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\n * @type {number}\n * @const\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Repo as any).MAX_TRANSACTION_RETRIES_ = 25;\n\n/**\n * @typedef {{\n *   path: !Path,\n *   update: function(*):*,\n *   onComplete: ?function(?Error, boolean, ?DataSnapshot),\n *   status: ?TransactionStatus,\n *   order: !number,\n *   applyLocally: boolean,\n *   retryCount: !number,\n *   unwatcher: function(),\n *   abortReason: ?string,\n *   currentWriteId: !number,\n *   currentInputSnapshot: ?Node,\n *   currentOutputSnapshotRaw: ?Node,\n *   currentOutputSnapshotResolved: ?Node\n * }}\n */\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (a: Error | null, b: boolean, c: DataSnapshot | null) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * Setup the transaction data structures\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Repo.prototype as any).transactionsInit_ = function () {\n  /**\n   * Stores queues of outstanding transactions for Firebase locations.\n   *\n   * @type {!Tree.<Array.<!Transaction>>}\n   * @private\n   */\n  this.transactionQueueTree_ = new Tree<Transaction[]>();\n};\n\ndeclare module './Repo' {\n  interface Repo {\n    startTransaction(\n      path: Path,\n      transactionUpdate: (a: unknown) => void,\n      onComplete: ((a: Error, b: boolean, c: DataSnapshot) => void) | null,\n      applyLocally: boolean\n    ): void;\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\n *\n * @param {!Path} path Path at which to do transaction.\n * @param {function(*):*} transactionUpdate Update callback.\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\n */\nRepo.prototype.startTransaction = function (\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((a: Error, b: boolean, c: DataSnapshot) => void) | null,\n  applyLocally: boolean\n) {\n  this.log_('transaction on ' + path);\n\n  // Add a watch to make sure we get server updates.\n  const valueCallback = function () {};\n  const watchRef = new Reference(this, path);\n  watchRef.on('value', valueCallback);\n  const unwatcher = function () {\n    watchRef.off('value', valueCallback);\n  };\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n\n    // One of TransactionStatus enums.\n    status: null,\n\n    // Used when combining transactions at different locations to figure out which one goes first.\n    order: LUIDGenerator(),\n\n    // Whether to raise local events for this transaction.\n    applyLocally,\n\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n\n    // Stores why a transaction was aborted.\n    abortReason: null,\n\n    currentWriteId: null,\n\n    currentInputSnapshot: null,\n\n    currentOutputSnapshotRaw: null,\n\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = this.getLatestState_(path);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      // We just set the input snapshot, so this cast should be safe\n      const snapshot = new DataSnapshot(\n        transaction.currentInputSnapshot,\n        new Reference(this, transaction.path),\n        PRIORITY_INDEX\n      );\n      transaction.onComplete(null, false, snapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = this.transactionQueueTree_.subTree(path);\n    const nodeQueue = queueNode.getValue() || [];\n    nodeQueue.push(transaction);\n\n    queueNode.setValue(nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our transaction state, since the user could\n    // start new transactions from the event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        this.serverSyncTree_.calcCompleteEventCache(path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n    priorityForNode /** @type {null|number|string} */ = priorityForNode;\n\n    const serverValues = this.generateServerValues();\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = this.getNextWriteId_();\n\n    const events = this.serverSyncTree_.applyUserOverwrite(\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n\n    this.sendReadyTransactions_();\n  }\n};\n\n/**\n * @param {!Path} path\n * @param {Array.<number>=} excludeSets A specific set to exclude\n * @return {Node}\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Repo.prototype as any).getLatestState_ = function (\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n};\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\n * complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively with a particular\n * transactionQueueTree node to recurse through the tree.\n *\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Repo.prototype as any).sendReadyTransactions_ = function (\n  node: Tree<Transaction[]> = this.transactionQueueTree_\n) {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    this.pruneCompletedTransactionsBelowNode_(node);\n  }\n\n  if (node.getValue() !== null) {\n    const queue = this.buildTransactionQueue_(node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      this.sendTransactionQueue_(node.path(), queue);\n    }\n  } else if (node.hasChildren()) {\n    node.forEachChild(childNode => {\n      this.sendReadyTransactions_(childNode);\n    });\n  }\n};\n\n/**\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\n *\n * @param {!Path} path The location of the queue.\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Repo.prototype as any).sendTransactionQueue_ = function (\n  path: Path,\n  queue: Transaction[]\n) {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = this.getLatestState_(path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = Path.relativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  this.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      this.log_('transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n        // the callback could trigger more transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this transaction is complete, it should be set\n            const node = queue[i].currentOutputSnapshotResolved as Node;\n            const ref = new Reference(this, queue[i].path);\n            const snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\n            callbacks.push(\n              queue[i].onComplete.bind(null, null, true, snapshot)\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        this.pruneCompletedTransactionsBelowNode_(\n          this.transactionQueueTree_.subTree(path)\n        );\n        // There may be pending transactions that we can now send.\n        this.sendReadyTransactions_();\n\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        this.rerunTransactions_(path);\n      }\n    },\n    latestHash\n  );\n};\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\n * be raised for.\n *\n * @param {!Path} changedPath The path in mergedData that changed.\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Repo.prototype as any).rerunTransactions_ = function (\n  changedPath: Path\n): Path {\n  const rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n  const path = rootMostTransactionNode.path();\n\n  const queue = this.buildTransactionQueue_(rootMostTransactionNode);\n  this.rerunTransactionQueue_(queue, path);\n\n  return path;\n};\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\n *\n * @param {Array.<Transaction>} queue The queue of transactions to run.\n * @param {!Path} path The path the queue is for.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Repo.prototype as any).rerunTransactionQueue_ = function (\n  queue: Transaction[],\n  path: Path\n) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n  // the callback could trigger more transactions or sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = Path.relativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true)\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (transaction.retryCount >= (Repo as any).MAX_TRANSACTION_RETRIES_) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true)\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = this.getLatestState_(\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = this.generateServerValues();\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = this.getNextWriteId_();\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            this.serverSyncTree_.applyUserOverwrite(\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            this.serverSyncTree_.ackUserWrite(oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true)\n          );\n        }\n      }\n    }\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n      // So defer the unwatcher until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          const ref = new Reference(this, queue[i].path);\n          // We set this field immediately, so it's safe to cast to an actual snapshot\n          const lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\n          const snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n        } else {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  this.sendReadyTransactions_();\n};\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\n * the node for the given path if there are no pending transactions on any ancestor.\n *\n * @param {!Path} path The location to start at.\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Repo.prototype as any).getAncestorTransactionNode_ = function (\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\n  let transactionNode = this.transactionQueueTree_;\n  front = path.getFront();\n  while (front !== null && transactionNode.getValue() === null) {\n    transactionNode = transactionNode.subTree(front);\n    path = path.popFront();\n    front = path.getFront();\n  }\n\n  return transactionNode;\n};\n\n/**\n * Builds the queue of all transactions at or below the specified transactionNode.\n *\n * @param {!Tree.<Array.<Transaction>>} transactionNode\n * @return {Array.<Transaction>} The generated queue.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Repo.prototype as any).buildTransactionQueue_ = function (\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => {\n    return a.order - b.order;\n  });\n\n  return transactionQueue;\n};\n\n/**\n * @param {!Tree.<Array.<Transaction>>} node\n * @param {Array.<Transaction>} queue\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Repo.prototype as any).aggregateTransactionQueuesForNode_ = function (\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n) {\n  const nodeQueue = node.getValue();\n  if (nodeQueue !== null) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  node.forEachChild(child => {\n    this.aggregateTransactionQueuesForNode_(child, queue);\n  });\n};\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n *\n * @param {!Tree.<Array.<!Transaction>>} node\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Repo.prototype as any).pruneCompletedTransactionsBelowNode_ = function (\n  node: Tree<Transaction[]>\n) {\n  const queue = node.getValue();\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    node.setValue(queue.length > 0 ? queue : null);\n  }\n\n  node.forEachChild(childNode => {\n    this.pruneCompletedTransactionsBelowNode_(childNode);\n  });\n};\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\n * since we consider them incompatible with transactions.\n *\n * @param {!Path} path Path for which we want to abort related transactions.\n * @return {!Path}\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Repo.prototype as any).abortTransactions_ = function (path: Path): Path {\n  const affectedPath = this.getAncestorTransactionNode_(path).path();\n\n  const transactionNode = this.transactionQueueTree_.subTree(path);\n\n  transactionNode.forEachAncestor((node: Tree<Transaction[]>) => {\n    this.abortTransactionsOnNode_(node);\n  });\n\n  this.abortTransactionsOnNode_(transactionNode);\n\n  transactionNode.forEachDescendant((node: Tree<Transaction[]>) => {\n    this.abortTransactionsOnNode_(node);\n  });\n\n  return affectedPath;\n};\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Repo.prototype as any).abortTransactionsOnNode_ = function (\n  node: Tree<Transaction[]>\n) {\n  const queue = node.getValue();\n  if (queue !== null) {\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n    // the callback could trigger more transactions or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n    // can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true)\n        );\n        if (queue[i].onComplete) {\n          const snapshot: DataSnapshot | null = null;\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, snapshot)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      node.setValue(null);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport { log, warn } from './util/util';\nimport { FirebaseApp } from '@firebase/app-types';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n  constructor(\n    private app_: FirebaseApp,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.get().then(auth => (this.auth_ = auth));\n    }\n  }\n\n  /**\n   * @param {boolean} forceRefresh\n   * @return {!Promise<FirebaseAuthTokenData>}\n   */\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      setTimeout(() => listener(null), 0);\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.app_.name +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.app_.options) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\nexport class EmulatorAdminTokenProvider implements AuthTokenProvider {\n  private static EMULATOR_AUTH_TOKEN = 'owner';\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { safeGet, CONSTANTS } from '@firebase/util';\nimport { Repo } from './Repo';\nimport { fatal, log } from './util/util';\nimport { parseRepoInfo } from './util/libs/parser';\nimport { validateUrl } from './util/validation';\nimport './Repo_transaction';\nimport { Database } from '../api/Database';\nimport { RepoInfo } from './RepoInfo';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  AuthTokenProvider,\n  EmulatorAdminTokenProvider,\n  FirebaseAuthTokenProvider\n} from './AuthTokenProvider';\n\n/**\n * This variable is also defined in the firebase node.js admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\nlet _staticInstance: RepoManager;\n\n/**\n * Creates and caches Repo instances.\n */\nexport class RepoManager {\n  /**\n   * @private {!Object.<string, Object<string, !fb.core.Repo>>}\n   */\n  private repos_: {\n    [appName: string]: {\n      [dbUrl: string]: Repo;\n    };\n  } = {};\n\n  /**\n   * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\n   * @private {boolean}\n   */\n  private useRestClient_: boolean = false;\n\n  static getInstance(): RepoManager {\n    if (!_staticInstance) {\n      _staticInstance = new RepoManager();\n    }\n    return _staticInstance;\n  }\n\n  // TODO(koss): Remove these functions unless used in tests?\n  interrupt() {\n    for (const appName of Object.keys(this.repos_)) {\n      for (const dbUrl of Object.keys(this.repos_[appName])) {\n        this.repos_[appName][dbUrl].interrupt();\n      }\n    }\n  }\n\n  resume() {\n    for (const appName of Object.keys(this.repos_)) {\n      for (const dbUrl of Object.keys(this.repos_[appName])) {\n        this.repos_[appName][dbUrl].resume();\n      }\n    }\n  }\n\n  /**\n   * Update an existing repo in place to point to a new host/port.\n   */\n  applyEmulatorSettings(repo: Repo, host: string, port: number): void {\n    repo.repoInfo_ = new RepoInfo(\n      `${host}:${port}`,\n      /* secure= */ false,\n      repo.repoInfo_.namespace,\n      repo.repoInfo_.webSocketOnly,\n      repo.repoInfo_.nodeAdmin,\n      repo.repoInfo_.persistenceKey,\n      repo.repoInfo_.includeNamespaceInQueryParams\n    );\n\n    if (repo.repoInfo_.nodeAdmin) {\n      repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\n    }\n  }\n\n  /**\n   * This function should only ever be called to CREATE a new database instance.\n   *\n   * @param {!FirebaseApp} app\n   * @return {!Database}\n   */\n  databaseFromApp(\n    app: FirebaseApp,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    url?: string,\n    nodeAdmin?: boolean\n  ): Database {\n    let dbUrl: string | undefined = url || app.options.databaseURL;\n    if (dbUrl === undefined) {\n      if (!app.options.projectId) {\n        fatal(\n          \"Can't determine Firebase Database URL. Be sure to include \" +\n            ' a Project ID when calling firebase.initializeApp().'\n        );\n      }\n\n      log('Using default host for project ', app.options.projectId);\n      dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n    }\n\n    let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    let repoInfo = parsedUrl.repoInfo;\n\n    let isEmulator: boolean;\n\n    let dbEmulatorHost: string | undefined = undefined;\n    if (typeof process !== 'undefined') {\n      dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n    }\n\n    if (dbEmulatorHost) {\n      isEmulator = true;\n      dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n      parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n      repoInfo = parsedUrl.repoInfo;\n    } else {\n      isEmulator = !parsedUrl.repoInfo.secure;\n    }\n\n    const authTokenProvider =\n      nodeAdmin && isEmulator\n        ? new EmulatorAdminTokenProvider()\n        : new FirebaseAuthTokenProvider(app, authProvider);\n\n    validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n    if (!parsedUrl.path.isEmpty()) {\n      fatal(\n        'Database URL must point to the root of a Firebase Database ' +\n          '(not including a child path).'\n      );\n    }\n\n    const repo = this.createRepo(repoInfo, app, authTokenProvider);\n\n    return repo.database;\n  }\n\n  /**\n   * Remove the repo and make sure it is disconnected.\n   *\n   * @param {!Repo} repo\n   */\n  deleteRepo(repo: Repo) {\n    const appRepos = safeGet(this.repos_, repo.app.name);\n    // This should never happen...\n    if (!appRepos || safeGet(appRepos, repo.key) !== repo) {\n      fatal(\n        `Database ${repo.app.name}(${repo.repoInfo_}) has already been deleted.`\n      );\n    }\n    repo.interrupt();\n    delete appRepos[repo.key];\n  }\n\n  /**\n   * Ensures a repo doesn't already exist and then creates one using the\n   * provided app.\n   *\n   * @param {!RepoInfo} repoInfo The metadata about the Repo\n   * @param {!FirebaseApp} app\n   * @return {!Repo} The Repo object for the specified server / repoName.\n   */\n  createRepo(\n    repoInfo: RepoInfo,\n    app: FirebaseApp,\n    authTokenProvider: AuthTokenProvider\n  ): Repo {\n    let appRepos = safeGet(this.repos_, app.name);\n\n    if (!appRepos) {\n      appRepos = {};\n      this.repos_[app.name] = appRepos;\n    }\n\n    let repo = safeGet(appRepos, repoInfo.toURLString());\n    if (repo) {\n      fatal(\n        'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n      );\n    }\n    repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\n    appRepos[repoInfo.toURLString()] = repo;\n\n    return repo;\n  }\n\n  /**\n   * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n   * @param {boolean} forceRestClient\n   */\n  forceRestClient(forceRestClient: boolean) {\n    this.useRestClient_ = forceRestClient;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fatal } from '../core/util/util';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { Path } from '../core/util/Path';\nimport { Reference } from './Reference';\nimport { Repo } from '../core/Repo';\nimport { RepoManager } from '../core/RepoManager';\nimport { validateArgCount } from '@firebase/util';\nimport { validateUrl } from '../core/util/validation';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseService } from '@firebase/app-types/private';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { FirebaseDatabase } from '@firebase/database-types';\n\n/**\n * Class representing a firebase database.\n * @implements {FirebaseService}\n */\nexport class Database implements FirebaseService {\n  /** Track if the instance has been used (root or repo accessed) */\n  private instanceStarted_: boolean = false;\n\n  /** Backing state for root_ */\n  private rootInternal_?: Reference;\n\n  static readonly ServerValue = {\n    TIMESTAMP: {\n      '.sv': 'timestamp'\n    },\n    increment: (delta: number) => {\n      return {\n        '.sv': {\n          'increment': delta\n        }\n      };\n    }\n  };\n\n  /**\n   * The constructor should not be called by users of our public API.\n   * @param {!Repo} repoInternal_\n   */\n  constructor(private repoInternal_: Repo) {\n    if (!(repoInternal_ instanceof Repo)) {\n      fatal(\n        \"Don't call new Database() directly - please use firebase.database().\"\n      );\n    }\n  }\n\n  INTERNAL = {\n    delete: async () => {\n      this.checkDeleted_('delete');\n      RepoManager.getInstance().deleteRepo(this.repo_);\n      this.repoInternal_ = null;\n      this.rootInternal_ = null;\n    }\n  };\n\n  private get repo_(): Repo {\n    if (!this.instanceStarted_) {\n      this.repoInternal_.start();\n      this.instanceStarted_ = true;\n    }\n    return this.repoInternal_;\n  }\n\n  get root_(): Reference {\n    if (!this.rootInternal_) {\n      this.rootInternal_ = new Reference(this.repo_, Path.Empty);\n    }\n\n    return this.rootInternal_;\n  }\n\n  get app(): FirebaseApp {\n    return this.repo_.app;\n  }\n\n  /**\n   * Modify this instance to communicate with the Realtime Database emulator.\n   *\n   * <p>Note: This method must be called before performing any other operation.\n   *\n   * @param host the emulator host (ex: localhost)\n   * @param port the emulator port (ex: 8080)\n   */\n  useEmulator(host: string, port: number): void {\n    this.checkDeleted_('useEmulator');\n    if (this.instanceStarted_) {\n      fatal(\n        'Cannot call useEmulator() after instance has already been initialized.'\n      );\n      return;\n    }\n\n    // Modify the repo to apply emulator settings\n    RepoManager.getInstance().applyEmulatorSettings(\n      this.repoInternal_,\n      host,\n      port\n    );\n  }\n\n  /**\n   * Returns a reference to the root or to the path specified in the provided\n   * argument.\n   *\n   * @param {string|Reference=} path The relative string path or an existing\n   * Reference to a database location.\n   * @throws If a Reference is provided, throws if it does not belong to the\n   * same project.\n   * @return {!Reference} Firebase reference.\n   */\n  ref(path?: string): Reference;\n  ref(path?: Reference): Reference;\n  ref(path?: string | Reference): Reference {\n    this.checkDeleted_('ref');\n    validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      return this.refFromURL(path.toString());\n    }\n\n    return path !== undefined ? this.root_.child(path) : this.root_;\n  }\n\n  /**\n   * Returns a reference to the root or the path specified in url.\n   * We throw a exception if the url is not in the same domain as the\n   * current repo.\n   * @param {string} url\n   * @return {!Reference} Firebase reference.\n   */\n  refFromURL(url: string): Reference {\n    /** @const {string} */\n    const apiName = 'database.refFromURL';\n    this.checkDeleted_(apiName);\n    validateArgCount(apiName, 1, 1, arguments.length);\n    const parsedURL = parseRepoInfo(url, this.repo_.repoInfo_.nodeAdmin);\n    validateUrl(apiName, 1, parsedURL);\n\n    const repoInfo = parsedURL.repoInfo;\n    if (\n      !repoInfo.isCustomHost() &&\n      repoInfo.host !== this.repo_.repoInfo_.host\n    ) {\n      fatal(\n        apiName +\n          ': Host name does not match the current database: ' +\n          '(found ' +\n          repoInfo.host +\n          ' but expected ' +\n          this.repo_.repoInfo_.host +\n          ')'\n      );\n    }\n\n    return this.ref(parsedURL.path.toString());\n  }\n\n  /**\n   * @param {string} apiName\n   */\n  private checkDeleted_(apiName: string) {\n    if (this.repoInternal_ === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n\n  // Make individual repo go offline.\n  goOffline() {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    this.checkDeleted_('goOffline');\n    this.repo_.interrupt();\n  }\n\n  goOnline() {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    this.checkDeleted_('goOnline');\n    this.repo_.resume();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { Reference } from './Reference';\nimport { RepoManager } from '../core/RepoManager';\nimport { setSDKVersion } from '../core/version';\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport * as types from '@firebase/database-types';\nimport {\n  Provider,\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\n\n/**\n * INTERNAL methods for internal-use only (tests, etc.).\n *\n * Customers shouldn't use these or else should be aware that they could break at any time.\n *\n * @const\n */\n\nexport const forceLongPolling = function () {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nexport const forceWebSockets = function () {\n  BrowserPollConnection.forceDisallow();\n};\n\n/* Used by App Manager */\nexport const isWebSocketsAvailable = function (): boolean {\n  return WebSocketConnection['isAvailable']();\n};\n\nexport const setSecurityDebugCallback = function (\n  ref: Reference,\n  callback: (a: object) => void\n) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (ref.repo.persistentConnection_ as any).securityDebugCallback_ = callback;\n};\n\nexport const stats = function (ref: Reference, showDelta?: boolean) {\n  ref.repo.stats(showDelta);\n};\n\nexport const statsIncrementCounter = function (ref: Reference, metric: string) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nexport const dataUpdateCount = function (ref: Reference): number {\n  return ref.repo.dataUpdateCount;\n};\n\nexport const interceptServerData = function (\n  ref: Reference,\n  callback: ((a: string, b: unknown) => void) | null\n) {\n  return ref.repo.interceptServerData_(callback);\n};\n\n/**\n * Used by console to create a database based on the app,\n * passed database URL and a custom auth implementation.\n *\n * @param app A valid FirebaseApp-like object\n * @param url A valid Firebase databaseURL\n * @param version custom version e.g. firebase-admin version\n * @param customAuthImpl custom auth implementation\n */\nexport function initStandalone<T>({\n  app,\n  url,\n  version,\n  customAuthImpl,\n  namespace,\n  nodeAdmin = false\n}: {\n  app: FirebaseApp;\n  url: string;\n  version: string;\n  customAuthImpl: FirebaseAuthInternal;\n  namespace: T;\n  nodeAdmin?: boolean;\n}): {\n  instance: types.Database;\n  namespace: T;\n} {\n  setSDKVersion(version);\n\n  /**\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\n   * any actual function.\n   */\n  const authProvider = new Provider<FirebaseAuthInternalName>(\n    'auth-internal',\n    new ComponentContainer('database-standalone')\n  );\n  authProvider.setComponent(\n    new Component('auth-internal', () => customAuthImpl, ComponentType.PRIVATE)\n  );\n\n  return {\n    instance: RepoManager.getInstance().databaseFromApp(\n      app,\n      authProvider,\n      url,\n      nodeAdmin\n    ) as types.Database,\n    namespace\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoManager } from '../core/RepoManager';\nimport { Connection } from '../realtime/Connection';\nimport { Query } from './Query';\n\nexport const DataConnection = PersistentConnection;\n\n/**\n * @param {!string} pathString\n * @param {function(*)} onComplete\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n/**\n * @param {*} data\n * @param {function(*)} onEcho\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @param {function(): string} newHash\n * @return {function()}\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\n/**\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\n */\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * @param {!Query} query\n * @return {!string}\n */\nexport const queryIdentifier = function (query: Query) {\n  return query.queryIdentifier();\n};\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n *\n * @param {boolean} forceRestClient\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  RepoManager.getInstance().forceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport firebase from '@firebase/app';\nimport { FirebaseNamespace } from '@firebase/app-types';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { Database } from './src/api/Database';\nimport { DataSnapshot } from './src/api/DataSnapshot';\nimport { Query } from './src/api/Query';\nimport { Reference } from './src/api/Reference';\nimport { enableLogging } from './src/core/util/util';\nimport { RepoManager } from './src/core/RepoManager';\nimport * as INTERNAL from './src/api/internal';\nimport * as TEST_ACCESS from './src/api/test_access';\nimport { isNodeSdk } from '@firebase/util';\nimport * as types from '@firebase/database-types';\nimport { setSDKVersion } from './src/core/version';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from './package.json';\n\nconst ServerValue = Database.ServerValue;\n\nexport function registerDatabase(instance: FirebaseNamespace) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION);\n\n  // Register the Database Service with the 'firebase' namespace.\n  const namespace = (instance as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component(\n      'database',\n      (container, url) => {\n        /* Dependencies */\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app').getImmediate();\n        const authProvider = container.getProvider('auth-internal');\n\n        return RepoManager.getInstance().databaseFromApp(\n          app,\n          authProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    )\n      .setServiceProps(\n        // firebase.database namespace properties\n        {\n          Reference,\n          Query,\n          Database,\n          DataSnapshot,\n          enableLogging,\n          INTERNAL,\n          ServerValue,\n          TEST_ACCESS\n        }\n      )\n      .setMultipleInstances(true)\n  );\n\n  instance.registerVersion(name, version);\n\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\n\n// Types to export for the admin SDK\nexport { Database, Query, Reference, enableLogging, ServerValue };\n\nexport { DataSnapshot } from './src/api/DataSnapshot';\nexport { OnDisconnect } from './src/api/onDisconnect';\n\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    database?: {\n      (app?: FirebaseApp): types.FirebaseDatabase;\n      enableLogging: typeof types.enableLogging;\n      ServerValue: types.ServerValue;\n      Database: typeof types.FirebaseDatabase;\n    };\n  }\n  interface FirebaseApp {\n    database?(databaseURL?: string): types.FirebaseDatabase;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}